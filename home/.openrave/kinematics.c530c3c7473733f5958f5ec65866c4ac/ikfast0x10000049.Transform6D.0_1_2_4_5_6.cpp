/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x10000049 generated on 2018-09-18 17:52:48.413047
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x10000049);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)1e-7)
#endif

// used to check input to atan2 for degenerate cases. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)1e-7)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.00001)
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKsin(j[0]);
x6=IKsin(j[4]);
x7=IKcos(j[4]);
x8=IKcos(j[3]);
x9=IKsin(j[3]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((0.39225)*x0);
x13=((0.09465)*x0);
x14=((1.0)*x5);
x15=((0.09465)*x5);
x16=((1.0)*x9);
x17=((1.0)*x7);
x18=((0.39225)*x5);
x19=((1.0)*x8);
x20=((0.1623)*x8);
x21=((1.0)*x0);
x22=((0.425)*x1);
x23=(x1*x3);
x24=(x5*x7);
x25=(x2*x4);
x26=(x1*x2);
x27=(x3*x4);
x28=(x0*x6);
x29=(x0*x7);
x30=(x14*x6);
x31=(x21*x23);
x32=(x14*x23);
x33=(x26+x27);
x34=((((-1.0)*x25))+(((1.0)*x23)));
x35=(x34*x9);
x36=((((-1.0)*x31))+((x0*x25)));
x37=((((-1.0)*x32))+((x25*x5)));
x38=(x21*((x26+x27)));
x39=(x14*((x26+x27)));
x40=(x36*x8);
x41=(x38*x9);
x42=(x39*x9);
x43=((((-1.0)*x16*x34))+(((-1.0)*x19*x33)));
x44=(((x9*(((((1.0)*x27))+(((1.0)*x26))))))+(((-1.0)*x34*x8)));
x45=(x40+x41);
x46=(x42+((x37*x8)));
x47=(x46*x7);
x48=(((x16*(((((-1.0)*x31))+((x21*x25))))))+(((-1.0)*x19*x38)));
x49=(((x16*(((((-1.0)*x32))+((x14*x25))))))+(((-1.0)*x19*x39)));
eerot[0]=((((-1.0)*x14*x7))+((x6*(((((-1.0)*x16*x38))+(((-1.0)*x19*x36)))))));
eerot[1]=(((x10*x48))+((x11*(((((-1.0)*x17*x45))+x30)))));
eerot[2]=(((x10*(((((-1.0)*x30))+((x45*x7))))))+((x11*x48)));
IkReal x50=((1.0)*x13);
eetrans[0]=(((x0*x22))+(((-1.0)*x12*x25))+(((-0.10915)*x5))+(((-0.1623)*x24))+((x8*(((((-1.0)*x26*x50))+(((-1.0)*x27*x50))))))+((x12*x23))+((x9*(((((-1.0)*x23*x50))+((x13*x25))))))+((x6*(((((-1.0)*x20*x36))+(((-0.1623)*x41)))))));
eerot[3]=(x29+((x6*(((((-1.0)*x16*x39))+(((-1.0)*x19*x37)))))));
eerot[4]=(((x10*x49))+((x11*(((((-1.0)*x21*x6))+(((-1.0)*x17*x46)))))));
eerot[5]=(((x11*x49))+((x10*((x47+x28)))));
IkReal x51=((1.0)*x15);
eetrans[1]=(((x6*(((((-1.0)*x20*x37))+(((-0.1623)*x42))))))+(((0.1623)*x29))+((x18*x23))+((x22*x5))+(((0.10915)*x0))+(((-1.0)*x18*x25))+((x8*(((((-1.0)*x26*x51))+(((-1.0)*x27*x51))))))+((x9*(((((-1.0)*x23*x51))+((x15*x25)))))));
eerot[6]=(x43*x6);
eerot[7]=(((x10*x44))+((x11*x43*x7)));
eerot[8]=(((x10*x7*((((x33*x8))+x35))))+((x11*x44)));
eetrans[2]=((0.089159)+((x8*(((((-0.09465)*x23))+(((0.09465)*x25))))))+(((-0.425)*x4))+((x9*(((((0.09465)*x26))+(((0.09465)*x27))))))+(((-0.39225)*x26))+(((-0.39225)*x27))+((x6*(((((-1.0)*x20*x33))+(((-0.1623)*x35)))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j2,cj2,sj2,htj2,j2mul,j1,cj1,sj1,htj1,j1mul,j0,cj0,sj0,htj0,j0mul,j4,cj4,sj4,htj4,j4mul,j5,cj5,sj5,htj5,j5mul,j6,cj6,sj6,htj6,j6mul,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij2[2], _nj2,_ij1[2], _nj1,_ij0[2], _nj0,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((-1.0)*r01);
new_r01=((-1.0)*r02);
new_r02=r00;
new_px=(px+(((-0.1623)*r00)));
new_r10=((-1.0)*r11);
new_r11=((-1.0)*r12);
new_r12=r10;
new_py=(py+(((-0.1623)*r10)));
new_r20=((-1.0)*r21);
new_r21=((-1.0)*r22);
new_r22=r20;
new_pz=((-0.089159)+pz+(((-0.1623)*r20)));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
IkReal x52=((1.0)*px);
IkReal x53=((1.0)*pz);
IkReal x54=((1.0)*py);
pp=((px*px)+(py*py)+(pz*pz));
npx=(((px*r00))+((py*r10))+((pz*r20)));
npy=(((px*r01))+((py*r11))+((pz*r21)));
npz=(((px*r02))+((py*r12))+((pz*r22)));
rxp0_0=((((-1.0)*r20*x54))+((pz*r10)));
rxp0_1=(((px*r20))+(((-1.0)*r00*x53)));
rxp0_2=((((-1.0)*r10*x52))+((py*r00)));
rxp1_0=((((-1.0)*r21*x54))+((pz*r11)));
rxp1_1=(((px*r21))+(((-1.0)*r01*x53)));
rxp1_2=((((-1.0)*r11*x52))+((py*r01)));
rxp2_0=(((pz*r12))+(((-1.0)*r22*x54)));
rxp2_1=(((px*r22))+(((-1.0)*r02*x53)));
rxp2_2=((((-1.0)*r12*x52))+((py*r02)));
IkReal IKFAST_ALIGNED16(matrixinvcoeffs[256]);
IkReal x55=((0.1893)*npx);
IkReal x56=((0.1893)*npy);
IkReal x57=((0.09465)*r22);
IkReal x58=((0.09465)*r21);
IkReal x59=((-0.09465)*r20);
IkReal x60=((-1.0)*r20);
IkReal x61=((-1.0)*rxp0_2);
IkReal x62=((-0.09465)*r21);
IkReal x63=((-1.0)*r21);
IkReal x64=((-1.0)*rxp1_2);
IkReal x65=((-1.0)*npx);
IkReal x66=((-1.0)*r22);
IkReal x67=((-1.0)*npz);
matrixinvcoeffs[0]=x59;
matrixinvcoeffs[1]=x55;
matrixinvcoeffs[2]=0;
matrixinvcoeffs[3]=0;
matrixinvcoeffs[4]=0;
matrixinvcoeffs[5]=0;
matrixinvcoeffs[6]=0;
matrixinvcoeffs[7]=0;
matrixinvcoeffs[8]=0;
matrixinvcoeffs[9]=npx;
matrixinvcoeffs[10]=x60;
matrixinvcoeffs[11]=0;
matrixinvcoeffs[12]=0;
matrixinvcoeffs[13]=0;
matrixinvcoeffs[14]=0;
matrixinvcoeffs[15]=x61;
matrixinvcoeffs[16]=0;
matrixinvcoeffs[17]=0;
matrixinvcoeffs[18]=x59;
matrixinvcoeffs[19]=x55;
matrixinvcoeffs[20]=0;
matrixinvcoeffs[21]=0;
matrixinvcoeffs[22]=0;
matrixinvcoeffs[23]=0;
matrixinvcoeffs[24]=npx;
matrixinvcoeffs[25]=0;
matrixinvcoeffs[26]=0;
matrixinvcoeffs[27]=x60;
matrixinvcoeffs[28]=0;
matrixinvcoeffs[29]=0;
matrixinvcoeffs[30]=x61;
matrixinvcoeffs[31]=0;
matrixinvcoeffs[32]=x62;
matrixinvcoeffs[33]=x56;
matrixinvcoeffs[34]=0;
matrixinvcoeffs[35]=0;
matrixinvcoeffs[36]=0;
matrixinvcoeffs[37]=0;
matrixinvcoeffs[38]=0;
matrixinvcoeffs[39]=0;
matrixinvcoeffs[40]=0;
matrixinvcoeffs[41]=npy;
matrixinvcoeffs[42]=x63;
matrixinvcoeffs[43]=0;
matrixinvcoeffs[44]=0;
matrixinvcoeffs[45]=0;
matrixinvcoeffs[46]=0;
matrixinvcoeffs[47]=x64;
matrixinvcoeffs[48]=0;
matrixinvcoeffs[49]=0;
matrixinvcoeffs[50]=x62;
matrixinvcoeffs[51]=x56;
matrixinvcoeffs[52]=0;
matrixinvcoeffs[53]=0;
matrixinvcoeffs[54]=0;
matrixinvcoeffs[55]=0;
matrixinvcoeffs[56]=npy;
matrixinvcoeffs[57]=0;
matrixinvcoeffs[58]=0;
matrixinvcoeffs[59]=x63;
matrixinvcoeffs[60]=0;
matrixinvcoeffs[61]=0;
matrixinvcoeffs[62]=x64;
matrixinvcoeffs[63]=0;
matrixinvcoeffs[64]=0;
matrixinvcoeffs[65]=0;
matrixinvcoeffs[66]=0;
matrixinvcoeffs[67]=0;
matrixinvcoeffs[68]=0;
matrixinvcoeffs[69]=0;
matrixinvcoeffs[70]=0;
matrixinvcoeffs[71]=0;
matrixinvcoeffs[72]=npz;
matrixinvcoeffs[73]=0;
matrixinvcoeffs[74]=0;
matrixinvcoeffs[75]=x66;
matrixinvcoeffs[76]=x57;
matrixinvcoeffs[77]=0;
matrixinvcoeffs[78]=((-1.0)*rxp2_2);
matrixinvcoeffs[79]=0;
matrixinvcoeffs[80]=0;
matrixinvcoeffs[81]=0;
matrixinvcoeffs[82]=0;
matrixinvcoeffs[83]=0;
matrixinvcoeffs[84]=0;
matrixinvcoeffs[85]=0;
matrixinvcoeffs[86]=0;
matrixinvcoeffs[87]=0;
matrixinvcoeffs[88]=0;
matrixinvcoeffs[89]=x67;
matrixinvcoeffs[90]=r22;
matrixinvcoeffs[91]=0;
matrixinvcoeffs[92]=0;
matrixinvcoeffs[93]=x57;
matrixinvcoeffs[94]=0;
matrixinvcoeffs[95]=rxp2_2;
matrixinvcoeffs[96]=0;
matrixinvcoeffs[97]=0;
matrixinvcoeffs[98]=0;
matrixinvcoeffs[99]=0;
matrixinvcoeffs[100]=r21;
matrixinvcoeffs[101]=npy;
matrixinvcoeffs[102]=0;
matrixinvcoeffs[103]=0;
matrixinvcoeffs[104]=0;
matrixinvcoeffs[105]=0;
matrixinvcoeffs[106]=0;
matrixinvcoeffs[107]=0;
matrixinvcoeffs[108]=x64;
matrixinvcoeffs[109]=0;
matrixinvcoeffs[110]=x62;
matrixinvcoeffs[111]=0;
matrixinvcoeffs[112]=0;
matrixinvcoeffs[113]=0;
matrixinvcoeffs[114]=0;
matrixinvcoeffs[115]=0;
matrixinvcoeffs[116]=0;
matrixinvcoeffs[117]=0;
matrixinvcoeffs[118]=r21;
matrixinvcoeffs[119]=npy;
matrixinvcoeffs[120]=0;
matrixinvcoeffs[121]=0;
matrixinvcoeffs[122]=0;
matrixinvcoeffs[123]=0;
matrixinvcoeffs[124]=0;
matrixinvcoeffs[125]=x64;
matrixinvcoeffs[126]=0;
matrixinvcoeffs[127]=x58;
matrixinvcoeffs[128]=0;
matrixinvcoeffs[129]=0;
matrixinvcoeffs[130]=0;
matrixinvcoeffs[131]=0;
matrixinvcoeffs[132]=x60;
matrixinvcoeffs[133]=x65;
matrixinvcoeffs[134]=0;
matrixinvcoeffs[135]=0;
matrixinvcoeffs[136]=0;
matrixinvcoeffs[137]=0;
matrixinvcoeffs[138]=0;
matrixinvcoeffs[139]=0;
matrixinvcoeffs[140]=rxp0_2;
matrixinvcoeffs[141]=0;
matrixinvcoeffs[142]=((0.09465)*r20);
matrixinvcoeffs[143]=0;
matrixinvcoeffs[144]=0;
matrixinvcoeffs[145]=0;
matrixinvcoeffs[146]=0;
matrixinvcoeffs[147]=0;
matrixinvcoeffs[148]=0;
matrixinvcoeffs[149]=0;
matrixinvcoeffs[150]=x60;
matrixinvcoeffs[151]=x65;
matrixinvcoeffs[152]=0;
matrixinvcoeffs[153]=0;
matrixinvcoeffs[154]=0;
matrixinvcoeffs[155]=0;
matrixinvcoeffs[156]=0;
matrixinvcoeffs[157]=rxp0_2;
matrixinvcoeffs[158]=0;
matrixinvcoeffs[159]=x59;
matrixinvcoeffs[160]=0;
matrixinvcoeffs[161]=0;
matrixinvcoeffs[162]=0;
matrixinvcoeffs[163]=0;
matrixinvcoeffs[164]=x66;
matrixinvcoeffs[165]=x67;
matrixinvcoeffs[166]=0;
matrixinvcoeffs[167]=0;
matrixinvcoeffs[168]=0;
matrixinvcoeffs[169]=0;
matrixinvcoeffs[170]=0;
matrixinvcoeffs[171]=0;
matrixinvcoeffs[172]=rxp2_2;
matrixinvcoeffs[173]=0;
matrixinvcoeffs[174]=x57;
matrixinvcoeffs[175]=0;
matrixinvcoeffs[176]=0;
matrixinvcoeffs[177]=0;
matrixinvcoeffs[178]=0;
matrixinvcoeffs[179]=0;
matrixinvcoeffs[180]=0;
matrixinvcoeffs[181]=0;
matrixinvcoeffs[182]=x66;
matrixinvcoeffs[183]=x67;
matrixinvcoeffs[184]=0;
matrixinvcoeffs[185]=0;
matrixinvcoeffs[186]=0;
matrixinvcoeffs[187]=0;
matrixinvcoeffs[188]=0;
matrixinvcoeffs[189]=rxp2_2;
matrixinvcoeffs[190]=0;
matrixinvcoeffs[191]=((-0.09465)*r22);
matrixinvcoeffs[192]=0;
matrixinvcoeffs[193]=0;
matrixinvcoeffs[194]=0;
matrixinvcoeffs[195]=0;
matrixinvcoeffs[196]=0;
matrixinvcoeffs[197]=0;
matrixinvcoeffs[198]=0;
matrixinvcoeffs[199]=0;
matrixinvcoeffs[200]=npy;
matrixinvcoeffs[201]=0;
matrixinvcoeffs[202]=0;
matrixinvcoeffs[203]=x63;
matrixinvcoeffs[204]=x58;
matrixinvcoeffs[205]=0;
matrixinvcoeffs[206]=x64;
matrixinvcoeffs[207]=0;
matrixinvcoeffs[208]=0;
matrixinvcoeffs[209]=0;
matrixinvcoeffs[210]=0;
matrixinvcoeffs[211]=0;
matrixinvcoeffs[212]=0;
matrixinvcoeffs[213]=0;
matrixinvcoeffs[214]=0;
matrixinvcoeffs[215]=0;
matrixinvcoeffs[216]=0;
matrixinvcoeffs[217]=((-1.0)*npy);
matrixinvcoeffs[218]=r21;
matrixinvcoeffs[219]=0;
matrixinvcoeffs[220]=0;
matrixinvcoeffs[221]=x58;
matrixinvcoeffs[222]=0;
matrixinvcoeffs[223]=rxp1_2;
matrixinvcoeffs[224]=0;
matrixinvcoeffs[225]=0;
matrixinvcoeffs[226]=0;
matrixinvcoeffs[227]=0;
matrixinvcoeffs[228]=0;
matrixinvcoeffs[229]=0;
matrixinvcoeffs[230]=0;
matrixinvcoeffs[231]=0;
matrixinvcoeffs[232]=x65;
matrixinvcoeffs[233]=0;
matrixinvcoeffs[234]=0;
matrixinvcoeffs[235]=r20;
matrixinvcoeffs[236]=x59;
matrixinvcoeffs[237]=0;
matrixinvcoeffs[238]=rxp0_2;
matrixinvcoeffs[239]=0;
matrixinvcoeffs[240]=0;
matrixinvcoeffs[241]=0;
matrixinvcoeffs[242]=0;
matrixinvcoeffs[243]=0;
matrixinvcoeffs[244]=0;
matrixinvcoeffs[245]=0;
matrixinvcoeffs[246]=0;
matrixinvcoeffs[247]=0;
matrixinvcoeffs[248]=0;
matrixinvcoeffs[249]=npx;
matrixinvcoeffs[250]=x60;
matrixinvcoeffs[251]=0;
matrixinvcoeffs[252]=0;
matrixinvcoeffs[253]=x59;
matrixinvcoeffs[254]=0;
matrixinvcoeffs[255]=x61;
if( !matrixinverse<16>(matrixinvcoeffs) ) {
continue;
}
IkReal gclwh0_0=matrixinvcoeffs[0], gclwh0_1=matrixinvcoeffs[16], gclwh1_2=matrixinvcoeffs[33], gclwh1_3=matrixinvcoeffs[49], gclwh2_0=matrixinvcoeffs[2], gclwh2_1=matrixinvcoeffs[18], gclwh3_2=matrixinvcoeffs[35], gclwh3_3=matrixinvcoeffs[51], gclwh4_2=matrixinvcoeffs[36], gclwh4_3=matrixinvcoeffs[52], gclwh4_4=matrixinvcoeffs[68], gclwh4_8=matrixinvcoeffs[132], gclwh4_11=matrixinvcoeffs[180], gclwh4_14=matrixinvcoeffs[228], gclwh5_0=matrixinvcoeffs[5], gclwh5_1=matrixinvcoeffs[21], gclwh5_6=matrixinvcoeffs[101], gclwh5_9=matrixinvcoeffs[149], gclwh5_10=matrixinvcoeffs[165], gclwh5_15=matrixinvcoeffs[245], gclwh6_2=matrixinvcoeffs[38], gclwh6_4=matrixinvcoeffs[70], gclwh6_5=matrixinvcoeffs[86], gclwh6_11=matrixinvcoeffs[182], gclwh6_12=matrixinvcoeffs[198], gclwh7_0=matrixinvcoeffs[7], gclwh7_6=matrixinvcoeffs[103], gclwh7_7=matrixinvcoeffs[119], gclwh7_10=matrixinvcoeffs[167], gclwh7_13=matrixinvcoeffs[215], gclwh8_2=matrixinvcoeffs[40], gclwh8_4=matrixinvcoeffs[72], gclwh8_5=matrixinvcoeffs[88], gclwh8_11=matrixinvcoeffs[184], gclwh8_12=matrixinvcoeffs[200], gclwh9_0=matrixinvcoeffs[9], gclwh9_6=matrixinvcoeffs[105], gclwh9_7=matrixinvcoeffs[121], gclwh9_10=matrixinvcoeffs[169], gclwh9_13=matrixinvcoeffs[217], gclwh10_2=matrixinvcoeffs[42], gclwh10_4=matrixinvcoeffs[74], gclwh10_5=matrixinvcoeffs[90], gclwh10_11=matrixinvcoeffs[186], gclwh10_12=matrixinvcoeffs[202], gclwh11_0=matrixinvcoeffs[11], gclwh11_6=matrixinvcoeffs[107], gclwh11_7=matrixinvcoeffs[123], gclwh11_10=matrixinvcoeffs[171], gclwh11_13=matrixinvcoeffs[219], gclwh12_2=matrixinvcoeffs[44], gclwh12_3=matrixinvcoeffs[60], gclwh12_4=matrixinvcoeffs[76], gclwh12_8=matrixinvcoeffs[140], gclwh12_11=matrixinvcoeffs[188], gclwh12_14=matrixinvcoeffs[236], gclwh13_0=matrixinvcoeffs[13], gclwh13_1=matrixinvcoeffs[29], gclwh13_6=matrixinvcoeffs[109], gclwh13_9=matrixinvcoeffs[157], gclwh13_10=matrixinvcoeffs[173], gclwh13_15=matrixinvcoeffs[253], gclwh14_2=matrixinvcoeffs[46], gclwh14_3=matrixinvcoeffs[62], gclwh14_4=matrixinvcoeffs[78], gclwh14_8=matrixinvcoeffs[142], gclwh14_11=matrixinvcoeffs[190], gclwh14_14=matrixinvcoeffs[238], gclwh15_0=matrixinvcoeffs[15], gclwh15_1=matrixinvcoeffs[31], gclwh15_6=matrixinvcoeffs[111], gclwh15_9=matrixinvcoeffs[159], gclwh15_10=matrixinvcoeffs[175], gclwh15_15=matrixinvcoeffs[255];
IkReal op[72], zeror[48];
int numroots;;
IkReal x68=pz*pz;
IkReal x69=pp*pp;
IkReal x70=((0.1893)*pz);
IkReal x71=((1.7)*pz);
IkReal x72=(gclwh15_9*npx);
IkReal x73=(gclwh6_11*r21);
IkReal x74=(pp*r22);
IkReal x75=((0.00702803935125)*r21);
IkReal x76=(gclwh5_9*npz);
IkReal x77=(gclwh8_11*r20);
IkReal x78=(npy*pz);
IkReal x79=((3.60823078949063e-5)*r22);
IkReal x80=(gclwh14_3*rxp0_2);
IkReal x81=((0.000977833645875)*r20);
IkReal x82=(npz*pz);
IkReal x83=((0.000977833645875)*r21);
IkReal x84=(gclwh10_12*r22);
IkReal x85=(gclwh10_2*rxp2_2);
IkReal x86=((0.00076243651125)*rxp1_2);
IkReal x87=((0.00600991575645741)*r20);
IkReal x88=((0.154705425)*rxp1_2);
IkReal x89=((0.017917245)*r21);
IkReal x90=(gclwh6_11*rxp1_2);
IkReal x91=((0.3786)*rxp1_2);
IkReal x92=(gclwh7_0*rxp1_2);
IkReal x93=((0.7572)*rxp1_2);
IkReal x94=((0.154705425)*rxp2_2);
IkReal x95=((2.0)*gclwh11_10);
IkReal x96=(gclwh12_8*r21);
IkReal x97=((0.81725)*pp);
IkReal x98=(pp*pz);
IkReal x99=(gclwh14_2*r20);
IkReal x100=(pp*r21);
IkReal x101=((2.0)*gclwh4_11);
IkReal x102=(gclwh8_12*r20);
IkReal x103=(npx*pz);
IkReal x104=(gclwh14_8*rxp0_2);
IkReal x105=((0.1893)*rxp2_2);
IkReal x106=(gclwh5_9*rxp2_2);
IkReal x107=((0.020662095)*rxp1_2);
IkReal x108=((0.007321434238125)*r21);
IkReal x109=((1.6345)*pz);
IkReal x110=((0.0089586225)*pz);
IkReal x111=(gclwh13_0*r21);
IkReal x112=(gclwh5_9*r22);
IkReal x113=(gclwh11_10*r22);
IkReal x114=(gclwh11_13*r22);
IkReal x115=((1.0)*r21);
IkReal x116=((0.3786)*rxp0_2);
IkReal x117=(gclwh14_14*rxp0_2);
IkReal x118=(pp*r20);
IkReal x119=((0.00195566729175)*r22);
IkReal x120=(gclwh15_10*rxp0_2);
IkReal x121=(gclwh14_8*r20);
IkReal x122=(gclwh12_8*rxp1_2);
IkReal x123=((2.0)*gclwh9_10);
IkReal x124=((2.0)*gclwh15_10);
IkReal x125=(gclwh5_15*rxp2_2);
IkReal x126=((2.0)*gclwh13_10);
IkReal x127=((0.00702803935125)*r20);
IkReal x128=(gclwh13_9*r21);
IkReal x129=(gclwh5_0*r22);
IkReal x130=((0.01464286847625)*r20);
IkReal x131=(gclwh15_1*r20);
IkReal x132=((0.000977833645875)*r22);
IkReal x133=((0.0089586225)*r20);
IkReal x134=((2.0)*gclwh10_11);
IkReal x135=(gclwh5_10*r22);
IkReal x136=((2.0)*pp);
IkReal x137=(gclwh15_9*r20);
IkReal x138=(gclwh1_3*r20);
IkReal x139=((0.00195566729175)*r20);
IkReal x140=(gclwh4_3*rxp2_2);
IkReal x141=((0.2183)*gclwh13_15);
IkReal x142=((2.0)*gclwh7_10);
IkReal x143=(gclwh15_0*r20);
IkReal x144=(gclwh9_0*r20);
IkReal x145=(gclwh15_15*rxp0_2);
IkReal x146=(gclwh2_1*r21);
IkReal x147=((4.0)*gclwh11_10);
IkReal x148=((0.30941085)*rxp0_2);
IkReal x149=(gclwh9_0*rxp0_2);
IkReal x150=(gclwh5_10*rxp2_2);
IkReal x151=((0.2183)*gclwh12_14);
IkReal x152=((0.2183)*gclwh14_14);
IkReal x153=(gclwh4_2*rxp2_2);
IkReal x154=((0.03275)*pp);
IkReal x155=((0.006199575)*rxp1_2);
IkReal x156=(gclwh12_2*rxp1_2);
IkReal x157=(gclwh5_0*rxp2_2);
IkReal x158=((3.60823078949063e-5)*r21);
IkReal x159=(gclwh14_11*rxp0_2);
IkReal x160=((0.020662095)*rxp0_2);
IkReal x161=(gclwh14_8*npx);
IkReal x162=((4.0)*gclwh9_10);
IkReal x163=((0.00195566729175)*r21);
IkReal x164=(gclwh8_12*rxp0_2);
IkReal x165=((0.01464286847625)*r21);
IkReal x166=((0.3786)*rxp2_2);
IkReal x167=((0.01464286847625)*r22);
IkReal x168=(gclwh7_13*r21);
IkReal x169=((4.0)*gclwh7_10);
IkReal x170=(gclwh13_0*rxp1_2);
IkReal x171=((0.1893)*rxp1_2);
IkReal x172=(gclwh6_2*r21);
IkReal x173=(gclwh5_1*rxp2_2);
IkReal x174=(gclwh8_2*rxp0_2);
IkReal x175=(gclwh9_10*r20);
IkReal x176=((4.0)*pp);
IkReal x177=(gclwh15_1*rxp0_2);
IkReal x178=(gclwh9_13*r20);
IkReal x179=((0.0089586225)*r21);
IkReal x180=(gclwh0_0*r20);
IkReal x181=(gclwh10_11*r22);
IkReal x182=((2.0)*gclwh12_11);
IkReal x183=((0.0655)*pz);
IkReal x184=((0.006199575)*rxp2_2);
IkReal x185=(gclwh12_14*rxp1_2);
IkReal x186=(gclwh15_0*rxp0_2);
IkReal x187=((2.0)*npx);
IkReal x188=(gclwh9_13*rxp0_2);
IkReal x189=((1.0)*pp);
IkReal x190=((4.0)*gclwh10_11);
IkReal x191=(gclwh15_9*rxp0_2);
IkReal x192=((3.60823078949063e-5)*r20);
IkReal x193=((0.00702803935125)*r22);
IkReal x194=(gclwh8_2*r20);
IkReal x195=((0.2183)*gclwh5_15);
IkReal x196=(gclwh10_2*r22);
IkReal x197=(gclwh5_1*r22);
IkReal x198=(gclwh13_9*rxp1_2);
IkReal x199=((2.0)*gclwh5_10);
IkReal x200=((0.020662095)*rxp2_2);
IkReal x201=(gclwh4_8*r22);
IkReal x202=((0.017917245)*r20);
IkReal x203=(gclwh7_0*r21);
IkReal x204=((0.00600991575645741)*r21);
IkReal x205=(gclwh11_0*r22);
IkReal x206=(gclwh6_12*r21);
IkReal x207=((0.2183)*gclwh15_15);
IkReal x208=(gclwh11_0*rxp2_2);
IkReal x209=((0.2183)*gclwh4_14);
IkReal x210=(gclwh4_14*rxp2_2);
IkReal x211=(gclwh6_2*rxp1_2);
IkReal x212=((0.1893)*rxp0_2);
IkReal x213=(gclwh4_8*rxp2_2);
IkReal x214=((0.12699240901125)*rxp1_2);
IkReal x215=(gclwh14_2*rxp0_2);
IkReal x216=(gclwh4_3*r22);
IkReal x217=((0.1893)*pp);
IkReal x218=(gclwh13_15*rxp1_2);
IkReal x219=(gclwh1_2*r20);
IkReal x220=((2.0)*gclwh14_11);
IkReal x221=(gclwh4_11*r22);
IkReal x222=((0.020662095)*x117);
IkReal x223=(gclwh6_5*x83);
IkReal x224=(gclwh8_5*x81);
IkReal x225=(gclwh12_14*x107);
IkReal x226=(gclwh10_5*x132);
IkReal x227=(gclwh4_14*x200);
IkReal x228=((0.0089586225)*x73);
IkReal x229=(gclwh12_11*x171);
IkReal x230=((0.017917245)*x122);
IkReal x231=((0.017917245)*x213);
IkReal x232=(gclwh4_11*x105);
IkReal x233=((0.0089586225)*x77);
IkReal x234=((0.1893)*x159);
IkReal x235=((0.0089586225)*x181);
IkReal x236=((0.017917245)*x104);
IkReal x237=((0.017917245)*x106);
IkReal x238=((0.0089586225)*x113);
IkReal x239=((0.1893)*x120);
IkReal x240=((0.017917245)*x198);
IkReal x241=(gclwh9_10*x133);
IkReal x242=((0.017917245)*x191);
IkReal x243=(gclwh13_10*x171);
IkReal x244=(gclwh7_10*x179);
IkReal x245=(gclwh5_10*x105);
IkReal x246=((0.020662095)*x145);
IkReal x247=(gclwh7_7*x83);
IkReal x248=(gclwh9_7*x81);
IkReal x249=(gclwh13_15*x107);
IkReal x250=((0.020662095)*x125);
IkReal x251=(gclwh11_7*x132);
IkReal x252=(gclwh10_5*x200);
IkReal x253=(gclwh8_5*x160);
IkReal x254=(gclwh14_14*x81);
IkReal x255=(gclwh6_5*x107);
IkReal x256=(gclwh4_14*x132);
IkReal x257=(gclwh12_14*x83);
IkReal x258=(gclwh8_11*x212);
IkReal x259=((0.000847933619625)*x96);
IkReal x260=(gclwh12_11*x179);
IkReal x261=(gclwh10_11*x105);
IkReal x262=((0.0089586225)*x221);
IkReal x263=((0.000847933619625)*x201);
IkReal x264=((0.1893)*x90);
IkReal x265=(gclwh14_11*x133);
IkReal x266=((0.000847933619625)*x121);
IkReal x267=(gclwh9_10*x212);
IkReal x268=(gclwh13_10*x179);
IkReal x269=(gclwh11_10*x105);
IkReal x270=((0.000847933619625)*x137);
IkReal x271=((0.0089586225)*x135);
IkReal x272=((0.000847933619625)*x112);
IkReal x273=(gclwh7_10*x171);
IkReal x274=((0.000847933619625)*x128);
IkReal x275=(gclwh15_10*x133);
IkReal x276=(gclwh5_15*x132);
IkReal x277=(gclwh7_7*x107);
IkReal x278=(gclwh13_15*x83);
IkReal x279=(gclwh15_15*x81);
IkReal x280=(gclwh9_7*x160);
IkReal x281=(gclwh11_7*x200);
IkReal x282=((0.017917245)*x181);
IkReal x283=(gclwh14_11*x116);
IkReal x284=((0.017917245)*x77);
IkReal x285=((0.04132419)*x117);
IkReal x286=((0.04132419)*x185);
IkReal x287=((0.04132419)*x210);
IkReal x288=(gclwh4_11*x166);
IkReal x289=((0.017917245)*x73);
IkReal x290=(gclwh12_11*x91);
IkReal x291=((0.04132419)*x125);
IkReal x292=((0.04132419)*x218);
IkReal x293=((0.04132419)*x145);
IkReal x294=((0.017917245)*x175);
IkReal x295=(gclwh15_10*x116);
IkReal x296=((0.017917245)*x113);
IkReal x297=(gclwh7_10*x89);
IkReal x298=((0.3786)*x150);
IkReal x299=(gclwh13_10*x91);
IkReal x300=((0.3786)*x90);
IkReal x301=(gclwh14_11*x202);
IkReal x302=(gclwh14_14*x139);
IkReal x303=(gclwh4_14*x119);
IkReal x304=(gclwh12_14*x163);
IkReal x305=(gclwh14_8*x118);
IkReal x306=((2.0)*x68);
IkReal x307=((1.0)*x69);
IkReal x308=(r21*x69);
IkReal x309=((0.2183)*gclwh10_5*x82);
IkReal x310=((0.2183)*gclwh8_5*x103);
IkReal x311=((0.10915)*gclwh6_5*x100);
IkReal x312=((0.2183)*gclwh6_5*x78);
IkReal x313=((0.10915)*gclwh8_5*x118);
IkReal x314=((0.10915)*gclwh10_5*x74);
IkReal x315=(gclwh12_3*pp*x171);
IkReal x316=(x134*x82);
IkReal x317=(x110*x194);
IkReal x318=((2.0)*gclwh8_11*x103);
IkReal x319=(gclwh10_2*pz*x74);
IkReal x320=(x215*x70);
IkReal x321=(x194*x98);
IkReal x322=(gclwh4_3*pp*x105);
IkReal x323=(x110*x196);
IkReal x324=(x156*x70);
IkReal x325=((2.0)*gclwh6_11*x78);
IkReal x326=(x153*x70);
IkReal x327=(x217*x80);
IkReal x328=(x110*x172);
IkReal x329=(gclwh13_1*pp*x171);
IkReal x330=(x110*x205);
IkReal x331=(x110*x144);
IkReal x332=(gclwh5_1*pp*x105);
IkReal x333=(x186*x70);
IkReal x334=(gclwh11_0*pz*x74);
IkReal x335=(x142*x78);
IkReal x336=(x144*x98);
IkReal x337=(x82*x95);
IkReal x338=(x177*x217);
IkReal x339=(x103*x123);
IkReal x340=(x110*x203);
IkReal x341=(x170*x70);
IkReal x342=(x157*x70);
IkReal x343=((0.10915)*gclwh7_7*x100);
IkReal x344=((0.2183)*gclwh9_7*x103);
IkReal x345=((0.2183)*gclwh11_7*x82);
IkReal x346=((0.10915)*gclwh9_7*x118);
IkReal x347=((0.2183)*gclwh7_7*x78);
IkReal x348=((0.10915)*gclwh11_7*x74);
IkReal x349=((0.10915)*gclwh14_14*x118);
IkReal x350=(x209*x82);
IkReal x351=(x151*x78);
IkReal x352=((0.10915)*gclwh12_14*x100);
IkReal x353=(x103*x152);
IkReal x354=((0.10915)*gclwh4_14*x74);
IkReal x355=((0.09465)*gclwh4_8*x74);
IkReal x356=(x98*x99);
IkReal x357=(gclwh12_3*x308);
IkReal x358=(x211*x70);
IkReal x359=(gclwh3_3*x308);
IkReal x360=(x138*x69);
IkReal x361=(gclwh3_2*r21*x110);
IkReal x362=(x103*x220);
IkReal x363=(x161*x70);
IkReal x364=(x110*x99);
IkReal x365=((0.09465)*pp*x96);
IkReal x366=(x216*x69);
IkReal x367=(x110*x219);
IkReal x368=(x174*x70);
IkReal x369=(x101*x82);
IkReal x370=(gclwh4_2*r22*x110);
IkReal x371=(gclwh4_8*npz*x70);
IkReal x372=(gclwh12_2*r21*x110);
IkReal x373=(x70*x85);
IkReal x374=((0.09465)*x305);
IkReal x375=(x182*x78);
IkReal x376=(gclwh12_8*npy*x70);
IkReal x377=(x131*x69);
IkReal x378=(x70*x76);
IkReal x379=(gclwh5_0*pz*x74);
IkReal x380=(gclwh13_9*npy*x70);
IkReal x381=(x110*x129);
IkReal x382=(x111*x98);
IkReal x383=((0.09465)*gclwh15_9*x118);
IkReal x384=(x103*x124);
IkReal x385=(x110*x111);
IkReal x386=(x146*x69);
IkReal x387=(gclwh2_0*r21*x110);
IkReal x388=(x149*x70);
IkReal x389=(x208*x70);
IkReal x390=(gclwh0_1*r20*x69);
IkReal x391=(x110*x180);
IkReal x392=((0.09465)*gclwh5_9*x74);
IkReal x393=(x70*x92);
IkReal x394=((0.09465)*gclwh13_9*x100);
IkReal x395=(x110*x143);
IkReal x396=(x70*x72);
IkReal x397=(x199*x82);
IkReal x398=(x126*x78);
IkReal x399=((0.10915)*gclwh13_15*x100);
IkReal x400=((0.10915)*gclwh5_15*x74);
IkReal x401=(x103*x207);
IkReal x402=((0.10915)*gclwh15_15*x118);
IkReal x403=(x195*x82);
IkReal x404=(x141*x78);
IkReal x405=(x136*x77);
IkReal x406=(x134*x74);
IkReal x407=((4.0)*gclwh6_11*x78);
IkReal x408=((4.0)*gclwh8_11*x103);
IkReal x409=(x136*x73);
IkReal x410=(x190*x82);
IkReal x411=(x74*x95);
IkReal x412=(x169*x78);
IkReal x413=(x118*x123);
IkReal x414=(x100*x142);
IkReal x415=(x103*x162);
IkReal x416=(x147*x82);
IkReal x417=(x118*x220);
IkReal x418=((4.0)*gclwh12_11*x78);
IkReal x419=((4.0)*gclwh4_11*x82);
IkReal x420=(x118*x152);
IkReal x421=((0.4366)*gclwh12_14*x78);
IkReal x422=((0.4366)*gclwh4_14*x82);
IkReal x423=(x100*x151);
IkReal x424=((0.4366)*gclwh14_14*x103);
IkReal x425=(x209*x74);
IkReal x426=(gclwh6_2*npy*x306);
IkReal x427=(gclwh6_2*x115*x98);
IkReal x428=(gclwh10_2*npz*x306);
IkReal x429=(gclwh8_2*x187*x68);
IkReal x430=(gclwh7_0*npy*x306);
IkReal x431=(gclwh9_0*x187*x68);
IkReal x432=(gclwh11_0*npz*x306);
IkReal x433=(gclwh7_0*x115*x98);
IkReal x434=(gclwh12_2*npy*x306);
IkReal x435=(gclwh3_2*npy*x306);
IkReal x436=(gclwh1_2*x187*x68);
IkReal x437=(gclwh14_3*x187*x98);
IkReal x438=(gclwh4_2*npz*x306);
IkReal x439=(gclwh4_3*x136*x82);
IkReal x440=(gclwh12_2*x115*x98);
IkReal x441=((1.0)*x219*x98);
IkReal x442=(gclwh3_3*x136*x78);
IkReal x443=((1.0)*gclwh4_2*pz*x74);
IkReal x444=(gclwh1_3*x187*x98);
IkReal x445=(gclwh3_2*x115*x98);
IkReal x446=(gclwh12_3*x136*x78);
IkReal x447=(gclwh14_2*x187*x68);
IkReal x448=(gclwh14_3*r20*x307);
IkReal x449=(gclwh0_0*x187*x68);
IkReal x450=(gclwh2_0*npy*x306);
IkReal x451=(gclwh5_1*x136*x82);
IkReal x452=(gclwh13_1*x136*x78);
IkReal x453=(gclwh15_0*x187*x68);
IkReal x454=(gclwh2_1*x136*x78);
IkReal x455=(gclwh0_1*x187*x98);
IkReal x456=(gclwh5_0*npz*x306);
IkReal x457=(gclwh13_0*npy*x306);
IkReal x458=((1.0)*x180*x98);
IkReal x459=((1.0)*x143*x98);
IkReal x460=(gclwh2_0*x115*x98);
IkReal x461=(gclwh13_1*x115*x69);
IkReal x462=(x197*x307);
IkReal x463=(gclwh15_1*x187*x98);
IkReal x464=(x287+x286);
IkReal x465=(x291+x292);
IkReal x466=(x252+x253);
IkReal x467=(x225+x227);
IkReal x468=(x250+x249);
IkReal x469=(x281+x280);
IkReal x470=(x325+x233+x234+x235);
IkReal x471=(x335+x238+x239+x241);
IkReal x472=(x397+x398+x275+x273);
IkReal x473=(x375+x369+x265+x264);
IkReal x474=(x302+x422+x421+x420);
IkReal x475=(x309+x311+x310+x223);
IkReal x476=(x351+x350+x349+x254);
IkReal x477=(x279+x403+x402+x404);
IkReal x478=(x343+x344+x345+x247);
IkReal x479=(x384+x267+x269+x268+x271);
IkReal x480=(x362+x258+x261+x260+x262);
IkReal x481=(x318+x316+x229+x228+x232);
IkReal x482=(x339+x337+x243+x245+x244);
IkReal x483=(x353+x352+x354+x256+x257);
IkReal x484=(x399+x276+x278+x401+x400);
IkReal x485=(x346+x347+x348+x251+x248);
IkReal x486=(x304+x303+x425+x424+x423);
IkReal x487=(x300+x301+x417+x418+x419);
IkReal x488=(x314+x313+x312+x224+x226);
IkReal x489=(x290+x289+x288+x409+x408+x410);
IkReal x490=(x298+x299+x297+x416+x414+x415);
IkReal x491=(x294+x295+x296+x412+x413+x411);
IkReal x492=(x284+x283+x282+x405+x407+x406);
IkReal x493=(((x100*x182))+(((4.0)*gclwh14_11*x103))+(((0.017917245)*x221))+((x101*x74))+((gclwh12_11*x89))+((gclwh10_11*x166))+((gclwh8_11*x116)));
IkReal x494=(x324+x326+x327+x328+x236+x429+x428+x427);
IkReal x495=(x338+x342+x340+x341+x242+x431+x432+x433);
IkReal x496=(x320+x321+x322+x323+x319+x315+x317+x230+x231+x426);
IkReal x497=(x333+x332+x331+x330+x336+x334+x329+x237+x240+x430);
IkReal x498=(x395+x394+x396+x393+x392+x274+x272+x458+x459+x456+x457+x454+x455+x463+x462+x461+x460);
IkReal x499=(x355+x357+x356+x359+x358+x360+x361+x363+x364+x365+x366+x367+x259+x263+x438+x434+x435+x436+x437+x70);
IkReal x500=(x376+x374+x373+x372+x371+x370+x368+x266+x439+x448+x445+x444+x447+x446+x441+x440+x443+x442);
IkReal x501=(x386+x387+x385+x382+x383+x380+x381+x388+x389+x379+x378+x377+x391+x390+x270+x449+x452+x453+x450+x451+x70);
op[0]=((((-0.81725)*gclwh10_12*x74))+(((-1.0)*x102*x97))+(((1.6345)*gclwh8_12*x103))+(((-1.0)*x488))+((gclwh6_12*x108))+((x206*x97))+(((-1.6345)*gclwh6_12*x78))+(((-0.007321434238125)*x84))+(((-1.0)*gclwh4_8*x94))+x467+x475+(((-0.007321434238125)*x102))+(((0.154705425)*x104))+(((1.6345)*gclwh10_12*x82))+(((-1.0)*gclwh12_8*x88))+(((-1.0)*x222)));
op[1]=((((-1.0)*x494))+(((-1.0)*x481))+((gclwh10_11*x74))+(((0.12699240901125)*x80))+(((-1.0)*gclwh12_3*x214))+x496+x470+((pp*x77))+(((-1.0)*x189*x73))+(((-0.12699240901125)*x140)));
op[2]=((-0.17125635)+(((-1.0)*x489))+x492);
op[3]=((((-1.569)*gclwh8_2*x103))+((gclwh8_2*x127))+(((-0.160905)*x104))+(((0.7845)*gclwh8_2*x118))+(((-1.0)*gclwh6_2*x75))+((gclwh10_2*x193))+(((-0.7845)*gclwh6_2*x100))+(((-0.14850585)*x156))+(((-0.14850585)*x153))+(((-1.0)*x464))+(((0.14850585)*x215))+(((0.160905)*x122))+x285+(((-1.569)*gclwh10_2*x82))+(((0.7845)*gclwh10_2*x74))+(((0.160905)*x213))+(((1.569)*gclwh6_2*x78)));
op[4]=((((-0.0655)*gclwh6_12*x78))+(((0.0655)*gclwh8_12*x103))+(((-1.0)*x488))+(((0.0655)*gclwh10_12*x82))+(((-1.0)*x467))+(((-0.000293394886875)*x102))+(((-1.0)*x102*x154))+x222+((gclwh4_8*x184))+(((-0.000293394886875)*x84))+x475+(((-0.006199575)*x104))+(((0.006199575)*x122))+(((-0.03275)*gclwh10_12*x74))+(((0.000293394886875)*x206))+(((0.03275)*gclwh6_12*x100)));
op[5]=((((-1.0)*gclwh10_11*x74))+(((-1.0)*x494))+(((0.00076243651125)*x80))+(((-1.0)*x470))+x481+x496+(((-1.0)*gclwh12_3*x86))+(((-0.00076243651125)*x140))+((pp*x73))+(((-1.0)*x189*x77)));
op[6]=((((0.12699240901125)*x177))+(((-1.0)*x495))+((gclwh7_10*x100))+(((-1.0)*gclwh9_10*x118))+(((-1.0)*x471))+(((-1.0)*gclwh11_10*x74))+x482+x497+(((-1.0)*gclwh13_1*x214))+(((-0.12699240901125)*x173)));
op[7]=((((-1.0)*x178*x97))+((gclwh7_13*x108))+(((-0.81725)*gclwh11_13*x74))+(((0.154705425)*x191))+(((-1.0)*gclwh13_9*x88))+(((1.6345)*gclwh9_13*x103))+(((-1.0)*x485))+x468+x478+(((-1.0)*gclwh5_9*x94))+(((-0.007321434238125)*x114))+(((-1.0)*x246))+(((-0.007321434238125)*x178))+((x168*x97))+(((-1.6345)*gclwh7_13*x78))+(((1.6345)*gclwh11_13*x82)));
op[8]=(((gclwh11_0*x193))+(((-0.160905)*x198))+(((-1.0)*gclwh7_0*x75))+(((-0.160905)*x106))+(((0.14850585)*x186))+(((0.160905)*x191))+(((1.569)*gclwh7_0*x78))+(((-1.0)*x293))+(((-0.14850585)*x157))+(((-0.7845)*gclwh7_0*x100))+(((-0.14850585)*x170))+((gclwh9_0*x127))+x465+(((-1.569)*gclwh9_0*x103))+(((0.7845)*gclwh11_0*x74))+(((-1.569)*gclwh11_0*x82))+(((0.7845)*gclwh9_0*x118)));
op[9]=((-0.17125635)+(((-1.0)*x490))+x491);
op[10]=((((-1.0)*x495))+((gclwh11_10*x74))+(((-1.0)*x482))+x497+x471+(((-1.0)*gclwh7_10*x100))+(((0.00076243651125)*x177))+((gclwh9_10*x118))+(((-0.00076243651125)*x173))+(((-1.0)*gclwh13_1*x86)));
op[11]=((((0.000293394886875)*x168))+(((-0.03275)*gclwh9_13*x118))+(((-1.0)*x485))+(((-0.006199575)*x191))+(((-0.0655)*gclwh7_13*x78))+(((0.0655)*gclwh11_13*x82))+(((0.03275)*gclwh7_13*x100))+(((-0.03275)*gclwh11_13*x74))+(((-1.0)*x468))+((gclwh13_9*x155))+x246+(((-0.000293394886875)*x114))+x478+(((-0.000293394886875)*x178))+(((0.006199575)*x106))+(((0.0655)*gclwh9_13*x103)));
op[12]=((((1.6345)*gclwh12_8*x78))+(((-0.007321434238125)*x201))+(((0.154705425)*x164))+(((-1.6345)*gclwh14_8*x103))+(((-0.007321434238125)*x96))+(((-1.0)*x476))+(((-0.81725)*gclwh4_8*x74))+((gclwh10_12*x94))+((x121*x97))+x483+x466+(((0.007321434238125)*x121))+(((1.6345)*gclwh4_8*x82))+(((-1.0)*x96*x97))+(((-1.0)*x255))+(((-1.0)*gclwh6_12*x88)));
op[13]=((-0.679811285)+((gclwh3_3*x204))+(((1.341705325)*gclwh12_3*x78))+(((-1.0)*x480))+(((1.341705325)*gclwh4_3*x82))+(((-1.0)*gclwh12_3*x204))+(((-1.0)*x500))+(((-0.66189404)*gclwh4_3*x74))+(((-1.341705325)*gclwh14_3*x103))+(((-0.679811285)*gclwh1_3*x118))+(((1.341705325)*gclwh3_3*x78))+x499+x473+(((-0.679811285)*gclwh3_3*x100))+(((-1.0)*gclwh12_11*x100))+((gclwh1_3*x87))+((gclwh14_3*x87))+((gclwh14_11*x118))+(((1.341705325)*gclwh1_3*x103))+(((-0.66189404)*gclwh12_3*x100))+(((-0.00600991575645741)*x216))+(((-1.0)*gclwh4_11*x74))+(((0.66189404)*gclwh14_3*x118)));
op[14]=((-0.07735732)+(((-1.0)*x493))+x487);
op[15]=((((-0.7845)*gclwh4_2*x74))+(((-0.85)*x305))+(((-0.007614829125)*x121))+(((0.85)*gclwh4_8*x74))+(((-1.0)*gclwh4_2*x193))+(((1.569)*gclwh3_2*x78))+(((0.7845)*pp*x99))+(((-1.0)*x486))+(((-0.7845)*gclwh3_2*x100))+(((-0.14850585)*x85))+(((1.569)*gclwh4_2*x82))+((gclwh3_2*x75))+(((-1.0)*gclwh4_8*npz*x71))+((x161*x71))+(((1.569)*gclwh12_2*x78))+(((0.00702803935125)*x99))+(((0.85)*pp*x96))+(((0.14850585)*x211))+(((-0.14850585)*x174))+(((-0.7845)*gclwh12_2*x100))+(((0.007614829125)*x96))+x474+(((-0.7845)*gclwh1_2*x118))+(((-1.0)*gclwh12_2*x75))+((gclwh1_2*x127))+(((-1.0)*gclwh12_8*npy*x71))+(((1.569)*gclwh1_2*x103))+(((-1.569)*gclwh14_2*x103))+(((0.007614829125)*x201)));
op[16]=((((-1.0)*gclwh6_12*x155))+(((-0.0655)*gclwh4_8*x82))+(((-1.0)*x483))+(((0.03275)*gclwh4_8*x74))+(((-0.0655)*gclwh12_8*x78))+(((-0.000293394886875)*x121))+(((0.0655)*gclwh14_8*x103))+(((-0.03275)*x305))+(((0.006199575)*x164))+((gclwh10_12*x184))+(((0.000293394886875)*x96))+x466+x476+((x154*x96))+(((0.000293394886875)*x201))+(((-1.0)*x255)));
op[17]=((0.012986285)+(((0.008055325)*gclwh1_3*x103))+(((-0.00493096)*gclwh14_3*x118))+(((-1.0)*gclwh14_11*x118))+(((0.008055325)*gclwh3_3*x78))+((gclwh12_11*x100))+(((-0.008055325)*gclwh14_3*x103))+(((-1.0)*x500))+(((0.00493096)*gclwh12_3*x100))+(((-1.0)*x473))+(((0.008055325)*gclwh12_3*x78))+x480+x499+((gclwh3_3*x158))+(((0.00493096)*gclwh4_3*x74))+(((3.60823078949063e-5)*x138))+(((-1.0)*gclwh4_3*x79))+((gclwh14_3*x192))+(((-0.012986285)*gclwh1_3*x118))+(((-0.012986285)*gclwh3_3*x100))+((gclwh4_11*x74))+(((0.008055325)*gclwh4_3*x82))+(((-1.0)*gclwh12_3*x158)));
op[18]=((0.679811285)+((gclwh13_1*x204))+(((-1.0)*x498))+(((0.00600991575645741)*x197))+(((-1.341705325)*gclwh5_1*x82))+(((-1.0)*gclwh13_10*x100))+(((-0.66189404)*gclwh15_1*x118))+(((0.00600991575645741)*x146))+(((-1.0)*gclwh15_1*x87))+(((-0.679811285)*gclwh0_1*x118))+(((-1.0)*x479))+(((-1.341705325)*gclwh13_1*x78))+(((-1.0)*gclwh5_10*x74))+(((1.341705325)*gclwh15_1*x103))+((gclwh0_1*x87))+((gclwh15_10*x118))+x472+(((1.341705325)*gclwh0_1*x103))+x501+(((0.66189404)*gclwh13_1*x100))+(((1.341705325)*gclwh2_1*x78))+(((-0.679811285)*gclwh2_1*x100))+(((0.66189404)*gclwh5_1*x74)));
op[19]=((((-1.0)*x484))+(((-1.0)*x109*x76))+(((-1.0)*x469))+(((-0.154705425)*x188))+x277+(((-1.0)*gclwh11_13*x94))+x477+(((-0.007321434238125)*x137))+(((-1.6345)*gclwh13_9*x78))+(((-1.0)*x137*x97))+((gclwh7_13*x88))+((x109*x72))+(((0.007321434238125)*x112))+((gclwh13_9*x108))+((x128*x97))+(((0.81725)*gclwh5_9*x74)));
op[20]=((((-0.7845)*gclwh15_0*x118))+(((-0.7845)*gclwh2_0*x100))+((gclwh15_15*x139))+((x118*x207))+(((0.7845)*gclwh13_0*x100))+(((-0.85)*gclwh15_9*x118))+((gclwh0_0*x127))+(((-0.14850585)*x92))+(((-0.007614829125)*x137))+(((0.007614829125)*x112))+(((-1.0)*x195*x74))+(((0.4366)*gclwh13_15*x78))+(((0.007614829125)*x128))+(((1.569)*gclwh0_0*x103))+(((1.569)*gclwh15_0*x103))+(((-1.0)*gclwh13_9*npy*x71))+(((0.14850585)*x149))+(((-0.7845)*gclwh0_0*x118))+((gclwh2_0*x75))+(((-1.0)*gclwh15_0*x127))+((gclwh13_0*x75))+(((0.85)*gclwh13_9*x100))+(((-1.0)*gclwh13_15*x163))+(((1.569)*gclwh2_0*x78))+(((-1.0)*x71*x76))+(((0.85)*gclwh5_9*x74))+(((-1.0)*gclwh5_15*x119))+(((-1.569)*gclwh5_0*x82))+(((0.4366)*gclwh5_15*x82))+(((0.7845)*gclwh5_0*x74))+(((0.00702803935125)*x129))+(((0.14850585)*x208))+(((-1.0)*x100*x141))+(((-1.569)*gclwh13_0*x78))+((x71*x72))+(((-0.4366)*gclwh15_15*x103)));
op[21]=((-0.07735732)+(((-1.0)*x118*x124))+(((-4.0)*gclwh5_10*x82))+(((-1.0)*gclwh7_10*x91))+((gclwh11_10*x166))+(((-4.0)*gclwh13_10*x78))+(((-1.0)*gclwh15_10*x202))+(((0.017917245)*x135))+(((4.0)*gclwh15_10*x103))+((gclwh9_10*x116))+((x100*x126))+((gclwh13_10*x89))+((x199*x74)));
op[22]=((-0.012986285)+((gclwh5_1*x79))+(((0.008055325)*gclwh15_1*x103))+(((0.008055325)*gclwh2_1*x78))+(((3.60823078949063e-5)*x146))+(((-0.008055325)*gclwh5_1*x82))+(((-1.0)*x498))+(((-1.0)*gclwh15_10*x118))+(((0.008055325)*gclwh0_1*x103))+(((-0.00493096)*gclwh5_1*x74))+(((-1.0)*x472))+((gclwh5_10*x74))+((gclwh13_10*x100))+(((-0.012986285)*gclwh0_1*x118))+x479+(((0.00493096)*gclwh15_1*x118))+x501+((gclwh0_1*x192))+(((-3.60823078949063e-5)*x131))+(((-0.00493096)*gclwh13_1*x100))+(((-0.008055325)*gclwh13_1*x78))+(((-0.012986285)*gclwh2_1*x100))+((gclwh13_1*x158)));
op[23]=((((0.0655)*gclwh13_9*x78))+(((-0.006199575)*x188))+(((0.03275)*gclwh15_9*x118))+(((-0.000293394886875)*x128))+((gclwh7_13*x155))+(((-1.0)*x477))+(((0.000293394886875)*x137))+(((-1.0)*x183*x72))+(((-1.0)*x469))+x277+(((-0.000293394886875)*x112))+(((-0.03275)*gclwh13_9*x100))+x484+(((-0.03275)*gclwh5_9*x74))+(((-1.0)*gclwh11_13*x184))+((x183*x76)));
op[24]=((-0.35681135)+(((-1.0)*x489))+x492);
op[25]=((((-3.269)*gclwh10_2*x82))+((gclwh8_2*x130))+(((-3.269)*gclwh8_2*x103))+((gclwh10_2*x167))+(((-1.0)*gclwh6_2*x165))+(((-1.6345)*gclwh6_2*x100))+(((-1.0)*x464))+(((3.269)*gclwh6_2*x78))+(((-0.30941085)*x156))+(((-0.30941085)*x153))+x285+((gclwh14_2*x148))+(((1.6345)*gclwh8_2*x118))+(((1.6345)*gclwh10_2*x74)));
op[26]=((((0.08264838)*x117))+(((1.569)*gclwh10_12*x74))+(((1.569)*pp*x102))+(((0.0140560787025)*x102))+(((-0.08264838)*x210))+(((-3.138)*gclwh8_12*x103))+(((-3.138)*gclwh10_12*x82))+(((-0.0140560787025)*x206))+(((0.0140560787025)*x84))+(((-0.08264838)*x185))+(((-1.569)*gclwh6_12*x100))+(((3.138)*gclwh6_12*x78)));
op[27]=((((-0.03583449)*x77))+(((0.7572)*gclwh4_11*rxp2_2))+(((-1.0)*x190*x74))+(((-0.03583449)*x181))+(((0.03583449)*x73))+(((-0.7572)*x159))+(((-1.0)*x176*x77))+(((8.0)*gclwh10_11*x82))+(((-8.0)*gclwh6_11*x78))+((gclwh12_11*x93))+(((8.0)*gclwh8_11*x103))+((x176*x73)));
op[28]=((-0.01429865)+(((-1.0)*x492))+x489);
op[29]=((((0.00058678977375)*x194))+(((0.00058678977375)*x196))+(((0.0655)*gclwh8_2*x118))+(((0.01239915)*x215))+(((-0.131)*gclwh8_2*x103))+x464+(((-0.131)*gclwh10_2*x82))+(((-1.0)*x285))+(((0.131)*gclwh6_2*x78))+(((-0.00058678977375)*x172))+(((-0.01239915)*x153))+(((-0.01239915)*x156))+(((0.0655)*gclwh10_2*x74))+(((-0.0655)*gclwh6_2*x100)));
op[30]=((((-3.269)*gclwh9_0*x103))+(((1.6345)*gclwh11_0*x74))+(((-1.6345)*gclwh7_0*x100))+(((-1.0)*x293))+(((-0.30941085)*x170))+(((3.269)*gclwh7_0*x78))+(((-1.0)*gclwh7_0*x165))+(((-0.30941085)*x157))+(((1.6345)*gclwh9_0*x118))+x465+((gclwh9_0*x130))+((gclwh15_0*x148))+(((-3.269)*gclwh11_0*x82))+((gclwh11_0*x167)));
op[31]=((-0.35681135)+(((-1.0)*x490))+x491);
op[32]=((((0.03583449)*x175))+(((-1.0)*gclwh13_10*x93))+(((-8.0)*gclwh9_10*x103))+(((-0.03583449)*gclwh7_10*r21))+(((0.03583449)*x113))+((x118*x162))+(((8.0)*gclwh7_10*x78))+(((-0.7572)*x150))+(((0.7572)*x120))+(((-1.0)*x100*x169))+(((-8.0)*gclwh11_10*x82))+((x147*x74)));
op[33]=((((-0.0140560787025)*x168))+(((1.569)*gclwh9_13*x118))+(((0.0140560787025)*x114))+(((-0.08264838)*x218))+(((-3.138)*gclwh9_13*x103))+(((-1.569)*gclwh7_13*x100))+(((0.08264838)*x145))+(((3.138)*gclwh7_13*x78))+(((1.569)*gclwh11_13*x74))+(((0.0140560787025)*x178))+(((-3.138)*gclwh11_13*x82))+(((-0.08264838)*x125)));
op[34]=((((-0.131)*gclwh9_0*x103))+(((0.00058678977375)*x144))+(((0.131)*gclwh7_0*x78))+(((-1.0)*x465))+x293+(((0.0655)*gclwh9_0*x118))+(((-0.00058678977375)*x203))+(((0.00058678977375)*x205))+(((0.0655)*gclwh11_0*x74))+(((-0.0655)*gclwh7_0*x100))+(((-0.01239915)*x170))+(((-0.01239915)*x157))+(((0.01239915)*x186))+(((-0.131)*gclwh11_0*x82)));
op[35]=((-0.01429865)+(((-1.0)*x491))+x490);
op[36]=((1.31196768)+(((-1.0)*x493))+x487);
op[37]=((((-1.0)*gclwh12_2*x165))+(((3.269)*gclwh12_2*x78))+(((-3.269)*gclwh14_2*x103))+(((-1.0)*x486))+(((-1.6345)*gclwh12_2*x100))+(((-1.0)*gclwh4_2*x167))+(((-1.6345)*gclwh3_2*x100))+(((-1.6345)*gclwh1_2*x118))+(((0.01464286847625)*x99))+(((3.269)*gclwh1_2*x103))+(((0.30941085)*x211))+x474+(((-1.6345)*gclwh4_2*x74))+(((3.269)*gclwh3_2*x78))+(((-0.30941085)*x85))+((gclwh3_2*x165))+(((-1.0)*gclwh8_2*x148))+(((3.269)*gclwh4_2*x82))+((gclwh1_2*x130))+(((1.6345)*pp*x99)));
IkReal x502=pz*pz;
IkReal x503=pp*pp;
IkReal x504=((0.1893)*pz);
IkReal x505=((1.7)*pz);
IkReal x506=(gclwh15_9*npx);
IkReal x507=(pp*r21);
IkReal x508=(pp*r22);
IkReal x509=((0.00702803935125)*r21);
IkReal x510=(gclwh5_9*npz);
IkReal x511=(pp*r20);
IkReal x512=(npy*pz);
IkReal x513=((4.0)*gclwh12_11);
IkReal x514=((3.60823078949063e-5)*r22);
IkReal x515=(gclwh14_3*rxp0_2);
IkReal x516=((0.000977833645875)*r20);
IkReal x517=(npz*pz);
IkReal x518=((0.000977833645875)*r21);
IkReal x519=(gclwh10_2*rxp2_2);
IkReal x520=((0.00076243651125)*rxp1_2);
IkReal x521=((0.00600991575645741)*r20);
IkReal x522=((0.154705425)*rxp1_2);
IkReal x523=((0.4366)*gclwh5_15);
IkReal x524=(gclwh6_11*rxp1_2);
IkReal x525=(gclwh7_0*rxp1_2);
IkReal x526=((0.154705425)*rxp2_2);
IkReal x527=((2.0)*gclwh11_10);
IkReal x528=((0.2970117)*rxp1_2);
IkReal x529=((0.017917245)*r21);
IkReal x530=(gclwh14_2*pz);
IkReal x531=(gclwh12_8*r21);
IkReal x532=(gclwh14_2*rxp0_2);
IkReal x533=((2.0)*gclwh4_11);
IkReal x534=((0.007321434238125)*r20);
IkReal x535=(npx*pz);
IkReal x536=((0.4366)*gclwh15_15);
IkReal x537=(gclwh10_11*rxp2_2);
IkReal x538=(gclwh5_9*rxp2_2);
IkReal x539=((0.020662095)*rxp1_2);
IkReal x540=((0.007321434238125)*r21);
IkReal x541=(gclwh0_0*r20);
IkReal x542=((0.0089586225)*r21);
IkReal x543=(gclwh13_0*pz);
IkReal x544=((1.6345)*pz);
IkReal x545=((0.007321434238125)*r22);
IkReal x546=((1.0)*pz);
IkReal x547=(gclwh14_14*rxp0_2);
IkReal x548=(gclwh4_14*r22);
IkReal x549=((0.1893)*rxp0_2);
IkReal x550=((0.00058678977375)*r22);
IkReal x551=(gclwh12_8*rxp1_2);
IkReal x552=((2.0)*gclwh9_10);
IkReal x553=((0.1893)*rxp2_2);
IkReal x554=((2.0)*gclwh15_10);
IkReal x555=((4.0)*gclwh14_11);
IkReal x556=(gclwh5_15*rxp2_2);
IkReal x557=((0.020662095)*rxp0_2);
IkReal x558=((2.0)*gclwh13_10);
IkReal x559=((0.3786)*rxp1_2);
IkReal x560=(gclwh9_0*r20);
IkReal x561=(gclwh13_9*r21);
IkReal x562=(gclwh15_1*r20);
IkReal x563=((0.000977833645875)*r22);
IkReal x564=((0.006199575)*rxp0_2);
IkReal x565=(gclwh6_2*rxp1_2);
IkReal x566=((0.0089586225)*r20);
IkReal x567=((2.0)*gclwh10_11);
IkReal x568=((2.0)*pp);
IkReal x569=((0.00058678977375)*r21);
IkReal x570=(gclwh1_3*r20);
IkReal x571=(gclwh14_14*r20);
IkReal x572=(gclwh9_0*rxp0_2);
IkReal x573=(gclwh4_3*rxp2_2);
IkReal x574=(gclwh5_0*r22);
IkReal x575=((0.03583449)*r20);
IkReal x576=((0.00058678977375)*r20);
IkReal x577=((0.2183)*gclwh13_15);
IkReal x578=((2.0)*gclwh7_10);
IkReal x579=(gclwh2_1*r21);
IkReal x580=((4.0)*gclwh15_10);
IkReal x581=((0.0089586225)*pz);
IkReal x582=((0.2183)*gclwh12_14);
IkReal x583=((0.2183)*gclwh14_14);
IkReal x584=(gclwh11_0*rxp2_2);
IkReal x585=(gclwh8_2*rxp0_2);
IkReal x586=((0.3786)*rxp2_2);
IkReal x587=(gclwh12_2*rxp1_2);
IkReal x588=(gclwh5_0*rxp2_2);
IkReal x589=((3.60823078949063e-5)*r21);
IkReal x590=(gclwh15_9*r20);
IkReal x591=((0.3786)*rxp0_2);
IkReal x592=((0.006199575)*rxp1_2);
IkReal x593=(gclwh14_8*npx);
IkReal x594=(gclwh13_15*r21);
IkReal x595=((0.017917245)*r20);
IkReal x596=(gclwh5_15*r22);
IkReal x597=((0.000293394886875)*r21);
IkReal x598=(gclwh13_0*rxp1_2);
IkReal x599=(gclwh7_10*rxp1_2);
IkReal x600=((0.000293394886875)*r22);
IkReal x601=(gclwh5_1*rxp2_2);
IkReal x602=((0.154705425)*rxp0_2);
IkReal x603=((0.4366)*gclwh13_15);
IkReal x604=((0.0089586225)*r22);
IkReal x605=((0.2970117)*rxp2_2);
IkReal x606=(gclwh5_9*r22);
IkReal x607=((0.7572)*rxp0_2);
IkReal x608=((4.0)*gclwh4_11);
IkReal x609=(gclwh15_1*rxp0_2);
IkReal x610=((0.000293394886875)*r20);
IkReal x611=((2.0)*gclwh6_11);
IkReal x612=((0.4366)*gclwh12_14);
IkReal x613=((0.017917245)*r22);
IkReal x614=(gclwh15_0*r20);
IkReal x615=(gclwh15_15*r20);
IkReal x616=((2.0)*gclwh12_11);
IkReal x617=(gclwh14_8*rxp0_2);
IkReal x618=((0.0655)*pz);
IkReal x619=((0.006199575)*rxp2_2);
IkReal x620=((0.04132419)*rxp1_2);
IkReal x621=((0.4366)*gclwh4_14);
IkReal x622=(gclwh15_0*rxp0_2);
IkReal x623=(gclwh14_8*r20);
IkReal x624=((0.03583449)*r22);
IkReal x625=((2.0)*gclwh8_11);
IkReal x626=((4.0)*gclwh13_10);
IkReal x627=(gclwh15_9*rxp0_2);
IkReal x628=((3.60823078949063e-5)*r20);
IkReal x629=((0.00702803935125)*r22);
IkReal x630=((0.2183)*gclwh5_15);
IkReal x631=(gclwh5_1*r22);
IkReal x632=((4.0)*gclwh5_10);
IkReal x633=(gclwh13_9*rxp1_2);
IkReal x634=((2.0)*gclwh5_10);
IkReal x635=((0.4366)*gclwh14_14);
IkReal x636=((0.020662095)*rxp2_2);
IkReal x637=(gclwh4_8*r22);
IkReal x638=(gclwh4_2*rxp2_2);
IkReal x639=((0.00600991575645741)*r21);
IkReal x640=((0.2183)*gclwh15_15);
IkReal x641=((0.2183)*gclwh4_14);
IkReal x642=((0.00702803935125)*r20);
IkReal x643=(gclwh12_14*r21);
IkReal x644=(gclwh4_8*rxp2_2);
IkReal x645=((0.2970117)*rxp0_2);
IkReal x646=(gclwh8_2*pz);
IkReal x647=(gclwh13_1*rxp1_2);
IkReal x648=((0.1893)*pp);
IkReal x649=(gclwh12_3*rxp1_2);
IkReal x650=((0.01464286847625)*r21);
IkReal x651=((0.1893)*rxp1_2);
IkReal x652=(gclwh4_3*r22);
IkReal x653=((2.0)*gclwh14_11);
IkReal x654=((0.03583449)*r21);
IkReal x655=((0.00195566729175)*x594);
IkReal x656=((0.00195566729175)*x596);
IkReal x657=((0.00195566729175)*x615);
IkReal x658=(gclwh15_10*x595);
IkReal x659=(gclwh7_10*x559);
IkReal x660=(gclwh5_10*x613);
IkReal x661=(gclwh9_10*x591);
IkReal x662=(gclwh13_10*x529);
IkReal x663=(gclwh11_10*x586);
IkReal x664=(gclwh12_14*x539);
IkReal x665=(gclwh6_5*x518);
IkReal x666=(gclwh4_14*x636);
IkReal x667=(gclwh8_5*x516);
IkReal x668=((0.020662095)*x547);
IkReal x669=(gclwh10_5*x563);
IkReal x670=((0.017917245)*x551);
IkReal x671=(gclwh8_11*x566);
IkReal x672=(gclwh14_11*x549);
IkReal x673=((0.017917245)*x644);
IkReal x674=(gclwh10_11*x604);
IkReal x675=(gclwh6_11*x542);
IkReal x676=(gclwh12_11*x651);
IkReal x677=(gclwh4_11*x553);
IkReal x678=((0.017917245)*x617);
IkReal x679=((0.017917245)*x538);
IkReal x680=(gclwh13_10*x651);
IkReal x681=(gclwh7_10*x542);
IkReal x682=(gclwh5_10*x553);
IkReal x683=((0.017917245)*x633);
IkReal x684=((0.017917245)*x627);
IkReal x685=(gclwh11_10*x604);
IkReal x686=(gclwh15_10*x549);
IkReal x687=(gclwh9_10*x566);
IkReal x688=(gclwh13_15*x539);
IkReal x689=((0.020662095)*x556);
IkReal x690=(gclwh7_7*x518);
IkReal x691=(gclwh9_7*x516);
IkReal x692=(gclwh15_15*x557);
IkReal x693=(gclwh11_7*x563);
IkReal x694=(gclwh12_11*x529);
IkReal x695=((0.3786)*x537);
IkReal x696=(gclwh4_11*x613);
IkReal x697=(gclwh8_11*x591);
IkReal x698=((0.00195566729175)*x548);
IkReal x699=((0.00195566729175)*x643);
IkReal x700=((0.00195566729175)*x571);
IkReal x701=((0.000977833645875)*x548);
IkReal x702=(gclwh10_5*x636);
IkReal x703=(gclwh12_14*x518);
IkReal x704=(gclwh8_5*x557);
IkReal x705=(gclwh6_5*x539);
IkReal x706=(gclwh14_14*x516);
IkReal x707=((0.000847933619625)*x531);
IkReal x708=((0.1893)*x524);
IkReal x709=(gclwh14_11*x566);
IkReal x710=((0.000847933619625)*x637);
IkReal x711=(gclwh8_11*x549);
IkReal x712=(gclwh12_11*x542);
IkReal x713=((0.1893)*x537);
IkReal x714=(gclwh4_11*x604);
IkReal x715=((0.000847933619625)*x623);
IkReal x716=((0.1893)*x599);
IkReal x717=(gclwh15_10*x566);
IkReal x718=((0.000847933619625)*x590);
IkReal x719=((0.000847933619625)*x606);
IkReal x720=(gclwh9_10*x549);
IkReal x721=(gclwh13_10*x542);
IkReal x722=((0.000847933619625)*x561);
IkReal x723=(gclwh11_10*x553);
IkReal x724=(gclwh5_10*x604);
IkReal x725=(gclwh15_15*x516);
IkReal x726=(gclwh7_7*x539);
IkReal x727=(gclwh5_15*x563);
IkReal x728=(gclwh9_7*x557);
IkReal x729=(gclwh11_7*x636);
IkReal x730=(gclwh13_15*x518);
IkReal x731=((2.0)*x502);
IkReal x732=(r21*x503);
IkReal x733=((1.0)*x503);
IkReal x734=(x507*x577);
IkReal x735=(x535*x536);
IkReal x736=(x508*x630);
IkReal x737=(x512*x603);
IkReal x738=(x511*x640);
IkReal x739=(x517*x523);
IkReal x740=(x511*x554);
IkReal x741=(x517*x632);
IkReal x742=(x512*x626);
IkReal x743=(x507*x558);
IkReal x744=(x535*x580);
IkReal x745=(x508*x634);
IkReal x746=((0.2183)*gclwh10_5*x517);
IkReal x747=((0.2183)*gclwh8_5*x535);
IkReal x748=((0.10915)*gclwh6_5*x507);
IkReal x749=((0.2183)*gclwh6_5*x512);
IkReal x750=((0.10915)*gclwh8_5*x511);
IkReal x751=((0.10915)*gclwh10_5*x508);
IkReal x752=(x648*x649);
IkReal x753=(x512*x611);
IkReal x754=(x566*x646);
IkReal x755=(gclwh10_2*pz*x508);
IkReal x756=(x504*x532);
IkReal x757=(x511*x646);
IkReal x758=(gclwh4_3*pp*x553);
IkReal x759=(gclwh10_2*r22*x581);
IkReal x760=(x504*x587);
IkReal x761=(x517*x567);
IkReal x762=(x504*x638);
IkReal x763=(x515*x648);
IkReal x764=(x535*x625);
IkReal x765=(gclwh6_2*pz*x542);
IkReal x766=(x647*x648);
IkReal x767=(x517*x527);
IkReal x768=(x535*x552);
IkReal x769=(gclwh11_0*r22*x581);
IkReal x770=(x560*x581);
IkReal x771=(gclwh5_1*pp*x553);
IkReal x772=(x504*x622);
IkReal x773=(gclwh11_0*pz*x508);
IkReal x774=(gclwh9_0*pz*x511);
IkReal x775=(gclwh15_1*pp*x549);
IkReal x776=(gclwh7_0*pz*x542);
IkReal x777=(x504*x598);
IkReal x778=(x504*x588);
IkReal x779=(x512*x578);
IkReal x780=((0.10915)*gclwh7_7*x507);
IkReal x781=((0.2183)*gclwh9_7*x535);
IkReal x782=((0.2183)*gclwh11_7*x517);
IkReal x783=((0.10915)*gclwh9_7*x511);
IkReal x784=((0.2183)*gclwh7_7*x512);
IkReal x785=((0.10915)*gclwh11_7*x508);
IkReal x786=(x508*x533);
IkReal x787=(x507*x616);
IkReal x788=(x535*x555);
IkReal x789=(x507*x582);
IkReal x790=(x535*x635);
IkReal x791=(x508*x641);
IkReal x792=(x511*x583);
IkReal x793=(x512*x612);
IkReal x794=(x517*x621);
IkReal x795=((0.10915)*gclwh12_14*x507);
IkReal x796=(x535*x583);
IkReal x797=((0.10915)*gclwh4_14*x508);
IkReal x798=((0.10915)*gclwh14_14*x511);
IkReal x799=(x517*x641);
IkReal x800=(x512*x582);
IkReal x801=((0.09465)*gclwh4_8*x508);
IkReal x802=(x511*x530);
IkReal x803=(gclwh12_3*x732);
IkReal x804=(x517*x533);
IkReal x805=(x504*x565);
IkReal x806=(gclwh3_3*x732);
IkReal x807=(x503*x570);
IkReal x808=(gclwh3_2*pz*x542);
IkReal x809=(x504*x593);
IkReal x810=(x530*x566);
IkReal x811=((0.09465)*gclwh12_8*x507);
IkReal x812=(x503*x652);
IkReal x813=(gclwh1_2*pz*x566);
IkReal x814=(x512*x616);
IkReal x815=(x504*x585);
IkReal x816=(gclwh4_2*r22*x581);
IkReal x817=(gclwh4_8*npz*x504);
IkReal x818=(gclwh12_2*pz*x542);
IkReal x819=(x504*x519);
IkReal x820=(x535*x653);
IkReal x821=((0.09465)*gclwh14_8*x511);
IkReal x822=(gclwh12_8*npy*x504);
IkReal x823=(x503*x562);
IkReal x824=(x504*x510);
IkReal x825=(gclwh5_0*pz*x508);
IkReal x826=(gclwh13_9*npy*x504);
IkReal x827=(x574*x581);
IkReal x828=(x507*x543);
IkReal x829=((0.09465)*gclwh15_9*x511);
IkReal x830=(x542*x543);
IkReal x831=(x503*x579);
IkReal x832=(x517*x634);
IkReal x833=(gclwh2_0*pz*x542);
IkReal x834=(x504*x572);
IkReal x835=(x512*x558);
IkReal x836=(x504*x584);
IkReal x837=(gclwh0_1*r20*x503);
IkReal x838=(x541*x581);
IkReal x839=((0.09465)*gclwh5_9*x508);
IkReal x840=(x504*x525);
IkReal x841=((0.09465)*gclwh13_9*x507);
IkReal x842=(gclwh15_0*pz*x566);
IkReal x843=(x504*x506);
IkReal x844=(x535*x554);
IkReal x845=((0.10915)*gclwh15_15*x511);
IkReal x846=(x517*x630);
IkReal x847=(x512*x577);
IkReal x848=((0.10915)*gclwh13_15*x507);
IkReal x849=((0.10915)*gclwh5_15*x508);
IkReal x850=(x535*x640);
IkReal x851=(gclwh6_2*npy*x731);
IkReal x852=(gclwh6_2*x507*x546);
IkReal x853=(gclwh10_2*npz*x731);
IkReal x854=(gclwh8_2*npx*x731);
IkReal x855=(gclwh7_0*npy*x731);
IkReal x856=(gclwh9_0*npx*x731);
IkReal x857=(gclwh11_0*npz*x731);
IkReal x858=(gclwh7_0*x507*x546);
IkReal x859=(gclwh12_2*npy*x731);
IkReal x860=(gclwh3_2*npy*x731);
IkReal x861=(gclwh1_2*npx*x731);
IkReal x862=(gclwh14_3*x535*x568);
IkReal x863=(gclwh4_2*npz*x731);
IkReal x864=(gclwh4_3*x517*x568);
IkReal x865=(gclwh12_2*x507*x546);
IkReal x866=(gclwh1_2*x511*x546);
IkReal x867=(gclwh3_3*x512*x568);
IkReal x868=(gclwh4_2*x508*x546);
IkReal x869=(gclwh1_3*x535*x568);
IkReal x870=(gclwh3_2*x507*x546);
IkReal x871=(gclwh12_3*x512*x568);
IkReal x872=(gclwh14_2*npx*x731);
IkReal x873=(gclwh14_3*r20*x733);
IkReal x874=(gclwh0_0*npx*x731);
IkReal x875=(gclwh2_0*npy*x731);
IkReal x876=(gclwh5_1*x517*x568);
IkReal x877=(gclwh13_1*x512*x568);
IkReal x878=(gclwh15_0*npx*x731);
IkReal x879=(gclwh2_1*x512*x568);
IkReal x880=(gclwh0_1*x535*x568);
IkReal x881=(gclwh5_0*npz*x731);
IkReal x882=(gclwh13_0*npy*x731);
IkReal x883=(gclwh0_0*x511*x546);
IkReal x884=(gclwh15_0*x511*x546);
IkReal x885=(gclwh2_0*x507*x546);
IkReal x886=((1.0)*gclwh13_1*x732);
IkReal x887=(x631*x733);
IkReal x888=(gclwh15_1*x535*x568);
IkReal x889=(x664+x666);
IkReal x890=(x702+x704);
IkReal x891=(x689+x688);
IkReal x892=(x728+x729);
IkReal x893=(x687+x686+x685+x779);
IkReal x894=(x672+x671+x674+x753);
IkReal x895=(x708+x709+x814+x804);
IkReal x896=(x717+x716+x835+x832);
IkReal x897=(x657+x737+x739+x738);
IkReal x898=(x665+x746+x747+x748);
IkReal x899=(x706+x799+x798+x800);
IkReal x900=(x700+x793+x792+x794);
IkReal x901=(x690+x782+x780+x781);
IkReal x902=(x725+x845+x847+x846);
IkReal x903=(x720+x721+x723+x724+x844);
IkReal x904=(x711+x713+x712+x714+x820);
IkReal x905=(x682+x681+x680+x768+x767);
IkReal x906=(x676+x677+x675+x764+x761);
IkReal x907=(((x517*x608))+((gclwh14_11*x595))+((x512*x513))+((x511*x653))+(((0.3786)*x524)));
IkReal x908=(x698+x699+x791+x790+x789);
IkReal x909=(x658+x659+x742+x740+x741);
IkReal x910=(x703+x701+x795+x797+x796);
IkReal x911=(x730+x727+x850+x849+x848);
IkReal x912=(x669+x667+x751+x750+x749);
IkReal x913=(x655+x656+x736+x735+x734);
IkReal x914=(x691+x693+x783+x784+x785);
IkReal x915=(x661+x660+x663+x662+x744+x745+x743);
IkReal x916=(x694+x695+x696+x697+x786+x787+x788);
IkReal x917=(x684+x777+x776+x775+x778+x856+x857+x858);
IkReal x918=(x678+x765+x760+x762+x763+x852+x853+x854);
IkReal x919=(x679+x683+x773+x772+x771+x770+x774+x769+x766+x855);
IkReal x920=(x673+x670+x755+x754+x757+x756+x752+x759+x758+x851);
IkReal x921=(x719+x722+x879+x885+x884+x887+x886+x881+x880+x883+x882+x888+x839+x841+x840+x843+x842);
IkReal x922=(x504+x710+x707+x859+x863+x862+x861+x860+x812+x813+x810+x811+x809+x808+x805+x807+x806+x801+x803+x802);
IkReal x923=(x715+x869+x868+x867+x866+x865+x864+x870+x871+x872+x873+x818+x819+x816+x817+x815+x822+x821);
IkReal x924=(x504+x718+x878+x874+x875+x876+x877+x829+x828+x823+x827+x826+x825+x824+x834+x836+x837+x830+x831+x833+x838);
op[38]=((((0.8732)*gclwh4_14*x517))+((x511*x635))+(((-1.0)*gclwh8_12*x645))+(((-1.0)*x507*x612))+(((0.0039113345835)*x571))+(((-1.0)*gclwh10_12*x605))+(((-1.0)*x508*x621))+(((-0.0039113345835)*x548))+(((-0.8732)*gclwh14_14*x535))+(((-0.0039113345835)*x643))+((gclwh6_12*x528))+(((0.8732)*gclwh12_14*x512)));
op[39]=((-0.05940486)+(((8.0)*gclwh14_11*x535))+((x507*x513))+((gclwh8_11*x607))+(((-8.0)*gclwh12_11*x512))+(((-8.0)*gclwh4_11*x517))+(((-1.0)*x511*x555))+(((0.7572)*x537))+((gclwh4_11*x624))+(((-0.7572)*x524))+((gclwh12_11*x654))+(((-1.0)*gclwh14_11*x575))+((x508*x608)));
op[40]=((0.02168232)+(((-1.0)*x907))+x916);
op[41]=((((0.131)*gclwh12_2*x512))+((gclwh3_2*x569))+(((-0.131)*npx*x530))+(((0.0655)*gclwh14_2*x511))+(((-1.0)*gclwh12_2*x569))+((gclwh1_2*x576))+((gclwh14_2*x576))+(((-1.0)*x900))+(((-0.01239915)*x585))+(((0.131)*gclwh3_2*x512))+(((0.131)*gclwh4_2*x517))+(((-0.0655)*gclwh12_2*x507))+(((-0.0655)*gclwh1_2*x511))+(((-1.0)*gclwh4_2*x550))+(((0.131)*gclwh1_2*x535))+(((-0.0655)*gclwh4_2*x508))+x908+(((-0.0655)*gclwh3_2*x507))+(((-0.01239915)*x519))+(((0.01239915)*x565)));
op[42]=((((3.269)*gclwh15_0*x535))+(((-0.30941085)*x525))+(((-1.6345)*gclwh0_0*x511))+(((3.269)*gclwh0_0*x535))+(((0.30941085)*x584))+(((1.6345)*gclwh13_0*x507))+((gclwh13_0*x650))+(((-1.0)*x913))+(((0.30941085)*x572))+(((3.269)*gclwh2_0*x512))+(((0.01464286847625)*x574))+(((-0.01464286847625)*x614))+(((-3.269)*gclwh13_0*x512))+(((-1.6345)*gclwh15_0*x511))+x897+(((0.01464286847625)*x541))+(((-1.6345)*gclwh2_0*x507))+((gclwh2_0*x650))+(((-3.269)*gclwh5_0*x517))+(((1.6345)*gclwh5_0*x508)));
op[43]=((1.31196768)+(((-1.0)*x909))+x915);
op[44]=((0.05940486)+(((-8.0)*gclwh13_10*x512))+(((-1.0)*x511*x580))+(((0.7572)*gclwh11_10*rxp2_2))+((x508*x632))+((x507*x626))+((gclwh13_10*x654))+(((-0.7572)*x599))+(((8.0)*gclwh15_10*x535))+((gclwh9_10*x607))+(((-8.0)*gclwh5_10*x517))+((gclwh5_10*x624))+(((-1.0)*gclwh15_10*x575)));
op[45]=(((gclwh11_13*x605))+(((-1.0)*x511*x536))+((gclwh9_13*x645))+(((-0.8732)*gclwh13_15*x512))+(((0.8732)*gclwh15_15*x535))+(((-1.0)*gclwh7_13*x528))+(((0.0039113345835)*x596))+(((0.0039113345835)*x594))+((x508*x523))+(((-0.0039113345835)*x615))+((x507*x603))+(((-0.8732)*gclwh5_15*x517)));
op[46]=((((0.131)*gclwh15_0*x535))+(((-1.0)*gclwh15_0*x576))+(((0.00058678977375)*x541))+(((-0.131)*gclwh5_0*x517))+(((0.131)*gclwh0_0*x535))+(((-0.01239915)*x525))+(((-1.0)*x897))+((gclwh5_0*x550))+(((-0.0655)*gclwh0_0*x511))+(((0.01239915)*x572))+(((0.01239915)*x584))+((gclwh13_0*x569))+((gclwh2_0*x569))+(((-0.131)*gclwh13_0*x512))+(((-0.0655)*gclwh15_0*x511))+(((0.131)*gclwh2_0*x512))+(((-0.0655)*gclwh2_0*x507))+(((0.0655)*gclwh13_0*x507))+x913+(((0.0655)*gclwh5_0*x508)));
op[47]=((0.02168232)+(((-1.0)*x915))+x909);
op[48]=((((-1.0)*gclwh4_8*x526))+((gclwh10_12*x545))+(((1.6345)*gclwh6_12*x512))+((gclwh14_8*x602))+((gclwh8_12*x534))+(((-1.6345)*gclwh10_12*x517))+(((-1.0)*gclwh12_8*x522))+(((-1.0)*x912))+(((-1.0)*x889))+(((0.81725)*gclwh10_12*x508))+x668+(((-1.6345)*gclwh8_12*x535))+x898+(((-0.81725)*gclwh6_12*x507))+(((-1.0)*gclwh6_12*x540))+(((0.81725)*gclwh8_12*x511)));
op[49]=((((-1.0)*gclwh8_11*x511))+(((0.12699240901125)*x515))+(((-1.0)*gclwh10_11*x508))+(((-1.0)*x894))+(((-1.0)*x918))+(((-0.12699240901125)*x649))+((gclwh6_11*x507))+(((-0.12699240901125)*x573))+x920+x906);
op[50]=((0.17125635)+(((4.0)*gclwh10_11*x517))+(((-1.0)*x511*x625))+((gclwh12_11*x559))+((gclwh6_11*x529))+(((-1.0)*x508*x567))+(((4.0)*gclwh8_11*x535))+(((-1.0)*gclwh8_11*x595))+(((-1.0)*gclwh10_11*x613))+((x507*x611))+(((-1.0)*gclwh14_11*x591))+((gclwh4_11*x586))+(((-4.0)*gclwh6_11*x512)));
op[51]=((((0.14850585)*x587))+((gclwh12_14*x620))+(((-0.160905)*x617))+(((-0.14850585)*x532))+(((-0.7845)*gclwh8_2*x511))+((gclwh6_2*x509))+(((0.7845)*gclwh6_2*x507))+(((-1.0)*gclwh10_2*x629))+(((-1.569)*gclwh6_2*x512))+(((0.04132419)*gclwh4_14*rxp2_2))+(((-1.0)*gclwh8_2*x642))+(((0.160905)*x644))+(((0.160905)*x551))+(((0.14850585)*x638))+(((1.569)*gclwh10_2*x517))+(((1.569)*gclwh8_2*x535))+(((-0.04132419)*x547))+(((-0.7845)*gclwh10_2*x508)));
op[52]=((((-0.0655)*gclwh10_12*x517))+((gclwh10_12*x600))+((gclwh8_12*x610))+(((-1.0)*gclwh14_8*x564))+(((-0.0655)*gclwh8_12*x535))+(((0.03275)*gclwh8_12*x511))+(((-0.03275)*gclwh6_12*x507))+((gclwh4_8*x619))+(((-1.0)*x912))+(((0.006199575)*x551))+(((-1.0)*gclwh6_12*x597))+(((0.0655)*gclwh6_12*x512))+(((-1.0)*x668))+(((0.03275)*gclwh10_12*x508))+x889+x898);
op[53]=((((-1.0)*gclwh6_11*x507))+(((-1.0)*x906))+(((-1.0)*x918))+((gclwh8_11*x511))+((gclwh10_11*x508))+(((-0.00076243651125)*x573))+x894+(((-1.0)*gclwh12_3*x520))+x920+(((0.00076243651125)*x515)));
op[54]=(((gclwh11_10*x508))+(((-1.0)*x905))+(((-1.0)*x917))+(((-0.12699240901125)*x601))+(((-1.0)*gclwh7_10*x507))+(((-0.12699240901125)*x647))+(((0.12699240901125)*x609))+((gclwh9_10*x511))+x893+x919);
op[55]=((((-1.6345)*gclwh9_13*x535))+((gclwh15_9*x602))+(((0.81725)*gclwh11_13*x508))+(((-1.0)*gclwh5_9*x526))+(((-1.0)*x891))+(((-1.0)*x914))+(((-1.6345)*gclwh11_13*x517))+(((-0.81725)*gclwh7_13*x507))+(((-1.0)*gclwh7_13*x540))+x692+(((-1.0)*gclwh13_9*x522))+((gclwh11_13*x545))+x901+(((0.81725)*gclwh9_13*x511))+(((1.6345)*gclwh7_13*x512))+((gclwh9_13*x534)));
op[56]=((((-0.7845)*gclwh11_0*x508))+(((0.14850585)*x588))+(((-0.04132419)*x556))+(((-1.0)*gclwh11_0*x629))+((gclwh7_0*x509))+(((0.160905)*x627))+(((1.569)*gclwh9_0*x535))+(((-0.160905)*x633))+(((0.04132419)*gclwh15_15*rxp0_2))+(((-1.569)*gclwh7_0*x512))+(((0.7845)*gclwh7_0*x507))+(((0.14850585)*x598))+(((-0.00702803935125)*x560))+(((-1.0)*gclwh13_15*x620))+(((-0.160905)*x538))+(((-0.14850585)*x622))+(((1.569)*gclwh11_0*x517))+(((-0.7845)*gclwh9_0*x511)));
op[57]=((0.17125635)+(((-1.0)*gclwh15_10*x591))+((gclwh5_10*x586))+((gclwh13_10*x559))+(((-1.0)*x511*x552))+(((-1.0)*gclwh11_10*x613))+(((-4.0)*gclwh7_10*x512))+(((4.0)*gclwh11_10*x517))+((gclwh7_10*x529))+(((-1.0)*x508*x527))+((x507*x578))+(((4.0)*gclwh9_10*x535))+(((-1.0)*gclwh9_10*x595)));
op[58]=((((-1.0)*gclwh9_10*x511))+(((-1.0)*gclwh11_10*x508))+(((-0.00076243651125)*x601))+((gclwh7_10*x507))+(((-1.0)*x893))+(((-1.0)*x917))+(((0.00076243651125)*x609))+(((-1.0)*gclwh13_1*x520))+x919+x905);
op[59]=(((gclwh11_13*x600))+(((-0.0655)*gclwh9_13*x535))+(((0.0655)*gclwh7_13*x512))+((gclwh13_9*x592))+(((-0.03275)*gclwh7_13*x507))+(((-1.0)*x914))+(((-0.0655)*gclwh11_13*x517))+(((0.006199575)*x538))+(((-1.0)*gclwh7_13*x597))+(((-1.0)*x692))+(((0.03275)*gclwh9_13*x511))+((gclwh9_13*x610))+x891+x901+(((-1.0)*gclwh15_9*x564))+(((0.03275)*gclwh11_13*x508)));
op[60]=((((-1.0)*gclwh4_8*x545))+(((0.81725)*gclwh14_8*x511))+(((-0.81725)*gclwh4_8*x508))+(((-1.0)*x910))+(((-0.007321434238125)*x531))+(((1.6345)*gclwh12_8*x512))+(((-1.0)*x705))+(((-0.81725)*gclwh12_8*x507))+((gclwh14_8*x534))+(((1.6345)*gclwh4_8*x517))+x890+x899+(((-1.0)*gclwh10_12*x526))+(((-1.0)*gclwh8_12*x602))+((gclwh6_12*x522))+(((-1.6345)*gclwh14_8*x535)));
op[61]=((0.679811285)+(((-1.0)*x923))+(((0.66189404)*gclwh14_3*x511))+((gclwh3_3*x639))+((gclwh1_3*x521))+(((-0.66189404)*gclwh12_3*x507))+(((1.341705325)*gclwh3_3*x512))+(((-0.00600991575645741)*x652))+(((-0.679811285)*gclwh1_3*x511))+(((-1.0)*x895))+((gclwh14_3*x521))+(((-0.66189404)*gclwh4_3*x508))+(((1.341705325)*gclwh12_3*x512))+((gclwh12_11*x507))+(((1.341705325)*gclwh1_3*x535))+(((-0.679811285)*gclwh3_3*x507))+(((-1.0)*gclwh12_3*x639))+(((1.341705325)*gclwh4_3*x517))+(((-1.341705325)*gclwh14_3*x535))+x922+x904+(((-1.0)*gclwh14_11*x511))+((gclwh4_11*x508)));
op[62]=((0.07735732)+(((-1.0)*x907))+x916);
op[63]=((((-0.14850585)*x565))+(((-1.569)*gclwh1_2*x535))+(((0.7845)*gclwh12_2*x507))+(((0.14850585)*x585))+(((0.85)*gclwh4_8*x508))+(((-1.569)*gclwh4_2*x517))+(((-1.0)*gclwh12_8*npy*x505))+(((-0.7845)*gclwh14_2*x511))+(((-1.0)*gclwh4_8*npz*x505))+(((0.7845)*gclwh1_2*x511))+(((-1.0)*x900))+(((0.14850585)*x519))+(((0.7845)*gclwh3_2*x507))+((gclwh12_2*x509))+(((-0.85)*gclwh14_8*x511))+(((-1.569)*gclwh3_2*x512))+(((1.569)*npx*x530))+(((-1.0)*gclwh14_2*x642))+(((0.85)*gclwh12_8*x507))+(((0.007614829125)*x531))+(((-1.0)*gclwh1_2*x642))+(((-1.569)*gclwh12_2*x512))+((x505*x593))+(((0.7845)*gclwh4_2*x508))+x908+(((0.007614829125)*x637))+(((-0.007614829125)*x623))+(((-1.0)*gclwh3_2*x509))+((gclwh4_2*x629)));
op[64]=(((gclwh6_12*x592))+(((-0.0655)*gclwh4_8*x517))+(((0.0655)*gclwh14_8*x535))+(((-1.0)*gclwh14_8*x610))+(((0.000293394886875)*x531))+(((-0.03275)*gclwh14_8*x511))+(((-1.0)*x899))+(((0.03275)*gclwh12_8*x507))+((gclwh4_8*x600))+(((-1.0)*x705))+x890+(((-0.0655)*gclwh12_8*x512))+(((-1.0)*gclwh10_12*x619))+x910+(((0.03275)*gclwh4_8*x508))+(((-1.0)*gclwh8_12*x564)));
op[65]=((-0.012986285)+(((-1.0)*x923))+(((-1.0)*gclwh12_11*x507))+(((0.00493096)*gclwh12_3*x507))+(((0.008055325)*gclwh12_3*x512))+(((-0.00493096)*gclwh14_3*x511))+(((-0.012986285)*gclwh1_3*x511))+(((-1.0)*x904))+((gclwh3_3*x589))+(((3.60823078949063e-5)*x570))+(((-1.0)*gclwh4_3*x514))+(((-1.0)*gclwh12_3*x589))+(((0.008055325)*gclwh3_3*x512))+(((-1.0)*gclwh4_11*x508))+(((-0.008055325)*gclwh14_3*x535))+(((0.008055325)*gclwh1_3*x535))+(((0.00493096)*gclwh4_3*x508))+((gclwh14_11*x511))+x895+(((0.008055325)*gclwh4_3*x517))+(((-0.012986285)*gclwh3_3*x507))+x922+((gclwh14_3*x628)));
op[66]=((-0.679811285)+(((-1.0)*x921))+(((-0.66189404)*gclwh15_1*x511))+((gclwh13_1*x639))+(((-1.341705325)*gclwh13_1*x512))+(((-0.679811285)*gclwh0_1*x511))+(((1.341705325)*gclwh15_1*x535))+(((1.341705325)*gclwh0_1*x535))+(((1.341705325)*gclwh2_1*x512))+(((-1.0)*gclwh15_1*x521))+(((-1.0)*x896))+(((0.00600991575645741)*x579))+((gclwh5_10*x508))+(((-0.679811285)*gclwh2_1*x507))+(((0.66189404)*gclwh13_1*x507))+(((-1.341705325)*gclwh5_1*x517))+((gclwh13_10*x507))+x924+x903+(((0.66189404)*gclwh5_1*x508))+((gclwh0_1*x521))+(((0.00600991575645741)*x631))+(((-1.0)*gclwh15_10*x511)));
op[67]=((((-1.6345)*gclwh13_9*x512))+(((-0.81725)*gclwh15_9*x511))+(((0.81725)*gclwh13_9*x507))+(((-1.0)*x902))+(((-1.0)*x892))+((gclwh13_9*x540))+(((-1.0)*gclwh7_13*x522))+(((0.81725)*gclwh5_9*x508))+(((-1.0)*gclwh15_9*x534))+((gclwh11_13*x526))+((x506*x544))+x726+(((-1.0)*x510*x544))+((gclwh9_13*x602))+((gclwh5_9*x545))+x911);
op[68]=((((-1.0)*gclwh13_0*x509))+(((0.85)*gclwh13_9*x507))+(((-0.00702803935125)*x541))+(((0.007614829125)*x561))+(((-0.00702803935125)*x574))+(((0.7845)*gclwh15_0*x511))+(((-1.569)*gclwh0_0*x535))+(((-0.007614829125)*x590))+(((1.569)*gclwh13_0*x512))+(((0.7845)*gclwh2_0*x507))+((x505*x506))+(((-1.0)*x897))+(((0.7845)*gclwh0_0*x511))+(((-0.7845)*gclwh5_0*x508))+(((1.569)*gclwh5_0*x517))+(((-1.0)*gclwh13_9*npy*x505))+(((0.007614829125)*x606))+(((0.00702803935125)*x614))+(((-1.569)*gclwh2_0*x512))+(((-0.14850585)*x572))+(((-1.0)*x505*x510))+(((-0.85)*gclwh15_9*x511))+(((0.85)*gclwh5_9*x508))+(((0.14850585)*x525))+(((-1.569)*gclwh15_0*x535))+(((-0.7845)*gclwh13_0*x507))+(((-1.0)*gclwh2_0*x509))+(((-0.14850585)*x584))+x913);
op[69]=((0.07735732)+(((-1.0)*x915))+x909);
op[70]=((0.012986285)+(((-0.012986285)*gclwh0_1*x511))+(((-1.0)*x921))+((gclwh0_1*x628))+(((0.008055325)*gclwh2_1*x512))+(((-3.60823078949063e-5)*x562))+((gclwh13_1*x589))+(((-1.0)*gclwh5_10*x508))+(((0.008055325)*gclwh0_1*x535))+(((-1.0)*x903))+(((-0.008055325)*gclwh13_1*x512))+(((-0.00493096)*gclwh13_1*x507))+(((3.60823078949063e-5)*x579))+((gclwh15_10*x511))+(((0.008055325)*gclwh15_1*x535))+(((-0.008055325)*gclwh5_1*x517))+(((-0.00493096)*gclwh5_1*x508))+x896+(((0.00493096)*gclwh15_1*x511))+(((-1.0)*gclwh13_10*x507))+((gclwh5_1*x514))+(((-0.012986285)*gclwh2_1*x507))+x924);
op[71]=((((-1.0)*x506*x618))+(((0.000293394886875)*x590))+(((0.03275)*gclwh15_9*x511))+((gclwh11_13*x619))+(((-1.0)*x892))+(((-1.0)*x911))+(((-0.000293394886875)*x561))+(((-0.03275)*gclwh13_9*x507))+((gclwh9_13*x564))+(((-1.0)*gclwh7_13*x592))+(((-1.0)*gclwh5_9*x600))+(((0.0655)*gclwh13_9*x512))+x726+((x510*x618))+x902+(((-0.03275)*gclwh5_9*x508)));
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j1array[16], cj1array[16], sj1array[16], j0array[16], cj0array[16], sj0array[16], j4array[16], cj4array[16], sj4array[16];
int numsolutions = 0;
for(int ij1 = 0; ij1 < numroots; ij1 += 3)
{
IkReal htj1 = zeror[ij1+0], htj0 = zeror[ij1+1], htj4 = zeror[ij1+2];
if(isnan(htj1)||isnan(htj0)||isnan(htj4)){
continue;
}
j1array[numsolutions]=((2.0)*(atan(htj1)));
j0array[numsolutions]=((2.0)*(atan(htj0)));
j4array[numsolutions]=((2.0)*(atan(htj4)));
if(isinf(htj1)){
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
}
else{
IkReal x925=htj1*htj1;
CheckValue<IkReal> x926=IKPowWithIntegerCheck(((1.0)+x925),-1);
if(!x926.valid){
continue;
}
cj1array[numsolutions]=((x926.value)*(((1.0)+(((-1.0)*x925)))));
CheckValue<IkReal> x927=IKPowWithIntegerCheck(((1.0)+(htj1*htj1)),-1);
if(!x927.valid){
continue;
}
sj1array[numsolutions]=((2.0)*htj1*(x927.value));
}
if(isinf(htj0)){
cj0array[numsolutions] = IKcos(j0array[numsolutions]);
sj0array[numsolutions] = IKsin(j0array[numsolutions]);
}
else{
IkReal x928=htj0*htj0;
CheckValue<IkReal> x929=IKPowWithIntegerCheck(((1.0)+x928),-1);
if(!x929.valid){
continue;
}
cj0array[numsolutions]=((x929.value)*(((1.0)+(((-1.0)*x928)))));
CheckValue<IkReal> x930=IKPowWithIntegerCheck(((1.0)+(htj0*htj0)),-1);
if(!x930.valid){
continue;
}
sj0array[numsolutions]=((2.0)*htj0*(x930.value));
}
if(isinf(htj4)){
cj4array[numsolutions] = IKcos(j4array[numsolutions]);
sj4array[numsolutions] = IKsin(j4array[numsolutions]);
}
else{
IkReal x931=htj4*htj4;
CheckValue<IkReal> x932=IKPowWithIntegerCheck(((1.0)+x931),-1);
if(!x932.valid){
continue;
}
cj4array[numsolutions]=((x932.value)*(((1.0)+(((-1.0)*x931)))));
CheckValue<IkReal> x933=IKPowWithIntegerCheck(((1.0)+(htj4*htj4)),-1);
if(!x933.valid){
continue;
}
sj4array[numsolutions]=((2.0)*htj4*(x933.value));
}
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j1valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj1 = 16;
_nj0 = 1;
_nj4 = 1;
for(int ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
_ij0[0] = 0; _ij0[1] = -1;
_ij4[0] = 0; _ij4[1] = -1;
for(int iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( !j1valid[iij1] ) { continue; }
if( IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(cj0array[ij1]-cj0array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij1]-sj0array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(cj4array[ij1]-cj4array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij1]-sj4array[iij1]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j1valid[iij1]=false; _ij1[1] = iij1; _ij0[1] = 0; _ij4[1] = 0;  break; 
}
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];

    j0 = j0array[ij1]; cj0 = cj0array[ij1]; sj0 = sj0array[ij1];

    j4 = j4array[ij1]; cj4 = cj4array[ij1]; sj4 = sj4array[ij1];

innerfn(solutions);
    }
}
return solutions.GetNumSolutions()>0;
}
static inline void polyroots3(IkReal rawcoeffs[3+1], IkReal rawroots[3], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots2(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[3];
    const int maxsteps = 110;
    for(int i = 0; i < 3; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[3];
    IkReal err[3];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 3; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 3; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 3; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 3; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[3] = {false};
    for(int i = 0; i < 3; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 3; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && abs(imag(roots[i])-imag(roots[j])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots2(IkReal rawcoeffs[2+1], IkReal rawroots[2], int& numroots) {
    IkReal det = rawcoeffs[1]*rawcoeffs[1]-4*rawcoeffs[0]*rawcoeffs[2];
    if( det < 0 ) {
        numroots=0;
    }
    else if( det == 0 ) {
        rawroots[0] = -0.5*rawcoeffs[1]/rawcoeffs[0];
        numroots = 1;
    }
    else {
        det = IKsqrt(det);
        rawroots[0] = (-rawcoeffs[1]+det)/(2*rawcoeffs[0]);
        rawroots[1] = (-rawcoeffs[1]-det)/(2*rawcoeffs[0]);//rawcoeffs[2]/(rawcoeffs[0]*rawroots[0]);
        numroots = 2;
    }
}
static inline void polyroots5(IkReal rawcoeffs[5+1], IkReal rawroots[5], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots4(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[5];
    const int maxsteps = 110;
    for(int i = 0; i < 5; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[5];
    IkReal err[5];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 5; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 5; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 5; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 5; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[5] = {false};
    for(int i = 0; i < 5; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 5; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && abs(imag(roots[i])-imag(roots[j])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots3(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[4];
    const int maxsteps = 110;
    for(int i = 0; i < 4; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[4];
    IkReal err[4];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 4; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 4; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 4; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 4; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[4] = {false};
    for(int i = 0; i < 4; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 4; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && abs(imag(roots[i])-imag(roots[j])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots6(IkReal rawcoeffs[6+1], IkReal rawroots[6], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots5(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[6];
    const int maxsteps = 110;
    for(int i = 0; i < 6; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[6];
    IkReal err[6];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 6; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 6; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 6; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 6; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[6] = {false};
    for(int i = 0; i < 6; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 6; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && abs(imag(roots[i])-imag(roots[j])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
inline void innerfn(IkSolutionListBase<IkReal>& solutions) {
for(int fniter = 0; fniter < 1; ++fniter) {
{
IkReal j6eval[2];
j6eval[0]=((r20*r20)+(r21*r21));
j6eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j6eval[0]) < 0.0000010000000000  || IKabs(j6eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((r20*r20)+(r21*r21));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x934=((-1.0)*pz);
r20=0;
r21=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
rxp0_0=(pz*r10);
rxp0_1=(r00*x934);
rxp1_0=(pz*r11);
rxp1_1=(r01*x934);
j5eval[0]=cj4;
j5eval[1]=r22;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x935=((-1.0)*pz);
r20=0;
r21=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
rxp0_0=(pz*r10);
rxp0_1=(r00*x935);
rxp1_0=(pz*r11);
rxp1_1=(r01*x935);
j5eval[0]=r22;
j5eval[1]=sj4;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x936=IKPowWithIntegerCheck(r22,-1);
if(!x936.valid){
continue;
}
CheckValue<IkReal> x937=IKPowWithIntegerCheck(sj4,-1);
if(!x937.valid){
continue;
}
sj5array[0]=((x936.value)*(x937.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1)))));
if( sj5array[0] >= -1-IKFAST_SINCOS_THRESH && sj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKasin(sj5array[0]);
    cj5array[0] = IKcos(j5array[0]);
    sj5array[1] = sj5array[0];
    j5array[1] = j5array[0] > 0 ? (IKPI-j5array[0]) : (-IKPI-j5array[0]);
    cj5array[1] = -cj5array[0];
}
else if( isnan(sj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((-1.0)*r22*(IKcos(j5)));
evalcond[1]=(((cj4*r22*(IKsin(j5))))+((cj1*sj0))+((cj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j6eval[1];
IkReal x938=((-1.0)*pz);
r20=0;
r21=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
rxp0_0=(pz*r10);
rxp0_1=(r00*x938);
rxp1_0=(pz*r11);
rxp1_1=(r01*x938);
IkReal x939=(sj0*sj1);
IkReal x940=((16.0)*sj5);
IkReal x941=(cj0*cj1);
IkReal x942=(cj5*r12);
IkReal x943=(cj4*cj5);
IkReal x944=(r00*sj4);
IkReal x945=((4.0)*sj5);
IkReal x946=((8.0)*r01);
IkReal x947=((8.0)*r11);
IkReal x948=((4.0)*sj4);
IkReal x949=(r10*sj4);
IkReal x950=(r11*x948);
IkReal x951=(r01*x948);
IkReal x952=((12.0)*cj5*r02);
IkReal x953=((12.0)*cj4*sj5);
IkReal x954=((4.0)*cj5*r02);
IkReal x955=((4.0)*r10*x943);
IkReal x956=(r12*x953);
IkReal x957=((4.0)*r00*x943);
IkReal x958=(r02*x953);
IkReal x959=(x939*x952);
IkReal x960=(r00*x941*x945);
IkReal x961=(x941*x952);
IkReal x962=(r00*x939*x945);
IkReal x963=(r10*x939*x945);
IkReal x964=(r10*x941*x945);
IkReal x965=((12.0)*x941*x942);
IkReal x966=((12.0)*x939*x942);
IkReal x967=(x960+x950);
IkReal x968=(x963+x951);
IkReal x969=(x962+x955);
IkReal x970=(x961+x956);
IkReal x971=(x964+x957);
IkReal x972=(x966+x958);
j6eval[0]=((((0.5)*(IKabs((x965+x968+(((-1.0)*x972))+(((-1.0)*x971)))))))+(((0.5)*(IKabs(((((-1.0)*x941*x954))+((x939*x954))+(((-1.0)*cj4*r12*x945))+x967+(((-1.0)*x969)))))))+(IKabs(((((-1.0)*sj5*x941*x947))+(((-1.0)*x943*x946))+(((-8.0)*x944))+((sj5*x939*x947)))))+(((0.5)*(IKabs((x969+x959+(((-1.0)*x967))+(((-1.0)*x970)))))))+(IKabs(((((-1.0)*x943*x947))+(((-1.0)*sj5*x939*x946))+(((-8.0)*x949))+((sj5*x941*x946)))))+(((0.5)*(IKabs((((r01*x940*x941))+(((-1.0)*r01*x939*x940))+(((-16.0)*x949))+(((-16.0)*r11*x943)))))))+(((0.5)*(IKabs(((((4.0)*x941*x942))+(((-1.0)*cj4*r02*x945))+(((-4.0)*x939*x942))+x968+(((-1.0)*x971)))))))+(((0.5)*(IKabs((x971+x965+(((-1.0)*x968))+(((-1.0)*x972)))))))+(((0.5)*(IKabs(((((-16.0)*r01*x943))+((r11*x939*x940))+(((-16.0)*x944))+(((-1.0)*r11*x940*x941)))))))+(((0.5)*(IKabs((x967+x959+(((-1.0)*x969))+(((-1.0)*x970))))))));
if( IKabs(j6eval[0]) < 0.0000000010000000  )
{
continue; // 3 cases reached

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j6evalpoly[1];
IkReal x973=((4.0)*sj5);
IkReal x974=(cj4*r12);
IkReal x975=(sj0*sj1);
IkReal x976=(cj0*cj1);
IkReal x977=(cj4*cj5);
IkReal x978=(r10*sj4);
IkReal x979=((4.0)*r11*sj4);
IkReal x980=((16.0)*r01*sj5);
IkReal x981=((12.0)*cj5*r02);
IkReal x982=((8.0)*r01*sj5);
IkReal x983=((4.0)*cj5*r02);
IkReal x984=((4.0)*r10*x977);
IkReal x985=((12.0)*sj5*x974);
IkReal x986=(x973*x974);
IkReal x987=(r00*x973*x976);
IkReal x988=(r00*x973*x975);
IkReal x989=(x975*x981);
IkReal x990=(x976*x981);
IkReal x991=(x975*x983);
IkReal x992=(x976*x983);
IkReal x993=(x987+x979);
IkReal x994=(x988+x984);
IkReal x995=(x990+x985);
IkReal x996=(x992+x986);
IkReal x997=(((x976*x982))+(((-8.0)*x978))+(((-1.0)*x975*x982))+(((-8.0)*r11*x977)));
op[0]=((((-1.0)*x994))+(((-1.0)*x996))+x993+x991);
op[1]=x997;
op[2]=((((-1.0)*x994))+(((-1.0)*x995))+x993+x989);
op[3]=((((-16.0)*r11*x977))+((x976*x980))+(((-16.0)*x978))+(((-1.0)*x975*x980)));
op[4]=((((-1.0)*x993))+(((-1.0)*x995))+x994+x989);
op[5]=x997;
op[6]=((((-1.0)*x993))+(((-1.0)*x996))+x991+x994);
polyroots6(op,zeror,numroots);
IkReal j6array[6], cj6array[6], sj6array[6], tempj6array[1];
int numsolutions = 0;
for(int ij6 = 0; ij6 < numroots; ++ij6)
{
IkReal htj6 = zeror[ij6];
tempj6array[0]=((2.0)*(atan(htj6)));
for(int kj6 = 0; kj6 < 1; ++kj6)
{
j6array[numsolutions] = tempj6array[kj6];
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
sj6array[numsolutions] = IKsin(j6array[numsolutions]);
cj6array[numsolutions] = IKcos(j6array[numsolutions]);
numsolutions++;
}
}
bool j6valid[6]={true,true,true,true,true,true};
_nj6 = 6;
for(int ij6 = 0; ij6 < numsolutions; ++ij6)
    {
if( !j6valid[ij6] )
{
    continue;
}
    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
htj6 = IKtan(j6/2);

IkReal x998=(r10*sj5);
IkReal x999=(cj5*r12);
IkReal x1000=(sj0*sj1);
IkReal x1001=(cj0*cj1);
IkReal x1002=(r00*sj4);
IkReal x1003=((4.0)*r01*sj4);
IkReal x1004=((4.0)*x1000);
IkReal x1005=(cj4*r02*sj5);
IkReal x1006=((16.0)*r11*sj5);
IkReal x1007=(cj4*cj5*r01);
IkReal x1008=((8.0)*r11*sj5);
IkReal x1009=((4.0)*cj4*cj5*r00);
IkReal x1010=((12.0)*x1005);
IkReal x1011=((4.0)*x1005);
IkReal x1012=((4.0)*x1001*x998);
IkReal x1013=((4.0)*x1001*x999);
IkReal x1014=(x1004*x998);
IkReal x1015=((12.0)*x1001*x999);
IkReal x1016=((12.0)*x1000*x999);
IkReal x1017=(x1004*x999);
IkReal x1018=(x1014+x1003);
IkReal x1019=(x1016+x1010);
IkReal x1020=(x1012+x1009);
IkReal x1021=(x1017+x1011);
IkReal x1022=(((x1000*x1008))+(((-8.0)*x1002))+(((-8.0)*x1007))+(((-1.0)*x1001*x1008)));
j6evalpoly[0]=(x1013+x1020+(((htj6*htj6*htj6*htj6*htj6*htj6)*((x1018+x1013+(((-1.0)*x1020))+(((-1.0)*x1021))))))+(((htj6*htj6)*((x1015+x1020+(((-1.0)*x1019))+(((-1.0)*x1018))))))+((htj6*x1022))+((x1022*(htj6*htj6*htj6*htj6*htj6)))+(((-1.0)*x1018))+(((htj6*htj6*htj6*htj6)*((x1018+x1015+(((-1.0)*x1019))+(((-1.0)*x1020))))))+(((-1.0)*x1021))+(((htj6*htj6*htj6)*(((((-16.0)*x1002))+(((-16.0)*x1007))+((x1000*x1006))+(((-1.0)*x1001*x1006)))))));
if( IKabs(j6evalpoly[0]) > 0.0000000010000000  )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < numsolutions; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1023=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1023))+(((-1.0)*cj5*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1023)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1023))+(((-1.0)*cj5*r02))))+IKsqr((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1023))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1023))+(((-1.0)*cj5*r02))), (((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1023))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x1024=IKcos(j2);
IkReal x1025=IKsin(j2);
IkReal x1026=(cj0*cj1);
IkReal x1027=((1.0)*sj4);
IkReal x1028=(cj4*cj6);
IkReal x1029=((0.09465)*sj6);
IkReal x1030=(sj0*sj1);
IkReal x1031=((1.0)*sj0);
IkReal x1032=(sj5*sj6);
IkReal x1033=(cj5*r10);
IkReal x1034=(cj6*sj4);
IkReal x1035=(r02*sj5);
IkReal x1036=(cj0*sj1);
IkReal x1037=(sj4*sj6);
IkReal x1038=((1.0)*r00);
IkReal x1039=(cj6*sj5);
IkReal x1040=(r12*sj5);
IkReal x1041=((1.0)*cj5);
IkReal x1042=(cj4*sj6);
IkReal x1043=((0.09465)*cj6);
IkReal x1044=((0.39225)*x1024);
IkReal x1045=(cj5*r11*sj6);
IkReal x1046=(cj1*x1025);
IkReal x1047=((1.0)*x1025);
IkReal x1048=((1.0)*x1024);
IkReal x1049=(cj1*x1024);
IkReal x1050=((0.39225)*x1025);
IkReal x1051=(cj5*r01*sj6);
evalcond[0]=((((-1.0)*r10*x1039))+x1024+(((-1.0)*r12*x1041))+((r11*x1032)));
evalcond[1]=((((-1.0)*r02*x1041))+(((-1.0)*x1038*x1039))+(((-1.0)*x1047))+((r01*x1032)));
evalcond[2]=((((-1.0)*r01*x1043))+((x1026*x1044))+(((-0.10915)*x1025))+(((-1.0)*px))+(((-1.0)*r00*x1029))+(((-1.0)*x1030*x1044))+(((0.425)*x1049)));
evalcond[3]=((((0.10915)*x1024))+(((-1.0)*r11*x1043))+(((-1.0)*py))+(((-1.0)*r10*x1029))+(((0.425)*x1046))+((x1026*x1050))+(((-1.0)*x1030*x1050)));
evalcond[4]=(((r00*x1037))+((cj4*x1035))+(((-1.0)*cj5*x1028*x1038))+((x1024*x1030))+((cj5*r01*x1042))+(((-1.0)*x1026*x1048))+((r01*x1034)));
evalcond[5]=(((r10*x1037))+((cj5*r11*x1042))+((r11*x1034))+((x1025*x1030))+(((-1.0)*x1026*x1047))+((cj4*x1040))+(((-1.0)*x1028*x1033)));
evalcond[6]=((((-1.0)*x1027*x1035))+((r01*x1028))+(((-1.0)*x1031*x1049))+(((-1.0)*x1027*x1051))+((r00*x1042))+(((-1.0)*x1036*x1048))+((cj5*r00*x1034)));
evalcond[7]=((((-1.0)*x1031*x1046))+(((-1.0)*x1027*x1045))+(((-1.0)*x1027*x1040))+((r11*x1028))+((r10*x1042))+((x1033*x1034))+(((-1.0)*x1036*x1047)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
    }

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1052=IKPowWithIntegerCheck(cj4,-1);
if(!x1052.valid){
continue;
}
CheckValue<IkReal> x1053=IKPowWithIntegerCheck(r22,-1);
if(!x1053.valid){
continue;
}
sj5array[0]=((-1.0)*(x1052.value)*(x1053.value)*((((cj1*sj0))+((cj0*sj1)))));
if( sj5array[0] >= -1-IKFAST_SINCOS_THRESH && sj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKasin(sj5array[0]);
    cj5array[0] = IKcos(j5array[0]);
    sj5array[1] = sj5array[0];
    j5array[1] = j5array[0] > 0 ? (IKPI-j5array[0]) : (-IKPI-j5array[0]);
    cj5array[1] = -cj5array[0];
}
else if( isnan(sj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((-1.0)*r22*(IKcos(j5)));
evalcond[1]=(((sj0*sj1))+(((-1.0)*r22*sj4*(IKsin(j5))))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j6eval[1];
IkReal x1054=((-1.0)*pz);
r20=0;
r21=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
rxp0_0=(pz*r10);
rxp0_1=(r00*x1054);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1054);
IkReal x1055=(sj0*sj1);
IkReal x1056=((16.0)*sj5);
IkReal x1057=(cj0*cj1);
IkReal x1058=(cj5*r12);
IkReal x1059=(cj4*cj5);
IkReal x1060=(r00*sj4);
IkReal x1061=((4.0)*sj5);
IkReal x1062=((8.0)*r01);
IkReal x1063=((8.0)*r11);
IkReal x1064=((4.0)*sj4);
IkReal x1065=(r10*sj4);
IkReal x1066=(r11*x1064);
IkReal x1067=(r01*x1064);
IkReal x1068=((12.0)*cj5*r02);
IkReal x1069=((12.0)*cj4*sj5);
IkReal x1070=((4.0)*cj5*r02);
IkReal x1071=((4.0)*r10*x1059);
IkReal x1072=(r12*x1069);
IkReal x1073=((4.0)*r00*x1059);
IkReal x1074=(r02*x1069);
IkReal x1075=(x1055*x1068);
IkReal x1076=(r00*x1057*x1061);
IkReal x1077=(x1057*x1068);
IkReal x1078=(r00*x1055*x1061);
IkReal x1079=(r10*x1055*x1061);
IkReal x1080=(r10*x1057*x1061);
IkReal x1081=((12.0)*x1057*x1058);
IkReal x1082=((12.0)*x1055*x1058);
IkReal x1083=(x1076+x1066);
IkReal x1084=(x1079+x1067);
IkReal x1085=(x1078+x1071);
IkReal x1086=(x1077+x1072);
IkReal x1087=(x1073+x1080);
IkReal x1088=(x1074+x1082);
j6eval[0]=((((0.5)*(IKabs(((((-1.0)*cj4*r02*x1061))+x1084+(((-4.0)*x1055*x1058))+(((-1.0)*x1087))+(((4.0)*x1057*x1058)))))))+(((0.5)*(IKabs((((x1055*x1070))+(((-1.0)*cj4*r12*x1061))+x1083+(((-1.0)*x1057*x1070))+(((-1.0)*x1085)))))))+(((0.5)*(IKabs(((((-1.0)*r01*x1055*x1056))+(((-16.0)*x1065))+((r01*x1056*x1057))+(((-16.0)*r11*x1059)))))))+(((0.5)*(IKabs((x1075+x1085+(((-1.0)*x1083))+(((-1.0)*x1086)))))))+(IKabs(((((-1.0)*x1059*x1063))+((sj5*x1057*x1062))+(((-1.0)*sj5*x1055*x1062))+(((-8.0)*x1065)))))+(((0.5)*(IKabs((x1084+x1081+(((-1.0)*x1087))+(((-1.0)*x1088)))))))+(((0.5)*(IKabs((x1087+x1081+(((-1.0)*x1084))+(((-1.0)*x1088)))))))+(((0.5)*(IKabs((x1075+x1083+(((-1.0)*x1085))+(((-1.0)*x1086)))))))+(((0.5)*(IKabs((((r11*x1055*x1056))+(((-1.0)*r11*x1056*x1057))+(((-16.0)*r01*x1059))+(((-16.0)*x1060)))))))+(IKabs(((((-1.0)*x1059*x1062))+((sj5*x1055*x1063))+(((-1.0)*sj5*x1057*x1063))+(((-8.0)*x1060))))));
if( IKabs(j6eval[0]) < 0.0000000010000000  )
{
continue; // 3 cases reached

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j6evalpoly[1];
IkReal x1089=((4.0)*sj5);
IkReal x1090=(cj4*r12);
IkReal x1091=(sj0*sj1);
IkReal x1092=(cj0*cj1);
IkReal x1093=(cj4*cj5);
IkReal x1094=(r10*sj4);
IkReal x1095=((4.0)*r11*sj4);
IkReal x1096=((16.0)*r01*sj5);
IkReal x1097=((12.0)*cj5*r02);
IkReal x1098=((8.0)*r01*sj5);
IkReal x1099=((4.0)*cj5*r02);
IkReal x1100=((4.0)*r10*x1093);
IkReal x1101=((12.0)*sj5*x1090);
IkReal x1102=(x1089*x1090);
IkReal x1103=(r00*x1089*x1092);
IkReal x1104=(r00*x1089*x1091);
IkReal x1105=(x1091*x1097);
IkReal x1106=(x1092*x1097);
IkReal x1107=(x1091*x1099);
IkReal x1108=(x1092*x1099);
IkReal x1109=(x1103+x1095);
IkReal x1110=(x1104+x1100);
IkReal x1111=(x1106+x1101);
IkReal x1112=(x1102+x1108);
IkReal x1113=((((-1.0)*x1091*x1098))+(((-8.0)*r11*x1093))+(((-8.0)*x1094))+((x1092*x1098)));
op[0]=(x1107+x1109+(((-1.0)*x1112))+(((-1.0)*x1110)));
op[1]=x1113;
op[2]=(x1105+x1109+(((-1.0)*x1110))+(((-1.0)*x1111)));
op[3]=((((-1.0)*x1091*x1096))+(((-16.0)*x1094))+((x1092*x1096))+(((-16.0)*r11*x1093)));
op[4]=(x1105+x1110+(((-1.0)*x1109))+(((-1.0)*x1111)));
op[5]=x1113;
op[6]=(x1107+x1110+(((-1.0)*x1109))+(((-1.0)*x1112)));
polyroots6(op,zeror,numroots);
IkReal j6array[6], cj6array[6], sj6array[6], tempj6array[1];
int numsolutions = 0;
for(int ij6 = 0; ij6 < numroots; ++ij6)
{
IkReal htj6 = zeror[ij6];
tempj6array[0]=((2.0)*(atan(htj6)));
for(int kj6 = 0; kj6 < 1; ++kj6)
{
j6array[numsolutions] = tempj6array[kj6];
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
sj6array[numsolutions] = IKsin(j6array[numsolutions]);
cj6array[numsolutions] = IKcos(j6array[numsolutions]);
numsolutions++;
}
}
bool j6valid[6]={true,true,true,true,true,true};
_nj6 = 6;
for(int ij6 = 0; ij6 < numsolutions; ++ij6)
    {
if( !j6valid[ij6] )
{
    continue;
}
    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
htj6 = IKtan(j6/2);

IkReal x1114=(r10*sj5);
IkReal x1115=(cj5*r12);
IkReal x1116=(sj0*sj1);
IkReal x1117=(cj0*cj1);
IkReal x1118=(r00*sj4);
IkReal x1119=((4.0)*r01*sj4);
IkReal x1120=((4.0)*x1116);
IkReal x1121=(cj4*r02*sj5);
IkReal x1122=((16.0)*r11*sj5);
IkReal x1123=(cj4*cj5*r01);
IkReal x1124=((8.0)*r11*sj5);
IkReal x1125=((4.0)*cj4*cj5*r00);
IkReal x1126=((12.0)*x1121);
IkReal x1127=((4.0)*x1121);
IkReal x1128=((4.0)*x1114*x1117);
IkReal x1129=((4.0)*x1115*x1117);
IkReal x1130=(x1114*x1120);
IkReal x1131=((12.0)*x1115*x1117);
IkReal x1132=((12.0)*x1115*x1116);
IkReal x1133=(x1115*x1120);
IkReal x1134=(x1119+x1130);
IkReal x1135=(x1126+x1132);
IkReal x1136=(x1128+x1125);
IkReal x1137=(x1127+x1133);
IkReal x1138=((((-8.0)*x1123))+(((-1.0)*x1117*x1124))+((x1116*x1124))+(((-8.0)*x1118)));
j6evalpoly[0]=(x1129+x1136+(((htj6*htj6*htj6*htj6)*((x1131+x1134+(((-1.0)*x1135))+(((-1.0)*x1136))))))+(((-1.0)*x1134))+(((-1.0)*x1137))+(((htj6*htj6)*((x1131+x1136+(((-1.0)*x1134))+(((-1.0)*x1135))))))+((htj6*x1138))+(((htj6*htj6*htj6)*(((((-1.0)*x1117*x1122))+(((-16.0)*x1118))+((x1116*x1122))+(((-16.0)*x1123))))))+((x1138*(htj6*htj6*htj6*htj6*htj6)))+(((htj6*htj6*htj6*htj6*htj6*htj6)*((x1129+x1134+(((-1.0)*x1136))+(((-1.0)*x1137)))))));
if( IKabs(j6evalpoly[0]) > 0.0000000010000000  )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < numsolutions; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1139=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1139))+(((-1.0)*cj5*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1139)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1139))+(((-1.0)*cj5*r02))))+IKsqr((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1139))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1139))+(((-1.0)*cj5*r02))), (((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1139))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x1140=IKcos(j2);
IkReal x1141=IKsin(j2);
IkReal x1142=(cj0*cj1);
IkReal x1143=((1.0)*sj4);
IkReal x1144=(cj4*cj6);
IkReal x1145=((0.09465)*sj6);
IkReal x1146=(sj0*sj1);
IkReal x1147=((1.0)*sj0);
IkReal x1148=(sj5*sj6);
IkReal x1149=(cj5*r10);
IkReal x1150=(cj6*sj4);
IkReal x1151=(r02*sj5);
IkReal x1152=(cj0*sj1);
IkReal x1153=(sj4*sj6);
IkReal x1154=((1.0)*r00);
IkReal x1155=(cj6*sj5);
IkReal x1156=(r12*sj5);
IkReal x1157=((1.0)*cj5);
IkReal x1158=(cj4*sj6);
IkReal x1159=((0.09465)*cj6);
IkReal x1160=((0.39225)*x1140);
IkReal x1161=(cj5*r11*sj6);
IkReal x1162=(cj1*x1141);
IkReal x1163=((1.0)*x1141);
IkReal x1164=((1.0)*x1140);
IkReal x1165=(cj1*x1140);
IkReal x1166=((0.39225)*x1141);
IkReal x1167=(cj5*r01*sj6);
evalcond[0]=(x1140+((r11*x1148))+(((-1.0)*r12*x1157))+(((-1.0)*r10*x1155)));
evalcond[1]=((((-1.0)*x1154*x1155))+(((-1.0)*r02*x1157))+((r01*x1148))+(((-1.0)*x1163)));
evalcond[2]=((((-1.0)*r00*x1145))+(((-1.0)*r01*x1159))+(((-1.0)*px))+((x1142*x1160))+(((-0.10915)*x1141))+(((0.425)*x1165))+(((-1.0)*x1146*x1160)));
evalcond[3]=((((0.10915)*x1140))+(((-1.0)*r10*x1145))+(((-1.0)*py))+(((-1.0)*r11*x1159))+((x1142*x1166))+(((0.425)*x1162))+(((-1.0)*x1146*x1166)));
evalcond[4]=(((r00*x1153))+((x1140*x1146))+(((-1.0)*cj5*x1144*x1154))+((cj5*r01*x1158))+(((-1.0)*x1142*x1164))+((cj4*x1151))+((r01*x1150)));
evalcond[5]=(((r11*x1150))+((cj5*r11*x1158))+(((-1.0)*x1144*x1149))+((x1141*x1146))+(((-1.0)*x1142*x1163))+((cj4*x1156))+((r10*x1153)));
evalcond[6]=(((r00*x1158))+(((-1.0)*x1147*x1165))+(((-1.0)*x1152*x1164))+(((-1.0)*x1143*x1151))+((cj5*r00*x1150))+(((-1.0)*x1143*x1167))+((r01*x1144)));
evalcond[7]=(((x1149*x1150))+(((-1.0)*x1147*x1162))+((r11*x1144))+(((-1.0)*x1152*x1163))+(((-1.0)*x1143*x1156))+(((-1.0)*x1143*x1161))+((r10*x1158)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
    }

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r21))+(IKabs(r20)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x1168=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1168);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1168);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=cj4;
j5eval[1]=r22;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x1169=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1169);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1169);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=r22;
j5eval[1]=sj4;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x1170=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1170);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1170);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=0;
cj4=1.0;
j4=0;
j5eval[0]=r22;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1171=IKPowWithIntegerCheck(r22,-1);
if(!x1171.valid){
continue;
}
sj5array[0]=((-1.0)*(x1171.value)*((((cj1*sj0))+((cj0*sj1)))));
if( sj5array[0] >= -1-IKFAST_SINCOS_THRESH && sj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKasin(sj5array[0]);
    cj5array[0] = IKcos(j5array[0]);
    sj5array[1] = sj5array[0];
    j5array[1] = j5array[0] > 0 ? (IKPI-j5array[0]) : (-IKPI-j5array[0]);
    cj5array[1] = -cj5array[0];
}
else if( isnan(sj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((-1.0)*r22*(IKcos(j5)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j6eval[1];
IkReal x1172=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1172);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1172);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=0;
cj4=1.0;
j4=0;
j6eval[0]=cj5;
if( IKabs(j6eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
CheckValue<IkReal> x1174 = IKatan2WithCheck(IkReal(((-1.0)*cj5*r00)),IkReal((cj5*r01)),IKFAST_ATAN2_MAGTHRESH);
if(!x1174.valid){
continue;
}
IkReal x1173=x1174.value;
j6array[0]=((-1.0)*x1173);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((3.14159265358979)+(((-1.0)*x1173)));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[1];
evalcond[0]=(((cj5*r11*(IKsin(j6))))+(((-1.0)*cj5*r10*(IKcos(j6)))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1175=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1175)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1175)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1175))))+IKsqr((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1175))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1175))), (((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1175))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1176=IKcos(j2);
IkReal x1177=IKsin(j2);
IkReal x1178=(cj6*r11);
IkReal x1179=(r10*sj6);
IkReal x1180=(r00*sj6);
IkReal x1181=(sj5*sj6);
IkReal x1182=((1.0)*sj0);
IkReal x1183=(cj6*r01);
IkReal x1184=(cj1*x1177);
IkReal x1185=((1.0)*cj0*sj1);
IkReal x1186=((1.0)*cj6*sj5);
IkReal x1187=(cj1*x1176);
evalcond[0]=(x1176+(((-1.0)*r10*x1186))+((r11*x1181)));
evalcond[1]=(((r01*x1181))+(((-1.0)*r00*x1186))+(((-1.0)*x1177)));
evalcond[2]=((((-1.0)*x1176*x1185))+x1183+x1180+(((-1.0)*x1182*x1187)));
evalcond[3]=(x1179+x1178+(((-1.0)*x1182*x1184))+(((-1.0)*x1177*x1185)));
evalcond[4]=((((-0.09465)*x1183))+(((-0.09465)*x1180))+(((-0.10915)*x1177))+(((0.425)*x1187))+(((-1.0)*px)));
evalcond[5]=((((-0.09465)*x1179))+(((-0.09465)*x1178))+(((0.10915)*x1176))+(((0.425)*x1184))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x1188=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1188);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1188);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j5eval[0]=r22;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1189=IKPowWithIntegerCheck(r22,-1);
if(!x1189.valid){
continue;
}
sj5array[0]=((x1189.value)*((((cj1*sj0))+((cj0*sj1)))));
if( sj5array[0] >= -1-IKFAST_SINCOS_THRESH && sj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKasin(sj5array[0]);
    cj5array[0] = IKcos(j5array[0]);
    sj5array[1] = sj5array[0];
    j5array[1] = j5array[0] > 0 ? (IKPI-j5array[0]) : (-IKPI-j5array[0]);
    cj5array[1] = -cj5array[0];
}
else if( isnan(sj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((-1.0)*r22*(IKcos(j5)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j6eval[1];
IkReal x1190=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1190);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1190);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j6eval[0]=cj5;
if( IKabs(j6eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
CheckValue<IkReal> x1192 = IKatan2WithCheck(IkReal((cj5*r00)),IkReal(((-1.0)*cj5*r01)),IKFAST_ATAN2_MAGTHRESH);
if(!x1192.valid){
continue;
}
IkReal x1191=x1192.value;
j6array[0]=((-1.0)*x1191);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((3.14159265358979)+(((-1.0)*x1191)));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[1];
evalcond[0]=((((-1.0)*cj5*r11*(IKsin(j6))))+((cj5*r10*(IKcos(j6)))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1193=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1193)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*sj6*x1193))+((cj6*r10*sj5)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1193))))+IKsqr(((((-1.0)*r11*sj6*x1193))+((cj6*r10*sj5))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1193))), ((((-1.0)*r11*sj6*x1193))+((cj6*r10*sj5))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1194=IKcos(j2);
IkReal x1195=IKsin(j2);
IkReal x1196=(r00*sj6);
IkReal x1197=(r10*sj6);
IkReal x1198=((1.0)*sj0);
IkReal x1199=(sj5*sj6);
IkReal x1200=((1.0)*cj6);
IkReal x1201=((0.09465)*cj6);
IkReal x1202=(cj1*x1195);
IkReal x1203=((1.0)*cj0*sj1);
IkReal x1204=(cj1*x1194);
evalcond[0]=(x1194+(((-1.0)*r10*sj5*x1200))+((r11*x1199)));
evalcond[1]=(((r01*x1199))+(((-1.0)*r00*sj5*x1200))+(((-1.0)*x1195)));
evalcond[2]=((((0.425)*x1204))+(((-0.09465)*x1196))+(((-0.10915)*x1195))+(((-1.0)*r01*x1201))+(((-1.0)*px)));
evalcond[3]=((((0.425)*x1202))+(((-0.09465)*x1197))+(((0.10915)*x1194))+(((-1.0)*py))+(((-1.0)*r11*x1201)));
evalcond[4]=((((-1.0)*r01*x1200))+(((-1.0)*x1194*x1203))+(((-1.0)*x1196))+(((-1.0)*x1198*x1204)));
evalcond[5]=((((-1.0)*r11*x1200))+(((-1.0)*x1197))+(((-1.0)*x1195*x1203))+(((-1.0)*x1198*x1202)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x1205=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1205);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1205);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j5eval[0]=r22;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1206=IKPowWithIntegerCheck(r22,-1);
if(!x1206.valid){
continue;
}
sj5array[0]=((x1206.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1)))));
if( sj5array[0] >= -1-IKFAST_SINCOS_THRESH && sj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKasin(sj5array[0]);
    cj5array[0] = IKcos(j5array[0]);
    sj5array[1] = sj5array[0];
    j5array[1] = j5array[0] > 0 ? (IKPI-j5array[0]) : (-IKPI-j5array[0]);
    cj5array[1] = -cj5array[0];
}
else if( isnan(sj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((-1.0)*r22*(IKcos(j5)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j6eval[1];
IkReal x1207=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1207);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1207);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j6eval[0]=cj5;
if( IKabs(j6eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
CheckValue<IkReal> x1209 = IKatan2WithCheck(IkReal((cj5*r00)),IkReal(((-1.0)*cj5*r01)),IKFAST_ATAN2_MAGTHRESH);
if(!x1209.valid){
continue;
}
IkReal x1208=x1209.value;
j6array[0]=((-1.0)*x1208);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((3.14159265358979)+(((-1.0)*x1208)));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[1];
evalcond[0]=((((-1.0)*cj5*r11*(IKsin(j6))))+((cj5*r10*(IKcos(j6)))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1210=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1210)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1210)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1210))))+IKsqr((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1210))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1210))), (((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1210))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1211=IKcos(j2);
IkReal x1212=IKsin(j2);
IkReal x1213=(cj6*r11);
IkReal x1214=((0.09465)*sj6);
IkReal x1215=(sj0*sj1);
IkReal x1216=(sj5*sj6);
IkReal x1217=(cj0*cj1);
IkReal x1218=(cj6*r01);
IkReal x1219=(cj1*x1212);
IkReal x1220=((0.39225)*x1211);
IkReal x1221=((1.0)*cj6*sj5);
evalcond[0]=(x1211+((r11*x1216))+(((-1.0)*r10*x1221)));
evalcond[1]=((((-1.0)*r00*x1221))+((r01*x1216))+(((-1.0)*x1212)));
evalcond[2]=(((r00*sj6))+x1218+(((-1.0)*x1211*x1217))+((x1211*x1215)));
evalcond[3]=(((x1212*x1215))+x1213+((r10*sj6))+(((-1.0)*x1212*x1217)));
evalcond[4]=((((-0.10915)*x1212))+((x1217*x1220))+(((-0.09465)*x1218))+(((0.425)*cj1*x1211))+(((-1.0)*r00*x1214))+(((-1.0)*px))+(((-1.0)*x1215*x1220)));
evalcond[5]=((((0.425)*x1219))+(((-0.09465)*x1213))+(((-0.39225)*x1212*x1215))+(((0.39225)*x1212*x1217))+(((-1.0)*py))+(((-1.0)*r10*x1214))+(((0.10915)*x1211)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x1222=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1222);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1222);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j5eval[0]=r22;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1223=IKPowWithIntegerCheck(r22,-1);
if(!x1223.valid){
continue;
}
sj5array[0]=((-1.0)*(x1223.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1)))));
if( sj5array[0] >= -1-IKFAST_SINCOS_THRESH && sj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKasin(sj5array[0]);
    cj5array[0] = IKcos(j5array[0]);
    sj5array[1] = sj5array[0];
    j5array[1] = j5array[0] > 0 ? (IKPI-j5array[0]) : (-IKPI-j5array[0]);
    cj5array[1] = -cj5array[0];
}
else if( isnan(sj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((-1.0)*r22*(IKcos(j5)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j6eval[1];
IkReal x1224=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1224);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1224);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j6eval[0]=cj5;
if( IKabs(j6eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
CheckValue<IkReal> x1226 = IKatan2WithCheck(IkReal(((-1.0)*cj5*r00)),IkReal((cj5*r01)),IKFAST_ATAN2_MAGTHRESH);
if(!x1226.valid){
continue;
}
IkReal x1225=x1226.value;
j6array[0]=((-1.0)*x1225);
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((3.14159265358979)+(((-1.0)*x1225)));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[1];
evalcond[0]=(((cj5*r11*(IKsin(j6))))+(((-1.0)*cj5*r10*(IKcos(j6)))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1227=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1227)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1227)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1227))))+IKsqr((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1227))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1227))), (((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1227))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1228=IKcos(j2);
IkReal x1229=IKsin(j2);
IkReal x1230=(cj0*cj1);
IkReal x1231=(r00*sj6);
IkReal x1232=(r10*sj6);
IkReal x1233=((0.425)*cj1);
IkReal x1234=(sj0*sj1);
IkReal x1235=(sj5*sj6);
IkReal x1236=((1.0)*cj6);
IkReal x1237=((0.09465)*cj6);
IkReal x1238=((0.39225)*x1228);
IkReal x1239=((1.0)*x1229);
IkReal x1240=((0.39225)*x1229);
evalcond[0]=(x1228+((r11*x1235))+(((-1.0)*r10*sj5*x1236)));
evalcond[1]=(((r01*x1235))+(((-1.0)*x1239))+(((-1.0)*r00*sj5*x1236)));
evalcond[2]=((((-1.0)*x1231))+(((-1.0)*r01*x1236))+(((-1.0)*x1228*x1230))+((x1228*x1234)));
evalcond[3]=((((-1.0)*x1232))+(((-1.0)*x1230*x1239))+(((-1.0)*r11*x1236))+((x1229*x1234)));
evalcond[4]=((((-1.0)*r01*x1237))+(((-1.0)*px))+(((-0.09465)*x1231))+((x1228*x1233))+(((-1.0)*x1234*x1238))+((x1230*x1238))+(((-0.10915)*x1229)));
evalcond[5]=((((-1.0)*r11*x1237))+(((-1.0)*py))+(((-0.09465)*x1232))+(((0.10915)*x1228))+((x1230*x1240))+((x1229*x1233))+(((-1.0)*x1234*x1240)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2, j5, j6]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1241=IKPowWithIntegerCheck(r22,-1);
if(!x1241.valid){
continue;
}
CheckValue<IkReal> x1242=IKPowWithIntegerCheck(sj4,-1);
if(!x1242.valid){
continue;
}
sj5array[0]=((x1241.value)*(x1242.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1)))));
if( sj5array[0] >= -1-IKFAST_SINCOS_THRESH && sj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKasin(sj5array[0]);
    cj5array[0] = IKcos(j5array[0]);
    sj5array[1] = sj5array[0];
    j5array[1] = j5array[0] > 0 ? (IKPI-j5array[0]) : (-IKPI-j5array[0]);
    cj5array[1] = -cj5array[0];
}
else if( isnan(sj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((-1.0)*r22*(IKcos(j5)));
evalcond[1]=(((cj4*r22*(IKsin(j5))))+((cj1*sj0))+((cj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j6eval[1];
IkReal x1243=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1243);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1243);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j6eval[0]=((((0.5)*(IKabs(((((4.0)*cj0*r01*sj1*sj4))+(((4.0)*cj4*r01*sj0*sj1))+(((-4.0)*cj1*cj4*cj5*r00*sj0))+(((-4.0)*cj0*cj1*cj5*r00*sj4))+(((4.0)*cj5*r00*sj0*sj1*sj4))+(((4.0)*cj1*r01*sj0*sj4))+(((-4.0)*cj0*cj1*cj4*r01))+(((-4.0)*cj0*cj4*cj5*r00*sj1)))))))+(((0.5)*(IKabs(((((16.0)*cj1*cj4*cj5*r01*sj0))+(((-16.0)*cj5*r01*sj0*sj1*sj4))+(((16.0)*cj1*r00*sj0*sj4))+(((-16.0)*cj0*cj1*cj4*r00))+(((16.0)*cj4*r00*sj0*sj1))+(((16.0)*cj0*cj1*cj5*r01*sj4))+(((16.0)*cj0*r00*sj1*sj4))+(((16.0)*cj0*cj4*cj5*r01*sj1)))))))+(IKabs(((((8.0)*cj1*cj4*cj5*r11*sj0))+(((8.0)*cj1*r10*sj0*sj4))+(((8.0)*cj0*cj4*cj5*r11*sj1))+(((-8.0)*cj0*cj1*cj4*r10))+(((-8.0)*cj5*r11*sj0*sj1*sj4))+(((8.0)*cj0*r10*sj1*sj4))+(((8.0)*cj0*cj1*cj5*r11*sj4))+(((8.0)*cj4*r10*sj0*sj1)))))+(IKabs(((((4.0)*cj0*cj1*cj4*r01))+(((-4.0)*cj0*r01*sj1*sj4))+(((4.0)*cj0*cj1*cj5*r00*sj4))+(((-4.0)*cj4*r01*sj0*sj1))+(((-4.0)*cj5*r00*sj0*sj1*sj4))+(((4.0)*cj1*cj4*cj5*r00*sj0))+(((4.0)*cj0*cj4*cj5*r00*sj1))+(((-4.0)*cj1*r01*sj0*sj4)))))+(IKabs(((((4.0)*cj0*cj1*cj4*r11))+(((4.0)*cj0*cj4*cj5*r10*sj1))+(((-4.0)*cj5*r10*sj0*sj1*sj4))+(((4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj0*r11*sj1*sj4))+(((-4.0)*cj4*r11*sj0*sj1)))))+(((0.5)*(IKabs(((((16.0)*cj1*r10*sj0*sj4))+(((16.0)*cj4*r10*sj0*sj1))+(((16.0)*cj0*cj4*cj5*r11*sj1))+(((16.0)*cj1*cj4*cj5*r11*sj0))+(((16.0)*cj0*r10*sj1*sj4))+(((-16.0)*cj0*cj1*cj4*r10))+(((16.0)*cj0*cj1*cj5*r11*sj4))+(((-16.0)*cj5*r11*sj0*sj1*sj4)))))))+(((0.5)*(IKabs(((((4.0)*cj0*r11*sj1*sj4))+(((4.0)*cj4*r11*sj0*sj1))+(((-4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj5*r10*sj0*sj1*sj4))+(((-4.0)*cj0*cj4*cj5*r10*sj1))+(((4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj0*cj1*cj4*r11)))))))+(IKabs(((((8.0)*cj0*cj1*cj5*r01*sj4))+(((-8.0)*cj5*r01*sj0*sj1*sj4))+(((8.0)*cj4*r00*sj0*sj1))+(((8.0)*cj1*r00*sj0*sj4))+(((8.0)*cj0*cj4*cj5*r01*sj1))+(((8.0)*cj0*r00*sj1*sj4))+(((-8.0)*cj0*cj1*cj4*r00))+(((8.0)*cj1*cj4*cj5*r01*sj0))))));
if( IKabs(j6eval[0]) < 0.0000000010000000  )
{
continue; // no branches [j2, j6]

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j6evalpoly[1];
IkReal x1244=(cj4*cj5);
IkReal x1245=(r00*sj0);
IkReal x1246=((4.0)*cj1);
IkReal x1247=(cj4*sj1);
IkReal x1248=(cj1*sj4);
IkReal x1249=(cj0*cj5);
IkReal x1250=(r00*sj4);
IkReal x1251=((4.0)*sj4);
IkReal x1252=(r01*sj0);
IkReal x1253=(cj0*sj1);
IkReal x1254=(cj5*sj1);
IkReal x1255=((16.0)*cj1);
IkReal x1256=((8.0)*cj1);
IkReal x1257=(r01*x1253);
IkReal x1258=(cj0*cj4*r00);
IkReal x1259=((((4.0)*x1247*x1252))+((x1245*x1251*x1254))+((x1251*x1257))+((sj4*x1246*x1252)));
IkReal x1260=(((x1246*x1249*x1250))+((cj0*cj4*r01*x1246))+(((4.0)*r00*x1244*x1253))+((x1244*x1245*x1246)));
IkReal x1261=((((-1.0)*x1259))+x1260);
IkReal x1262=((((8.0)*x1244*x1257))+(((-1.0)*x1256*x1258))+((x1244*x1252*x1256))+(((8.0)*x1245*x1248))+(((8.0)*x1245*x1247))+(((8.0)*x1250*x1253))+(((-8.0)*sj4*x1252*x1254))+(((8.0)*r01*x1248*x1249)));
IkReal x1263=(x1259+(((-1.0)*x1260)));
op[0]=x1261;
op[1]=x1262;
op[2]=x1261;
op[3]=((((16.0)*x1245*x1247))+(((16.0)*x1245*x1248))+(((16.0)*x1244*x1257))+(((16.0)*r01*x1248*x1249))+(((-1.0)*x1255*x1258))+((x1244*x1252*x1255))+(((16.0)*x1250*x1253))+(((-16.0)*sj4*x1252*x1254)));
op[4]=x1263;
op[5]=x1262;
op[6]=x1263;
polyroots6(op,zeror,numroots);
IkReal j6array[6], cj6array[6], sj6array[6], tempj6array[1];
int numsolutions = 0;
for(int ij6 = 0; ij6 < numroots; ++ij6)
{
IkReal htj6 = zeror[ij6];
tempj6array[0]=((2.0)*(atan(htj6)));
for(int kj6 = 0; kj6 < 1; ++kj6)
{
j6array[numsolutions] = tempj6array[kj6];
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
sj6array[numsolutions] = IKsin(j6array[numsolutions]);
cj6array[numsolutions] = IKcos(j6array[numsolutions]);
numsolutions++;
}
}
bool j6valid[6]={true,true,true,true,true,true};
_nj6 = 6;
for(int ij6 = 0; ij6 < numsolutions; ++ij6)
    {
if( !j6valid[ij6] )
{
    continue;
}
    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
htj6 = IKtan(j6/2);

j6evalpoly[0]=((((htj6*htj6*htj6*htj6*htj6)*(((((8.0)*cj1*cj4*cj5*r11*sj0))+(((8.0)*cj1*r10*sj0*sj4))+(((8.0)*cj0*cj4*cj5*r11*sj1))+(((-8.0)*cj0*cj1*cj4*r10))+(((-8.0)*cj5*r11*sj0*sj1*sj4))+(((8.0)*cj0*r10*sj1*sj4))+(((8.0)*cj0*cj1*cj5*r11*sj4))+(((8.0)*cj4*r10*sj0*sj1))))))+(((htj6*htj6*htj6*htj6)*(((((4.0)*cj0*cj1*cj4*r11))+(((4.0)*cj0*cj4*cj5*r10*sj1))+(((-4.0)*cj5*r10*sj0*sj1*sj4))+(((4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj0*r11*sj1*sj4))+(((-4.0)*cj4*r11*sj0*sj1))))))+(((4.0)*cj0*r11*sj1*sj4))+(((htj6*htj6*htj6)*(((((16.0)*cj1*r10*sj0*sj4))+(((16.0)*cj4*r10*sj0*sj1))+(((16.0)*cj0*cj4*cj5*r11*sj1))+(((16.0)*cj1*cj4*cj5*r11*sj0))+(((16.0)*cj0*r10*sj1*sj4))+(((-16.0)*cj0*cj1*cj4*r10))+(((16.0)*cj0*cj1*cj5*r11*sj4))+(((-16.0)*cj5*r11*sj0*sj1*sj4))))))+(((4.0)*cj4*r11*sj0*sj1))+(((-4.0)*cj0*cj1*cj5*r10*sj4))+((htj6*(((((8.0)*cj1*cj4*cj5*r11*sj0))+(((8.0)*cj1*r10*sj0*sj4))+(((8.0)*cj0*cj4*cj5*r11*sj1))+(((-8.0)*cj0*cj1*cj4*r10))+(((-8.0)*cj5*r11*sj0*sj1*sj4))+(((8.0)*cj0*r10*sj1*sj4))+(((8.0)*cj0*cj1*cj5*r11*sj4))+(((8.0)*cj4*r10*sj0*sj1))))))+(((4.0)*cj5*r10*sj0*sj1*sj4))+(((-4.0)*cj0*cj4*cj5*r10*sj1))+(((4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj1*cj4*cj5*r10*sj0))+(((htj6*htj6*htj6*htj6*htj6*htj6)*(((((4.0)*cj0*cj1*cj4*r11))+(((4.0)*cj0*cj4*cj5*r10*sj1))+(((-4.0)*cj5*r10*sj0*sj1*sj4))+(((4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj0*r11*sj1*sj4))+(((-4.0)*cj4*r11*sj0*sj1))))))+(((htj6*htj6)*(((((4.0)*cj0*r11*sj1*sj4))+(((4.0)*cj4*r11*sj0*sj1))+(((-4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj5*r10*sj0*sj1*sj4))+(((-4.0)*cj0*cj4*cj5*r10*sj1))+(((4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj0*cj1*cj4*r11))))))+(((-4.0)*cj0*cj1*cj4*r11)));
if( IKabs(j6evalpoly[0]) > 0.0000000010000000  )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < numsolutions; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1264=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1264)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1264)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1264))))+IKsqr((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1264))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1264))), (((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1264))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x1265=IKcos(j2);
IkReal x1266=IKsin(j2);
IkReal x1267=(r11*sj6);
IkReal x1268=(cj5*sj4);
IkReal x1269=(cj4*cj6);
IkReal x1270=(cj6*r10);
IkReal x1271=((1.0)*sj5);
IkReal x1272=((0.09465)*sj6);
IkReal x1273=(cj0*cj1);
IkReal x1274=((1.0)*sj0);
IkReal x1275=((1.0)*cj0);
IkReal x1276=(sj0*sj1);
IkReal x1277=((1.0)*cj5);
IkReal x1278=(sj4*sj6);
IkReal x1279=(cj6*r00);
IkReal x1280=(cj4*sj6);
IkReal x1281=(r01*sj6);
IkReal x1282=(cj6*r01);
IkReal x1283=(cj6*r11);
IkReal x1284=(cj1*x1266);
IkReal x1285=((0.39225)*x1265);
IkReal x1286=(cj1*x1265);
evalcond[0]=(x1265+((sj5*x1267))+(((-1.0)*x1270*x1271)));
evalcond[1]=((((-1.0)*x1271*x1279))+((sj5*x1281))+(((-1.0)*x1266)));
evalcond[2]=((((-1.0)*x1265*x1273))+((x1265*x1276))+(((-1.0)*r00*x1269*x1277))+((sj4*x1282))+((cj5*r01*x1280))+((r00*x1278)));
evalcond[3]=(((r10*x1278))+((sj4*x1283))+(((-1.0)*r10*x1269*x1277))+((x1266*x1276))+((cj4*cj5*x1267))+(((-1.0)*x1266*x1273)));
evalcond[4]=((((-1.0)*sj1*x1265*x1275))+((r00*x1280))+((x1268*x1279))+(((-1.0)*x1274*x1286))+(((-1.0)*x1268*x1281))+((r01*x1269)));
evalcond[5]=(((r11*x1269))+((r10*x1280))+((x1268*x1270))+(((-1.0)*x1267*x1268))+(((-1.0)*x1274*x1284))+(((-1.0)*sj1*x1266*x1275)));
evalcond[6]=((((0.425)*x1286))+(((-0.10915)*x1266))+(((-1.0)*x1276*x1285))+(((-1.0)*r00*x1272))+(((-0.09465)*x1282))+(((-1.0)*px))+((x1273*x1285)));
evalcond[7]=((((0.425)*x1284))+(((-0.09465)*x1283))+(((0.10915)*x1265))+(((-1.0)*py))+(((-0.39225)*x1266*x1276))+(((-1.0)*r10*x1272))+(((0.39225)*x1266*x1273)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
    }

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1287=IKPowWithIntegerCheck(cj4,-1);
if(!x1287.valid){
continue;
}
CheckValue<IkReal> x1288=IKPowWithIntegerCheck(r22,-1);
if(!x1288.valid){
continue;
}
sj5array[0]=((-1.0)*(x1287.value)*(x1288.value)*((((cj1*sj0))+((cj0*sj1)))));
if( sj5array[0] >= -1-IKFAST_SINCOS_THRESH && sj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKasin(sj5array[0]);
    cj5array[0] = IKcos(j5array[0]);
    sj5array[1] = sj5array[0];
    j5array[1] = j5array[0] > 0 ? (IKPI-j5array[0]) : (-IKPI-j5array[0]);
    cj5array[1] = -cj5array[0];
}
else if( isnan(sj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
evalcond[0]=((-1.0)*r22*(IKcos(j5)));
evalcond[1]=(((sj0*sj1))+(((-1.0)*r22*sj4*(IKsin(j5))))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j6eval[1];
IkReal x1289=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1289);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1289);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j6eval[0]=((((0.5)*(IKabs(((((4.0)*cj0*r01*sj1*sj4))+(((4.0)*cj4*r01*sj0*sj1))+(((-4.0)*cj1*cj4*cj5*r00*sj0))+(((-4.0)*cj0*cj1*cj5*r00*sj4))+(((4.0)*cj5*r00*sj0*sj1*sj4))+(((4.0)*cj1*r01*sj0*sj4))+(((-4.0)*cj0*cj1*cj4*r01))+(((-4.0)*cj0*cj4*cj5*r00*sj1)))))))+(((0.5)*(IKabs(((((16.0)*cj1*cj4*cj5*r01*sj0))+(((-16.0)*cj5*r01*sj0*sj1*sj4))+(((16.0)*cj1*r00*sj0*sj4))+(((-16.0)*cj0*cj1*cj4*r00))+(((16.0)*cj4*r00*sj0*sj1))+(((16.0)*cj0*cj1*cj5*r01*sj4))+(((16.0)*cj0*r00*sj1*sj4))+(((16.0)*cj0*cj4*cj5*r01*sj1)))))))+(IKabs(((((8.0)*cj1*cj4*cj5*r11*sj0))+(((8.0)*cj1*r10*sj0*sj4))+(((8.0)*cj0*cj4*cj5*r11*sj1))+(((-8.0)*cj0*cj1*cj4*r10))+(((-8.0)*cj5*r11*sj0*sj1*sj4))+(((8.0)*cj0*r10*sj1*sj4))+(((8.0)*cj0*cj1*cj5*r11*sj4))+(((8.0)*cj4*r10*sj0*sj1)))))+(IKabs(((((4.0)*cj0*cj1*cj4*r01))+(((-4.0)*cj0*r01*sj1*sj4))+(((4.0)*cj0*cj1*cj5*r00*sj4))+(((-4.0)*cj4*r01*sj0*sj1))+(((-4.0)*cj5*r00*sj0*sj1*sj4))+(((4.0)*cj1*cj4*cj5*r00*sj0))+(((4.0)*cj0*cj4*cj5*r00*sj1))+(((-4.0)*cj1*r01*sj0*sj4)))))+(IKabs(((((4.0)*cj0*cj1*cj4*r11))+(((4.0)*cj0*cj4*cj5*r10*sj1))+(((-4.0)*cj5*r10*sj0*sj1*sj4))+(((4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj0*r11*sj1*sj4))+(((-4.0)*cj4*r11*sj0*sj1)))))+(((0.5)*(IKabs(((((16.0)*cj1*r10*sj0*sj4))+(((16.0)*cj4*r10*sj0*sj1))+(((16.0)*cj0*cj4*cj5*r11*sj1))+(((16.0)*cj1*cj4*cj5*r11*sj0))+(((16.0)*cj0*r10*sj1*sj4))+(((-16.0)*cj0*cj1*cj4*r10))+(((16.0)*cj0*cj1*cj5*r11*sj4))+(((-16.0)*cj5*r11*sj0*sj1*sj4)))))))+(((0.5)*(IKabs(((((4.0)*cj0*r11*sj1*sj4))+(((4.0)*cj4*r11*sj0*sj1))+(((-4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj5*r10*sj0*sj1*sj4))+(((-4.0)*cj0*cj4*cj5*r10*sj1))+(((4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj0*cj1*cj4*r11)))))))+(IKabs(((((8.0)*cj0*cj1*cj5*r01*sj4))+(((-8.0)*cj5*r01*sj0*sj1*sj4))+(((8.0)*cj4*r00*sj0*sj1))+(((8.0)*cj1*r00*sj0*sj4))+(((8.0)*cj0*cj4*cj5*r01*sj1))+(((8.0)*cj0*r00*sj1*sj4))+(((-8.0)*cj0*cj1*cj4*r00))+(((8.0)*cj1*cj4*cj5*r01*sj0))))));
if( IKabs(j6eval[0]) < 0.0000000010000000  )
{
continue; // no branches [j2, j6]

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j6evalpoly[1];
IkReal x1290=(cj4*cj5);
IkReal x1291=(r00*sj0);
IkReal x1292=((4.0)*cj1);
IkReal x1293=(cj4*sj1);
IkReal x1294=(cj1*sj4);
IkReal x1295=(cj0*cj5);
IkReal x1296=(r00*sj4);
IkReal x1297=((4.0)*sj4);
IkReal x1298=(r01*sj0);
IkReal x1299=(cj0*sj1);
IkReal x1300=(cj5*sj1);
IkReal x1301=((16.0)*cj1);
IkReal x1302=((8.0)*cj1);
IkReal x1303=(r01*x1299);
IkReal x1304=(cj0*cj4*r00);
IkReal x1305=(((x1291*x1297*x1300))+(((4.0)*x1293*x1298))+((sj4*x1292*x1298))+((x1297*x1303)));
IkReal x1306=(((x1292*x1295*x1296))+((x1290*x1291*x1292))+((cj0*cj4*r01*x1292))+(((4.0)*r00*x1290*x1299)));
IkReal x1307=(x1306+(((-1.0)*x1305)));
IkReal x1308=((((8.0)*r01*x1294*x1295))+(((8.0)*x1291*x1293))+(((8.0)*x1291*x1294))+(((8.0)*x1296*x1299))+(((-8.0)*sj4*x1298*x1300))+(((8.0)*x1290*x1303))+((x1290*x1298*x1302))+(((-1.0)*x1302*x1304)));
IkReal x1309=(x1305+(((-1.0)*x1306)));
op[0]=x1307;
op[1]=x1308;
op[2]=x1307;
op[3]=((((16.0)*r01*x1294*x1295))+(((16.0)*x1296*x1299))+(((-16.0)*sj4*x1298*x1300))+(((16.0)*x1291*x1293))+(((16.0)*x1291*x1294))+(((-1.0)*x1301*x1304))+(((16.0)*x1290*x1303))+((x1290*x1298*x1301)));
op[4]=x1309;
op[5]=x1308;
op[6]=x1309;
polyroots6(op,zeror,numroots);
IkReal j6array[6], cj6array[6], sj6array[6], tempj6array[1];
int numsolutions = 0;
for(int ij6 = 0; ij6 < numroots; ++ij6)
{
IkReal htj6 = zeror[ij6];
tempj6array[0]=((2.0)*(atan(htj6)));
for(int kj6 = 0; kj6 < 1; ++kj6)
{
j6array[numsolutions] = tempj6array[kj6];
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
sj6array[numsolutions] = IKsin(j6array[numsolutions]);
cj6array[numsolutions] = IKcos(j6array[numsolutions]);
numsolutions++;
}
}
bool j6valid[6]={true,true,true,true,true,true};
_nj6 = 6;
for(int ij6 = 0; ij6 < numsolutions; ++ij6)
    {
if( !j6valid[ij6] )
{
    continue;
}
    j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
htj6 = IKtan(j6/2);

j6evalpoly[0]=((((htj6*htj6*htj6*htj6*htj6)*(((((8.0)*cj1*cj4*cj5*r11*sj0))+(((8.0)*cj1*r10*sj0*sj4))+(((8.0)*cj0*cj4*cj5*r11*sj1))+(((-8.0)*cj0*cj1*cj4*r10))+(((-8.0)*cj5*r11*sj0*sj1*sj4))+(((8.0)*cj0*r10*sj1*sj4))+(((8.0)*cj0*cj1*cj5*r11*sj4))+(((8.0)*cj4*r10*sj0*sj1))))))+(((htj6*htj6*htj6*htj6)*(((((4.0)*cj0*cj1*cj4*r11))+(((4.0)*cj0*cj4*cj5*r10*sj1))+(((-4.0)*cj5*r10*sj0*sj1*sj4))+(((4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj0*r11*sj1*sj4))+(((-4.0)*cj4*r11*sj0*sj1))))))+(((4.0)*cj0*r11*sj1*sj4))+(((htj6*htj6*htj6)*(((((16.0)*cj1*r10*sj0*sj4))+(((16.0)*cj4*r10*sj0*sj1))+(((16.0)*cj0*cj4*cj5*r11*sj1))+(((16.0)*cj1*cj4*cj5*r11*sj0))+(((16.0)*cj0*r10*sj1*sj4))+(((-16.0)*cj0*cj1*cj4*r10))+(((16.0)*cj0*cj1*cj5*r11*sj4))+(((-16.0)*cj5*r11*sj0*sj1*sj4))))))+(((4.0)*cj4*r11*sj0*sj1))+(((-4.0)*cj0*cj1*cj5*r10*sj4))+((htj6*(((((8.0)*cj1*cj4*cj5*r11*sj0))+(((8.0)*cj1*r10*sj0*sj4))+(((8.0)*cj0*cj4*cj5*r11*sj1))+(((-8.0)*cj0*cj1*cj4*r10))+(((-8.0)*cj5*r11*sj0*sj1*sj4))+(((8.0)*cj0*r10*sj1*sj4))+(((8.0)*cj0*cj1*cj5*r11*sj4))+(((8.0)*cj4*r10*sj0*sj1))))))+(((4.0)*cj5*r10*sj0*sj1*sj4))+(((-4.0)*cj0*cj4*cj5*r10*sj1))+(((4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj1*cj4*cj5*r10*sj0))+(((htj6*htj6*htj6*htj6*htj6*htj6)*(((((4.0)*cj0*cj1*cj4*r11))+(((4.0)*cj0*cj4*cj5*r10*sj1))+(((-4.0)*cj5*r10*sj0*sj1*sj4))+(((4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj0*r11*sj1*sj4))+(((-4.0)*cj4*r11*sj0*sj1))))))+(((htj6*htj6)*(((((4.0)*cj0*r11*sj1*sj4))+(((4.0)*cj4*r11*sj0*sj1))+(((-4.0)*cj0*cj1*cj5*r10*sj4))+(((4.0)*cj5*r10*sj0*sj1*sj4))+(((-4.0)*cj0*cj4*cj5*r10*sj1))+(((4.0)*cj1*r11*sj0*sj4))+(((-4.0)*cj1*cj4*cj5*r10*sj0))+(((-4.0)*cj0*cj1*cj4*r11))))))+(((-4.0)*cj0*cj1*cj4*r11)));
if( IKabs(j6evalpoly[0]) > 0.0000000010000000  )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < numsolutions; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1310=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1310)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1310)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1310))))+IKsqr((((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1310))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x1310))), (((cj6*r10*sj5))+(((-1.0)*r11*sj6*x1310))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x1311=IKcos(j2);
IkReal x1312=IKsin(j2);
IkReal x1313=(r11*sj6);
IkReal x1314=(cj5*sj4);
IkReal x1315=(cj4*cj6);
IkReal x1316=(cj6*r10);
IkReal x1317=((1.0)*sj5);
IkReal x1318=((0.09465)*sj6);
IkReal x1319=(cj0*cj1);
IkReal x1320=((1.0)*sj0);
IkReal x1321=((1.0)*cj0);
IkReal x1322=(sj0*sj1);
IkReal x1323=((1.0)*cj5);
IkReal x1324=(sj4*sj6);
IkReal x1325=(cj6*r00);
IkReal x1326=(cj4*sj6);
IkReal x1327=(r01*sj6);
IkReal x1328=(cj6*r01);
IkReal x1329=(cj6*r11);
IkReal x1330=(cj1*x1312);
IkReal x1331=((0.39225)*x1311);
IkReal x1332=(cj1*x1311);
evalcond[0]=(x1311+((sj5*x1313))+(((-1.0)*x1316*x1317)));
evalcond[1]=(((sj5*x1327))+(((-1.0)*x1312))+(((-1.0)*x1317*x1325)));
evalcond[2]=(((r00*x1324))+((cj5*r01*x1326))+((sj4*x1328))+(((-1.0)*x1311*x1319))+(((-1.0)*r00*x1315*x1323))+((x1311*x1322)));
evalcond[3]=(((x1312*x1322))+((cj4*cj5*x1313))+((r10*x1324))+((sj4*x1329))+(((-1.0)*r10*x1315*x1323))+(((-1.0)*x1312*x1319)));
evalcond[4]=((((-1.0)*sj1*x1311*x1321))+((r00*x1326))+((r01*x1315))+((x1314*x1325))+(((-1.0)*x1314*x1327))+(((-1.0)*x1320*x1332)));
evalcond[5]=((((-1.0)*sj1*x1312*x1321))+((x1314*x1316))+(((-1.0)*x1313*x1314))+((r11*x1315))+((r10*x1326))+(((-1.0)*x1320*x1330)));
evalcond[6]=((((-0.10915)*x1312))+(((-1.0)*x1322*x1331))+(((-1.0)*r00*x1318))+((x1319*x1331))+(((0.425)*x1332))+(((-1.0)*px))+(((-0.09465)*x1328)));
evalcond[7]=((((0.10915)*x1311))+(((0.425)*x1330))+(((-1.0)*py))+(((-0.39225)*x1312*x1322))+(((-1.0)*r10*x1318))+(((-0.09465)*x1329))+(((0.39225)*x1312*x1319)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
    }

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2, j5, j6]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
CheckValue<IkReal> x1335 = IKatan2WithCheck(IkReal(((-0.09465)*r21)),IkReal(((-0.09465)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x1335.valid){
continue;
}
IkReal x1333=((1.0)*(x1335.value));
if((((((0.0089586225)*(r21*r21)))+(((0.0089586225)*(r20*r20))))) < -0.00001)
continue;
CheckValue<IkReal> x1336=IKPowWithIntegerCheck(IKabs(IKsqrt(((((0.0089586225)*(r21*r21)))+(((0.0089586225)*(r20*r20)))))),-1);
if(!x1336.valid){
continue;
}
if( (((-1.0)*(x1336.value)*(((((-0.39225)*cj0*sj1))+(((-1.0)*pz))+(((-0.425)*sj1))+(((-0.39225)*cj1*sj0)))))) < -1-IKFAST_SINCOS_THRESH || (((-1.0)*(x1336.value)*(((((-0.39225)*cj0*sj1))+(((-1.0)*pz))+(((-0.425)*sj1))+(((-0.39225)*cj1*sj0)))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1334=((-1.0)*(IKasin(((-1.0)*(x1336.value)*(((((-0.39225)*cj0*sj1))+(((-1.0)*pz))+(((-0.425)*sj1))+(((-0.39225)*cj1*sj0))))))));
j6array[0]=((((-1.0)*x1334))+(((-1.0)*x1333)));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((3.14159265358979)+(((1.0)*x1334))+(((-1.0)*x1333)));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];

{
IkReal j5eval[2];
IkReal x1337=cj6*cj6;
IkReal x1338=r21*r21;
IkReal x1339=(sj4*x1338);
IkReal x1340=((((-1.0)*x1337*x1339))+x1339+((sj4*x1337*(r20*r20)))+((sj4*(r22*r22)))+(((-2.0)*cj6*r20*r21*sj4*sj6)));
j5eval[0]=x1340;
j5eval[1]=IKsign(x1340);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x1341=r21*r21;
IkReal x1342=cj6*cj6;
IkReal x1343=((1.0)*cj4);
IkReal x1344=(cj4*x1341);
IkReal x1345=((((2.0)*cj4*cj6*r20*r21*sj6))+(((-1.0)*x1341*x1343))+(((-1.0)*x1343*(r22*r22)))+((x1342*x1344))+(((-1.0)*x1342*x1343*(r20*r20))));
j5eval[0]=x1345;
j5eval[1]=IKsign(x1345);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
IkReal x1346=cj1*cj1;
IkReal x1347=cj0*cj0;
IkReal x1348=(cj0*x1346);
IkReal x1349=(cj1*sj0*sj1);
IkReal x1350=(cj0*x1349);
IkReal x1351=(x1346*x1347);
j2eval[0]=((6.19369221392727)+x1346+(((-11.4971359451148)*x1350))+(((-5.74856797255738)*x1347))+(((12.4570625281677)*x1348))+(((11.4971359451148)*x1351))+(((-12.4570625281677)*x1349)));
j2eval[1]=IKsign(((66309514.0)+(((-61544025.0)*x1347))+(((133365000.0)*x1348))+(((-123088050.0)*x1350))+(((123088050.0)*x1351))+(((10705975.0)*x1346))+(((-133365000.0)*x1349))));
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x1352=((1.0)*sj6);
IkReal x1353=((1.0)*cj6);
IkReal x1354=(((sj0*sj1))+(((-1.0)*cj0*cj1)));
j2eval[0]=x1354;
j2eval[1]=IKsign(x1354);
j2eval[2]=((IKabs(((((-1.0)*r00*x1352))+(((-1.0)*r01*x1353)))))+(IKabs(((((-1.0)*r10*x1352))+(((-1.0)*r11*x1353))))));
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  || IKabs(j2eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x1355=cj6*cj6;
IkReal x1356=r21*r21;
IkReal x1357=(cj6*r20);
IkReal x1358=(cj0*cj1);
IkReal x1359=(sj0*sj1);
IkReal x1360=(r21*sj6);
IkReal x1361=(x1356+(r22*r22)+((x1355*(r20*r20)))+(((-2.0)*x1357*x1360))+(((-1.0)*x1355*x1356)));
j5eval[0]=x1361;
j5eval[1]=IKsign(x1361);
j5eval[2]=((IKabs((((r22*x1359))+(((-1.0)*r22*x1358)))))+(IKabs((((x1357*x1358))+(((-1.0)*x1357*x1359))+((x1359*x1360))+(((-1.0)*x1358*x1360))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j2eval[1];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j2eval[0]=(((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(j2eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.20734818680435)*py))+(((-0.566898951975751)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((2.20734818680435)*px))+(((0.566898951975751)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.20734818680435)*py))+(((-0.566898951975751)*px))))+IKsqr(((((2.20734818680435)*px))+(((0.566898951975751)*py))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.20734818680435)*py))+(((-0.566898951975751)*px))), ((((2.20734818680435)*px))+(((0.566898951975751)*py))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x1362=IKcos(j2);
IkReal x1363=IKsin(j2);
evalcond[0]=((((-1.0)*px))+(((-0.10915)*x1363))+(((0.425)*x1362)));
evalcond[1]=((((0.10915)*x1362))+(((-1.0)*py))+(((0.425)*x1363)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x1364=((1.0)*cj6);
IkReal x1365=((((-1.0)*r00*sj6))+(((-1.0)*r01*x1364)));
j5eval[0]=x1365;
j5eval[1]=IKsign(x1365);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x1364))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x1366=((1.0)*cj6);
IkReal x1367=((((-1.0)*r11*x1366))+(((-1.0)*r10*sj6)));
j5eval[0]=x1367;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x1366))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x1367);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x1368=cj6*cj6;
IkReal x1369=((1.0)*r21);
IkReal x1370=(cj6*sj6);
IkReal x1371=((((-1.0)*r11*x1368*x1369))+((r10*r20*x1368))+((r11*r21))+((r12*r22))+(((-1.0)*r11*r20*x1370))+(((-1.0)*r10*x1369*x1370)));
j5eval[0]=x1371;
j5eval[1]=((IKabs((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x1369)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x1371);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1372=cj6*cj6;
IkReal x1373=((1.0)*r21);
IkReal x1374=(cj6*sj6);
CheckValue<IkReal> x1375 = IKatan2WithCheck(IkReal((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x1373)))),IkReal((cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x1375.valid){
continue;
}
CheckValue<IkReal> x1376=IKPowWithIntegerCheck(IKsign((((r10*r20*x1372))+(((-1.0)*r10*x1373*x1374))+((r11*r21))+(((-1.0)*r11*x1372*x1373))+((r12*r22))+(((-1.0)*r11*r20*x1374)))),-1);
if(!x1376.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1375.value)+(((1.5707963267949)*(x1376.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1377=IKsin(j5);
IkReal x1378=IKcos(j5);
IkReal x1379=((1.0)*sj2);
IkReal x1380=(r01*sj6);
IkReal x1381=(r21*sj6);
IkReal x1382=(r11*sj6);
IkReal x1383=((1.0)*x1377);
IkReal x1384=((1.0)*x1378);
IkReal x1385=(cj6*x1378);
evalcond[0]=((((-1.0)*cj6*r20*x1383))+((x1377*x1381))+(((-1.0)*r22*x1384)));
evalcond[1]=(((r20*x1385))+(((-1.0)*x1381*x1384))+(((-1.0)*r22*x1383)));
evalcond[2]=((((-1.0)*r12*x1384))+cj2+(((-1.0)*cj6*r10*x1383))+((x1377*x1382)));
evalcond[3]=((((-1.0)*r02*x1384))+(((-1.0)*x1379))+((x1377*x1380))+(((-1.0)*cj6*r00*x1383)));
evalcond[4]=((((-1.0)*r02*x1383))+(((-1.0)*x1380*x1384))+((r00*x1385))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*r12*x1383))+((r10*x1385))+(((-1.0)*x1382*x1384))+(((-1.0)*x1379)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1386=((1.0)*cj6);
CheckValue<IkReal> x1387 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x1386))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1387.valid){
continue;
}
CheckValue<IkReal> x1388=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x1386))+(((-1.0)*r10*sj6)))),-1);
if(!x1388.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1387.value)+(((1.5707963267949)*(x1388.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1389=IKsin(j5);
IkReal x1390=IKcos(j5);
IkReal x1391=((1.0)*sj2);
IkReal x1392=(r01*sj6);
IkReal x1393=(r21*sj6);
IkReal x1394=(r11*sj6);
IkReal x1395=((1.0)*x1389);
IkReal x1396=((1.0)*x1390);
IkReal x1397=(cj6*x1390);
evalcond[0]=((((-1.0)*cj6*r20*x1395))+(((-1.0)*r22*x1396))+((x1389*x1393)));
evalcond[1]=((((-1.0)*x1393*x1396))+((r20*x1397))+(((-1.0)*r22*x1395)));
evalcond[2]=((((-1.0)*r12*x1396))+(((-1.0)*cj6*r10*x1395))+cj2+((x1389*x1394)));
evalcond[3]=((((-1.0)*r02*x1396))+((x1389*x1392))+(((-1.0)*cj6*r00*x1395))+(((-1.0)*x1391)));
evalcond[4]=((((-1.0)*x1392*x1396))+(((-1.0)*r02*x1395))+((r00*x1397))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*r12*x1395))+((r10*x1397))+(((-1.0)*x1394*x1396))+(((-1.0)*x1391)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1398=((1.0)*cj6);
CheckValue<IkReal> x1399=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x1398)))),-1);
if(!x1399.valid){
continue;
}
CheckValue<IkReal> x1400 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1398))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1400.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1399.value)))+(x1400.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1401=IKsin(j5);
IkReal x1402=IKcos(j5);
IkReal x1403=((1.0)*sj2);
IkReal x1404=(r01*sj6);
IkReal x1405=(r21*sj6);
IkReal x1406=(r11*sj6);
IkReal x1407=((1.0)*x1401);
IkReal x1408=((1.0)*x1402);
IkReal x1409=(cj6*x1402);
evalcond[0]=((((-1.0)*cj6*r20*x1407))+(((-1.0)*r22*x1408))+((x1401*x1405)));
evalcond[1]=((((-1.0)*r22*x1407))+(((-1.0)*x1405*x1408))+((r20*x1409)));
evalcond[2]=((((-1.0)*r12*x1408))+cj2+(((-1.0)*cj6*r10*x1407))+((x1401*x1406)));
evalcond[3]=((((-1.0)*x1403))+(((-1.0)*cj6*r00*x1407))+(((-1.0)*r02*x1408))+((x1401*x1404)));
evalcond[4]=(((r00*x1409))+(((-1.0)*r02*x1407))+(((-1.0)*x1404*x1408))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*r12*x1407))+(((-1.0)*x1406*x1408))+(((-1.0)*x1403))+((r10*x1409)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.20734818680435)*py))+(((-0.566898951975751)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((2.20734818680435)*px))+(((0.566898951975751)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.20734818680435)*py))+(((-0.566898951975751)*px))))+IKsqr(((((2.20734818680435)*px))+(((0.566898951975751)*py))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.20734818680435)*py))+(((-0.566898951975751)*px))), ((((2.20734818680435)*px))+(((0.566898951975751)*py))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x1410=IKcos(j2);
IkReal x1411=IKsin(j2);
evalcond[0]=((((-0.10915)*x1411))+(((0.425)*x1410))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*x1410))+(((0.425)*x1411))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x1412=((1.0)*cj6);
IkReal x1413=((((-1.0)*r00*sj6))+(((-1.0)*r01*x1412)));
j5eval[0]=x1413;
j5eval[1]=IKsign(x1413);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x1412))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x1414=cj6*cj6;
IkReal x1415=(r21*sj6);
IkReal x1416=((1.0)*cj6);
IkReal x1417=(r01*r21);
IkReal x1418=((((-1.0)*x1414*x1417))+(((-1.0)*r01*r20*sj6*x1416))+((r00*r20*x1414))+x1417+((r02*r22))+(((-1.0)*r00*x1415*x1416)));
j5eval[0]=x1418;
j5eval[1]=IKsign(x1418);
j5eval[2]=((IKabs((((cj2*x1415))+(((-1.0)*cj2*r20*x1416)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x1419=cj6*cj6;
IkReal x1420=((1.0)*r11);
IkReal x1421=(cj6*r20);
IkReal x1422=(r21*sj6);
IkReal x1423=((((-1.0)*sj6*x1420*x1421))+(((-1.0)*r21*x1419*x1420))+((r11*r21))+((r12*r22))+((r10*r20*x1419))+(((-1.0)*cj6*r10*x1422)));
j5eval[0]=x1423;
j5eval[1]=((IKabs(((((-1.0)*sj2*x1421))+((sj2*x1422)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x1423);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1424=cj6*cj6;
IkReal x1425=((1.0)*r11);
IkReal x1426=(cj6*r20);
IkReal x1427=(r21*sj6);
CheckValue<IkReal> x1428 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*sj2*x1426))+((sj2*x1427)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1428.valid){
continue;
}
CheckValue<IkReal> x1429=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x1424*x1425))+((r11*r21))+((r12*r22))+(((-1.0)*cj6*r10*x1427))+((r10*r20*x1424))+(((-1.0)*sj6*x1425*x1426)))),-1);
if(!x1429.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1428.value)+(((1.5707963267949)*(x1429.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1430=IKsin(j5);
IkReal x1431=IKcos(j5);
IkReal x1432=(r01*sj6);
IkReal x1433=(r21*sj6);
IkReal x1434=(r11*sj6);
IkReal x1435=((1.0)*x1430);
IkReal x1436=((1.0)*x1431);
IkReal x1437=(cj6*x1431);
evalcond[0]=(((x1430*x1433))+(((-1.0)*cj6*r20*x1435))+(((-1.0)*r22*x1436)));
evalcond[1]=((((-1.0)*r22*x1435))+((r20*x1437))+(((-1.0)*x1433*x1436)));
evalcond[2]=((((-1.0)*r12*x1436))+cj2+((x1430*x1434))+(((-1.0)*cj6*r10*x1435)));
evalcond[3]=(cj2+(((-1.0)*r02*x1435))+((r00*x1437))+(((-1.0)*x1432*x1436)));
evalcond[4]=((((-1.0)*r12*x1435))+sj2+(((-1.0)*x1434*x1436))+((r10*x1437)));
evalcond[5]=((((-1.0)*sj2))+((x1430*x1432))+(((-1.0)*cj6*r00*x1435))+(((-1.0)*r02*x1436)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1438=cj6*cj6;
IkReal x1439=(r21*sj6);
IkReal x1440=((1.0)*cj6);
IkReal x1441=(r01*r21);
CheckValue<IkReal> x1442 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1440))+((cj2*x1439)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1442.valid){
continue;
}
CheckValue<IkReal> x1443=IKPowWithIntegerCheck(IKsign(((((-1.0)*x1438*x1441))+(((-1.0)*r00*x1439*x1440))+(((-1.0)*r01*r20*sj6*x1440))+x1441+((r00*r20*x1438))+((r02*r22)))),-1);
if(!x1443.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1442.value)+(((1.5707963267949)*(x1443.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1444=IKsin(j5);
IkReal x1445=IKcos(j5);
IkReal x1446=(r01*sj6);
IkReal x1447=(r21*sj6);
IkReal x1448=(r11*sj6);
IkReal x1449=((1.0)*x1444);
IkReal x1450=((1.0)*x1445);
IkReal x1451=(cj6*x1445);
evalcond[0]=(((x1444*x1447))+(((-1.0)*r22*x1450))+(((-1.0)*cj6*r20*x1449)));
evalcond[1]=((((-1.0)*r22*x1449))+(((-1.0)*x1447*x1450))+((r20*x1451)));
evalcond[2]=(((x1444*x1448))+(((-1.0)*cj6*r10*x1449))+cj2+(((-1.0)*r12*x1450)));
evalcond[3]=(cj2+(((-1.0)*x1446*x1450))+((r00*x1451))+(((-1.0)*r02*x1449)));
evalcond[4]=(((r10*x1451))+sj2+(((-1.0)*x1448*x1450))+(((-1.0)*r12*x1449)));
evalcond[5]=(((x1444*x1446))+(((-1.0)*sj2))+(((-1.0)*cj6*r00*x1449))+(((-1.0)*r02*x1450)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1452=((1.0)*cj6);
CheckValue<IkReal> x1453=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x1452)))),-1);
if(!x1453.valid){
continue;
}
CheckValue<IkReal> x1454 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1452))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1454.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1453.value)))+(x1454.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1455=IKsin(j5);
IkReal x1456=IKcos(j5);
IkReal x1457=(r01*sj6);
IkReal x1458=(r21*sj6);
IkReal x1459=(r11*sj6);
IkReal x1460=((1.0)*x1455);
IkReal x1461=((1.0)*x1456);
IkReal x1462=(cj6*x1456);
evalcond[0]=(((x1455*x1458))+(((-1.0)*cj6*r20*x1460))+(((-1.0)*r22*x1461)));
evalcond[1]=((((-1.0)*x1458*x1461))+((r20*x1462))+(((-1.0)*r22*x1460)));
evalcond[2]=(((x1455*x1459))+cj2+(((-1.0)*cj6*r10*x1460))+(((-1.0)*r12*x1461)));
evalcond[3]=((((-1.0)*r02*x1460))+cj2+((r00*x1462))+(((-1.0)*x1457*x1461)));
evalcond[4]=(sj2+(((-1.0)*x1459*x1461))+((r10*x1462))+(((-1.0)*r12*x1460)));
evalcond[5]=((((-1.0)*sj2))+((x1455*x1457))+(((-1.0)*r02*x1461))+(((-1.0)*cj6*r00*x1460)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((-9.16170407695831)*px)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((9.16170407695831)*py)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-9.16170407695831)*px))+IKsqr(((9.16170407695831)*py))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((-9.16170407695831)*px), ((9.16170407695831)*py));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
evalcond[0]=((((-0.10915)*(IKsin(j2))))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*(IKcos(j2))))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x1463=((1.0)*cj6);
IkReal x1464=((((-1.0)*r00*sj6))+(((-1.0)*r01*x1463)));
j5eval[0]=x1464;
j5eval[1]=IKsign(x1464);
j5eval[2]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x1463)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x1465=((1.0)*cj6);
IkReal x1466=((((-1.0)*r10*sj6))+(((-1.0)*r11*x1465)));
j5eval[0]=x1466;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x1465))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x1466);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x1467=cj6*cj6;
IkReal x1468=((1.0)*r21);
IkReal x1469=(cj6*sj6);
IkReal x1470=((((-1.0)*r11*x1467*x1468))+((r11*r21))+((r12*r22))+((r10*r20*x1467))+(((-1.0)*r11*r20*x1469))+(((-1.0)*r10*x1468*x1469)));
j5eval[0]=x1470;
j5eval[1]=((IKabs((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x1468)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x1470);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1471=cj6*cj6;
IkReal x1472=((1.0)*r21);
IkReal x1473=(cj6*sj6);
CheckValue<IkReal> x1474=IKPowWithIntegerCheck(IKsign((((r11*r21))+(((-1.0)*r11*r20*x1473))+(((-1.0)*r11*x1471*x1472))+((r12*r22))+(((-1.0)*r10*x1472*x1473))+((r10*r20*x1471)))),-1);
if(!x1474.valid){
continue;
}
CheckValue<IkReal> x1475 = IKatan2WithCheck(IkReal((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x1472)))),IkReal((cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x1475.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1474.value)))+(x1475.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1476=IKsin(j5);
IkReal x1477=IKcos(j5);
IkReal x1478=((1.0)*sj2);
IkReal x1479=(r01*sj6);
IkReal x1480=(r21*sj6);
IkReal x1481=(r11*sj6);
IkReal x1482=((1.0)*x1476);
IkReal x1483=((1.0)*x1477);
IkReal x1484=(cj6*x1477);
evalcond[0]=(((x1476*x1480))+(((-1.0)*cj6*r20*x1482))+(((-1.0)*r22*x1483)));
evalcond[1]=(((r20*x1484))+(((-1.0)*x1480*x1483))+(((-1.0)*r22*x1482)));
evalcond[2]=((((-1.0)*cj6*r10*x1482))+((x1476*x1481))+cj2+(((-1.0)*r12*x1483)));
evalcond[3]=((((-1.0)*r02*x1483))+((x1476*x1479))+(((-1.0)*x1478))+(((-1.0)*cj6*r00*x1482)));
evalcond[4]=((((-1.0)*x1479*x1483))+((r00*x1484))+(((-1.0)*r02*x1482))+(((-1.0)*cj2)));
evalcond[5]=(((r10*x1484))+(((-1.0)*r12*x1482))+(((-1.0)*x1481*x1483))+(((-1.0)*x1478)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1485=((1.0)*cj6);
CheckValue<IkReal> x1486 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x1485))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1486.valid){
continue;
}
CheckValue<IkReal> x1487=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x1485))+(((-1.0)*r10*sj6)))),-1);
if(!x1487.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1486.value)+(((1.5707963267949)*(x1487.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1488=IKsin(j5);
IkReal x1489=IKcos(j5);
IkReal x1490=((1.0)*sj2);
IkReal x1491=(r01*sj6);
IkReal x1492=(r21*sj6);
IkReal x1493=(r11*sj6);
IkReal x1494=((1.0)*x1488);
IkReal x1495=((1.0)*x1489);
IkReal x1496=(cj6*x1489);
evalcond[0]=((((-1.0)*cj6*r20*x1494))+(((-1.0)*r22*x1495))+((x1488*x1492)));
evalcond[1]=(((r20*x1496))+(((-1.0)*x1492*x1495))+(((-1.0)*r22*x1494)));
evalcond[2]=((((-1.0)*r12*x1495))+(((-1.0)*cj6*r10*x1494))+cj2+((x1488*x1493)));
evalcond[3]=((((-1.0)*x1490))+(((-1.0)*r02*x1495))+(((-1.0)*cj6*r00*x1494))+((x1488*x1491)));
evalcond[4]=(((r00*x1496))+(((-1.0)*r02*x1494))+(((-1.0)*x1491*x1495))+(((-1.0)*cj2)));
evalcond[5]=(((r10*x1496))+(((-1.0)*r12*x1494))+(((-1.0)*x1490))+(((-1.0)*x1493*x1495)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1497=((1.0)*cj6);
CheckValue<IkReal> x1498 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1497))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1498.valid){
continue;
}
CheckValue<IkReal> x1499=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x1497))+(((-1.0)*r00*sj6)))),-1);
if(!x1499.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1498.value)+(((1.5707963267949)*(x1499.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1500=IKsin(j5);
IkReal x1501=IKcos(j5);
IkReal x1502=((1.0)*sj2);
IkReal x1503=(r01*sj6);
IkReal x1504=(r21*sj6);
IkReal x1505=(r11*sj6);
IkReal x1506=((1.0)*x1500);
IkReal x1507=((1.0)*x1501);
IkReal x1508=(cj6*x1501);
evalcond[0]=((((-1.0)*r22*x1507))+(((-1.0)*cj6*r20*x1506))+((x1500*x1504)));
evalcond[1]=((((-1.0)*x1504*x1507))+(((-1.0)*r22*x1506))+((r20*x1508)));
evalcond[2]=(cj2+((x1500*x1505))+(((-1.0)*cj6*r10*x1506))+(((-1.0)*r12*x1507)));
evalcond[3]=((((-1.0)*x1502))+(((-1.0)*cj6*r00*x1506))+(((-1.0)*r02*x1507))+((x1500*x1503)));
evalcond[4]=(((r00*x1508))+(((-1.0)*r02*x1506))+(((-1.0)*x1503*x1507))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x1502))+((r10*x1508))+(((-1.0)*x1505*x1507))+(((-1.0)*r12*x1506)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((-9.16170407695831)*px)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((9.16170407695831)*py)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-9.16170407695831)*px))+IKsqr(((9.16170407695831)*py))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((-9.16170407695831)*px), ((9.16170407695831)*py));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
evalcond[0]=((((-0.10915)*(IKsin(j2))))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*(IKcos(j2))))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x1509=((1.0)*cj6);
IkReal x1510=((((-1.0)*r01*x1509))+(((-1.0)*r00*sj6)));
j5eval[0]=x1510;
j5eval[1]=IKsign(x1510);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*r20*x1509))+((cj2*r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x1511=cj6*cj6;
IkReal x1512=(r21*sj6);
IkReal x1513=((1.0)*cj6);
IkReal x1514=(r01*r21);
IkReal x1515=((((-1.0)*x1511*x1514))+(((-1.0)*r00*x1512*x1513))+x1514+(((-1.0)*r01*r20*sj6*x1513))+((r02*r22))+((r00*r20*x1511)));
j5eval[0]=x1515;
j5eval[1]=IKsign(x1515);
j5eval[2]=((IKabs((((cj2*x1512))+(((-1.0)*cj2*r20*x1513)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x1516=cj6*cj6;
IkReal x1517=((1.0)*r11);
IkReal x1518=(cj6*r20);
IkReal x1519=(r21*sj6);
IkReal x1520=((((-1.0)*sj6*x1517*x1518))+(((-1.0)*cj6*r10*x1519))+(((-1.0)*r21*x1516*x1517))+((r11*r21))+((r12*r22))+((r10*r20*x1516)));
j5eval[0]=x1520;
j5eval[1]=((IKabs((((sj2*x1519))+(((-1.0)*sj2*x1518)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x1520);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1521=cj6*cj6;
IkReal x1522=((1.0)*r11);
IkReal x1523=(cj6*r20);
IkReal x1524=(r21*sj6);
CheckValue<IkReal> x1525=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r10*x1524))+((r11*r21))+(((-1.0)*r21*x1521*x1522))+((r12*r22))+(((-1.0)*sj6*x1522*x1523))+((r10*r20*x1521)))),-1);
if(!x1525.valid){
continue;
}
CheckValue<IkReal> x1526 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((sj2*x1524))+(((-1.0)*sj2*x1523)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1526.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1525.value)))+(x1526.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1527=IKsin(j5);
IkReal x1528=IKcos(j5);
IkReal x1529=(r01*sj6);
IkReal x1530=(r21*sj6);
IkReal x1531=(r11*sj6);
IkReal x1532=((1.0)*x1527);
IkReal x1533=((1.0)*x1528);
IkReal x1534=(cj6*x1528);
evalcond[0]=((((-1.0)*r22*x1533))+(((-1.0)*cj6*r20*x1532))+((x1527*x1530)));
evalcond[1]=((((-1.0)*x1530*x1533))+(((-1.0)*r22*x1532))+((r20*x1534)));
evalcond[2]=((((-1.0)*cj6*r10*x1532))+(((-1.0)*r12*x1533))+cj2+((x1527*x1531)));
evalcond[3]=((((-1.0)*x1529*x1533))+cj2+((r00*x1534))+(((-1.0)*r02*x1532)));
evalcond[4]=(sj2+(((-1.0)*r12*x1532))+((r10*x1534))+(((-1.0)*x1531*x1533)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x1533))+(((-1.0)*cj6*r00*x1532))+((x1527*x1529)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1535=cj6*cj6;
IkReal x1536=(r21*sj6);
IkReal x1537=((1.0)*cj6);
IkReal x1538=(r01*r21);
CheckValue<IkReal> x1539 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*x1536))+(((-1.0)*cj2*r20*x1537)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1539.valid){
continue;
}
CheckValue<IkReal> x1540=IKPowWithIntegerCheck(IKsign(((((-1.0)*x1535*x1538))+(((-1.0)*r00*x1536*x1537))+x1538+(((-1.0)*r01*r20*sj6*x1537))+((r02*r22))+((r00*r20*x1535)))),-1);
if(!x1540.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1539.value)+(((1.5707963267949)*(x1540.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1541=IKsin(j5);
IkReal x1542=IKcos(j5);
IkReal x1543=(r01*sj6);
IkReal x1544=(r21*sj6);
IkReal x1545=(r11*sj6);
IkReal x1546=((1.0)*x1541);
IkReal x1547=((1.0)*x1542);
IkReal x1548=(cj6*x1542);
evalcond[0]=(((x1541*x1544))+(((-1.0)*r22*x1547))+(((-1.0)*cj6*r20*x1546)));
evalcond[1]=((((-1.0)*r22*x1546))+(((-1.0)*x1544*x1547))+((r20*x1548)));
evalcond[2]=(cj2+((x1541*x1545))+(((-1.0)*cj6*r10*x1546))+(((-1.0)*r12*x1547)));
evalcond[3]=((((-1.0)*x1543*x1547))+(((-1.0)*r02*x1546))+cj2+((r00*x1548)));
evalcond[4]=(sj2+(((-1.0)*x1545*x1547))+((r10*x1548))+(((-1.0)*r12*x1546)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x1547))+((x1541*x1543))+(((-1.0)*cj6*r00*x1546)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1549=((1.0)*cj6);
CheckValue<IkReal> x1550 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1549))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1550.valid){
continue;
}
CheckValue<IkReal> x1551=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x1549)))),-1);
if(!x1551.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1550.value)+(((1.5707963267949)*(x1551.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1552=IKsin(j5);
IkReal x1553=IKcos(j5);
IkReal x1554=(r01*sj6);
IkReal x1555=(r21*sj6);
IkReal x1556=(r11*sj6);
IkReal x1557=((1.0)*x1552);
IkReal x1558=((1.0)*x1553);
IkReal x1559=(cj6*x1553);
evalcond[0]=(((x1552*x1555))+(((-1.0)*r22*x1558))+(((-1.0)*cj6*r20*x1557)));
evalcond[1]=((((-1.0)*r22*x1557))+(((-1.0)*x1555*x1558))+((r20*x1559)));
evalcond[2]=(cj2+((x1552*x1556))+(((-1.0)*r12*x1558))+(((-1.0)*cj6*r10*x1557)));
evalcond[3]=(((r00*x1559))+cj2+(((-1.0)*r02*x1557))+(((-1.0)*x1554*x1558)));
evalcond[4]=(sj2+(((-1.0)*r12*x1557))+(((-1.0)*x1556*x1558))+((r10*x1559)));
evalcond[5]=((((-1.0)*sj2))+((x1552*x1554))+(((-1.0)*r02*x1558))+(((-1.0)*cj6*r00*x1557)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-2.20734818680435)*py))+(((-0.566898951975751)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.566898951975751)*py))+(((-2.20734818680435)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.20734818680435)*py))+(((-0.566898951975751)*px))))+IKsqr(((((0.566898951975751)*py))+(((-2.20734818680435)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-2.20734818680435)*py))+(((-0.566898951975751)*px))), ((((0.566898951975751)*py))+(((-2.20734818680435)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x1560=IKcos(j2);
IkReal x1561=IKsin(j2);
evalcond[0]=((((-0.425)*x1560))+(((-1.0)*px))+(((-0.10915)*x1561)));
evalcond[1]=((((-0.425)*x1561))+(((-1.0)*py))+(((0.10915)*x1560)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x1562=((1.0)*cj6);
IkReal x1563=((((-1.0)*r00*sj6))+(((-1.0)*r01*x1562)));
j5eval[0]=x1563;
j5eval[1]=IKsign(x1563);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x1562))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x1564=cj6*cj6;
IkReal x1565=(r21*sj6);
IkReal x1566=((1.0)*cj6);
IkReal x1567=(r01*r21);
IkReal x1568=((((-1.0)*r01*r20*sj6*x1566))+(((-1.0)*r00*x1565*x1566))+((r00*r20*x1564))+x1567+(((-1.0)*x1564*x1567))+((r02*r22)));
j5eval[0]=x1568;
j5eval[1]=IKsign(x1568);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x1566))+((cj2*x1565)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x1569=cj6*cj6;
IkReal x1570=((1.0)*r11);
IkReal x1571=(cj6*r20);
IkReal x1572=(r21*sj6);
IkReal x1573=(((r11*r21))+(((-1.0)*r21*x1569*x1570))+(((-1.0)*cj6*r10*x1572))+((r12*r22))+(((-1.0)*sj6*x1570*x1571))+((r10*r20*x1569)));
j5eval[0]=x1573;
j5eval[1]=((IKabs(((((-1.0)*sj2*x1571))+((sj2*x1572)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x1573);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1574=cj6*cj6;
IkReal x1575=((1.0)*r11);
IkReal x1576=(cj6*r20);
IkReal x1577=(r21*sj6);
CheckValue<IkReal> x1578 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*sj2*x1576))+((sj2*x1577)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1578.valid){
continue;
}
CheckValue<IkReal> x1579=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x1574*x1575))+((r11*r21))+(((-1.0)*cj6*r10*x1577))+((r12*r22))+((r10*r20*x1574))+(((-1.0)*sj6*x1575*x1576)))),-1);
if(!x1579.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1578.value)+(((1.5707963267949)*(x1579.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1580=IKsin(j5);
IkReal x1581=IKcos(j5);
IkReal x1582=(r01*sj6);
IkReal x1583=(r21*sj6);
IkReal x1584=(r11*sj6);
IkReal x1585=((1.0)*x1580);
IkReal x1586=((1.0)*x1581);
IkReal x1587=(cj6*x1581);
evalcond[0]=((((-1.0)*cj6*r20*x1585))+((x1580*x1583))+(((-1.0)*r22*x1586)));
evalcond[1]=(((r20*x1587))+(((-1.0)*r22*x1585))+(((-1.0)*x1583*x1586)));
evalcond[2]=((((-1.0)*cj6*r10*x1585))+cj2+((x1580*x1584))+(((-1.0)*r12*x1586)));
evalcond[3]=(cj2+(((-1.0)*r02*x1585))+(((-1.0)*x1582*x1586))+((r00*x1587)));
evalcond[4]=(sj2+(((-1.0)*x1584*x1586))+((r10*x1587))+(((-1.0)*r12*x1585)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x1586))+((x1580*x1582))+(((-1.0)*cj6*r00*x1585)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1588=cj6*cj6;
IkReal x1589=(r21*sj6);
IkReal x1590=((1.0)*cj6);
IkReal x1591=(r01*r21);
CheckValue<IkReal> x1592=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*r20*sj6*x1590))+(((-1.0)*r00*x1589*x1590))+x1591+((r00*r20*x1588))+((r02*r22))+(((-1.0)*x1588*x1591)))),-1);
if(!x1592.valid){
continue;
}
CheckValue<IkReal> x1593 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*x1589))+(((-1.0)*cj2*r20*x1590)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1593.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1592.value)))+(x1593.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1594=IKsin(j5);
IkReal x1595=IKcos(j5);
IkReal x1596=(r01*sj6);
IkReal x1597=(r21*sj6);
IkReal x1598=(r11*sj6);
IkReal x1599=((1.0)*x1594);
IkReal x1600=((1.0)*x1595);
IkReal x1601=(cj6*x1595);
evalcond[0]=((((-1.0)*cj6*r20*x1599))+((x1594*x1597))+(((-1.0)*r22*x1600)));
evalcond[1]=((((-1.0)*x1597*x1600))+(((-1.0)*r22*x1599))+((r20*x1601)));
evalcond[2]=(cj2+(((-1.0)*cj6*r10*x1599))+((x1594*x1598))+(((-1.0)*r12*x1600)));
evalcond[3]=(cj2+((r00*x1601))+(((-1.0)*r02*x1599))+(((-1.0)*x1596*x1600)));
evalcond[4]=(sj2+((r10*x1601))+(((-1.0)*x1598*x1600))+(((-1.0)*r12*x1599)));
evalcond[5]=((((-1.0)*sj2))+((x1594*x1596))+(((-1.0)*cj6*r00*x1599))+(((-1.0)*r02*x1600)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1602=((1.0)*cj6);
CheckValue<IkReal> x1603=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x1602)))),-1);
if(!x1603.valid){
continue;
}
CheckValue<IkReal> x1604 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1602))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1604.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1603.value)))+(x1604.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1605=IKsin(j5);
IkReal x1606=IKcos(j5);
IkReal x1607=(r01*sj6);
IkReal x1608=(r21*sj6);
IkReal x1609=(r11*sj6);
IkReal x1610=((1.0)*x1605);
IkReal x1611=((1.0)*x1606);
IkReal x1612=(cj6*x1606);
evalcond[0]=((((-1.0)*cj6*r20*x1610))+(((-1.0)*r22*x1611))+((x1605*x1608)));
evalcond[1]=(((r20*x1612))+(((-1.0)*r22*x1610))+(((-1.0)*x1608*x1611)));
evalcond[2]=((((-1.0)*r12*x1611))+cj2+(((-1.0)*cj6*r10*x1610))+((x1605*x1609)));
evalcond[3]=(cj2+((r00*x1612))+(((-1.0)*r02*x1610))+(((-1.0)*x1607*x1611)));
evalcond[4]=((((-1.0)*r12*x1610))+sj2+(((-1.0)*x1609*x1611))+((r10*x1612)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x1611))+(((-1.0)*cj6*r00*x1610))+((x1605*x1607)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-2.20734818680435)*py))+(((-0.566898951975751)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.566898951975751)*py))+(((-2.20734818680435)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.20734818680435)*py))+(((-0.566898951975751)*px))))+IKsqr(((((0.566898951975751)*py))+(((-2.20734818680435)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-2.20734818680435)*py))+(((-0.566898951975751)*px))), ((((0.566898951975751)*py))+(((-2.20734818680435)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x1613=IKcos(j2);
IkReal x1614=IKsin(j2);
evalcond[0]=((((-0.10915)*x1614))+(((-1.0)*px))+(((-0.425)*x1613)));
evalcond[1]=((((0.10915)*x1613))+(((-1.0)*py))+(((-0.425)*x1614)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x1615=((1.0)*cj6);
IkReal x1616=((((-1.0)*r01*x1615))+(((-1.0)*r00*sj6)));
j5eval[0]=x1616;
j5eval[1]=IKsign(x1616);
j5eval[2]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x1615)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x1617=((1.0)*cj6);
IkReal x1618=((((-1.0)*r11*x1617))+(((-1.0)*r10*sj6)));
j5eval[0]=x1618;
j5eval[1]=((IKabs((r22*sj2)))+(IKabs((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x1617))))));
j5eval[2]=IKsign(x1618);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x1619=cj6*cj6;
IkReal x1620=((1.0)*r21);
IkReal x1621=(cj6*sj6);
IkReal x1622=((((-1.0)*r11*x1619*x1620))+((r10*r20*x1619))+((r11*r21))+((r12*r22))+(((-1.0)*r11*r20*x1621))+(((-1.0)*r10*x1620*x1621)));
j5eval[0]=x1622;
j5eval[1]=((IKabs((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x1620)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x1622);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1623=cj6*cj6;
IkReal x1624=((1.0)*r21);
IkReal x1625=(cj6*sj6);
CheckValue<IkReal> x1626=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x1623*x1624))+((r11*r21))+((r10*r20*x1623))+((r12*r22))+(((-1.0)*r11*r20*x1625))+(((-1.0)*r10*x1624*x1625)))),-1);
if(!x1626.valid){
continue;
}
CheckValue<IkReal> x1627 = IKatan2WithCheck(IkReal((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x1624)))),IkReal((cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x1627.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1626.value)))+(x1627.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1628=IKsin(j5);
IkReal x1629=IKcos(j5);
IkReal x1630=((1.0)*sj2);
IkReal x1631=(r01*sj6);
IkReal x1632=(r21*sj6);
IkReal x1633=(r11*sj6);
IkReal x1634=((1.0)*x1628);
IkReal x1635=((1.0)*x1629);
IkReal x1636=(cj6*x1629);
evalcond[0]=((((-1.0)*r22*x1635))+((x1628*x1632))+(((-1.0)*cj6*r20*x1634)));
evalcond[1]=((((-1.0)*r22*x1634))+((r20*x1636))+(((-1.0)*x1632*x1635)));
evalcond[2]=(cj2+(((-1.0)*r12*x1635))+((x1628*x1633))+(((-1.0)*cj6*r10*x1634)));
evalcond[3]=(((x1628*x1631))+(((-1.0)*cj6*r00*x1634))+(((-1.0)*x1630))+(((-1.0)*r02*x1635)));
evalcond[4]=(((r00*x1636))+(((-1.0)*x1631*x1635))+(((-1.0)*r02*x1634))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*r12*x1634))+((r10*x1636))+(((-1.0)*x1633*x1635))+(((-1.0)*x1630)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1637=((1.0)*cj6);
CheckValue<IkReal> x1638=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x1637)))),-1);
if(!x1638.valid){
continue;
}
CheckValue<IkReal> x1639 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x1637))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1639.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1638.value)))+(x1639.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1640=IKsin(j5);
IkReal x1641=IKcos(j5);
IkReal x1642=((1.0)*sj2);
IkReal x1643=(r01*sj6);
IkReal x1644=(r21*sj6);
IkReal x1645=(r11*sj6);
IkReal x1646=((1.0)*x1640);
IkReal x1647=((1.0)*x1641);
IkReal x1648=(cj6*x1641);
evalcond[0]=(((x1640*x1644))+(((-1.0)*r22*x1647))+(((-1.0)*cj6*r20*x1646)));
evalcond[1]=((((-1.0)*r22*x1646))+(((-1.0)*x1644*x1647))+((r20*x1648)));
evalcond[2]=((((-1.0)*cj6*r10*x1646))+((x1640*x1645))+cj2+(((-1.0)*r12*x1647)));
evalcond[3]=(((x1640*x1643))+(((-1.0)*cj6*r00*x1646))+(((-1.0)*x1642))+(((-1.0)*r02*x1647)));
evalcond[4]=(((r00*x1648))+(((-1.0)*x1643*x1647))+(((-1.0)*r02*x1646))+(((-1.0)*cj2)));
evalcond[5]=(((r10*x1648))+(((-1.0)*r12*x1646))+(((-1.0)*x1645*x1647))+(((-1.0)*x1642)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1649=((1.0)*cj6);
CheckValue<IkReal> x1650 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1649))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1650.valid){
continue;
}
CheckValue<IkReal> x1651=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x1649))+(((-1.0)*r00*sj6)))),-1);
if(!x1651.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1650.value)+(((1.5707963267949)*(x1651.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1652=IKsin(j5);
IkReal x1653=IKcos(j5);
IkReal x1654=((1.0)*sj2);
IkReal x1655=(r01*sj6);
IkReal x1656=(r21*sj6);
IkReal x1657=(r11*sj6);
IkReal x1658=((1.0)*x1652);
IkReal x1659=((1.0)*x1653);
IkReal x1660=(cj6*x1653);
evalcond[0]=((((-1.0)*r22*x1659))+(((-1.0)*cj6*r20*x1658))+((x1652*x1656)));
evalcond[1]=((((-1.0)*x1656*x1659))+(((-1.0)*r22*x1658))+((r20*x1660)));
evalcond[2]=((((-1.0)*cj6*r10*x1658))+cj2+(((-1.0)*r12*x1659))+((x1652*x1657)));
evalcond[3]=((((-1.0)*cj6*r00*x1658))+(((-1.0)*x1654))+(((-1.0)*r02*x1659))+((x1652*x1655)));
evalcond[4]=((((-1.0)*x1655*x1659))+((r00*x1660))+(((-1.0)*r02*x1658))+(((-1.0)*cj2)));
evalcond[5]=(((r10*x1660))+(((-1.0)*r12*x1658))+(((-1.0)*x1654))+(((-1.0)*x1657*x1659)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((-9.16170407695831)*px)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((9.16170407695831)*py)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-9.16170407695831)*px))+IKsqr(((9.16170407695831)*py))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((-9.16170407695831)*px), ((9.16170407695831)*py));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
evalcond[0]=((((-0.10915)*(IKsin(j2))))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*(IKcos(j2))))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x1661=((1.0)*cj6);
IkReal x1662=((((-1.0)*r01*x1661))+(((-1.0)*r00*sj6)));
j5eval[0]=x1662;
j5eval[1]=IKsign(x1662);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x1661))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x1663=cj6*cj6;
IkReal x1664=(r21*sj6);
IkReal x1665=((1.0)*cj6);
IkReal x1666=(r01*r21);
IkReal x1667=(x1666+(((-1.0)*r00*x1664*x1665))+(((-1.0)*r01*r20*sj6*x1665))+(((-1.0)*x1663*x1666))+((r00*r20*x1663))+((r02*r22)));
j5eval[0]=x1667;
j5eval[1]=IKsign(x1667);
j5eval[2]=((IKabs((((cj2*x1664))+(((-1.0)*cj2*r20*x1665)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x1668=cj6*cj6;
IkReal x1669=((1.0)*r11);
IkReal x1670=(cj6*r20);
IkReal x1671=(r21*sj6);
IkReal x1672=((((-1.0)*cj6*r10*x1671))+(((-1.0)*r21*x1668*x1669))+((r11*r21))+(((-1.0)*sj6*x1669*x1670))+((r12*r22))+((r10*r20*x1668)));
j5eval[0]=x1672;
j5eval[1]=((IKabs((((sj2*x1671))+(((-1.0)*sj2*x1670)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x1672);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1673=cj6*cj6;
IkReal x1674=((1.0)*r11);
IkReal x1675=(cj6*r20);
IkReal x1676=(r21*sj6);
CheckValue<IkReal> x1677=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r10*x1676))+(((-1.0)*sj6*x1674*x1675))+((r11*r21))+((r12*r22))+(((-1.0)*r21*x1673*x1674))+((r10*r20*x1673)))),-1);
if(!x1677.valid){
continue;
}
CheckValue<IkReal> x1678 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((sj2*x1676))+(((-1.0)*sj2*x1675)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1678.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1677.value)))+(x1678.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1679=IKsin(j5);
IkReal x1680=IKcos(j5);
IkReal x1681=(r01*sj6);
IkReal x1682=(r21*sj6);
IkReal x1683=(r11*sj6);
IkReal x1684=((1.0)*x1679);
IkReal x1685=((1.0)*x1680);
IkReal x1686=(cj6*x1680);
evalcond[0]=((((-1.0)*r22*x1685))+(((-1.0)*cj6*r20*x1684))+((x1679*x1682)));
evalcond[1]=((((-1.0)*x1682*x1685))+(((-1.0)*r22*x1684))+((r20*x1686)));
evalcond[2]=((((-1.0)*r12*x1685))+cj2+(((-1.0)*cj6*r10*x1684))+((x1679*x1683)));
evalcond[3]=((((-1.0)*x1681*x1685))+((r00*x1686))+cj2+(((-1.0)*r02*x1684)));
evalcond[4]=((((-1.0)*r12*x1684))+sj2+((r10*x1686))+(((-1.0)*x1683*x1685)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*cj6*r00*x1684))+((x1679*x1681))+(((-1.0)*r02*x1685)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1687=cj6*cj6;
IkReal x1688=(r21*sj6);
IkReal x1689=((1.0)*cj6);
IkReal x1690=(r01*r21);
CheckValue<IkReal> x1691=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*r20*sj6*x1689))+x1690+(((-1.0)*r00*x1688*x1689))+(((-1.0)*x1687*x1690))+((r00*r20*x1687))+((r02*r22)))),-1);
if(!x1691.valid){
continue;
}
CheckValue<IkReal> x1692 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1689))+((cj2*x1688)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1692.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1691.value)))+(x1692.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1693=IKsin(j5);
IkReal x1694=IKcos(j5);
IkReal x1695=(r01*sj6);
IkReal x1696=(r21*sj6);
IkReal x1697=(r11*sj6);
IkReal x1698=((1.0)*x1693);
IkReal x1699=((1.0)*x1694);
IkReal x1700=(cj6*x1694);
evalcond[0]=((((-1.0)*cj6*r20*x1698))+(((-1.0)*r22*x1699))+((x1693*x1696)));
evalcond[1]=((((-1.0)*x1696*x1699))+((r20*x1700))+(((-1.0)*r22*x1698)));
evalcond[2]=(cj2+(((-1.0)*r12*x1699))+(((-1.0)*cj6*r10*x1698))+((x1693*x1697)));
evalcond[3]=(cj2+((r00*x1700))+(((-1.0)*r02*x1698))+(((-1.0)*x1695*x1699)));
evalcond[4]=(sj2+(((-1.0)*r12*x1698))+(((-1.0)*x1697*x1699))+((r10*x1700)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*cj6*r00*x1698))+(((-1.0)*r02*x1699))+((x1693*x1695)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1701=((1.0)*cj6);
CheckValue<IkReal> x1702 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x1701)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1702.valid){
continue;
}
CheckValue<IkReal> x1703=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x1701)))),-1);
if(!x1703.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1702.value)+(((1.5707963267949)*(x1703.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1704=IKsin(j5);
IkReal x1705=IKcos(j5);
IkReal x1706=(r01*sj6);
IkReal x1707=(r21*sj6);
IkReal x1708=(r11*sj6);
IkReal x1709=((1.0)*x1704);
IkReal x1710=((1.0)*x1705);
IkReal x1711=(cj6*x1705);
evalcond[0]=((((-1.0)*cj6*r20*x1709))+((x1704*x1707))+(((-1.0)*r22*x1710)));
evalcond[1]=((((-1.0)*x1707*x1710))+((r20*x1711))+(((-1.0)*r22*x1709)));
evalcond[2]=((((-1.0)*cj6*r10*x1709))+cj2+((x1704*x1708))+(((-1.0)*r12*x1710)));
evalcond[3]=(cj2+(((-1.0)*r02*x1709))+((r00*x1711))+(((-1.0)*x1706*x1710)));
evalcond[4]=(sj2+(((-1.0)*x1708*x1710))+((r10*x1711))+(((-1.0)*r12*x1709)));
evalcond[5]=((((-1.0)*sj2))+((x1704*x1706))+(((-1.0)*r02*x1710))+(((-1.0)*cj6*r00*x1709)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((-9.16170407695831)*px)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((9.16170407695831)*py)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-9.16170407695831)*px))+IKsqr(((9.16170407695831)*py))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((-9.16170407695831)*px), ((9.16170407695831)*py));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
evalcond[0]=((((-0.10915)*(IKsin(j2))))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*(IKcos(j2))))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x1712=((1.0)*cj6);
IkReal x1713=((((-1.0)*r00*sj6))+(((-1.0)*r01*x1712)));
j5eval[0]=x1713;
j5eval[1]=IKsign(x1713);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x1712))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x1714=((1.0)*cj6);
IkReal x1715=((((-1.0)*r10*sj6))+(((-1.0)*r11*x1714)));
j5eval[0]=x1715;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x1714))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x1715);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x1716=cj6*cj6;
IkReal x1717=((1.0)*r21);
IkReal x1718=(cj6*sj6);
IkReal x1719=((((-1.0)*r11*x1716*x1717))+((r11*r21))+((r10*r20*x1716))+((r12*r22))+(((-1.0)*r11*r20*x1718))+(((-1.0)*r10*x1717*x1718)));
j5eval[0]=x1719;
j5eval[1]=((IKabs((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x1717)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x1719);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1720=cj6*cj6;
IkReal x1721=((1.0)*r21);
IkReal x1722=(cj6*sj6);
CheckValue<IkReal> x1723=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x1720*x1721))+((r11*r21))+((r12*r22))+(((-1.0)*r10*x1721*x1722))+(((-1.0)*r11*r20*x1722))+((r10*r20*x1720)))),-1);
if(!x1723.valid){
continue;
}
CheckValue<IkReal> x1724 = IKatan2WithCheck(IkReal((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x1721)))),IkReal((cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x1724.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1723.value)))+(x1724.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1725=IKsin(j5);
IkReal x1726=IKcos(j5);
IkReal x1727=((1.0)*sj2);
IkReal x1728=(r01*sj6);
IkReal x1729=(r21*sj6);
IkReal x1730=(r11*sj6);
IkReal x1731=((1.0)*x1725);
IkReal x1732=((1.0)*x1726);
IkReal x1733=(cj6*x1726);
evalcond[0]=((((-1.0)*cj6*r20*x1731))+((x1725*x1729))+(((-1.0)*r22*x1732)));
evalcond[1]=((((-1.0)*x1729*x1732))+((r20*x1733))+(((-1.0)*r22*x1731)));
evalcond[2]=(cj2+((x1725*x1730))+(((-1.0)*r12*x1732))+(((-1.0)*cj6*r10*x1731)));
evalcond[3]=(((x1725*x1728))+(((-1.0)*cj6*r00*x1731))+(((-1.0)*x1727))+(((-1.0)*r02*x1732)));
evalcond[4]=(((r00*x1733))+(((-1.0)*x1728*x1732))+(((-1.0)*cj2))+(((-1.0)*r02*x1731)));
evalcond[5]=((((-1.0)*r12*x1731))+((r10*x1733))+(((-1.0)*x1730*x1732))+(((-1.0)*x1727)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1734=((1.0)*cj6);
CheckValue<IkReal> x1735=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x1734))+(((-1.0)*r10*sj6)))),-1);
if(!x1735.valid){
continue;
}
CheckValue<IkReal> x1736 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x1734))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1736.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1735.value)))+(x1736.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1737=IKsin(j5);
IkReal x1738=IKcos(j5);
IkReal x1739=((1.0)*sj2);
IkReal x1740=(r01*sj6);
IkReal x1741=(r21*sj6);
IkReal x1742=(r11*sj6);
IkReal x1743=((1.0)*x1737);
IkReal x1744=((1.0)*x1738);
IkReal x1745=(cj6*x1738);
evalcond[0]=((((-1.0)*r22*x1744))+(((-1.0)*cj6*r20*x1743))+((x1737*x1741)));
evalcond[1]=((((-1.0)*x1741*x1744))+(((-1.0)*r22*x1743))+((r20*x1745)));
evalcond[2]=((((-1.0)*r12*x1744))+cj2+(((-1.0)*cj6*r10*x1743))+((x1737*x1742)));
evalcond[3]=((((-1.0)*cj6*r00*x1743))+(((-1.0)*x1739))+(((-1.0)*r02*x1744))+((x1737*x1740)));
evalcond[4]=((((-1.0)*x1740*x1744))+((r00*x1745))+(((-1.0)*r02*x1743))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*r12*x1743))+(((-1.0)*x1742*x1744))+(((-1.0)*x1739))+((r10*x1745)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1746=((1.0)*cj6);
CheckValue<IkReal> x1747 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1746))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1747.valid){
continue;
}
CheckValue<IkReal> x1748=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x1746)))),-1);
if(!x1748.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1747.value)+(((1.5707963267949)*(x1748.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1749=IKsin(j5);
IkReal x1750=IKcos(j5);
IkReal x1751=((1.0)*sj2);
IkReal x1752=(r01*sj6);
IkReal x1753=(r21*sj6);
IkReal x1754=(r11*sj6);
IkReal x1755=((1.0)*x1749);
IkReal x1756=((1.0)*x1750);
IkReal x1757=(cj6*x1750);
evalcond[0]=(((x1749*x1753))+(((-1.0)*r22*x1756))+(((-1.0)*cj6*r20*x1755)));
evalcond[1]=((((-1.0)*r22*x1755))+((r20*x1757))+(((-1.0)*x1753*x1756)));
evalcond[2]=((((-1.0)*r12*x1756))+((x1749*x1754))+cj2+(((-1.0)*cj6*r10*x1755)));
evalcond[3]=(((x1749*x1752))+(((-1.0)*cj6*r00*x1755))+(((-1.0)*x1751))+(((-1.0)*r02*x1756)));
evalcond[4]=((((-1.0)*x1752*x1756))+((r00*x1757))+(((-1.0)*r02*x1755))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*r12*x1755))+(((-1.0)*x1751))+(((-1.0)*x1754*x1756))+((r10*x1757)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2, j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1758=(sj0*sj1);
IkReal x1759=(cj0*cj1);
IkReal x1760=(r00*sj6);
IkReal x1761=(cj6*r01);
IkReal x1762=((20000.0)*px);
IkReal x1763=((8500.0)*cj1);
CheckValue<IkReal> x1764=IKPowWithIntegerCheck(((((-2183.0)*x1759))+(((2183.0)*x1758))),-1);
if(!x1764.valid){
continue;
}
CheckValue<IkReal> x1765=IKPowWithIntegerCheck((x1758+(((-1.0)*x1759))),-1);
if(!x1765.valid){
continue;
}
if( IKabs(((x1764.value)*(((((-5952.0)*x1759*x1760))+(((-5952.0)*x1759*x1761))+(((5952.0)*x1758*x1761))+(((5952.0)*x1758*x1760))+((x1759*x1762))+(((-1.0)*x1761*x1763))+(((-1.0)*x1760*x1763))+(((-1.0)*x1758*x1762)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1765.value)*(((((-1.0)*x1760))+(((-1.0)*x1761)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1764.value)*(((((-5952.0)*x1759*x1760))+(((-5952.0)*x1759*x1761))+(((5952.0)*x1758*x1761))+(((5952.0)*x1758*x1760))+((x1759*x1762))+(((-1.0)*x1761*x1763))+(((-1.0)*x1760*x1763))+(((-1.0)*x1758*x1762))))))+IKsqr(((x1765.value)*(((((-1.0)*x1760))+(((-1.0)*x1761))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((x1764.value)*(((((-5952.0)*x1759*x1760))+(((-5952.0)*x1759*x1761))+(((5952.0)*x1758*x1761))+(((5952.0)*x1758*x1760))+((x1759*x1762))+(((-1.0)*x1761*x1763))+(((-1.0)*x1760*x1763))+(((-1.0)*x1758*x1762))))), ((x1765.value)*(((((-1.0)*x1760))+(((-1.0)*x1761))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x1766=IKcos(j2);
IkReal x1767=IKsin(j2);
IkReal x1768=(cj0*cj1);
IkReal x1769=(cj6*r11);
IkReal x1770=((0.09465)*sj6);
IkReal x1771=((0.425)*cj1);
IkReal x1772=(sj0*sj1);
IkReal x1773=(cj6*r01);
IkReal x1774=((0.39225)*x1766);
IkReal x1775=((0.39225)*x1767);
evalcond[0]=(((r00*sj6))+x1773+((x1766*x1772))+(((-1.0)*x1766*x1768)));
evalcond[1]=(((x1767*x1772))+((r10*sj6))+x1769+(((-1.0)*x1767*x1768)));
evalcond[2]=((((-1.0)*x1772*x1774))+(((-0.09465)*x1773))+((x1766*x1771))+(((-0.10915)*x1767))+(((-1.0)*px))+(((-1.0)*r00*x1770))+((x1768*x1774)));
evalcond[3]=(((x1767*x1771))+(((-1.0)*x1772*x1775))+(((-0.09465)*x1769))+(((-1.0)*r10*x1770))+(((-1.0)*py))+(((0.10915)*x1766))+((x1768*x1775)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x1776=((1.0)*cj6);
IkReal x1777=((((-1.0)*r00*sj6))+(((-1.0)*r01*x1776)));
j5eval[0]=x1777;
j5eval[1]=IKsign(x1777);
j5eval[2]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x1776)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x1778=((1.0)*cj6);
IkReal x1779=((((-1.0)*r10*sj6))+(((-1.0)*r11*x1778)));
j5eval[0]=x1779;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x1778))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x1779);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x1780=((1.0)*sj2);
IkReal x1781=((1.0)*sj6);
IkReal x1782=((((-1.0)*cj6*r21))+(((-1.0)*r20*x1781)));
j5eval[0]=x1782;
j5eval[1]=IKsign(x1782);
j5eval[2]=((IKabs(((((-1.0)*r12*x1780))+(((-1.0)*cj2*r02)))))+(IKabs(((((-1.0)*cj2*r01*x1781))+((cj6*r10*sj2))+(((-1.0)*r11*sj6*x1780))+((cj2*cj6*r00))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
IkReal x1783=((-1.0)*r20);
IkReal x1785 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x1785)==0){
continue;
}
IkReal x1784=pow(x1785,-0.5);
CheckValue<IkReal> x1786 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x1783),IKFAST_ATAN2_MAGTHRESH);
if(!x1786.valid){
continue;
}
IkReal gconst78=((-1.0)*(x1786.value));
IkReal gconst79=(r21*x1784);
IkReal gconst80=(x1783*x1784);
CheckValue<IkReal> x1787 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x1787.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x1787.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x1788=((-1.0)*r20);
IkReal x1789=x1784;
CheckValue<IkReal> x1791 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x1788),IKFAST_ATAN2_MAGTHRESH);
if(!x1791.valid){
continue;
}
IkReal x1790=((-1.0)*(x1791.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst79;
cj6=gconst80;
j6=x1790;
IkReal gconst78=x1790;
IkReal gconst79=(r21*x1789);
IkReal gconst80=(x1788*x1789);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x1792=((-1.0)*r20);
IkReal x1793=x1784;
CheckValue<IkReal> x1795 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x1792),IKFAST_ATAN2_MAGTHRESH);
if(!x1795.valid){
continue;
}
IkReal x1794=((-1.0)*(x1795.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst79;
cj6=gconst80;
j6=x1794;
IkReal gconst78=x1794;
IkReal gconst79=(r21*x1793);
IkReal gconst80=(x1792*x1793);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x1796=((-1.0)*r20);
IkReal x1797=x1784;
CheckValue<IkReal> x1799 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x1796),IKFAST_ATAN2_MAGTHRESH);
if(!x1799.valid){
continue;
}
IkReal x1798=((-1.0)*(x1799.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst79;
cj6=gconst80;
j6=x1798;
IkReal gconst78=x1798;
IkReal gconst79=(r21*x1797);
IkReal gconst80=(x1796*x1797);
IkReal x1800=r22*r22;
CheckValue<IkReal> x1803=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x1800))),-1);
if(!x1803.valid){
continue;
}
IkReal x1801=x1803.value;
IkReal x1802=(((x1801*(r20*r20*r20*r20)))+((x1801*(r21*r21*r21*r21)))+x1800+(((2.0)*x1801*(r20*r20)*(r21*r21))));
j5eval[0]=x1802;
j5eval[1]=IKsign(x1802);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1804=(sj0*sj1);
IkReal x1805=(gconst79*r21);
IkReal x1806=(cj0*cj1);
IkReal x1807=(gconst80*r20);
CheckValue<IkReal> x1808=IKPowWithIntegerCheck(IKsign(((x1807*x1807)+(((-2.0)*x1805*x1807))+(r22*r22)+(x1805*x1805))),-1);
if(!x1808.valid){
continue;
}
CheckValue<IkReal> x1809 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x1806))+((r22*x1804)))),IkReal(((((-1.0)*x1804*x1807))+((x1806*x1807))+((x1804*x1805))+(((-1.0)*x1805*x1806)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1809.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1808.value)))+(x1809.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1810=IKsin(j5);
IkReal x1811=IKcos(j5);
IkReal x1812=((1.0)*cj0);
IkReal x1813=((1.0)*sj2);
IkReal x1814=(cj1*sj0);
IkReal x1815=((1.0)*x1811);
IkReal x1816=(gconst79*x1810);
IkReal x1817=((1.0)*x1810);
IkReal x1818=(gconst80*x1811);
IkReal x1819=(gconst79*x1815);
IkReal x1820=(gconst80*x1817);
evalcond[0]=(((r21*x1816))+(((-1.0)*r20*x1820))+(((-1.0)*r22*x1815)));
evalcond[1]=(cj2+(((-1.0)*r12*x1815))+((r11*x1816))+(((-1.0)*r10*x1820)));
evalcond[2]=((((-1.0)*x1813))+(((-1.0)*r02*x1815))+(((-1.0)*r00*x1820))+((r01*x1816)));
evalcond[3]=(((r20*x1818))+((sj0*sj1))+(((-1.0)*cj1*x1812))+(((-1.0)*r21*x1819))+(((-1.0)*r22*x1817)));
evalcond[4]=((((-1.0)*r02*x1817))+(((-1.0)*r01*x1819))+(((-1.0)*cj2*x1814))+(((-1.0)*cj2*sj1*x1812))+((r00*x1818)));
evalcond[5]=((((-1.0)*x1813*x1814))+(((-1.0)*r11*x1819))+(((-1.0)*r12*x1817))+((r10*x1818))+(((-1.0)*sj1*sj2*x1812)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1821=((1.0)*gconst80);
CheckValue<IkReal> x1822 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x1821))+((gconst79*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1822.valid){
continue;
}
CheckValue<IkReal> x1823=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst79*r10))+(((-1.0)*r11*x1821)))),-1);
if(!x1823.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1822.value)+(((1.5707963267949)*(x1823.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1824=IKsin(j5);
IkReal x1825=IKcos(j5);
IkReal x1826=((1.0)*cj0);
IkReal x1827=((1.0)*sj2);
IkReal x1828=(cj1*sj0);
IkReal x1829=((1.0)*x1825);
IkReal x1830=(gconst79*x1824);
IkReal x1831=((1.0)*x1824);
IkReal x1832=(gconst80*x1825);
IkReal x1833=(gconst79*x1829);
IkReal x1834=(gconst80*x1831);
evalcond[0]=((((-1.0)*r20*x1834))+(((-1.0)*r22*x1829))+((r21*x1830)));
evalcond[1]=(cj2+(((-1.0)*r10*x1834))+((r11*x1830))+(((-1.0)*r12*x1829)));
evalcond[2]=((((-1.0)*x1827))+((r01*x1830))+(((-1.0)*r00*x1834))+(((-1.0)*r02*x1829)));
evalcond[3]=((((-1.0)*r21*x1833))+((sj0*sj1))+((r20*x1832))+(((-1.0)*r22*x1831))+(((-1.0)*cj1*x1826)));
evalcond[4]=((((-1.0)*r01*x1833))+(((-1.0)*cj2*x1828))+(((-1.0)*cj2*sj1*x1826))+(((-1.0)*r02*x1831))+((r00*x1832)));
evalcond[5]=(((r10*x1832))+(((-1.0)*sj1*sj2*x1826))+(((-1.0)*x1827*x1828))+(((-1.0)*r12*x1831))+(((-1.0)*r11*x1833)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1835=((1.0)*gconst80);
CheckValue<IkReal> x1836=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x1835))+(((-1.0)*gconst79*r00)))),-1);
if(!x1836.valid){
continue;
}
CheckValue<IkReal> x1837 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst79*r21))+(((-1.0)*cj2*r20*x1835)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1837.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1836.value)))+(x1837.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1838=IKsin(j5);
IkReal x1839=IKcos(j5);
IkReal x1840=((1.0)*cj0);
IkReal x1841=((1.0)*sj2);
IkReal x1842=(cj1*sj0);
IkReal x1843=((1.0)*x1839);
IkReal x1844=(gconst79*x1838);
IkReal x1845=((1.0)*x1838);
IkReal x1846=(gconst80*x1839);
IkReal x1847=(gconst79*x1843);
IkReal x1848=(gconst80*x1845);
evalcond[0]=((((-1.0)*r22*x1843))+(((-1.0)*r20*x1848))+((r21*x1844)));
evalcond[1]=(cj2+(((-1.0)*r10*x1848))+(((-1.0)*r12*x1843))+((r11*x1844)));
evalcond[2]=((((-1.0)*x1841))+(((-1.0)*r00*x1848))+(((-1.0)*r02*x1843))+((r01*x1844)));
evalcond[3]=((((-1.0)*r22*x1845))+(((-1.0)*cj1*x1840))+((sj0*sj1))+((r20*x1846))+(((-1.0)*r21*x1847)));
evalcond[4]=((((-1.0)*r02*x1845))+(((-1.0)*r01*x1847))+(((-1.0)*cj2*sj1*x1840))+((r00*x1846))+(((-1.0)*cj2*x1842)));
evalcond[5]=((((-1.0)*x1841*x1842))+((r10*x1846))+(((-1.0)*r12*x1845))+(((-1.0)*sj1*sj2*x1840))+(((-1.0)*r11*x1847)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1849=((-1.0)*r21);
IkReal x1851 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x1851)==0){
continue;
}
IkReal x1850=pow(x1851,-0.5);
CheckValue<IkReal> x1852 = IKatan2WithCheck(IkReal(x1849),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x1852.valid){
continue;
}
IkReal gconst81=((3.14159265358979)+(((-1.0)*(x1852.value))));
IkReal gconst82=(x1849*x1850);
IkReal gconst83=((1.0)*r20*x1850);
CheckValue<IkReal> x1853 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x1853.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x1853.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x1854=((-1.0)*r21);
CheckValue<IkReal> x1857 = IKatan2WithCheck(IkReal(x1854),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x1857.valid){
continue;
}
IkReal x1855=((1.0)*(x1857.value));
IkReal x1856=x1850;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst82;
cj6=gconst83;
j6=((3.14159265)+(((-1.0)*x1855)));
IkReal gconst81=((3.14159265358979)+(((-1.0)*x1855)));
IkReal gconst82=(x1854*x1856);
IkReal gconst83=((1.0)*r20*x1856);
IkReal x1858=r22*r22;
IkReal x1859=((1.0)*x1858);
CheckValue<IkReal> x1863=IKPowWithIntegerCheck(((-1.0)+x1858),-1);
if(!x1863.valid){
continue;
}
IkReal x1860=x1863.value;
if((((1.0)+(((-1.0)*x1859)))) < -0.00001)
continue;
IkReal x1861=IKsqrt(((1.0)+(((-1.0)*x1859))));
IkReal x1862=(cj2*x1860*x1861);
j5eval[0]=((IKabs((x1862+(((-1.0)*x1859*x1862)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x1864=((-1.0)*r21);
CheckValue<IkReal> x1867 = IKatan2WithCheck(IkReal(x1864),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x1867.valid){
continue;
}
IkReal x1865=((1.0)*(x1867.value));
IkReal x1866=x1850;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst82;
cj6=gconst83;
j6=((3.14159265)+(((-1.0)*x1865)));
IkReal gconst81=((3.14159265358979)+(((-1.0)*x1865)));
IkReal gconst82=(x1864*x1866);
IkReal gconst83=((1.0)*r20*x1866);
IkReal x1868=r22*r22;
IkReal x1869=((1.0)*x1868);
CheckValue<IkReal> x1873=IKPowWithIntegerCheck(((-1.0)+x1868),-1);
if(!x1873.valid){
continue;
}
IkReal x1870=x1873.value;
if((((1.0)+(((-1.0)*x1869)))) < -0.00001)
continue;
IkReal x1871=IKsqrt(((1.0)+(((-1.0)*x1869))));
IkReal x1872=(sj2*x1870*x1871);
j5eval[0]=((IKabs(((((-1.0)*x1869*x1872))+x1872)))+(IKabs((r22*sj2))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x1874=((-1.0)*r21);
CheckValue<IkReal> x1877 = IKatan2WithCheck(IkReal(x1874),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x1877.valid){
continue;
}
IkReal x1875=((1.0)*(x1877.value));
IkReal x1876=x1850;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst82;
cj6=gconst83;
j6=((3.14159265)+(((-1.0)*x1875)));
IkReal gconst81=((3.14159265358979)+(((-1.0)*x1875)));
IkReal gconst82=(x1874*x1876);
IkReal gconst83=((1.0)*r20*x1876);
IkReal x1878=r22*r22;
IkReal x1879=(r12*sj2);
IkReal x1880=(cj2*r02);
CheckValue<IkReal> x1884=IKPowWithIntegerCheck(((-1.0)+x1878),-1);
if(!x1884.valid){
continue;
}
IkReal x1881=x1884.value;
if((((1.0)+(((-1.0)*x1878)))) < -0.00001)
continue;
IkReal x1882=IKsqrt(((1.0)+(((-1.0)*x1878))));
IkReal x1883=(r22*x1881*x1882);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=((IKabs((((x1879*x1883))+((x1880*x1883)))))+(IKabs(((((-1.0)*x1880))+(((-1.0)*x1879))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1885=((1.0)*sj2);
IkReal x1886=((1.0)*cj2);
CheckValue<IkReal> x1887=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst82*r20))+(((-1.0)*gconst83*r21)))),-1);
if(!x1887.valid){
continue;
}
CheckValue<IkReal> x1888 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x1886))+(((-1.0)*r12*x1885)))),IkReal(((((-1.0)*gconst82*r11*x1885))+(((-1.0)*gconst82*r01*x1886))+((gconst83*r10*sj2))+((cj2*gconst83*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1888.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1887.value)))+(x1888.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1889=IKsin(j5);
IkReal x1890=IKcos(j5);
IkReal x1891=((1.0)*cj0);
IkReal x1892=((1.0)*sj2);
IkReal x1893=(cj1*sj0);
IkReal x1894=(gconst83*x1890);
IkReal x1895=(gconst82*x1889);
IkReal x1896=((1.0)*x1889);
IkReal x1897=((1.0)*x1890);
IkReal x1898=(gconst82*x1897);
evalcond[0]=((((-1.0)*r22*x1897))+(((-1.0)*gconst83*r20*x1896))+((r21*x1895)));
evalcond[1]=(cj2+((r11*x1895))+(((-1.0)*r12*x1897))+(((-1.0)*gconst83*r10*x1896)));
evalcond[2]=((((-1.0)*r02*x1897))+((r01*x1895))+(((-1.0)*x1892))+(((-1.0)*gconst83*r00*x1896)));
evalcond[3]=(((r20*x1894))+(((-1.0)*cj1*x1891))+((sj0*sj1))+(((-1.0)*r22*x1896))+(((-1.0)*r21*x1898)));
evalcond[4]=((((-1.0)*r02*x1896))+((r00*x1894))+(((-1.0)*r01*x1898))+(((-1.0)*cj2*x1893))+(((-1.0)*cj2*sj1*x1891)));
evalcond[5]=((((-1.0)*x1892*x1893))+((r10*x1894))+(((-1.0)*r11*x1898))+(((-1.0)*r12*x1896))+(((-1.0)*sj1*sj2*x1891)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1899=((1.0)*gconst83);
CheckValue<IkReal> x1900 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst82*r21*sj2))+(((-1.0)*r20*sj2*x1899)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1900.valid){
continue;
}
CheckValue<IkReal> x1901=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst82*r10))+(((-1.0)*r11*x1899)))),-1);
if(!x1901.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1900.value)+(((1.5707963267949)*(x1901.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1902=IKsin(j5);
IkReal x1903=IKcos(j5);
IkReal x1904=((1.0)*cj0);
IkReal x1905=((1.0)*sj2);
IkReal x1906=(cj1*sj0);
IkReal x1907=(gconst83*x1903);
IkReal x1908=(gconst82*x1902);
IkReal x1909=((1.0)*x1902);
IkReal x1910=((1.0)*x1903);
IkReal x1911=(gconst82*x1910);
evalcond[0]=((((-1.0)*r22*x1910))+((r21*x1908))+(((-1.0)*gconst83*r20*x1909)));
evalcond[1]=(cj2+(((-1.0)*r12*x1910))+((r11*x1908))+(((-1.0)*gconst83*r10*x1909)));
evalcond[2]=(((r01*x1908))+(((-1.0)*gconst83*r00*x1909))+(((-1.0)*r02*x1910))+(((-1.0)*x1905)));
evalcond[3]=((((-1.0)*cj1*x1904))+(((-1.0)*r22*x1909))+((sj0*sj1))+(((-1.0)*r21*x1911))+((r20*x1907)));
evalcond[4]=((((-1.0)*r01*x1911))+((r00*x1907))+(((-1.0)*cj2*x1906))+(((-1.0)*cj2*sj1*x1904))+(((-1.0)*r02*x1909)));
evalcond[5]=((((-1.0)*sj1*sj2*x1904))+(((-1.0)*x1905*x1906))+(((-1.0)*r11*x1911))+(((-1.0)*r12*x1909))+((r10*x1907)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1912=((1.0)*gconst83);
CheckValue<IkReal> x1913 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst82*r21))+(((-1.0)*cj2*r20*x1912)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1913.valid){
continue;
}
CheckValue<IkReal> x1914=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x1912))+(((-1.0)*gconst82*r00)))),-1);
if(!x1914.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1913.value)+(((1.5707963267949)*(x1914.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1915=IKsin(j5);
IkReal x1916=IKcos(j5);
IkReal x1917=((1.0)*cj0);
IkReal x1918=((1.0)*sj2);
IkReal x1919=(cj1*sj0);
IkReal x1920=(gconst83*x1916);
IkReal x1921=(gconst82*x1915);
IkReal x1922=((1.0)*x1915);
IkReal x1923=((1.0)*x1916);
IkReal x1924=(gconst82*x1923);
evalcond[0]=((((-1.0)*gconst83*r20*x1922))+(((-1.0)*r22*x1923))+((r21*x1921)));
evalcond[1]=((((-1.0)*r12*x1923))+cj2+(((-1.0)*gconst83*r10*x1922))+((r11*x1921)));
evalcond[2]=(((r01*x1921))+(((-1.0)*gconst83*r00*x1922))+(((-1.0)*r02*x1923))+(((-1.0)*x1918)));
evalcond[3]=((((-1.0)*r21*x1924))+(((-1.0)*cj1*x1917))+((r20*x1920))+((sj0*sj1))+(((-1.0)*r22*x1922)));
evalcond[4]=(((r00*x1920))+(((-1.0)*cj2*x1919))+(((-1.0)*r01*x1924))+(((-1.0)*cj2*sj1*x1917))+(((-1.0)*r02*x1922)));
evalcond[5]=((((-1.0)*r11*x1924))+(((-1.0)*r12*x1922))+(((-1.0)*sj1*sj2*x1917))+((r10*x1920))+(((-1.0)*x1918*x1919)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1925=((-1.0)*r10);
IkReal x1927 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x1927)==0){
continue;
}
IkReal x1926=pow(x1927,-0.5);
CheckValue<IkReal> x1928 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x1925),IKFAST_ATAN2_MAGTHRESH);
if(!x1928.valid){
continue;
}
IkReal gconst84=((-1.0)*(x1928.value));
IkReal gconst85=(r11*x1926);
IkReal gconst86=(x1925*x1926);
CheckValue<IkReal> x1929 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x1929.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x1929.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x1930=((-1.0)*r10);
IkReal x1931=x1926;
CheckValue<IkReal> x1933 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x1930),IKFAST_ATAN2_MAGTHRESH);
if(!x1933.valid){
continue;
}
IkReal x1932=((-1.0)*(x1933.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst85;
cj6=gconst86;
j6=x1932;
IkReal gconst84=x1932;
IkReal gconst85=(r11*x1931);
IkReal gconst86=(x1930*x1931);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1934=((1.0)*sj2);
IkReal x1935=((1.0)*cj2);
CheckValue<IkReal> x1936 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x1934))+(((-1.0)*r02*x1935)))),IkReal(((((-1.0)*gconst85*r11*x1934))+((cj2*gconst86*r00))+(((-1.0)*gconst85*r01*x1935))+((gconst86*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1936.valid){
continue;
}
CheckValue<IkReal> x1937=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst85*r20))+(((-1.0)*gconst86*r21)))),-1);
if(!x1937.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1936.value)+(((1.5707963267949)*(x1937.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1938=IKsin(j5);
IkReal x1939=IKcos(j5);
IkReal x1940=((1.0)*cj0);
IkReal x1941=((1.0)*sj2);
IkReal x1942=(cj1*sj0);
IkReal x1943=(gconst86*x1939);
IkReal x1944=(gconst85*x1938);
IkReal x1945=((1.0)*x1938);
IkReal x1946=((1.0)*x1939);
evalcond[0]=((((-1.0)*gconst86*r20*x1945))+(((-1.0)*r22*x1946))+((r21*x1944)));
evalcond[1]=(cj2+((r11*x1944))+(((-1.0)*gconst86*r10*x1945))+(((-1.0)*r12*x1946)));
evalcond[2]=((((-1.0)*x1941))+(((-1.0)*r02*x1946))+(((-1.0)*gconst86*r00*x1945))+((r01*x1944)));
evalcond[3]=((((-1.0)*r22*x1945))+((r20*x1943))+(((-1.0)*gconst85*r21*x1946))+((sj0*sj1))+(((-1.0)*cj1*x1940)));
evalcond[4]=((((-1.0)*r02*x1945))+(((-1.0)*cj2*x1942))+(((-1.0)*gconst85*r01*x1946))+((r00*x1943))+(((-1.0)*cj2*sj1*x1940)));
evalcond[5]=((((-1.0)*sj1*sj2*x1940))+((r10*x1943))+(((-1.0)*r12*x1945))+(((-1.0)*gconst85*r11*x1946))+(((-1.0)*x1941*x1942)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1947=((1.0)*gconst86);
CheckValue<IkReal> x1948 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x1947))+((cj2*gconst85*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1948.valid){
continue;
}
CheckValue<IkReal> x1949=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst85*r00))+(((-1.0)*r01*x1947)))),-1);
if(!x1949.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1948.value)+(((1.5707963267949)*(x1949.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1950=IKsin(j5);
IkReal x1951=IKcos(j5);
IkReal x1952=((1.0)*cj0);
IkReal x1953=((1.0)*sj2);
IkReal x1954=(cj1*sj0);
IkReal x1955=(gconst86*x1951);
IkReal x1956=(gconst85*x1950);
IkReal x1957=((1.0)*x1950);
IkReal x1958=((1.0)*x1951);
evalcond[0]=((((-1.0)*r22*x1958))+(((-1.0)*gconst86*r20*x1957))+((r21*x1956)));
evalcond[1]=(cj2+((r11*x1956))+(((-1.0)*gconst86*r10*x1957))+(((-1.0)*r12*x1958)));
evalcond[2]=((((-1.0)*x1953))+(((-1.0)*r02*x1958))+(((-1.0)*gconst86*r00*x1957))+((r01*x1956)));
evalcond[3]=((((-1.0)*r22*x1957))+((r20*x1955))+(((-1.0)*gconst85*r21*x1958))+((sj0*sj1))+(((-1.0)*cj1*x1952)));
evalcond[4]=((((-1.0)*r02*x1957))+(((-1.0)*cj2*x1954))+((r00*x1955))+(((-1.0)*gconst85*r01*x1958))+(((-1.0)*cj2*sj1*x1952)));
evalcond[5]=((((-1.0)*sj1*sj2*x1952))+((r10*x1955))+(((-1.0)*gconst85*r11*x1958))+(((-1.0)*x1953*x1954))+(((-1.0)*r12*x1957)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x1959=((-1.0)*r11);
IkReal x1961 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x1961)==0){
continue;
}
IkReal x1960=pow(x1961,-0.5);
CheckValue<IkReal> x1962 = IKatan2WithCheck(IkReal(x1959),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x1962.valid){
continue;
}
IkReal gconst87=((3.14159265358979)+(((-1.0)*(x1962.value))));
IkReal gconst88=(x1959*x1960);
IkReal gconst89=((1.0)*r10*x1960);
CheckValue<IkReal> x1963 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x1963.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x1963.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x1964=((-1.0)*r11);
CheckValue<IkReal> x1967 = IKatan2WithCheck(IkReal(x1964),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x1967.valid){
continue;
}
IkReal x1965=((1.0)*(x1967.value));
IkReal x1966=x1960;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst88;
cj6=gconst89;
j6=((3.14159265)+(((-1.0)*x1965)));
IkReal gconst87=((3.14159265358979)+(((-1.0)*x1965)));
IkReal gconst88=(x1964*x1966);
IkReal gconst89=((1.0)*r10*x1966);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x1968=((-1.0)*r11);
CheckValue<IkReal> x1971 = IKatan2WithCheck(IkReal(x1968),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x1971.valid){
continue;
}
IkReal x1969=((1.0)*(x1971.value));
IkReal x1970=x1960;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst88;
cj6=gconst89;
j6=((3.14159265)+(((-1.0)*x1969)));
IkReal gconst87=((3.14159265358979)+(((-1.0)*x1969)));
IkReal gconst88=(x1968*x1970);
IkReal gconst89=((1.0)*r10*x1970);
IkReal x1972=r12*r12;
IkReal x1973=((1.0)*sj2);
IkReal x1974=(cj2*r02);
IkReal x1975=x1960;
j5eval[0]=((IKabs((((sj2*x1972*x1975))+(((-1.0)*x1973*x1975))+((r12*x1974*x1975)))))+(IKabs(((((-1.0)*x1974))+(((-1.0)*r12*x1973))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x1976=((-1.0)*r11);
CheckValue<IkReal> x1979 = IKatan2WithCheck(IkReal(x1976),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x1979.valid){
continue;
}
IkReal x1977=((1.0)*(x1979.value));
IkReal x1978=x1960;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst88;
cj6=gconst89;
j6=((3.14159265)+(((-1.0)*x1977)));
IkReal gconst87=((3.14159265358979)+(((-1.0)*x1977)));
IkReal gconst88=(x1976*x1978);
IkReal gconst89=((1.0)*r10*x1978);
IkReal x1980=r12*r12;
IkReal x1981=(cj0*cj1*r22);
IkReal x1982=(r22*sj0*sj1);
CheckValue<IkReal> x1986=IKPowWithIntegerCheck(((-1.0)+x1980),-1);
if(!x1986.valid){
continue;
}
IkReal x1983=x1986.value;
if((((1.0)+(((-1.0)*x1980)))) < -0.00001)
continue;
IkReal x1984=IKsqrt(((1.0)+(((-1.0)*x1980))));
IkReal x1985=(r12*x1983*x1984);
j5eval[0]=((IKabs((x1982+(((-1.0)*x1981)))))+(IKabs((((x1981*x1985))+(((-1.0)*x1982*x1985))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1987=(gconst88*r21);
IkReal x1988=(gconst89*r20);
IkReal x1989=(sj0*sj1);
IkReal x1990=((1.0)*cj0*cj1);
CheckValue<IkReal> x1991=IKPowWithIntegerCheck(IKsign(((x1987*x1987)+(r22*r22)+(x1988*x1988)+(((-2.0)*x1987*x1988)))),-1);
if(!x1991.valid){
continue;
}
CheckValue<IkReal> x1992 = IKatan2WithCheck(IkReal((((r22*x1989))+(((-1.0)*r22*x1990)))),IkReal((((x1987*x1989))+(((-1.0)*x1988*x1989))+((cj0*cj1*x1988))+(((-1.0)*x1987*x1990)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1992.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1991.value)))+(x1992.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1993=IKsin(j5);
IkReal x1994=IKcos(j5);
IkReal x1995=(gconst89*r10);
IkReal x1996=((1.0)*cj0);
IkReal x1997=(gconst89*r20);
IkReal x1998=((1.0)*sj2);
IkReal x1999=(cj1*sj0);
IkReal x2000=(gconst89*r00);
IkReal x2001=(gconst88*x1993);
IkReal x2002=((1.0)*x1993);
IkReal x2003=((1.0)*x1994);
IkReal x2004=(gconst88*x2003);
evalcond[0]=(((r21*x2001))+(((-1.0)*r22*x2003))+(((-1.0)*x1997*x2002)));
evalcond[1]=(((r11*x2001))+cj2+(((-1.0)*r12*x2003))+(((-1.0)*x1995*x2002)));
evalcond[2]=(((r01*x2001))+(((-1.0)*x2000*x2002))+(((-1.0)*r02*x2003))+(((-1.0)*x1998)));
evalcond[3]=((((-1.0)*r22*x2002))+((sj0*sj1))+((x1994*x1997))+(((-1.0)*cj1*x1996))+(((-1.0)*r21*x2004)));
evalcond[4]=((((-1.0)*r01*x2004))+((x1994*x2000))+(((-1.0)*r02*x2002))+(((-1.0)*cj2*x1999))+(((-1.0)*cj2*sj1*x1996)));
evalcond[5]=((((-1.0)*x1998*x1999))+(((-1.0)*r11*x2004))+(((-1.0)*r12*x2002))+((x1994*x1995))+(((-1.0)*sj1*sj2*x1996)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2005=((1.0)*sj2);
IkReal x2006=((1.0)*cj2);
CheckValue<IkReal> x2007 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x2005))+(((-1.0)*r02*x2006)))),IkReal((((cj2*gconst89*r00))+(((-1.0)*gconst88*r11*x2005))+(((-1.0)*gconst88*r01*x2006))+((gconst89*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2007.valid){
continue;
}
CheckValue<IkReal> x2008=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst88*r20))+(((-1.0)*gconst89*r21)))),-1);
if(!x2008.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2007.value)+(((1.5707963267949)*(x2008.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2009=IKsin(j5);
IkReal x2010=IKcos(j5);
IkReal x2011=(gconst89*r10);
IkReal x2012=((1.0)*cj0);
IkReal x2013=(gconst89*r20);
IkReal x2014=((1.0)*sj2);
IkReal x2015=(cj1*sj0);
IkReal x2016=(gconst89*r00);
IkReal x2017=(gconst88*x2009);
IkReal x2018=((1.0)*x2009);
IkReal x2019=((1.0)*x2010);
IkReal x2020=(gconst88*x2019);
evalcond[0]=((((-1.0)*x2013*x2018))+((r21*x2017))+(((-1.0)*r22*x2019)));
evalcond[1]=(cj2+(((-1.0)*x2011*x2018))+(((-1.0)*r12*x2019))+((r11*x2017)));
evalcond[2]=((((-1.0)*x2014))+((r01*x2017))+(((-1.0)*x2016*x2018))+(((-1.0)*r02*x2019)));
evalcond[3]=(((sj0*sj1))+((x2010*x2013))+(((-1.0)*cj1*x2012))+(((-1.0)*r21*x2020))+(((-1.0)*r22*x2018)));
evalcond[4]=((((-1.0)*r01*x2020))+(((-1.0)*cj2*x2015))+((x2010*x2016))+(((-1.0)*r02*x2018))+(((-1.0)*cj2*sj1*x2012)));
evalcond[5]=((((-1.0)*sj1*sj2*x2012))+(((-1.0)*r11*x2020))+((x2010*x2011))+(((-1.0)*x2014*x2015))+(((-1.0)*r12*x2018)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2021=((1.0)*gconst89);
CheckValue<IkReal> x2022 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x2021))+((cj2*gconst88*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2022.valid){
continue;
}
CheckValue<IkReal> x2023=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x2021))+(((-1.0)*gconst88*r00)))),-1);
if(!x2023.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2022.value)+(((1.5707963267949)*(x2023.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2024=IKsin(j5);
IkReal x2025=IKcos(j5);
IkReal x2026=(gconst89*r10);
IkReal x2027=((1.0)*cj0);
IkReal x2028=(gconst89*r20);
IkReal x2029=((1.0)*sj2);
IkReal x2030=(cj1*sj0);
IkReal x2031=(gconst89*r00);
IkReal x2032=(gconst88*x2024);
IkReal x2033=((1.0)*x2024);
IkReal x2034=((1.0)*x2025);
IkReal x2035=(gconst88*x2034);
evalcond[0]=(((r21*x2032))+(((-1.0)*r22*x2034))+(((-1.0)*x2028*x2033)));
evalcond[1]=(cj2+(((-1.0)*r12*x2034))+(((-1.0)*x2026*x2033))+((r11*x2032)));
evalcond[2]=(((r01*x2032))+(((-1.0)*r02*x2034))+(((-1.0)*x2029))+(((-1.0)*x2031*x2033)));
evalcond[3]=((((-1.0)*r22*x2033))+((x2025*x2028))+(((-1.0)*cj1*x2027))+((sj0*sj1))+(((-1.0)*r21*x2035)));
evalcond[4]=(((x2025*x2031))+(((-1.0)*cj2*sj1*x2027))+(((-1.0)*r01*x2035))+(((-1.0)*r02*x2033))+(((-1.0)*cj2*x2030)));
evalcond[5]=((((-1.0)*r12*x2033))+(((-1.0)*r11*x2035))+((x2025*x2026))+(((-1.0)*sj1*sj2*x2027))+(((-1.0)*x2029*x2030)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x2036=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x2036;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x2036);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x2037=((1.0)*cj6);
IkReal x2038=((((-1.0)*r00*sj6))+(((-1.0)*r01*x2037)));
j5eval[0]=x2038;
j5eval[1]=IKsign(x2038);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x2037))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x2039=cj6*cj6;
IkReal x2040=r11*r11;
IkReal x2041=(cj6*r10);
IkReal x2042=(r11*sj6);
IkReal x2043=((r12*r12)+x2040+(((-1.0)*x2039*x2040))+(((-2.0)*x2041*x2042))+((x2039*(r10*r10))));
j5eval[0]=x2043;
j5eval[1]=IKsign(x2043);
j5eval[2]=((IKabs(r12))+(IKabs((x2041+(((-1.0)*x2042))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2044=cj6*cj6;
IkReal x2045=r11*r11;
IkReal x2046=(cj6*r10);
IkReal x2047=(r11*sj6);
CheckValue<IkReal> x2048 = IKatan2WithCheck(IkReal((x2046+(((-1.0)*x2047)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x2048.valid){
continue;
}
CheckValue<IkReal> x2049=IKPowWithIntegerCheck(IKsign(((r12*r12)+x2045+(((-2.0)*x2046*x2047))+((x2044*(r10*r10)))+(((-1.0)*x2044*x2045)))),-1);
if(!x2049.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2048.value)+(((1.5707963267949)*(x2049.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2050=IKsin(j5);
IkReal x2051=IKcos(j5);
IkReal x2052=((1.0)*cj0);
IkReal x2053=(sj6*x2050);
IkReal x2054=((1.0)*x2050);
IkReal x2055=((1.0)*x2051);
IkReal x2056=(cj6*x2051);
IkReal x2057=(sj6*x2055);
IkReal x2058=(cj6*x2054);
evalcond[0]=((((-1.0)*r22*x2055))+(((-1.0)*r20*x2058))+((r21*x2053)));
evalcond[1]=(((r01*x2053))+(((-1.0)*r00*x2058))+(((-1.0)*r02*x2055)));
evalcond[2]=(((r10*x2056))+(((-1.0)*r12*x2054))+(((-1.0)*r11*x2057)));
evalcond[3]=((1.0)+((r11*x2053))+(((-1.0)*r10*x2058))+(((-1.0)*r12*x2055)));
evalcond[4]=((((-1.0)*cj1*x2052))+(((-1.0)*r22*x2054))+((sj0*sj1))+(((-1.0)*r21*x2057))+((r20*x2056)));
evalcond[5]=((((-1.0)*r01*x2057))+(((-1.0)*cj1*sj0))+(((-1.0)*r02*x2054))+(((-1.0)*sj1*x2052))+((r00*x2056)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2059=((1.0)*cj6);
CheckValue<IkReal> x2060 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x2059)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2060.valid){
continue;
}
CheckValue<IkReal> x2061=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x2059))+(((-1.0)*r00*sj6)))),-1);
if(!x2061.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2060.value)+(((1.5707963267949)*(x2061.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2062=IKsin(j5);
IkReal x2063=IKcos(j5);
IkReal x2064=((1.0)*cj0);
IkReal x2065=(sj6*x2062);
IkReal x2066=((1.0)*x2062);
IkReal x2067=((1.0)*x2063);
IkReal x2068=(cj6*x2063);
IkReal x2069=(sj6*x2067);
IkReal x2070=(cj6*x2066);
evalcond[0]=(((r21*x2065))+(((-1.0)*r22*x2067))+(((-1.0)*r20*x2070)));
evalcond[1]=((((-1.0)*r02*x2067))+(((-1.0)*r00*x2070))+((r01*x2065)));
evalcond[2]=((((-1.0)*r12*x2066))+(((-1.0)*r11*x2069))+((r10*x2068)));
evalcond[3]=((1.0)+(((-1.0)*r10*x2070))+(((-1.0)*r12*x2067))+((r11*x2065)));
evalcond[4]=((((-1.0)*r22*x2066))+((r20*x2068))+((sj0*sj1))+(((-1.0)*r21*x2069))+(((-1.0)*cj1*x2064)));
evalcond[5]=((((-1.0)*r02*x2066))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x2064))+((r00*x2068))+(((-1.0)*r01*x2069)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x2071=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x2071.valid){
continue;
}
CheckValue<IkReal> x2072 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2072.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2071.value)))+(x2072.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2073=IKsin(j5);
IkReal x2074=IKcos(j5);
IkReal x2075=((1.0)*cj0);
IkReal x2076=(sj6*x2073);
IkReal x2077=((1.0)*x2073);
IkReal x2078=((1.0)*x2074);
IkReal x2079=(cj6*x2074);
IkReal x2080=(sj6*x2078);
IkReal x2081=(cj6*x2077);
evalcond[0]=((((-1.0)*r20*x2081))+(((-1.0)*r22*x2078))+((r21*x2076)));
evalcond[1]=((((-1.0)*r02*x2078))+((r01*x2076))+(((-1.0)*r00*x2081)));
evalcond[2]=((((-1.0)*r12*x2077))+(((-1.0)*r11*x2080))+((r10*x2079)));
evalcond[3]=((1.0)+(((-1.0)*r12*x2078))+((r11*x2076))+(((-1.0)*r10*x2081)));
evalcond[4]=((((-1.0)*r21*x2080))+(((-1.0)*r22*x2077))+((r20*x2079))+((sj0*sj1))+(((-1.0)*cj1*x2075)));
evalcond[5]=((((-1.0)*r02*x2077))+(((-1.0)*sj1*x2075))+(((-1.0)*cj1*sj0))+((r00*x2079))+(((-1.0)*r01*x2080)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x2082=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x2082;
j5eval[1]=IKsign(x2082);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x2083=((1.0)*cj6);
IkReal x2084=((((-1.0)*r21*x2083))+(((-1.0)*r20*sj6)));
j5eval[0]=x2084;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x2083))))));
j5eval[2]=IKsign(x2084);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x2085=cj6*cj6;
IkReal x2086=r11*r11;
IkReal x2087=(cj6*r10);
IkReal x2088=(r11*sj6);
IkReal x2089=((((-1.0)*x2086))+((x2085*x2086))+(((2.0)*x2087*x2088))+(((-1.0)*x2085*(r10*r10)))+(((-1.0)*(r12*r12))));
j5eval[0]=x2089;
j5eval[1]=((IKabs(((((-1.0)*x2088))+x2087)))+(IKabs(r12)));
j5eval[2]=IKsign(x2089);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2090=cj6*cj6;
IkReal x2091=r11*r11;
IkReal x2092=(cj6*r10);
IkReal x2093=(r11*sj6);
CheckValue<IkReal> x2094=IKPowWithIntegerCheck(IKsign(((((2.0)*x2092*x2093))+((x2090*x2091))+(((-1.0)*(r12*r12)))+(((-1.0)*x2091))+(((-1.0)*x2090*(r10*r10))))),-1);
if(!x2094.valid){
continue;
}
CheckValue<IkReal> x2095 = IKatan2WithCheck(IkReal((x2092+(((-1.0)*x2093)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x2095.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2094.value)))+(x2095.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2096=IKsin(j5);
IkReal x2097=IKcos(j5);
IkReal x2098=(sj6*x2096);
IkReal x2099=((1.0)*x2096);
IkReal x2100=((1.0)*x2097);
IkReal x2101=(cj6*x2097);
IkReal x2102=(sj6*x2100);
IkReal x2103=(cj6*x2099);
evalcond[0]=((((-1.0)*r22*x2100))+(((-1.0)*r20*x2103))+((r21*x2098)));
evalcond[1]=((((-1.0)*r02*x2100))+((r01*x2098))+(((-1.0)*r00*x2103)));
evalcond[2]=((((-1.0)*r11*x2102))+((r10*x2101))+(((-1.0)*r12*x2099)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x2103))+(((-1.0)*r12*x2100))+((r11*x2098)));
evalcond[4]=(((cj1*sj0))+((r00*x2101))+(((-1.0)*r01*x2102))+(((-1.0)*r02*x2099))+((cj0*sj1)));
evalcond[5]=(((r20*x2101))+((sj0*sj1))+(((-1.0)*r21*x2102))+(((-1.0)*cj0*cj1))+(((-1.0)*r22*x2099)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2104=((1.0)*cj6);
CheckValue<IkReal> x2105=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x2104))+(((-1.0)*r20*sj6)))),-1);
if(!x2105.valid){
continue;
}
CheckValue<IkReal> x2106 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*r00*x2104)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2106.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2105.value)))+(x2106.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2107=IKsin(j5);
IkReal x2108=IKcos(j5);
IkReal x2109=(sj6*x2107);
IkReal x2110=((1.0)*x2107);
IkReal x2111=((1.0)*x2108);
IkReal x2112=(cj6*x2108);
IkReal x2113=(sj6*x2111);
IkReal x2114=(cj6*x2110);
evalcond[0]=(((r21*x2109))+(((-1.0)*r20*x2114))+(((-1.0)*r22*x2111)));
evalcond[1]=((((-1.0)*r00*x2114))+((r01*x2109))+(((-1.0)*r02*x2111)));
evalcond[2]=(((r10*x2112))+(((-1.0)*r11*x2113))+(((-1.0)*r12*x2110)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x2114))+((r11*x2109))+(((-1.0)*r12*x2111)));
evalcond[4]=((((-1.0)*r01*x2113))+((r00*x2112))+((cj1*sj0))+(((-1.0)*r02*x2110))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r21*x2113))+((r20*x2112))+((sj0*sj1))+(((-1.0)*r22*x2110))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x2115=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x2115.valid){
continue;
}
CheckValue<IkReal> x2116 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2116.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2115.value)))+(x2116.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2117=IKsin(j5);
IkReal x2118=IKcos(j5);
IkReal x2119=(sj6*x2117);
IkReal x2120=((1.0)*x2117);
IkReal x2121=((1.0)*x2118);
IkReal x2122=(cj6*x2118);
IkReal x2123=(sj6*x2121);
IkReal x2124=(cj6*x2120);
evalcond[0]=((((-1.0)*r22*x2121))+((r21*x2119))+(((-1.0)*r20*x2124)));
evalcond[1]=(((r01*x2119))+(((-1.0)*r00*x2124))+(((-1.0)*r02*x2121)));
evalcond[2]=(((r10*x2122))+(((-1.0)*r11*x2123))+(((-1.0)*r12*x2120)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x2124))+(((-1.0)*r12*x2121))+((r11*x2119)));
evalcond[4]=((((-1.0)*r01*x2123))+((cj1*sj0))+(((-1.0)*r02*x2120))+((r00*x2122))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r22*x2120))+((r20*x2122))+((sj0*sj1))+(((-1.0)*r21*x2123))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2125=((-1.0)*r00);
IkReal x2127 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x2127)==0){
continue;
}
IkReal x2126=pow(x2127,-0.5);
CheckValue<IkReal> x2128 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x2125),IKFAST_ATAN2_MAGTHRESH);
if(!x2128.valid){
continue;
}
IkReal gconst90=((-1.0)*(x2128.value));
IkReal gconst91=(r01*x2126);
IkReal gconst92=(x2125*x2126);
CheckValue<IkReal> x2129 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2129.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x2129.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x2130=((-1.0)*r00);
IkReal x2131=x2126;
CheckValue<IkReal> x2133 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x2130),IKFAST_ATAN2_MAGTHRESH);
if(!x2133.valid){
continue;
}
IkReal x2132=((-1.0)*(x2133.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst91;
cj6=gconst92;
j6=x2132;
IkReal gconst90=x2132;
IkReal gconst91=(r01*x2131);
IkReal gconst92=(x2130*x2131);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2134=((1.0)*sj2);
IkReal x2135=((1.0)*cj2);
CheckValue<IkReal> x2136=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst91*r20))+(((-1.0)*gconst92*r21)))),-1);
if(!x2136.valid){
continue;
}
CheckValue<IkReal> x2137 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x2134))+(((-1.0)*r02*x2135)))),IkReal(((((-1.0)*gconst91*r01*x2135))+((gconst92*r10*sj2))+(((-1.0)*gconst91*r11*x2134))+((cj2*gconst92*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2137.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2136.value)))+(x2137.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2138=IKsin(j5);
IkReal x2139=IKcos(j5);
IkReal x2140=((1.0)*cj0);
IkReal x2141=((1.0)*sj2);
IkReal x2142=(cj1*sj0);
IkReal x2143=(gconst91*x2138);
IkReal x2144=(gconst92*x2139);
IkReal x2145=((1.0)*x2138);
IkReal x2146=((1.0)*x2139);
evalcond[0]=((((-1.0)*gconst92*r20*x2145))+(((-1.0)*r22*x2146))+((r21*x2143)));
evalcond[1]=(((r11*x2143))+cj2+(((-1.0)*gconst92*r10*x2145))+(((-1.0)*r12*x2146)));
evalcond[2]=((((-1.0)*r02*x2146))+(((-1.0)*x2141))+((r01*x2143))+(((-1.0)*gconst92*r00*x2145)));
evalcond[3]=(((r20*x2144))+(((-1.0)*gconst91*r21*x2146))+((sj0*sj1))+(((-1.0)*r22*x2145))+(((-1.0)*cj1*x2140)));
evalcond[4]=((((-1.0)*cj2*x2142))+(((-1.0)*r02*x2145))+(((-1.0)*cj2*sj1*x2140))+((r00*x2144))+(((-1.0)*gconst91*r01*x2146)));
evalcond[5]=((((-1.0)*gconst91*r11*x2146))+(((-1.0)*sj1*sj2*x2140))+(((-1.0)*r12*x2145))+((r10*x2144))+(((-1.0)*x2141*x2142)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2147=((1.0)*gconst92);
CheckValue<IkReal> x2148=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst91*r10))+(((-1.0)*r11*x2147)))),-1);
if(!x2148.valid){
continue;
}
CheckValue<IkReal> x2149 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst91*r21*sj2))+(((-1.0)*r20*sj2*x2147)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2149.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2148.value)))+(x2149.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2150=IKsin(j5);
IkReal x2151=IKcos(j5);
IkReal x2152=((1.0)*cj0);
IkReal x2153=((1.0)*sj2);
IkReal x2154=(cj1*sj0);
IkReal x2155=(gconst91*x2150);
IkReal x2156=(gconst92*x2151);
IkReal x2157=((1.0)*x2150);
IkReal x2158=((1.0)*x2151);
evalcond[0]=((((-1.0)*gconst92*r20*x2157))+(((-1.0)*r22*x2158))+((r21*x2155)));
evalcond[1]=(cj2+(((-1.0)*gconst92*r10*x2157))+(((-1.0)*r12*x2158))+((r11*x2155)));
evalcond[2]=((((-1.0)*gconst92*r00*x2157))+(((-1.0)*r02*x2158))+(((-1.0)*x2153))+((r01*x2155)));
evalcond[3]=(((r20*x2156))+(((-1.0)*gconst91*r21*x2158))+((sj0*sj1))+(((-1.0)*cj1*x2152))+(((-1.0)*r22*x2157)));
evalcond[4]=((((-1.0)*cj2*x2154))+(((-1.0)*r02*x2157))+(((-1.0)*cj2*sj1*x2152))+((r00*x2156))+(((-1.0)*gconst91*r01*x2158)));
evalcond[5]=((((-1.0)*gconst91*r11*x2158))+(((-1.0)*sj1*sj2*x2152))+(((-1.0)*r12*x2157))+(((-1.0)*x2153*x2154))+((r10*x2156)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2159=((-1.0)*r01);
IkReal x2161 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x2161)==0){
continue;
}
IkReal x2160=pow(x2161,-0.5);
CheckValue<IkReal> x2162 = IKatan2WithCheck(IkReal(x2159),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2162.valid){
continue;
}
IkReal gconst93=((3.14159265358979)+(((-1.0)*(x2162.value))));
IkReal gconst94=(x2159*x2160);
IkReal gconst95=((1.0)*r00*x2160);
CheckValue<IkReal> x2163 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2163.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x2163.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x2164=((-1.0)*r01);
CheckValue<IkReal> x2167 = IKatan2WithCheck(IkReal(x2164),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2167.valid){
continue;
}
IkReal x2165=((1.0)*(x2167.value));
IkReal x2166=x2160;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst94;
cj6=gconst95;
j6=((3.14159265)+(((-1.0)*x2165)));
IkReal gconst93=((3.14159265358979)+(((-1.0)*x2165)));
IkReal gconst94=(x2164*x2166);
IkReal gconst95=((1.0)*r00*x2166);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=cj2;
j5eval[3]=r22;
j5eval[4]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x2168=((-1.0)*r01);
CheckValue<IkReal> x2171 = IKatan2WithCheck(IkReal(x2168),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2171.valid){
continue;
}
IkReal x2169=((1.0)*(x2171.value));
IkReal x2170=x2160;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst94;
cj6=gconst95;
j6=((3.14159265)+(((-1.0)*x2169)));
IkReal gconst93=((3.14159265358979)+(((-1.0)*x2169)));
IkReal gconst94=(x2168*x2170);
IkReal gconst95=((1.0)*r00*x2170);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x2172=((-1.0)*r01);
CheckValue<IkReal> x2175 = IKatan2WithCheck(IkReal(x2172),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2175.valid){
continue;
}
IkReal x2173=((1.0)*(x2175.value));
IkReal x2174=x2160;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst94;
cj6=gconst95;
j6=((3.14159265)+(((-1.0)*x2173)));
IkReal gconst93=((3.14159265358979)+(((-1.0)*x2173)));
IkReal gconst94=(x2172*x2174);
IkReal gconst95=((1.0)*r00*x2174);
IkReal x2176=r02*r02;
IkReal x2177=(r12*sj2);
IkReal x2178=((1.0)*cj2);
IkReal x2179=x2160;
j5eval[0]=((IKabs((((cj2*x2176*x2179))+(((-1.0)*x2178*x2179))+((r02*x2177*x2179)))))+(IKabs(((((-1.0)*r02*x2178))+(((-1.0)*x2177))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2180=((1.0)*sj2);
IkReal x2181=((1.0)*cj2);
CheckValue<IkReal> x2182=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst95*r21))+(((-1.0)*gconst94*r20)))),-1);
if(!x2182.valid){
continue;
}
CheckValue<IkReal> x2183 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x2181))+(((-1.0)*r12*x2180)))),IkReal((((gconst95*r10*sj2))+(((-1.0)*gconst94*r01*x2181))+(((-1.0)*gconst94*r11*x2180))+((cj2*gconst95*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2183.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2182.value)))+(x2183.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2184=IKsin(j5);
IkReal x2185=IKcos(j5);
IkReal x2186=((1.0)*sj2);
IkReal x2187=((1.0)*cj0);
IkReal x2188=(cj1*sj0);
IkReal x2189=(gconst94*x2184);
IkReal x2190=((1.0)*x2185);
IkReal x2191=((1.0)*x2184);
IkReal x2192=(gconst95*x2185);
IkReal x2193=(gconst95*x2191);
evalcond[0]=((((-1.0)*r20*x2193))+((r21*x2189))+(((-1.0)*r22*x2190)));
evalcond[1]=(cj2+(((-1.0)*r10*x2193))+((r11*x2189))+(((-1.0)*r12*x2190)));
evalcond[2]=((((-1.0)*r02*x2190))+(((-1.0)*x2186))+((r01*x2189))+(((-1.0)*r00*x2193)));
evalcond[3]=((((-1.0)*gconst94*r21*x2190))+((r20*x2192))+((sj0*sj1))+(((-1.0)*r22*x2191))+(((-1.0)*cj1*x2187)));
evalcond[4]=((((-1.0)*cj2*x2188))+(((-1.0)*gconst94*r01*x2190))+(((-1.0)*cj2*sj1*x2187))+(((-1.0)*r02*x2191))+((r00*x2192)));
evalcond[5]=((((-1.0)*x2186*x2188))+(((-1.0)*cj0*sj1*x2186))+(((-1.0)*gconst94*r11*x2190))+(((-1.0)*r12*x2191))+((r10*x2192)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2194=((1.0)*gconst95);
CheckValue<IkReal> x2195 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst94*r21*sj2))+(((-1.0)*r20*sj2*x2194)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2195.valid){
continue;
}
CheckValue<IkReal> x2196=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst94*r10))+(((-1.0)*r11*x2194)))),-1);
if(!x2196.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2195.value)+(((1.5707963267949)*(x2196.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2197=IKsin(j5);
IkReal x2198=IKcos(j5);
IkReal x2199=((1.0)*sj2);
IkReal x2200=((1.0)*cj0);
IkReal x2201=(cj1*sj0);
IkReal x2202=(gconst94*x2197);
IkReal x2203=((1.0)*x2198);
IkReal x2204=((1.0)*x2197);
IkReal x2205=(gconst95*x2198);
IkReal x2206=(gconst95*x2204);
evalcond[0]=((((-1.0)*r22*x2203))+(((-1.0)*r20*x2206))+((r21*x2202)));
evalcond[1]=(cj2+(((-1.0)*r10*x2206))+(((-1.0)*r12*x2203))+((r11*x2202)));
evalcond[2]=(((r01*x2202))+(((-1.0)*x2199))+(((-1.0)*r00*x2206))+(((-1.0)*r02*x2203)));
evalcond[3]=((((-1.0)*cj1*x2200))+((r20*x2205))+(((-1.0)*r22*x2204))+((sj0*sj1))+(((-1.0)*gconst94*r21*x2203)));
evalcond[4]=(((r00*x2205))+(((-1.0)*gconst94*r01*x2203))+(((-1.0)*cj2*sj1*x2200))+(((-1.0)*cj2*x2201))+(((-1.0)*r02*x2204)));
evalcond[5]=((((-1.0)*gconst94*r11*x2203))+(((-1.0)*r12*x2204))+(((-1.0)*cj0*sj1*x2199))+(((-1.0)*x2199*x2201))+((r10*x2205)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2207=((1.0)*gconst95);
CheckValue<IkReal> x2208=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst94*r00))+(((-1.0)*r01*x2207)))),-1);
if(!x2208.valid){
continue;
}
CheckValue<IkReal> x2209 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst94*r21))+(((-1.0)*cj2*r20*x2207)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2209.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2208.value)))+(x2209.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2210=IKsin(j5);
IkReal x2211=IKcos(j5);
IkReal x2212=((1.0)*sj2);
IkReal x2213=((1.0)*cj0);
IkReal x2214=(cj1*sj0);
IkReal x2215=(gconst94*x2210);
IkReal x2216=((1.0)*x2211);
IkReal x2217=((1.0)*x2210);
IkReal x2218=(gconst95*x2211);
IkReal x2219=(gconst95*x2217);
evalcond[0]=((((-1.0)*r22*x2216))+(((-1.0)*r20*x2219))+((r21*x2215)));
evalcond[1]=(cj2+(((-1.0)*r10*x2219))+(((-1.0)*r12*x2216))+((r11*x2215)));
evalcond[2]=(((r01*x2215))+(((-1.0)*x2212))+(((-1.0)*r02*x2216))+(((-1.0)*r00*x2219)));
evalcond[3]=(((r20*x2218))+(((-1.0)*cj1*x2213))+(((-1.0)*r22*x2217))+((sj0*sj1))+(((-1.0)*gconst94*r21*x2216)));
evalcond[4]=((((-1.0)*gconst94*r01*x2216))+((r00*x2218))+(((-1.0)*cj2*sj1*x2213))+(((-1.0)*cj2*x2214))+(((-1.0)*r02*x2217)));
evalcond[5]=((((-1.0)*r12*x2217))+(((-1.0)*cj0*sj1*x2212))+((r10*x2218))+(((-1.0)*x2212*x2214))+(((-1.0)*gconst94*r11*x2216)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x2220=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x2220;
j5eval[1]=IKsign(x2220);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x2221=((1.0)*cj6);
IkReal x2222=((((-1.0)*r10*sj6))+(((-1.0)*r11*x2221)));
j5eval[0]=x2222;
j5eval[1]=IKsign(x2222);
j5eval[2]=((IKabs(((((-1.0)*r20*x2221))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x2223=r01*r01;
IkReal x2224=cj6*cj6;
IkReal x2225=(cj6*r00);
IkReal x2226=(r01*sj6);
IkReal x2227=((((-1.0)*(r02*r02)))+(((2.0)*x2225*x2226))+(((-1.0)*x2224*(r00*r00)))+(((-1.0)*x2223))+((x2223*x2224)));
j5eval[0]=x2227;
j5eval[1]=((IKabs(r02))+(IKabs((x2225+(((-1.0)*x2226))))));
j5eval[2]=IKsign(x2227);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2228=r01*r01;
IkReal x2229=cj6*cj6;
IkReal x2230=(cj6*r00);
IkReal x2231=(r01*sj6);
CheckValue<IkReal> x2232=IKPowWithIntegerCheck(IKsign((((x2228*x2229))+(((2.0)*x2230*x2231))+(((-1.0)*(r02*r02)))+(((-1.0)*x2228))+(((-1.0)*x2229*(r00*r00))))),-1);
if(!x2232.valid){
continue;
}
CheckValue<IkReal> x2233 = IKatan2WithCheck(IkReal((x2230+(((-1.0)*x2231)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x2233.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2232.value)))+(x2233.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2234=IKsin(j5);
IkReal x2235=IKcos(j5);
IkReal x2236=(r01*sj6);
IkReal x2237=(r21*sj6);
IkReal x2238=((1.0)*cj0);
IkReal x2239=(r11*sj6);
IkReal x2240=((1.0)*x2235);
IkReal x2241=((1.0)*x2234);
IkReal x2242=(cj6*x2235);
IkReal x2243=(cj6*x2241);
evalcond[0]=((((-1.0)*r22*x2240))+(((-1.0)*r20*x2243))+((x2234*x2237)));
evalcond[1]=((((-1.0)*r10*x2243))+(((-1.0)*r12*x2240))+((x2234*x2239)));
evalcond[2]=((((-1.0)*r02*x2241))+((r00*x2242))+(((-1.0)*x2236*x2240)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x2240))+(((-1.0)*r00*x2243))+((x2234*x2236)));
evalcond[4]=((((-1.0)*x2237*x2240))+(((-1.0)*cj1*x2238))+(((-1.0)*r22*x2241))+((sj0*sj1))+((r20*x2242)));
evalcond[5]=(((r10*x2242))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x2238))+(((-1.0)*r12*x2241))+(((-1.0)*x2239*x2240)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2244=((1.0)*cj6);
CheckValue<IkReal> x2245 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x2244)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2245.valid){
continue;
}
CheckValue<IkReal> x2246=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x2244)))),-1);
if(!x2246.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2245.value)+(((1.5707963267949)*(x2246.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2247=IKsin(j5);
IkReal x2248=IKcos(j5);
IkReal x2249=(r01*sj6);
IkReal x2250=(r21*sj6);
IkReal x2251=((1.0)*cj0);
IkReal x2252=(r11*sj6);
IkReal x2253=((1.0)*x2248);
IkReal x2254=((1.0)*x2247);
IkReal x2255=(cj6*x2248);
IkReal x2256=(cj6*x2254);
evalcond[0]=((((-1.0)*r22*x2253))+((x2247*x2250))+(((-1.0)*r20*x2256)));
evalcond[1]=((((-1.0)*r12*x2253))+((x2247*x2252))+(((-1.0)*r10*x2256)));
evalcond[2]=((((-1.0)*x2249*x2253))+(((-1.0)*r02*x2254))+((r00*x2255)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x2253))+((x2247*x2249))+(((-1.0)*r00*x2256)));
evalcond[4]=((((-1.0)*r22*x2254))+((r20*x2255))+((sj0*sj1))+(((-1.0)*cj1*x2251))+(((-1.0)*x2250*x2253)));
evalcond[5]=((((-1.0)*sj1*x2251))+((r10*x2255))+(((-1.0)*cj1*sj0))+(((-1.0)*r12*x2254))+(((-1.0)*x2252*x2253)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x2257=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x2257.valid){
continue;
}
CheckValue<IkReal> x2258 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2258.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2257.value)))+(x2258.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2259=IKsin(j5);
IkReal x2260=IKcos(j5);
IkReal x2261=(r01*sj6);
IkReal x2262=(r21*sj6);
IkReal x2263=((1.0)*cj0);
IkReal x2264=(r11*sj6);
IkReal x2265=((1.0)*x2260);
IkReal x2266=((1.0)*x2259);
IkReal x2267=(cj6*x2260);
IkReal x2268=(cj6*x2266);
evalcond[0]=(((x2259*x2262))+(((-1.0)*r20*x2268))+(((-1.0)*r22*x2265)));
evalcond[1]=(((x2259*x2264))+(((-1.0)*r10*x2268))+(((-1.0)*r12*x2265)));
evalcond[2]=(((r00*x2267))+(((-1.0)*x2261*x2265))+(((-1.0)*r02*x2266)));
evalcond[3]=((-1.0)+((x2259*x2261))+(((-1.0)*r00*x2268))+(((-1.0)*r02*x2265)));
evalcond[4]=((((-1.0)*cj1*x2263))+((sj0*sj1))+(((-1.0)*r22*x2266))+((r20*x2267))+(((-1.0)*x2262*x2265)));
evalcond[5]=((((-1.0)*cj1*sj0))+((r10*x2267))+(((-1.0)*sj1*x2263))+(((-1.0)*x2264*x2265))+(((-1.0)*r12*x2266)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x2269=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x2269;
j5eval[1]=IKsign(x2269);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x2270=((1.0)*cj6);
IkReal x2271=((((-1.0)*r21*x2270))+(((-1.0)*r20*sj6)));
j5eval[0]=x2271;
j5eval[1]=((IKabs(r12))+(IKabs((((r11*sj6))+(((-1.0)*r10*x2270))))));
j5eval[2]=IKsign(x2271);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x2272=cj6*cj6;
IkReal x2273=r01*r01;
IkReal x2274=(cj6*r00);
IkReal x2275=(r01*sj6);
IkReal x2276=(x2273+((x2272*(r00*r00)))+(((-2.0)*x2274*x2275))+(r02*r02)+(((-1.0)*x2272*x2273)));
j5eval[0]=x2276;
j5eval[1]=((IKabs(r02))+(IKabs((x2274+(((-1.0)*x2275))))));
j5eval[2]=IKsign(x2276);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2277=cj6*cj6;
IkReal x2278=r01*r01;
IkReal x2279=(cj6*r00);
IkReal x2280=(r01*sj6);
CheckValue<IkReal> x2281=IKPowWithIntegerCheck(IKsign(((((-1.0)*x2277*x2278))+x2278+(((-2.0)*x2279*x2280))+(r02*r02)+((x2277*(r00*r00))))),-1);
if(!x2281.valid){
continue;
}
CheckValue<IkReal> x2282 = IKatan2WithCheck(IkReal((x2279+(((-1.0)*x2280)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x2282.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2281.value)))+(x2282.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2283=IKsin(j5);
IkReal x2284=IKcos(j5);
IkReal x2285=(r01*sj6);
IkReal x2286=(r21*sj6);
IkReal x2287=(r11*sj6);
IkReal x2288=((1.0)*x2284);
IkReal x2289=((1.0)*x2283);
IkReal x2290=(cj6*x2284);
IkReal x2291=(cj6*x2289);
evalcond[0]=(((x2283*x2286))+(((-1.0)*r20*x2291))+(((-1.0)*r22*x2288)));
evalcond[1]=((((-1.0)*r12*x2288))+((x2283*x2287))+(((-1.0)*r10*x2291)));
evalcond[2]=((((-1.0)*r02*x2289))+((r00*x2290))+(((-1.0)*x2285*x2288)));
evalcond[3]=((1.0)+(((-1.0)*r02*x2288))+(((-1.0)*r00*x2291))+((x2283*x2285)));
evalcond[4]=(((r10*x2290))+((cj1*sj0))+(((-1.0)*r12*x2289))+(((-1.0)*x2287*x2288))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*x2286*x2288))+((r20*x2290))+(((-1.0)*cj0*cj1))+(((-1.0)*r22*x2289)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2292=((1.0)*cj6);
CheckValue<IkReal> x2293 = IKatan2WithCheck(IkReal(r12),IkReal((((r11*sj6))+(((-1.0)*r10*x2292)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2293.valid){
continue;
}
CheckValue<IkReal> x2294=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x2292))+(((-1.0)*r20*sj6)))),-1);
if(!x2294.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2293.value)+(((1.5707963267949)*(x2294.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2295=IKsin(j5);
IkReal x2296=IKcos(j5);
IkReal x2297=(r01*sj6);
IkReal x2298=(r21*sj6);
IkReal x2299=(r11*sj6);
IkReal x2300=((1.0)*x2296);
IkReal x2301=((1.0)*x2295);
IkReal x2302=(cj6*x2296);
IkReal x2303=(cj6*x2301);
evalcond[0]=((((-1.0)*r22*x2300))+(((-1.0)*r20*x2303))+((x2295*x2298)));
evalcond[1]=((((-1.0)*r10*x2303))+((x2295*x2299))+(((-1.0)*r12*x2300)));
evalcond[2]=((((-1.0)*x2297*x2300))+((r00*x2302))+(((-1.0)*r02*x2301)));
evalcond[3]=((1.0)+(((-1.0)*r00*x2303))+((x2295*x2297))+(((-1.0)*r02*x2300)));
evalcond[4]=(((r10*x2302))+((cj1*sj0))+(((-1.0)*x2299*x2300))+((cj0*sj1))+(((-1.0)*r12*x2301)));
evalcond[5]=((((-1.0)*r22*x2301))+((r20*x2302))+((sj0*sj1))+(((-1.0)*x2298*x2300))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x2304 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2304.valid){
continue;
}
CheckValue<IkReal> x2305=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x2305.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2304.value)+(((1.5707963267949)*(x2305.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2306=IKsin(j5);
IkReal x2307=IKcos(j5);
IkReal x2308=(r01*sj6);
IkReal x2309=(r21*sj6);
IkReal x2310=(r11*sj6);
IkReal x2311=((1.0)*x2307);
IkReal x2312=((1.0)*x2306);
IkReal x2313=(cj6*x2307);
IkReal x2314=(cj6*x2312);
evalcond[0]=((((-1.0)*r20*x2314))+(((-1.0)*r22*x2311))+((x2306*x2309)));
evalcond[1]=(((x2306*x2310))+(((-1.0)*r10*x2314))+(((-1.0)*r12*x2311)));
evalcond[2]=((((-1.0)*x2308*x2311))+((r00*x2313))+(((-1.0)*r02*x2312)));
evalcond[3]=((1.0)+((x2306*x2308))+(((-1.0)*r02*x2311))+(((-1.0)*r00*x2314)));
evalcond[4]=(((r10*x2313))+((cj1*sj0))+(((-1.0)*x2310*x2311))+(((-1.0)*r12*x2312))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r22*x2312))+(((-1.0)*x2309*x2311))+((sj0*sj1))+((r20*x2313))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x2315=((-1.0)*px);
sj4=1.0;
cj4=0;
j4=1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x2315);
rxp1_1=(px*r21);
rxp1_2=(r11*x2315);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=(((cj6*r20))+(((-1.0)*r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x2317=IKPowWithIntegerCheck((((cj6*r20))+(((-1.0)*r21*sj6))),-1);
if(!x2317.valid){
continue;
}
IkReal x2316=x2317.value;
cj5array[0]=((((-1.0)*sj0*sj1*x2316))+((cj0*cj1*x2316)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2318=IKsin(j5);
IkReal x2319=(sj6*x2318);
IkReal x2320=((1.0)*cj6*x2318);
evalcond[0]=((-1.0)*r02*x2318);
evalcond[1]=(((r21*x2319))+(((-1.0)*r20*x2320)));
evalcond[2]=(((r11*x2319))+(((-1.0)*r10*x2320)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2321=((1.0)*sj6);
CheckValue<IkReal> x2322=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r21))+(((-1.0)*r20*x2321)))),-1);
if(!x2322.valid){
continue;
}
CheckValue<IkReal> x2323 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj6*r10*sj2))+(((-1.0)*cj2*r01*x2321))+((cj2*cj6*r00))+(((-1.0)*r11*sj2*x2321)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2323.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2322.value)))+(x2323.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2324=IKsin(j5);
IkReal x2325=IKcos(j5);
IkReal x2326=(r01*sj6);
IkReal x2327=(r21*sj6);
IkReal x2328=((1.0)*cj0);
IkReal x2329=((1.0)*sj2);
IkReal x2330=(r11*sj6);
IkReal x2331=(cj1*sj0);
IkReal x2332=((1.0)*x2325);
IkReal x2333=((1.0)*x2324);
IkReal x2334=(cj6*x2325);
IkReal x2335=(cj6*x2333);
evalcond[0]=((((-1.0)*r22*x2332))+((x2324*x2327))+(((-1.0)*r20*x2335)));
evalcond[1]=(cj2+(((-1.0)*r10*x2335))+((x2324*x2330))+(((-1.0)*r12*x2332)));
evalcond[2]=((((-1.0)*r02*x2332))+(((-1.0)*r00*x2335))+((x2324*x2326))+(((-1.0)*x2329)));
evalcond[3]=((((-1.0)*r22*x2333))+((sj0*sj1))+(((-1.0)*cj1*x2328))+(((-1.0)*x2327*x2332))+((r20*x2334)));
evalcond[4]=((((-1.0)*cj2*sj1*x2328))+((r00*x2334))+(((-1.0)*r02*x2333))+(((-1.0)*cj2*x2331))+(((-1.0)*x2326*x2332)));
evalcond[5]=((((-1.0)*sj1*sj2*x2328))+(((-1.0)*x2329*x2331))+(((-1.0)*r12*x2333))+(((-1.0)*x2330*x2332))+((r10*x2334)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2336=((1.0)*cj6);
CheckValue<IkReal> x2337=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x2336)))),-1);
if(!x2337.valid){
continue;
}
CheckValue<IkReal> x2338 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x2336))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2338.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2337.value)))+(x2338.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2339=IKsin(j5);
IkReal x2340=IKcos(j5);
IkReal x2341=(r01*sj6);
IkReal x2342=(r21*sj6);
IkReal x2343=((1.0)*cj0);
IkReal x2344=((1.0)*sj2);
IkReal x2345=(r11*sj6);
IkReal x2346=(cj1*sj0);
IkReal x2347=((1.0)*x2340);
IkReal x2348=((1.0)*x2339);
IkReal x2349=(cj6*x2340);
IkReal x2350=(cj6*x2348);
evalcond[0]=((((-1.0)*r20*x2350))+(((-1.0)*r22*x2347))+((x2339*x2342)));
evalcond[1]=(cj2+(((-1.0)*r10*x2350))+((x2339*x2345))+(((-1.0)*r12*x2347)));
evalcond[2]=((((-1.0)*r00*x2350))+(((-1.0)*r02*x2347))+((x2339*x2341))+(((-1.0)*x2344)));
evalcond[3]=(((sj0*sj1))+(((-1.0)*cj1*x2343))+(((-1.0)*r22*x2348))+((r20*x2349))+(((-1.0)*x2342*x2347)));
evalcond[4]=(((r00*x2349))+(((-1.0)*cj2*sj1*x2343))+(((-1.0)*cj2*x2346))+(((-1.0)*x2341*x2347))+(((-1.0)*r02*x2348)));
evalcond[5]=((((-1.0)*sj1*sj2*x2343))+(((-1.0)*x2345*x2347))+((r10*x2349))+(((-1.0)*x2344*x2346))+(((-1.0)*r12*x2348)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2351=((1.0)*cj6);
CheckValue<IkReal> x2352 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x2351))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2352.valid){
continue;
}
CheckValue<IkReal> x2353=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x2351))+(((-1.0)*r00*sj6)))),-1);
if(!x2353.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2352.value)+(((1.5707963267949)*(x2353.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2354=IKsin(j5);
IkReal x2355=IKcos(j5);
IkReal x2356=(r01*sj6);
IkReal x2357=(r21*sj6);
IkReal x2358=((1.0)*cj0);
IkReal x2359=((1.0)*sj2);
IkReal x2360=(r11*sj6);
IkReal x2361=(cj1*sj0);
IkReal x2362=((1.0)*x2355);
IkReal x2363=((1.0)*x2354);
IkReal x2364=(cj6*x2355);
IkReal x2365=(cj6*x2363);
evalcond[0]=(((x2354*x2357))+(((-1.0)*r20*x2365))+(((-1.0)*r22*x2362)));
evalcond[1]=((((-1.0)*r10*x2365))+cj2+((x2354*x2360))+(((-1.0)*r12*x2362)));
evalcond[2]=(((x2354*x2356))+(((-1.0)*r00*x2365))+(((-1.0)*x2359))+(((-1.0)*r02*x2362)));
evalcond[3]=(((r20*x2364))+(((-1.0)*cj1*x2358))+(((-1.0)*x2357*x2362))+((sj0*sj1))+(((-1.0)*r22*x2363)));
evalcond[4]=((((-1.0)*cj2*sj1*x2358))+(((-1.0)*x2356*x2362))+(((-1.0)*cj2*x2361))+((r00*x2364))+(((-1.0)*r02*x2363)));
evalcond[5]=(((r10*x2364))+(((-1.0)*x2359*x2361))+(((-1.0)*x2360*x2362))+(((-1.0)*sj1*sj2*x2358))+(((-1.0)*r12*x2363)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2366=cj6*cj6;
IkReal x2367=r21*r21;
IkReal x2368=(cj6*r20);
IkReal x2369=(cj0*cj1);
IkReal x2370=(sj0*sj1);
IkReal x2371=(r21*sj6);
CheckValue<IkReal> x2372=IKPowWithIntegerCheck(IKsign((((x2366*(r20*r20)))+(r22*r22)+x2367+(((-1.0)*x2366*x2367))+(((-2.0)*x2368*x2371)))),-1);
if(!x2372.valid){
continue;
}
CheckValue<IkReal> x2373 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x2369))+((r22*x2370)))),IkReal((((x2370*x2371))+(((-1.0)*x2368*x2370))+(((-1.0)*x2369*x2371))+((x2368*x2369)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2373.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2372.value)))+(x2373.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2374=IKsin(j5);
IkReal x2375=IKcos(j5);
IkReal x2376=((1.0)*r22);
IkReal x2377=(r21*sj6);
IkReal x2378=(cj6*r20);
evalcond[0]=((((-1.0)*x2375*x2376))+(((-1.0)*x2374*x2378))+((x2374*x2377)));
evalcond[1]=(((x2375*x2378))+(((-1.0)*x2375*x2377))+((sj0*sj1))+(((-1.0)*x2374*x2376))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2379=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x2379))+(((-1.0)*cj5*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x2379)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x2379))+(((-1.0)*cj5*r02))))+IKsqr((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x2379))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x2379))+(((-1.0)*cj5*r02))), (((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x2379))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x2380=IKcos(j2);
IkReal x2381=IKsin(j2);
IkReal x2382=(cj6*r11);
IkReal x2383=(r10*sj6);
IkReal x2384=(r00*sj6);
IkReal x2385=((1.0)*sj0);
IkReal x2386=(sj5*sj6);
IkReal x2387=((1.0)*cj0);
IkReal x2388=(cj5*cj6);
IkReal x2389=((1.0)*cj5);
IkReal x2390=((0.39225)*sj0);
IkReal x2391=((1.0)*sj5);
IkReal x2392=(cj6*r01);
IkReal x2393=(cj6*x2391);
IkReal x2394=(cj1*x2381);
IkReal x2395=(sj1*x2381);
IkReal x2396=(cj1*x2380);
IkReal x2397=(sj1*x2380);
IkReal x2398=(cj0*x2396);
evalcond[0]=((((-1.0)*r12*x2389))+(((-1.0)*r10*x2393))+x2380+((r11*x2386)));
evalcond[1]=((((-1.0)*r00*x2393))+(((-1.0)*r02*x2389))+((r01*x2386))+(((-1.0)*x2381)));
evalcond[2]=(x2392+x2384+(((-1.0)*x2387*x2396))+((sj0*x2397)));
evalcond[3]=(x2383+x2382+(((-1.0)*x2387*x2394))+((sj0*x2395)));
evalcond[4]=((((-1.0)*x2385*x2396))+(((-1.0)*r02*x2391))+((r00*x2388))+(((-1.0)*r01*sj6*x2389))+(((-1.0)*x2387*x2397)));
evalcond[5]=((((-1.0)*x2385*x2394))+((r10*x2388))+(((-1.0)*x2387*x2395))+(((-1.0)*r11*sj6*x2389))+(((-1.0)*r12*x2391)));
evalcond[6]=((((-0.09465)*x2384))+(((-1.0)*x2390*x2397))+(((0.425)*x2396))+(((-1.0)*px))+(((0.39225)*x2398))+(((-0.10915)*x2381))+(((-0.09465)*x2392)));
evalcond[7]=((((-0.09465)*x2383))+(((-0.09465)*x2382))+(((-1.0)*x2390*x2395))+(((0.10915)*x2380))+(((0.425)*x2394))+(((-1.0)*py))+(((0.39225)*cj0*x2394)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2399=((1.0)*sj6);
IkReal x2400=((1.0)*cj6);
CheckValue<IkReal> x2401=IKPowWithIntegerCheck(IKsign((((sj0*sj1))+(((-1.0)*cj0*cj1)))),-1);
if(!x2401.valid){
continue;
}
CheckValue<IkReal> x2402 = IKatan2WithCheck(IkReal(((((-1.0)*r10*x2399))+(((-1.0)*r11*x2400)))),IkReal(((((-1.0)*r00*x2399))+(((-1.0)*r01*x2400)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2402.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2401.value)))+(x2402.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x2403=IKcos(j2);
IkReal x2404=IKsin(j2);
IkReal x2405=(cj0*cj1);
IkReal x2406=(cj6*r11);
IkReal x2407=((0.09465)*sj6);
IkReal x2408=((0.425)*cj1);
IkReal x2409=(sj0*sj1);
IkReal x2410=(cj6*r01);
IkReal x2411=((0.39225)*x2403);
IkReal x2412=((0.39225)*x2404);
evalcond[0]=(((r00*sj6))+((x2403*x2409))+x2410+(((-1.0)*x2403*x2405)));
evalcond[1]=(x2406+((r10*sj6))+(((-1.0)*x2404*x2405))+((x2404*x2409)));
evalcond[2]=((((-0.10915)*x2404))+((x2403*x2408))+((x2405*x2411))+(((-1.0)*r00*x2407))+(((-1.0)*px))+(((-0.09465)*x2410))+(((-1.0)*x2409*x2411)));
evalcond[3]=(((x2405*x2412))+(((-0.09465)*x2406))+(((-1.0)*py))+(((0.10915)*x2403))+((x2404*x2408))+(((-1.0)*r10*x2407))+(((-1.0)*x2409*x2412)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x2413=((1.0)*cj6);
IkReal x2414=((((-1.0)*r00*sj6))+(((-1.0)*r01*x2413)));
j5eval[0]=x2414;
j5eval[1]=IKsign(x2414);
j5eval[2]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x2413)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x2415=((1.0)*cj6);
IkReal x2416=((((-1.0)*r10*sj6))+(((-1.0)*r11*x2415)));
j5eval[0]=x2416;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x2415))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x2416);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x2417=((1.0)*sj2);
IkReal x2418=((1.0)*sj6);
IkReal x2419=((((-1.0)*r20*x2418))+(((-1.0)*cj6*r21)));
j5eval[0]=x2419;
j5eval[1]=IKsign(x2419);
j5eval[2]=((IKabs((((cj6*r10*sj2))+((cj2*cj6*r00))+(((-1.0)*cj2*r01*x2418))+(((-1.0)*r11*sj6*x2417)))))+(IKabs(((((-1.0)*r12*x2417))+(((-1.0)*cj2*r02))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
IkReal x2420=((-1.0)*r20);
IkReal x2422 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x2422)==0){
continue;
}
IkReal x2421=pow(x2422,-0.5);
CheckValue<IkReal> x2423 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x2420),IKFAST_ATAN2_MAGTHRESH);
if(!x2423.valid){
continue;
}
IkReal gconst78=((-1.0)*(x2423.value));
IkReal gconst79=(r21*x2421);
IkReal gconst80=(x2420*x2421);
CheckValue<IkReal> x2424 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x2424.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x2424.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x2425=((-1.0)*r20);
IkReal x2426=x2421;
CheckValue<IkReal> x2428 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x2425),IKFAST_ATAN2_MAGTHRESH);
if(!x2428.valid){
continue;
}
IkReal x2427=((-1.0)*(x2428.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst79;
cj6=gconst80;
j6=x2427;
IkReal gconst78=x2427;
IkReal gconst79=(r21*x2426);
IkReal gconst80=(x2425*x2426);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x2429=((-1.0)*r20);
IkReal x2430=x2421;
CheckValue<IkReal> x2432 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x2429),IKFAST_ATAN2_MAGTHRESH);
if(!x2432.valid){
continue;
}
IkReal x2431=((-1.0)*(x2432.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst79;
cj6=gconst80;
j6=x2431;
IkReal gconst78=x2431;
IkReal gconst79=(r21*x2430);
IkReal gconst80=(x2429*x2430);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x2433=((-1.0)*r20);
IkReal x2434=x2421;
CheckValue<IkReal> x2436 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x2433),IKFAST_ATAN2_MAGTHRESH);
if(!x2436.valid){
continue;
}
IkReal x2435=((-1.0)*(x2436.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst79;
cj6=gconst80;
j6=x2435;
IkReal gconst78=x2435;
IkReal gconst79=(r21*x2434);
IkReal gconst80=(x2433*x2434);
IkReal x2437=r22*r22;
CheckValue<IkReal> x2440=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x2437))),-1);
if(!x2440.valid){
continue;
}
IkReal x2438=x2440.value;
IkReal x2439=(x2437+((x2438*(r20*r20*r20*r20)))+((x2438*(r21*r21*r21*r21)))+(((2.0)*x2438*(r20*r20)*(r21*r21))));
j5eval[0]=x2439;
j5eval[1]=IKsign(x2439);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2441=(sj0*sj1);
IkReal x2442=(gconst79*r21);
IkReal x2443=(cj0*cj1);
IkReal x2444=(gconst80*r20);
CheckValue<IkReal> x2445 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x2443))+((r22*x2441)))),IkReal((((x2443*x2444))+(((-1.0)*x2442*x2443))+(((-1.0)*x2441*x2444))+((x2441*x2442)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2445.valid){
continue;
}
CheckValue<IkReal> x2446=IKPowWithIntegerCheck(IKsign(((r22*r22)+(x2442*x2442)+(((-2.0)*x2442*x2444))+(x2444*x2444))),-1);
if(!x2446.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2445.value)+(((1.5707963267949)*(x2446.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2447=IKsin(j5);
IkReal x2448=IKcos(j5);
IkReal x2449=((1.0)*cj0);
IkReal x2450=((1.0)*sj2);
IkReal x2451=(cj1*sj0);
IkReal x2452=((1.0)*x2448);
IkReal x2453=(gconst79*x2447);
IkReal x2454=((1.0)*x2447);
IkReal x2455=(gconst80*x2448);
IkReal x2456=(gconst79*x2452);
IkReal x2457=(gconst80*x2454);
evalcond[0]=((((-1.0)*r20*x2457))+(((-1.0)*r22*x2452))+((r21*x2453)));
evalcond[1]=((((-1.0)*r10*x2457))+cj2+(((-1.0)*r12*x2452))+((r11*x2453)));
evalcond[2]=(((r01*x2453))+(((-1.0)*x2450))+(((-1.0)*r02*x2452))+(((-1.0)*r00*x2457)));
evalcond[3]=((((-1.0)*r21*x2456))+((sj0*sj1))+(((-1.0)*r22*x2454))+((r20*x2455))+(((-1.0)*cj1*x2449)));
evalcond[4]=((((-1.0)*cj2*sj1*x2449))+((r00*x2455))+(((-1.0)*r01*x2456))+(((-1.0)*r02*x2454))+(((-1.0)*cj2*x2451)));
evalcond[5]=((((-1.0)*x2450*x2451))+(((-1.0)*sj1*sj2*x2449))+((r10*x2455))+(((-1.0)*r11*x2456))+(((-1.0)*r12*x2454)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2458=((1.0)*gconst80);
CheckValue<IkReal> x2459 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x2458))+((gconst79*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2459.valid){
continue;
}
CheckValue<IkReal> x2460=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x2458))+(((-1.0)*gconst79*r10)))),-1);
if(!x2460.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2459.value)+(((1.5707963267949)*(x2460.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2461=IKsin(j5);
IkReal x2462=IKcos(j5);
IkReal x2463=((1.0)*cj0);
IkReal x2464=((1.0)*sj2);
IkReal x2465=(cj1*sj0);
IkReal x2466=((1.0)*x2462);
IkReal x2467=(gconst79*x2461);
IkReal x2468=((1.0)*x2461);
IkReal x2469=(gconst80*x2462);
IkReal x2470=(gconst79*x2466);
IkReal x2471=(gconst80*x2468);
evalcond[0]=((((-1.0)*r22*x2466))+(((-1.0)*r20*x2471))+((r21*x2467)));
evalcond[1]=(cj2+(((-1.0)*r12*x2466))+((r11*x2467))+(((-1.0)*r10*x2471)));
evalcond[2]=(((r01*x2467))+(((-1.0)*r00*x2471))+(((-1.0)*x2464))+(((-1.0)*r02*x2466)));
evalcond[3]=((((-1.0)*r22*x2468))+(((-1.0)*r21*x2470))+((r20*x2469))+((sj0*sj1))+(((-1.0)*cj1*x2463)));
evalcond[4]=((((-1.0)*r01*x2470))+(((-1.0)*cj2*x2465))+(((-1.0)*cj2*sj1*x2463))+(((-1.0)*r02*x2468))+((r00*x2469)));
evalcond[5]=((((-1.0)*x2464*x2465))+(((-1.0)*r11*x2470))+(((-1.0)*r12*x2468))+(((-1.0)*sj1*sj2*x2463))+((r10*x2469)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2472=((1.0)*gconst80);
CheckValue<IkReal> x2473 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst79*r21))+(((-1.0)*cj2*r20*x2472)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2473.valid){
continue;
}
CheckValue<IkReal> x2474=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x2472))+(((-1.0)*gconst79*r00)))),-1);
if(!x2474.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2473.value)+(((1.5707963267949)*(x2474.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2475=IKsin(j5);
IkReal x2476=IKcos(j5);
IkReal x2477=((1.0)*cj0);
IkReal x2478=((1.0)*sj2);
IkReal x2479=(cj1*sj0);
IkReal x2480=((1.0)*x2476);
IkReal x2481=(gconst79*x2475);
IkReal x2482=((1.0)*x2475);
IkReal x2483=(gconst80*x2476);
IkReal x2484=(gconst79*x2480);
IkReal x2485=(gconst80*x2482);
evalcond[0]=((((-1.0)*r22*x2480))+(((-1.0)*r20*x2485))+((r21*x2481)));
evalcond[1]=(cj2+(((-1.0)*r10*x2485))+((r11*x2481))+(((-1.0)*r12*x2480)));
evalcond[2]=(((r01*x2481))+(((-1.0)*r00*x2485))+(((-1.0)*x2478))+(((-1.0)*r02*x2480)));
evalcond[3]=((((-1.0)*r22*x2482))+((sj0*sj1))+(((-1.0)*r21*x2484))+(((-1.0)*cj1*x2477))+((r20*x2483)));
evalcond[4]=((((-1.0)*r01*x2484))+(((-1.0)*cj2*x2479))+(((-1.0)*r02*x2482))+(((-1.0)*cj2*sj1*x2477))+((r00*x2483)));
evalcond[5]=((((-1.0)*x2478*x2479))+(((-1.0)*sj1*sj2*x2477))+(((-1.0)*r12*x2482))+(((-1.0)*r11*x2484))+((r10*x2483)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2486=((-1.0)*r21);
IkReal x2488 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x2488)==0){
continue;
}
IkReal x2487=pow(x2488,-0.5);
CheckValue<IkReal> x2489 = IKatan2WithCheck(IkReal(x2486),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x2489.valid){
continue;
}
IkReal gconst81=((3.14159265358979)+(((-1.0)*(x2489.value))));
IkReal gconst82=(x2486*x2487);
IkReal gconst83=((1.0)*r20*x2487);
CheckValue<IkReal> x2490 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x2490.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x2490.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x2491=((-1.0)*r21);
CheckValue<IkReal> x2494 = IKatan2WithCheck(IkReal(x2491),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x2494.valid){
continue;
}
IkReal x2492=((1.0)*(x2494.value));
IkReal x2493=x2487;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst82;
cj6=gconst83;
j6=((3.14159265)+(((-1.0)*x2492)));
IkReal gconst81=((3.14159265358979)+(((-1.0)*x2492)));
IkReal gconst82=(x2491*x2493);
IkReal gconst83=((1.0)*r20*x2493);
IkReal x2495=r22*r22;
IkReal x2496=((1.0)*x2495);
CheckValue<IkReal> x2500=IKPowWithIntegerCheck(((-1.0)+x2495),-1);
if(!x2500.valid){
continue;
}
IkReal x2497=x2500.value;
if((((1.0)+(((-1.0)*x2496)))) < -0.00001)
continue;
IkReal x2498=IKsqrt(((1.0)+(((-1.0)*x2496))));
IkReal x2499=(cj2*x2497*x2498);
j5eval[0]=((IKabs(((((-1.0)*x2496*x2499))+x2499)))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x2501=((-1.0)*r21);
CheckValue<IkReal> x2504 = IKatan2WithCheck(IkReal(x2501),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x2504.valid){
continue;
}
IkReal x2502=((1.0)*(x2504.value));
IkReal x2503=x2487;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst82;
cj6=gconst83;
j6=((3.14159265)+(((-1.0)*x2502)));
IkReal gconst81=((3.14159265358979)+(((-1.0)*x2502)));
IkReal gconst82=(x2501*x2503);
IkReal gconst83=((1.0)*r20*x2503);
IkReal x2505=r22*r22;
IkReal x2506=((1.0)*x2505);
CheckValue<IkReal> x2510=IKPowWithIntegerCheck(((-1.0)+x2505),-1);
if(!x2510.valid){
continue;
}
IkReal x2507=x2510.value;
if((((1.0)+(((-1.0)*x2506)))) < -0.00001)
continue;
IkReal x2508=IKsqrt(((1.0)+(((-1.0)*x2506))));
IkReal x2509=(sj2*x2507*x2508);
j5eval[0]=((IKabs((x2509+(((-1.0)*x2506*x2509)))))+(IKabs((r22*sj2))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x2511=((-1.0)*r21);
CheckValue<IkReal> x2514 = IKatan2WithCheck(IkReal(x2511),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x2514.valid){
continue;
}
IkReal x2512=((1.0)*(x2514.value));
IkReal x2513=x2487;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst82;
cj6=gconst83;
j6=((3.14159265)+(((-1.0)*x2512)));
IkReal gconst81=((3.14159265358979)+(((-1.0)*x2512)));
IkReal gconst82=(x2511*x2513);
IkReal gconst83=((1.0)*r20*x2513);
IkReal x2515=r22*r22;
IkReal x2516=(r12*sj2);
IkReal x2517=(cj2*r02);
CheckValue<IkReal> x2521=IKPowWithIntegerCheck(((-1.0)+x2515),-1);
if(!x2521.valid){
continue;
}
IkReal x2518=x2521.value;
if((((1.0)+(((-1.0)*x2515)))) < -0.00001)
continue;
IkReal x2519=IKsqrt(((1.0)+(((-1.0)*x2515))));
IkReal x2520=(r22*x2518*x2519);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=((IKabs((((x2516*x2520))+((x2517*x2520)))))+(IKabs(((((-1.0)*x2516))+(((-1.0)*x2517))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2522=((1.0)*sj2);
IkReal x2523=((1.0)*cj2);
CheckValue<IkReal> x2524=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst82*r20))+(((-1.0)*gconst83*r21)))),-1);
if(!x2524.valid){
continue;
}
CheckValue<IkReal> x2525 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x2522))+(((-1.0)*r02*x2523)))),IkReal((((gconst83*r10*sj2))+((cj2*gconst83*r00))+(((-1.0)*gconst82*r11*x2522))+(((-1.0)*gconst82*r01*x2523)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2525.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2524.value)))+(x2525.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2526=IKsin(j5);
IkReal x2527=IKcos(j5);
IkReal x2528=((1.0)*cj0);
IkReal x2529=((1.0)*sj2);
IkReal x2530=(cj1*sj0);
IkReal x2531=(gconst83*x2527);
IkReal x2532=(gconst82*x2526);
IkReal x2533=((1.0)*x2526);
IkReal x2534=((1.0)*x2527);
IkReal x2535=(gconst82*x2534);
evalcond[0]=((((-1.0)*gconst83*r20*x2533))+((r21*x2532))+(((-1.0)*r22*x2534)));
evalcond[1]=(cj2+(((-1.0)*gconst83*r10*x2533))+(((-1.0)*r12*x2534))+((r11*x2532)));
evalcond[2]=(((r01*x2532))+(((-1.0)*r02*x2534))+(((-1.0)*gconst83*r00*x2533))+(((-1.0)*x2529)));
evalcond[3]=((((-1.0)*r21*x2535))+((r20*x2531))+((sj0*sj1))+(((-1.0)*cj1*x2528))+(((-1.0)*r22*x2533)));
evalcond[4]=((((-1.0)*r01*x2535))+(((-1.0)*r02*x2533))+(((-1.0)*cj2*sj1*x2528))+(((-1.0)*cj2*x2530))+((r00*x2531)));
evalcond[5]=(((r10*x2531))+(((-1.0)*sj1*sj2*x2528))+(((-1.0)*r12*x2533))+(((-1.0)*r11*x2535))+(((-1.0)*x2529*x2530)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2536=((1.0)*gconst83);
CheckValue<IkReal> x2537 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x2536))+((gconst82*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2537.valid){
continue;
}
CheckValue<IkReal> x2538=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst82*r10))+(((-1.0)*r11*x2536)))),-1);
if(!x2538.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2537.value)+(((1.5707963267949)*(x2538.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2539=IKsin(j5);
IkReal x2540=IKcos(j5);
IkReal x2541=((1.0)*cj0);
IkReal x2542=((1.0)*sj2);
IkReal x2543=(cj1*sj0);
IkReal x2544=(gconst83*x2540);
IkReal x2545=(gconst82*x2539);
IkReal x2546=((1.0)*x2539);
IkReal x2547=((1.0)*x2540);
IkReal x2548=(gconst82*x2547);
evalcond[0]=(((r21*x2545))+(((-1.0)*gconst83*r20*x2546))+(((-1.0)*r22*x2547)));
evalcond[1]=((((-1.0)*r12*x2547))+cj2+((r11*x2545))+(((-1.0)*gconst83*r10*x2546)));
evalcond[2]=((((-1.0)*gconst83*r00*x2546))+((r01*x2545))+(((-1.0)*x2542))+(((-1.0)*r02*x2547)));
evalcond[3]=(((sj0*sj1))+((r20*x2544))+(((-1.0)*cj1*x2541))+(((-1.0)*r21*x2548))+(((-1.0)*r22*x2546)));
evalcond[4]=(((r00*x2544))+(((-1.0)*r01*x2548))+(((-1.0)*cj2*sj1*x2541))+(((-1.0)*r02*x2546))+(((-1.0)*cj2*x2543)));
evalcond[5]=((((-1.0)*x2542*x2543))+(((-1.0)*r12*x2546))+(((-1.0)*r11*x2548))+(((-1.0)*sj1*sj2*x2541))+((r10*x2544)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2549=((1.0)*gconst83);
CheckValue<IkReal> x2550=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst82*r00))+(((-1.0)*r01*x2549)))),-1);
if(!x2550.valid){
continue;
}
CheckValue<IkReal> x2551 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst82*r21))+(((-1.0)*cj2*r20*x2549)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2551.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2550.value)))+(x2551.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2552=IKsin(j5);
IkReal x2553=IKcos(j5);
IkReal x2554=((1.0)*cj0);
IkReal x2555=((1.0)*sj2);
IkReal x2556=(cj1*sj0);
IkReal x2557=(gconst83*x2553);
IkReal x2558=(gconst82*x2552);
IkReal x2559=((1.0)*x2552);
IkReal x2560=((1.0)*x2553);
IkReal x2561=(gconst82*x2560);
evalcond[0]=((((-1.0)*r22*x2560))+(((-1.0)*gconst83*r20*x2559))+((r21*x2558)));
evalcond[1]=((((-1.0)*gconst83*r10*x2559))+cj2+((r11*x2558))+(((-1.0)*r12*x2560)));
evalcond[2]=((((-1.0)*r02*x2560))+(((-1.0)*gconst83*r00*x2559))+((r01*x2558))+(((-1.0)*x2555)));
evalcond[3]=((((-1.0)*r21*x2561))+((sj0*sj1))+(((-1.0)*cj1*x2554))+((r20*x2557))+(((-1.0)*r22*x2559)));
evalcond[4]=((((-1.0)*cj2*x2556))+(((-1.0)*r01*x2561))+((r00*x2557))+(((-1.0)*r02*x2559))+(((-1.0)*cj2*sj1*x2554)));
evalcond[5]=((((-1.0)*r12*x2559))+(((-1.0)*x2555*x2556))+(((-1.0)*sj1*sj2*x2554))+((r10*x2557))+(((-1.0)*r11*x2561)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2562=((-1.0)*r10);
IkReal x2564 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x2564)==0){
continue;
}
IkReal x2563=pow(x2564,-0.5);
CheckValue<IkReal> x2565 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x2562),IKFAST_ATAN2_MAGTHRESH);
if(!x2565.valid){
continue;
}
IkReal gconst84=((-1.0)*(x2565.value));
IkReal gconst85=(r11*x2563);
IkReal gconst86=(x2562*x2563);
CheckValue<IkReal> x2566 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x2566.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x2566.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x2567=((-1.0)*r10);
IkReal x2568=x2563;
CheckValue<IkReal> x2570 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x2567),IKFAST_ATAN2_MAGTHRESH);
if(!x2570.valid){
continue;
}
IkReal x2569=((-1.0)*(x2570.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst85;
cj6=gconst86;
j6=x2569;
IkReal gconst84=x2569;
IkReal gconst85=(r11*x2568);
IkReal gconst86=(x2567*x2568);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2571=((1.0)*sj2);
IkReal x2572=((1.0)*cj2);
CheckValue<IkReal> x2573=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst85*r20))+(((-1.0)*gconst86*r21)))),-1);
if(!x2573.valid){
continue;
}
CheckValue<IkReal> x2574 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x2571))+(((-1.0)*r02*x2572)))),IkReal(((((-1.0)*gconst85*r01*x2572))+(((-1.0)*gconst85*r11*x2571))+((cj2*gconst86*r00))+((gconst86*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2574.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2573.value)))+(x2574.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2575=IKsin(j5);
IkReal x2576=IKcos(j5);
IkReal x2577=((1.0)*cj0);
IkReal x2578=((1.0)*sj2);
IkReal x2579=(cj1*sj0);
IkReal x2580=(gconst86*x2576);
IkReal x2581=(gconst85*x2575);
IkReal x2582=((1.0)*x2575);
IkReal x2583=((1.0)*x2576);
evalcond[0]=((((-1.0)*gconst86*r20*x2582))+((r21*x2581))+(((-1.0)*r22*x2583)));
evalcond[1]=(cj2+((r11*x2581))+(((-1.0)*gconst86*r10*x2582))+(((-1.0)*r12*x2583)));
evalcond[2]=(((r01*x2581))+(((-1.0)*r02*x2583))+(((-1.0)*x2578))+(((-1.0)*gconst86*r00*x2582)));
evalcond[3]=((((-1.0)*gconst85*r21*x2583))+((r20*x2580))+((sj0*sj1))+(((-1.0)*cj1*x2577))+(((-1.0)*r22*x2582)));
evalcond[4]=(((r00*x2580))+(((-1.0)*r02*x2582))+(((-1.0)*cj2*sj1*x2577))+(((-1.0)*gconst85*r01*x2583))+(((-1.0)*cj2*x2579)));
evalcond[5]=(((r10*x2580))+(((-1.0)*x2578*x2579))+(((-1.0)*sj1*sj2*x2577))+(((-1.0)*gconst85*r11*x2583))+(((-1.0)*r12*x2582)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2584=((1.0)*gconst86);
CheckValue<IkReal> x2585=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x2584))+(((-1.0)*gconst85*r00)))),-1);
if(!x2585.valid){
continue;
}
CheckValue<IkReal> x2586 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x2584))+((cj2*gconst85*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2586.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2585.value)))+(x2586.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2587=IKsin(j5);
IkReal x2588=IKcos(j5);
IkReal x2589=((1.0)*cj0);
IkReal x2590=((1.0)*sj2);
IkReal x2591=(cj1*sj0);
IkReal x2592=(gconst86*x2588);
IkReal x2593=(gconst85*x2587);
IkReal x2594=((1.0)*x2587);
IkReal x2595=((1.0)*x2588);
evalcond[0]=((((-1.0)*r22*x2595))+(((-1.0)*gconst86*r20*x2594))+((r21*x2593)));
evalcond[1]=(cj2+((r11*x2593))+(((-1.0)*r12*x2595))+(((-1.0)*gconst86*r10*x2594)));
evalcond[2]=((((-1.0)*gconst86*r00*x2594))+((r01*x2593))+(((-1.0)*r02*x2595))+(((-1.0)*x2590)));
evalcond[3]=((((-1.0)*cj1*x2589))+(((-1.0)*r22*x2594))+(((-1.0)*gconst85*r21*x2595))+((r20*x2592))+((sj0*sj1)));
evalcond[4]=(((r00*x2592))+(((-1.0)*cj2*sj1*x2589))+(((-1.0)*r02*x2594))+(((-1.0)*cj2*x2591))+(((-1.0)*gconst85*r01*x2595)));
evalcond[5]=((((-1.0)*x2590*x2591))+(((-1.0)*sj1*sj2*x2589))+((r10*x2592))+(((-1.0)*gconst85*r11*x2595))+(((-1.0)*r12*x2594)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2596=((-1.0)*r11);
IkReal x2598 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x2598)==0){
continue;
}
IkReal x2597=pow(x2598,-0.5);
CheckValue<IkReal> x2599 = IKatan2WithCheck(IkReal(x2596),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x2599.valid){
continue;
}
IkReal gconst87=((3.14159265358979)+(((-1.0)*(x2599.value))));
IkReal gconst88=(x2596*x2597);
IkReal gconst89=((1.0)*r10*x2597);
CheckValue<IkReal> x2600 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x2600.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x2600.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x2601=((-1.0)*r11);
CheckValue<IkReal> x2604 = IKatan2WithCheck(IkReal(x2601),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x2604.valid){
continue;
}
IkReal x2602=((1.0)*(x2604.value));
IkReal x2603=x2597;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst88;
cj6=gconst89;
j6=((3.14159265)+(((-1.0)*x2602)));
IkReal gconst87=((3.14159265358979)+(((-1.0)*x2602)));
IkReal gconst88=(x2601*x2603);
IkReal gconst89=((1.0)*r10*x2603);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x2605=((-1.0)*r11);
CheckValue<IkReal> x2608 = IKatan2WithCheck(IkReal(x2605),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x2608.valid){
continue;
}
IkReal x2606=((1.0)*(x2608.value));
IkReal x2607=x2597;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst88;
cj6=gconst89;
j6=((3.14159265)+(((-1.0)*x2606)));
IkReal gconst87=((3.14159265358979)+(((-1.0)*x2606)));
IkReal gconst88=(x2605*x2607);
IkReal gconst89=((1.0)*r10*x2607);
IkReal x2609=r12*r12;
IkReal x2610=((1.0)*sj2);
IkReal x2611=(cj2*r02);
IkReal x2612=x2597;
j5eval[0]=((IKabs(((((-1.0)*x2610*x2612))+((r12*x2611*x2612))+((sj2*x2609*x2612)))))+(IKabs(((((-1.0)*x2611))+(((-1.0)*r12*x2610))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x2613=((-1.0)*r11);
CheckValue<IkReal> x2616 = IKatan2WithCheck(IkReal(x2613),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x2616.valid){
continue;
}
IkReal x2614=((1.0)*(x2616.value));
IkReal x2615=x2597;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst88;
cj6=gconst89;
j6=((3.14159265)+(((-1.0)*x2614)));
IkReal gconst87=((3.14159265358979)+(((-1.0)*x2614)));
IkReal gconst88=(x2613*x2615);
IkReal gconst89=((1.0)*r10*x2615);
IkReal x2617=r12*r12;
IkReal x2618=(cj0*cj1*r22);
IkReal x2619=(r22*sj0*sj1);
CheckValue<IkReal> x2623=IKPowWithIntegerCheck(((-1.0)+x2617),-1);
if(!x2623.valid){
continue;
}
IkReal x2620=x2623.value;
if((((1.0)+(((-1.0)*x2617)))) < -0.00001)
continue;
IkReal x2621=IKsqrt(((1.0)+(((-1.0)*x2617))));
IkReal x2622=(r12*x2620*x2621);
j5eval[0]=((IKabs((((x2618*x2622))+(((-1.0)*x2619*x2622)))))+(IKabs(((((-1.0)*x2618))+x2619))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2624=(gconst88*r21);
IkReal x2625=(gconst89*r20);
IkReal x2626=(sj0*sj1);
IkReal x2627=((1.0)*cj0*cj1);
CheckValue<IkReal> x2628 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x2627))+((r22*x2626)))),IkReal((((x2624*x2626))+(((-1.0)*x2624*x2627))+(((-1.0)*x2625*x2626))+((cj0*cj1*x2625)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2628.valid){
continue;
}
CheckValue<IkReal> x2629=IKPowWithIntegerCheck(IKsign(((x2624*x2624)+(r22*r22)+(x2625*x2625)+(((-2.0)*x2624*x2625)))),-1);
if(!x2629.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2628.value)+(((1.5707963267949)*(x2629.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2630=IKsin(j5);
IkReal x2631=IKcos(j5);
IkReal x2632=(gconst89*r10);
IkReal x2633=((1.0)*cj0);
IkReal x2634=(gconst89*r20);
IkReal x2635=((1.0)*sj2);
IkReal x2636=(cj1*sj0);
IkReal x2637=(gconst89*r00);
IkReal x2638=(gconst88*x2630);
IkReal x2639=((1.0)*x2630);
IkReal x2640=((1.0)*x2631);
IkReal x2641=(gconst88*x2640);
evalcond[0]=((((-1.0)*r22*x2640))+((r21*x2638))+(((-1.0)*x2634*x2639)));
evalcond[1]=((((-1.0)*r12*x2640))+cj2+((r11*x2638))+(((-1.0)*x2632*x2639)));
evalcond[2]=((((-1.0)*x2635))+(((-1.0)*r02*x2640))+(((-1.0)*x2637*x2639))+((r01*x2638)));
evalcond[3]=((((-1.0)*cj1*x2633))+((sj0*sj1))+(((-1.0)*r21*x2641))+((x2631*x2634))+(((-1.0)*r22*x2639)));
evalcond[4]=((((-1.0)*r02*x2639))+(((-1.0)*cj2*x2636))+(((-1.0)*r01*x2641))+((x2631*x2637))+(((-1.0)*cj2*sj1*x2633)));
evalcond[5]=((((-1.0)*sj1*sj2*x2633))+(((-1.0)*r11*x2641))+(((-1.0)*x2635*x2636))+(((-1.0)*r12*x2639))+((x2631*x2632)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2642=((1.0)*sj2);
IkReal x2643=((1.0)*cj2);
CheckValue<IkReal> x2644 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x2642))+(((-1.0)*r02*x2643)))),IkReal((((cj2*gconst89*r00))+(((-1.0)*gconst88*r11*x2642))+(((-1.0)*gconst88*r01*x2643))+((gconst89*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2644.valid){
continue;
}
CheckValue<IkReal> x2645=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst88*r20))+(((-1.0)*gconst89*r21)))),-1);
if(!x2645.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2644.value)+(((1.5707963267949)*(x2645.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2646=IKsin(j5);
IkReal x2647=IKcos(j5);
IkReal x2648=(gconst89*r10);
IkReal x2649=((1.0)*cj0);
IkReal x2650=(gconst89*r20);
IkReal x2651=((1.0)*sj2);
IkReal x2652=(cj1*sj0);
IkReal x2653=(gconst89*r00);
IkReal x2654=(gconst88*x2646);
IkReal x2655=((1.0)*x2646);
IkReal x2656=((1.0)*x2647);
IkReal x2657=(gconst88*x2656);
evalcond[0]=((((-1.0)*r22*x2656))+(((-1.0)*x2650*x2655))+((r21*x2654)));
evalcond[1]=(((r11*x2654))+cj2+(((-1.0)*r12*x2656))+(((-1.0)*x2648*x2655)));
evalcond[2]=((((-1.0)*r02*x2656))+((r01*x2654))+(((-1.0)*x2651))+(((-1.0)*x2653*x2655)));
evalcond[3]=((((-1.0)*r22*x2655))+(((-1.0)*cj1*x2649))+((sj0*sj1))+(((-1.0)*r21*x2657))+((x2647*x2650)));
evalcond[4]=((((-1.0)*r01*x2657))+(((-1.0)*r02*x2655))+(((-1.0)*cj2*x2652))+(((-1.0)*cj2*sj1*x2649))+((x2647*x2653)));
evalcond[5]=((((-1.0)*x2651*x2652))+(((-1.0)*r12*x2655))+(((-1.0)*r11*x2657))+(((-1.0)*sj1*sj2*x2649))+((x2647*x2648)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2658=((1.0)*gconst89);
CheckValue<IkReal> x2659 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x2658))+((cj2*gconst88*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2659.valid){
continue;
}
CheckValue<IkReal> x2660=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x2658))+(((-1.0)*gconst88*r00)))),-1);
if(!x2660.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2659.value)+(((1.5707963267949)*(x2660.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2661=IKsin(j5);
IkReal x2662=IKcos(j5);
IkReal x2663=(gconst89*r10);
IkReal x2664=((1.0)*cj0);
IkReal x2665=(gconst89*r20);
IkReal x2666=((1.0)*sj2);
IkReal x2667=(cj1*sj0);
IkReal x2668=(gconst89*r00);
IkReal x2669=(gconst88*x2661);
IkReal x2670=((1.0)*x2661);
IkReal x2671=((1.0)*x2662);
IkReal x2672=(gconst88*x2671);
evalcond[0]=(((r21*x2669))+(((-1.0)*x2665*x2670))+(((-1.0)*r22*x2671)));
evalcond[1]=((((-1.0)*r12*x2671))+cj2+(((-1.0)*x2663*x2670))+((r11*x2669)));
evalcond[2]=((((-1.0)*r02*x2671))+(((-1.0)*x2666))+((r01*x2669))+(((-1.0)*x2668*x2670)));
evalcond[3]=(((x2662*x2665))+(((-1.0)*cj1*x2664))+((sj0*sj1))+(((-1.0)*r21*x2672))+(((-1.0)*r22*x2670)));
evalcond[4]=(((x2662*x2668))+(((-1.0)*r01*x2672))+(((-1.0)*cj2*x2667))+(((-1.0)*r02*x2670))+(((-1.0)*cj2*sj1*x2664)));
evalcond[5]=((((-1.0)*r12*x2670))+(((-1.0)*r11*x2672))+((x2662*x2663))+(((-1.0)*sj1*sj2*x2664))+(((-1.0)*x2666*x2667)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x2673=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x2673;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x2673);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x2674=((1.0)*cj6);
IkReal x2675=((((-1.0)*r01*x2674))+(((-1.0)*r00*sj6)));
j5eval[0]=x2675;
j5eval[1]=IKsign(x2675);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x2674))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x2676=cj6*cj6;
IkReal x2677=r11*r11;
IkReal x2678=(cj6*r10);
IkReal x2679=(r11*sj6);
IkReal x2680=(((x2676*(r10*r10)))+(r12*r12)+(((-2.0)*x2678*x2679))+(((-1.0)*x2676*x2677))+x2677);
j5eval[0]=x2680;
j5eval[1]=IKsign(x2680);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*x2679))+x2678))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2681=cj6*cj6;
IkReal x2682=r11*r11;
IkReal x2683=(cj6*r10);
IkReal x2684=(r11*sj6);
CheckValue<IkReal> x2685=IKPowWithIntegerCheck(IKsign(((r12*r12)+((x2681*(r10*r10)))+(((-2.0)*x2683*x2684))+(((-1.0)*x2681*x2682))+x2682)),-1);
if(!x2685.valid){
continue;
}
CheckValue<IkReal> x2686 = IKatan2WithCheck(IkReal(((((-1.0)*x2684))+x2683)),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x2686.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2685.value)))+(x2686.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2687=IKsin(j5);
IkReal x2688=IKcos(j5);
IkReal x2689=((1.0)*cj0);
IkReal x2690=(sj6*x2687);
IkReal x2691=((1.0)*x2687);
IkReal x2692=((1.0)*x2688);
IkReal x2693=(cj6*x2688);
IkReal x2694=(sj6*x2692);
IkReal x2695=(cj6*x2691);
evalcond[0]=((((-1.0)*r22*x2692))+((r21*x2690))+(((-1.0)*r20*x2695)));
evalcond[1]=((((-1.0)*r02*x2692))+(((-1.0)*r00*x2695))+((r01*x2690)));
evalcond[2]=(((r10*x2693))+(((-1.0)*r12*x2691))+(((-1.0)*r11*x2694)));
evalcond[3]=((1.0)+(((-1.0)*r10*x2695))+(((-1.0)*r12*x2692))+((r11*x2690)));
evalcond[4]=((((-1.0)*cj1*x2689))+((sj0*sj1))+(((-1.0)*r22*x2691))+((r20*x2693))+(((-1.0)*r21*x2694)));
evalcond[5]=((((-1.0)*sj1*x2689))+(((-1.0)*r02*x2691))+(((-1.0)*cj1*sj0))+((r00*x2693))+(((-1.0)*r01*x2694)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2696=((1.0)*cj6);
CheckValue<IkReal> x2697 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x2696)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2697.valid){
continue;
}
CheckValue<IkReal> x2698=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x2696)))),-1);
if(!x2698.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2697.value)+(((1.5707963267949)*(x2698.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2699=IKsin(j5);
IkReal x2700=IKcos(j5);
IkReal x2701=((1.0)*cj0);
IkReal x2702=(sj6*x2699);
IkReal x2703=((1.0)*x2699);
IkReal x2704=((1.0)*x2700);
IkReal x2705=(cj6*x2700);
IkReal x2706=(sj6*x2704);
IkReal x2707=(cj6*x2703);
evalcond[0]=((((-1.0)*r22*x2704))+(((-1.0)*r20*x2707))+((r21*x2702)));
evalcond[1]=((((-1.0)*r00*x2707))+((r01*x2702))+(((-1.0)*r02*x2704)));
evalcond[2]=((((-1.0)*r12*x2703))+((r10*x2705))+(((-1.0)*r11*x2706)));
evalcond[3]=((1.0)+(((-1.0)*r10*x2707))+((r11*x2702))+(((-1.0)*r12*x2704)));
evalcond[4]=((((-1.0)*r22*x2703))+((sj0*sj1))+((r20*x2705))+(((-1.0)*r21*x2706))+(((-1.0)*cj1*x2701)));
evalcond[5]=(((r00*x2705))+(((-1.0)*r01*x2706))+(((-1.0)*cj1*sj0))+(((-1.0)*r02*x2703))+(((-1.0)*sj1*x2701)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x2708=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x2708.valid){
continue;
}
CheckValue<IkReal> x2709 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2709.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2708.value)))+(x2709.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2710=IKsin(j5);
IkReal x2711=IKcos(j5);
IkReal x2712=((1.0)*cj0);
IkReal x2713=(sj6*x2710);
IkReal x2714=((1.0)*x2710);
IkReal x2715=((1.0)*x2711);
IkReal x2716=(cj6*x2711);
IkReal x2717=(sj6*x2715);
IkReal x2718=(cj6*x2714);
evalcond[0]=((((-1.0)*r20*x2718))+(((-1.0)*r22*x2715))+((r21*x2713)));
evalcond[1]=((((-1.0)*r02*x2715))+(((-1.0)*r00*x2718))+((r01*x2713)));
evalcond[2]=(((r10*x2716))+(((-1.0)*r12*x2714))+(((-1.0)*r11*x2717)));
evalcond[3]=((1.0)+(((-1.0)*r10*x2718))+((r11*x2713))+(((-1.0)*r12*x2715)));
evalcond[4]=((((-1.0)*r21*x2717))+((sj0*sj1))+(((-1.0)*r22*x2714))+(((-1.0)*cj1*x2712))+((r20*x2716)));
evalcond[5]=((((-1.0)*r02*x2714))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x2712))+(((-1.0)*r01*x2717))+((r00*x2716)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x2719=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x2719;
j5eval[1]=IKsign(x2719);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x2720=((1.0)*cj6);
IkReal x2721=((((-1.0)*r21*x2720))+(((-1.0)*r20*sj6)));
j5eval[0]=x2721;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*r00*x2720))+((r01*sj6))))));
j5eval[2]=IKsign(x2721);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x2722=cj6*cj6;
IkReal x2723=r11*r11;
IkReal x2724=(cj6*r10);
IkReal x2725=(r11*sj6);
IkReal x2726=((((2.0)*x2724*x2725))+(((-1.0)*x2723))+(((-1.0)*x2722*(r10*r10)))+(((-1.0)*(r12*r12)))+((x2722*x2723)));
j5eval[0]=x2726;
j5eval[1]=((IKabs((x2724+(((-1.0)*x2725)))))+(IKabs(r12)));
j5eval[2]=IKsign(x2726);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2727=cj6*cj6;
IkReal x2728=r11*r11;
IkReal x2729=(cj6*r10);
IkReal x2730=(r11*sj6);
CheckValue<IkReal> x2731=IKPowWithIntegerCheck(IKsign(((((-1.0)*x2728))+(((2.0)*x2729*x2730))+((x2727*x2728))+(((-1.0)*(r12*r12)))+(((-1.0)*x2727*(r10*r10))))),-1);
if(!x2731.valid){
continue;
}
CheckValue<IkReal> x2732 = IKatan2WithCheck(IkReal((x2729+(((-1.0)*x2730)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x2732.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2731.value)))+(x2732.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2733=IKsin(j5);
IkReal x2734=IKcos(j5);
IkReal x2735=(sj6*x2733);
IkReal x2736=((1.0)*x2733);
IkReal x2737=((1.0)*x2734);
IkReal x2738=(cj6*x2734);
IkReal x2739=(sj6*x2737);
IkReal x2740=(cj6*x2736);
evalcond[0]=(((r21*x2735))+(((-1.0)*r22*x2737))+(((-1.0)*r20*x2740)));
evalcond[1]=((((-1.0)*r00*x2740))+((r01*x2735))+(((-1.0)*r02*x2737)));
evalcond[2]=((((-1.0)*r11*x2739))+(((-1.0)*r12*x2736))+((r10*x2738)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x2740))+(((-1.0)*r12*x2737))+((r11*x2735)));
evalcond[4]=(((cj1*sj0))+((r00*x2738))+(((-1.0)*r02*x2736))+(((-1.0)*r01*x2739))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*r22*x2736))+((r20*x2738))+(((-1.0)*cj0*cj1))+(((-1.0)*r21*x2739)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2741=((1.0)*cj6);
CheckValue<IkReal> x2742 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*r00*x2741)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2742.valid){
continue;
}
CheckValue<IkReal> x2743=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x2741))+(((-1.0)*r20*sj6)))),-1);
if(!x2743.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2742.value)+(((1.5707963267949)*(x2743.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2744=IKsin(j5);
IkReal x2745=IKcos(j5);
IkReal x2746=(sj6*x2744);
IkReal x2747=((1.0)*x2744);
IkReal x2748=((1.0)*x2745);
IkReal x2749=(cj6*x2745);
IkReal x2750=(sj6*x2748);
IkReal x2751=(cj6*x2747);
evalcond[0]=(((r21*x2746))+(((-1.0)*r20*x2751))+(((-1.0)*r22*x2748)));
evalcond[1]=((((-1.0)*r00*x2751))+((r01*x2746))+(((-1.0)*r02*x2748)));
evalcond[2]=(((r10*x2749))+(((-1.0)*r11*x2750))+(((-1.0)*r12*x2747)));
evalcond[3]=((-1.0)+((r11*x2746))+(((-1.0)*r10*x2751))+(((-1.0)*r12*x2748)));
evalcond[4]=((((-1.0)*r01*x2750))+((cj1*sj0))+((r00*x2749))+(((-1.0)*r02*x2747))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+((r20*x2749))+(((-1.0)*cj0*cj1))+(((-1.0)*r21*x2750))+(((-1.0)*r22*x2747)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x2752=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x2752.valid){
continue;
}
CheckValue<IkReal> x2753 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2753.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2752.value)))+(x2753.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2754=IKsin(j5);
IkReal x2755=IKcos(j5);
IkReal x2756=(sj6*x2754);
IkReal x2757=((1.0)*x2754);
IkReal x2758=((1.0)*x2755);
IkReal x2759=(cj6*x2755);
IkReal x2760=(sj6*x2758);
IkReal x2761=(cj6*x2757);
evalcond[0]=((((-1.0)*r22*x2758))+((r21*x2756))+(((-1.0)*r20*x2761)));
evalcond[1]=((((-1.0)*r00*x2761))+((r01*x2756))+(((-1.0)*r02*x2758)));
evalcond[2]=((((-1.0)*r11*x2760))+((r10*x2759))+(((-1.0)*r12*x2757)));
evalcond[3]=((-1.0)+((r11*x2756))+(((-1.0)*r10*x2761))+(((-1.0)*r12*x2758)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*r01*x2760))+((r00*x2759))+((cj0*sj1))+(((-1.0)*r02*x2757)));
evalcond[5]=((((-1.0)*r22*x2757))+((sj0*sj1))+((r20*x2759))+(((-1.0)*r21*x2760))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2762=((-1.0)*r00);
IkReal x2764 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x2764)==0){
continue;
}
IkReal x2763=pow(x2764,-0.5);
CheckValue<IkReal> x2765 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x2762),IKFAST_ATAN2_MAGTHRESH);
if(!x2765.valid){
continue;
}
IkReal gconst90=((-1.0)*(x2765.value));
IkReal gconst91=(r01*x2763);
IkReal gconst92=(x2762*x2763);
CheckValue<IkReal> x2766 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2766.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x2766.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x2767=((-1.0)*r00);
IkReal x2768=x2763;
CheckValue<IkReal> x2770 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x2767),IKFAST_ATAN2_MAGTHRESH);
if(!x2770.valid){
continue;
}
IkReal x2769=((-1.0)*(x2770.value));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst91;
cj6=gconst92;
j6=x2769;
IkReal gconst90=x2769;
IkReal gconst91=(r01*x2768);
IkReal gconst92=(x2767*x2768);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2771=((1.0)*sj2);
IkReal x2772=((1.0)*cj2);
CheckValue<IkReal> x2773 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x2772))+(((-1.0)*r12*x2771)))),IkReal(((((-1.0)*gconst91*r11*x2771))+((gconst92*r10*sj2))+(((-1.0)*gconst91*r01*x2772))+((cj2*gconst92*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2773.valid){
continue;
}
CheckValue<IkReal> x2774=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst91*r20))+(((-1.0)*gconst92*r21)))),-1);
if(!x2774.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2773.value)+(((1.5707963267949)*(x2774.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2775=IKsin(j5);
IkReal x2776=IKcos(j5);
IkReal x2777=((1.0)*cj0);
IkReal x2778=((1.0)*sj2);
IkReal x2779=(cj1*sj0);
IkReal x2780=(gconst91*x2775);
IkReal x2781=(gconst92*x2776);
IkReal x2782=((1.0)*x2775);
IkReal x2783=((1.0)*x2776);
evalcond[0]=(((r21*x2780))+(((-1.0)*r22*x2783))+(((-1.0)*gconst92*r20*x2782)));
evalcond[1]=((((-1.0)*r12*x2783))+cj2+(((-1.0)*gconst92*r10*x2782))+((r11*x2780)));
evalcond[2]=((((-1.0)*gconst92*r00*x2782))+(((-1.0)*x2778))+((r01*x2780))+(((-1.0)*r02*x2783)));
evalcond[3]=(((sj0*sj1))+(((-1.0)*r22*x2782))+(((-1.0)*cj1*x2777))+(((-1.0)*gconst91*r21*x2783))+((r20*x2781)));
evalcond[4]=((((-1.0)*cj2*sj1*x2777))+(((-1.0)*gconst91*r01*x2783))+((r00*x2781))+(((-1.0)*cj2*x2779))+(((-1.0)*r02*x2782)));
evalcond[5]=((((-1.0)*r12*x2782))+(((-1.0)*sj1*sj2*x2777))+(((-1.0)*gconst91*r11*x2783))+(((-1.0)*x2778*x2779))+((r10*x2781)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2784=((1.0)*gconst92);
CheckValue<IkReal> x2785 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x2784))+((gconst91*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2785.valid){
continue;
}
CheckValue<IkReal> x2786=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst91*r10))+(((-1.0)*r11*x2784)))),-1);
if(!x2786.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2785.value)+(((1.5707963267949)*(x2786.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2787=IKsin(j5);
IkReal x2788=IKcos(j5);
IkReal x2789=((1.0)*cj0);
IkReal x2790=((1.0)*sj2);
IkReal x2791=(cj1*sj0);
IkReal x2792=(gconst91*x2787);
IkReal x2793=(gconst92*x2788);
IkReal x2794=((1.0)*x2787);
IkReal x2795=((1.0)*x2788);
evalcond[0]=(((r21*x2792))+(((-1.0)*r22*x2795))+(((-1.0)*gconst92*r20*x2794)));
evalcond[1]=(cj2+(((-1.0)*gconst92*r10*x2794))+((r11*x2792))+(((-1.0)*r12*x2795)));
evalcond[2]=((((-1.0)*x2790))+(((-1.0)*gconst92*r00*x2794))+((r01*x2792))+(((-1.0)*r02*x2795)));
evalcond[3]=((((-1.0)*cj1*x2789))+((sj0*sj1))+(((-1.0)*gconst91*r21*x2795))+(((-1.0)*r22*x2794))+((r20*x2793)));
evalcond[4]=((((-1.0)*cj2*sj1*x2789))+(((-1.0)*gconst91*r01*x2795))+(((-1.0)*cj2*x2791))+((r00*x2793))+(((-1.0)*r02*x2794)));
evalcond[5]=((((-1.0)*x2790*x2791))+(((-1.0)*gconst91*r11*x2795))+(((-1.0)*sj1*sj2*x2789))+((r10*x2793))+(((-1.0)*r12*x2794)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x2796=((-1.0)*r01);
IkReal x2798 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x2798)==0){
continue;
}
IkReal x2797=pow(x2798,-0.5);
CheckValue<IkReal> x2799 = IKatan2WithCheck(IkReal(x2796),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2799.valid){
continue;
}
IkReal gconst93=((3.14159265358979)+(((-1.0)*(x2799.value))));
IkReal gconst94=(x2796*x2797);
IkReal gconst95=((1.0)*r00*x2797);
CheckValue<IkReal> x2800 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2800.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x2800.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x2801=((-1.0)*r01);
CheckValue<IkReal> x2804 = IKatan2WithCheck(IkReal(x2801),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2804.valid){
continue;
}
IkReal x2802=((1.0)*(x2804.value));
IkReal x2803=x2797;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst94;
cj6=gconst95;
j6=((3.14159265)+(((-1.0)*x2802)));
IkReal gconst93=((3.14159265358979)+(((-1.0)*x2802)));
IkReal gconst94=(x2801*x2803);
IkReal gconst95=((1.0)*r00*x2803);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=cj2;
j5eval[3]=r22;
j5eval[4]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x2805=((-1.0)*r01);
CheckValue<IkReal> x2808 = IKatan2WithCheck(IkReal(x2805),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2808.valid){
continue;
}
IkReal x2806=((1.0)*(x2808.value));
IkReal x2807=x2797;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst94;
cj6=gconst95;
j6=((3.14159265)+(((-1.0)*x2806)));
IkReal gconst93=((3.14159265358979)+(((-1.0)*x2806)));
IkReal gconst94=(x2805*x2807);
IkReal gconst95=((1.0)*r00*x2807);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x2809=((-1.0)*r01);
CheckValue<IkReal> x2812 = IKatan2WithCheck(IkReal(x2809),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x2812.valid){
continue;
}
IkReal x2810=((1.0)*(x2812.value));
IkReal x2811=x2797;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj6=gconst94;
cj6=gconst95;
j6=((3.14159265)+(((-1.0)*x2810)));
IkReal gconst93=((3.14159265358979)+(((-1.0)*x2810)));
IkReal gconst94=(x2809*x2811);
IkReal gconst95=((1.0)*r00*x2811);
IkReal x2813=r02*r02;
IkReal x2814=(r12*sj2);
IkReal x2815=((1.0)*cj2);
IkReal x2816=x2797;
j5eval[0]=((IKabs(((((-1.0)*r02*x2815))+(((-1.0)*x2814)))))+(IKabs((((r02*x2814*x2816))+(((-1.0)*x2815*x2816))+((cj2*x2813*x2816))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2817=((1.0)*sj2);
IkReal x2818=((1.0)*cj2);
CheckValue<IkReal> x2819=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst95*r21))+(((-1.0)*gconst94*r20)))),-1);
if(!x2819.valid){
continue;
}
CheckValue<IkReal> x2820 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x2817))+(((-1.0)*r02*x2818)))),IkReal((((gconst95*r10*sj2))+(((-1.0)*gconst94*r11*x2817))+((cj2*gconst95*r00))+(((-1.0)*gconst94*r01*x2818)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2820.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2819.value)))+(x2820.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2821=IKsin(j5);
IkReal x2822=IKcos(j5);
IkReal x2823=((1.0)*sj2);
IkReal x2824=((1.0)*cj0);
IkReal x2825=(cj1*sj0);
IkReal x2826=(gconst94*x2821);
IkReal x2827=((1.0)*x2822);
IkReal x2828=((1.0)*x2821);
IkReal x2829=(gconst95*x2822);
IkReal x2830=(gconst95*x2828);
evalcond[0]=((((-1.0)*r20*x2830))+((r21*x2826))+(((-1.0)*r22*x2827)));
evalcond[1]=((((-1.0)*r12*x2827))+cj2+(((-1.0)*r10*x2830))+((r11*x2826)));
evalcond[2]=((((-1.0)*r00*x2830))+(((-1.0)*r02*x2827))+((r01*x2826))+(((-1.0)*x2823)));
evalcond[3]=(((r20*x2829))+(((-1.0)*cj1*x2824))+((sj0*sj1))+(((-1.0)*r22*x2828))+(((-1.0)*gconst94*r21*x2827)));
evalcond[4]=((((-1.0)*gconst94*r01*x2827))+(((-1.0)*cj2*sj1*x2824))+((r00*x2829))+(((-1.0)*r02*x2828))+(((-1.0)*cj2*x2825)));
evalcond[5]=((((-1.0)*r12*x2828))+((r10*x2829))+(((-1.0)*gconst94*r11*x2827))+(((-1.0)*cj0*sj1*x2823))+(((-1.0)*x2823*x2825)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2831=((1.0)*gconst95);
CheckValue<IkReal> x2832=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst94*r10))+(((-1.0)*r11*x2831)))),-1);
if(!x2832.valid){
continue;
}
CheckValue<IkReal> x2833 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst94*r21*sj2))+(((-1.0)*r20*sj2*x2831)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2833.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2832.value)))+(x2833.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2834=IKsin(j5);
IkReal x2835=IKcos(j5);
IkReal x2836=((1.0)*sj2);
IkReal x2837=((1.0)*cj0);
IkReal x2838=(cj1*sj0);
IkReal x2839=(gconst94*x2834);
IkReal x2840=((1.0)*x2835);
IkReal x2841=((1.0)*x2834);
IkReal x2842=(gconst95*x2835);
IkReal x2843=(gconst95*x2841);
evalcond[0]=((((-1.0)*r20*x2843))+(((-1.0)*r22*x2840))+((r21*x2839)));
evalcond[1]=(cj2+(((-1.0)*r12*x2840))+(((-1.0)*r10*x2843))+((r11*x2839)));
evalcond[2]=((((-1.0)*x2836))+(((-1.0)*r00*x2843))+(((-1.0)*r02*x2840))+((r01*x2839)));
evalcond[3]=((((-1.0)*cj1*x2837))+((r20*x2842))+((sj0*sj1))+(((-1.0)*gconst94*r21*x2840))+(((-1.0)*r22*x2841)));
evalcond[4]=((((-1.0)*cj2*sj1*x2837))+(((-1.0)*cj2*x2838))+(((-1.0)*gconst94*r01*x2840))+(((-1.0)*r02*x2841))+((r00*x2842)));
evalcond[5]=((((-1.0)*r12*x2841))+(((-1.0)*x2836*x2838))+(((-1.0)*gconst94*r11*x2840))+((r10*x2842))+(((-1.0)*cj0*sj1*x2836)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2844=((1.0)*gconst95);
CheckValue<IkReal> x2845=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst94*r00))+(((-1.0)*r01*x2844)))),-1);
if(!x2845.valid){
continue;
}
CheckValue<IkReal> x2846 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst94*r21))+(((-1.0)*cj2*r20*x2844)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2846.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2845.value)))+(x2846.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2847=IKsin(j5);
IkReal x2848=IKcos(j5);
IkReal x2849=((1.0)*sj2);
IkReal x2850=((1.0)*cj0);
IkReal x2851=(cj1*sj0);
IkReal x2852=(gconst94*x2847);
IkReal x2853=((1.0)*x2848);
IkReal x2854=((1.0)*x2847);
IkReal x2855=(gconst95*x2848);
IkReal x2856=(gconst95*x2854);
evalcond[0]=(((r21*x2852))+(((-1.0)*r20*x2856))+(((-1.0)*r22*x2853)));
evalcond[1]=(cj2+((r11*x2852))+(((-1.0)*r12*x2853))+(((-1.0)*r10*x2856)));
evalcond[2]=((((-1.0)*r00*x2856))+(((-1.0)*r02*x2853))+((r01*x2852))+(((-1.0)*x2849)));
evalcond[3]=((((-1.0)*cj1*x2850))+((r20*x2855))+((sj0*sj1))+(((-1.0)*gconst94*r21*x2853))+(((-1.0)*r22*x2854)));
evalcond[4]=((((-1.0)*cj2*x2851))+(((-1.0)*cj2*sj1*x2850))+(((-1.0)*gconst94*r01*x2853))+(((-1.0)*r02*x2854))+((r00*x2855)));
evalcond[5]=((((-1.0)*r12*x2854))+(((-1.0)*x2849*x2851))+(((-1.0)*gconst94*r11*x2853))+(((-1.0)*cj0*sj1*x2849))+((r10*x2855)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x2857=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x2857;
j5eval[1]=IKsign(x2857);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x2858=((1.0)*cj6);
IkReal x2859=((((-1.0)*r10*sj6))+(((-1.0)*r11*x2858)));
j5eval[0]=x2859;
j5eval[1]=IKsign(x2859);
j5eval[2]=((IKabs(r22))+(IKabs(((((-1.0)*r20*x2858))+((r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x2860=r01*r01;
IkReal x2861=cj6*cj6;
IkReal x2862=(cj6*r00);
IkReal x2863=(r01*sj6);
IkReal x2864=((((-1.0)*x2860))+(((-1.0)*(r02*r02)))+(((-1.0)*x2861*(r00*r00)))+(((2.0)*x2862*x2863))+((x2860*x2861)));
j5eval[0]=x2864;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*x2863))+x2862))));
j5eval[2]=IKsign(x2864);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2865=r01*r01;
IkReal x2866=cj6*cj6;
IkReal x2867=(cj6*r00);
IkReal x2868=(r01*sj6);
CheckValue<IkReal> x2869 = IKatan2WithCheck(IkReal(((((-1.0)*x2868))+x2867)),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x2869.valid){
continue;
}
CheckValue<IkReal> x2870=IKPowWithIntegerCheck(IKsign((((x2865*x2866))+(((-1.0)*x2865))+(((-1.0)*(r02*r02)))+(((2.0)*x2867*x2868))+(((-1.0)*x2866*(r00*r00))))),-1);
if(!x2870.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2869.value)+(((1.5707963267949)*(x2870.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2871=IKsin(j5);
IkReal x2872=IKcos(j5);
IkReal x2873=(r01*sj6);
IkReal x2874=(r21*sj6);
IkReal x2875=((1.0)*cj0);
IkReal x2876=(r11*sj6);
IkReal x2877=((1.0)*x2872);
IkReal x2878=((1.0)*x2871);
IkReal x2879=(cj6*x2872);
IkReal x2880=(cj6*x2878);
evalcond[0]=((((-1.0)*r22*x2877))+((x2871*x2874))+(((-1.0)*r20*x2880)));
evalcond[1]=((((-1.0)*r10*x2880))+((x2871*x2876))+(((-1.0)*r12*x2877)));
evalcond[2]=(((r00*x2879))+(((-1.0)*r02*x2878))+(((-1.0)*x2873*x2877)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x2877))+(((-1.0)*r00*x2880))+((x2871*x2873)));
evalcond[4]=((((-1.0)*r22*x2878))+(((-1.0)*cj1*x2875))+((sj0*sj1))+(((-1.0)*x2874*x2877))+((r20*x2879)));
evalcond[5]=((((-1.0)*x2876*x2877))+((r10*x2879))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x2875))+(((-1.0)*r12*x2878)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2881=((1.0)*cj6);
CheckValue<IkReal> x2882 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x2881)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2882.valid){
continue;
}
CheckValue<IkReal> x2883=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x2881))+(((-1.0)*r10*sj6)))),-1);
if(!x2883.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2882.value)+(((1.5707963267949)*(x2883.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2884=IKsin(j5);
IkReal x2885=IKcos(j5);
IkReal x2886=(r01*sj6);
IkReal x2887=(r21*sj6);
IkReal x2888=((1.0)*cj0);
IkReal x2889=(r11*sj6);
IkReal x2890=((1.0)*x2885);
IkReal x2891=((1.0)*x2884);
IkReal x2892=(cj6*x2885);
IkReal x2893=(cj6*x2891);
evalcond[0]=((((-1.0)*r22*x2890))+((x2884*x2887))+(((-1.0)*r20*x2893)));
evalcond[1]=(((x2884*x2889))+(((-1.0)*r10*x2893))+(((-1.0)*r12*x2890)));
evalcond[2]=((((-1.0)*r02*x2891))+((r00*x2892))+(((-1.0)*x2886*x2890)));
evalcond[3]=((-1.0)+((x2884*x2886))+(((-1.0)*r02*x2890))+(((-1.0)*r00*x2893)));
evalcond[4]=((((-1.0)*r22*x2891))+(((-1.0)*x2887*x2890))+((sj0*sj1))+(((-1.0)*cj1*x2888))+((r20*x2892)));
evalcond[5]=((((-1.0)*x2889*x2890))+(((-1.0)*cj1*sj0))+((r10*x2892))+(((-1.0)*sj1*x2888))+(((-1.0)*r12*x2891)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x2894=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x2894.valid){
continue;
}
CheckValue<IkReal> x2895 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2895.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2894.value)))+(x2895.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2896=IKsin(j5);
IkReal x2897=IKcos(j5);
IkReal x2898=(r01*sj6);
IkReal x2899=(r21*sj6);
IkReal x2900=((1.0)*cj0);
IkReal x2901=(r11*sj6);
IkReal x2902=((1.0)*x2897);
IkReal x2903=((1.0)*x2896);
IkReal x2904=(cj6*x2897);
IkReal x2905=(cj6*x2903);
evalcond[0]=(((x2896*x2899))+(((-1.0)*r22*x2902))+(((-1.0)*r20*x2905)));
evalcond[1]=((((-1.0)*r10*x2905))+((x2896*x2901))+(((-1.0)*r12*x2902)));
evalcond[2]=((((-1.0)*r02*x2903))+(((-1.0)*x2898*x2902))+((r00*x2904)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x2902))+(((-1.0)*r00*x2905))+((x2896*x2898)));
evalcond[4]=(((sj0*sj1))+(((-1.0)*cj1*x2900))+(((-1.0)*x2899*x2902))+((r20*x2904))+(((-1.0)*r22*x2903)));
evalcond[5]=(((r10*x2904))+(((-1.0)*x2901*x2902))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x2900))+(((-1.0)*r12*x2903)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x2906=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x2906;
j5eval[1]=IKsign(x2906);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x2907=((1.0)*cj6);
IkReal x2908=((((-1.0)*r21*x2907))+(((-1.0)*r20*sj6)));
j5eval[0]=x2908;
j5eval[1]=((IKabs(r12))+(IKabs(((((-1.0)*r10*x2907))+((r11*sj6))))));
j5eval[2]=IKsign(x2908);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x2909=cj6*cj6;
IkReal x2910=r01*r01;
IkReal x2911=(cj6*r00);
IkReal x2912=(r01*sj6);
IkReal x2913=(((x2909*(r00*r00)))+(((-2.0)*x2911*x2912))+(((-1.0)*x2909*x2910))+(r02*r02)+x2910);
j5eval[0]=x2913;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*x2912))+x2911))));
j5eval[2]=IKsign(x2913);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2914=cj6*cj6;
IkReal x2915=r01*r01;
IkReal x2916=(cj6*r00);
IkReal x2917=(r01*sj6);
CheckValue<IkReal> x2918=IKPowWithIntegerCheck(IKsign((((x2914*(r00*r00)))+(((-1.0)*x2914*x2915))+(((-2.0)*x2916*x2917))+(r02*r02)+x2915)),-1);
if(!x2918.valid){
continue;
}
CheckValue<IkReal> x2919 = IKatan2WithCheck(IkReal(((((-1.0)*x2917))+x2916)),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x2919.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2918.value)))+(x2919.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2920=IKsin(j5);
IkReal x2921=IKcos(j5);
IkReal x2922=(r01*sj6);
IkReal x2923=(r21*sj6);
IkReal x2924=(r11*sj6);
IkReal x2925=((1.0)*x2921);
IkReal x2926=((1.0)*x2920);
IkReal x2927=(cj6*x2921);
IkReal x2928=(cj6*x2926);
evalcond[0]=((((-1.0)*r20*x2928))+(((-1.0)*r22*x2925))+((x2920*x2923)));
evalcond[1]=((((-1.0)*r10*x2928))+(((-1.0)*r12*x2925))+((x2920*x2924)));
evalcond[2]=((((-1.0)*r02*x2926))+((r00*x2927))+(((-1.0)*x2922*x2925)));
evalcond[3]=((1.0)+(((-1.0)*r02*x2925))+(((-1.0)*r00*x2928))+((x2920*x2922)));
evalcond[4]=(((r10*x2927))+((cj1*sj0))+(((-1.0)*x2924*x2925))+(((-1.0)*r12*x2926))+((cj0*sj1)));
evalcond[5]=((((-1.0)*x2923*x2925))+((sj0*sj1))+((r20*x2927))+(((-1.0)*r22*x2926))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2929=((1.0)*cj6);
CheckValue<IkReal> x2930=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x2929))+(((-1.0)*r20*sj6)))),-1);
if(!x2930.valid){
continue;
}
CheckValue<IkReal> x2931 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*r10*x2929))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2931.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2930.value)))+(x2931.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2932=IKsin(j5);
IkReal x2933=IKcos(j5);
IkReal x2934=(r01*sj6);
IkReal x2935=(r21*sj6);
IkReal x2936=(r11*sj6);
IkReal x2937=((1.0)*x2933);
IkReal x2938=((1.0)*x2932);
IkReal x2939=(cj6*x2933);
IkReal x2940=(cj6*x2938);
evalcond[0]=((((-1.0)*r20*x2940))+((x2932*x2935))+(((-1.0)*r22*x2937)));
evalcond[1]=(((x2932*x2936))+(((-1.0)*r10*x2940))+(((-1.0)*r12*x2937)));
evalcond[2]=(((r00*x2939))+(((-1.0)*x2934*x2937))+(((-1.0)*r02*x2938)));
evalcond[3]=((1.0)+(((-1.0)*r00*x2940))+((x2932*x2934))+(((-1.0)*r02*x2937)));
evalcond[4]=(((r10*x2939))+((cj1*sj0))+(((-1.0)*x2936*x2937))+(((-1.0)*r12*x2938))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*x2935*x2937))+((r20*x2939))+(((-1.0)*cj0*cj1))+(((-1.0)*r22*x2938)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x2941 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2941.valid){
continue;
}
CheckValue<IkReal> x2942=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x2942.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2941.value)+(((1.5707963267949)*(x2942.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2943=IKsin(j5);
IkReal x2944=IKcos(j5);
IkReal x2945=(r01*sj6);
IkReal x2946=(r21*sj6);
IkReal x2947=(r11*sj6);
IkReal x2948=((1.0)*x2944);
IkReal x2949=((1.0)*x2943);
IkReal x2950=(cj6*x2944);
IkReal x2951=(cj6*x2949);
evalcond[0]=((((-1.0)*r20*x2951))+(((-1.0)*r22*x2948))+((x2943*x2946)));
evalcond[1]=((((-1.0)*r12*x2948))+(((-1.0)*r10*x2951))+((x2943*x2947)));
evalcond[2]=((((-1.0)*r02*x2949))+((r00*x2950))+(((-1.0)*x2945*x2948)));
evalcond[3]=((1.0)+(((-1.0)*r02*x2948))+(((-1.0)*r00*x2951))+((x2943*x2945)));
evalcond[4]=((((-1.0)*r12*x2949))+((r10*x2950))+((cj1*sj0))+(((-1.0)*x2947*x2948))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+((r20*x2950))+(((-1.0)*x2946*x2948))+(((-1.0)*cj0*cj1))+(((-1.0)*r22*x2949)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x2952=((-1.0)*px);
sj4=1.0;
cj4=0;
j4=1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x2952);
rxp1_1=(px*r21);
rxp1_2=(r11*x2952);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=(((cj6*r20))+(((-1.0)*r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x2954=IKPowWithIntegerCheck((((cj6*r20))+(((-1.0)*r21*sj6))),-1);
if(!x2954.valid){
continue;
}
IkReal x2953=x2954.value;
cj5array[0]=((((-1.0)*sj0*sj1*x2953))+((cj0*cj1*x2953)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2955=IKsin(j5);
IkReal x2956=(sj6*x2955);
IkReal x2957=((1.0)*cj6*x2955);
evalcond[0]=((-1.0)*r02*x2955);
evalcond[1]=((((-1.0)*r20*x2957))+((r21*x2956)));
evalcond[2]=((((-1.0)*r10*x2957))+((r11*x2956)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2958=((1.0)*sj6);
CheckValue<IkReal> x2959=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x2958))+(((-1.0)*cj6*r21)))),-1);
if(!x2959.valid){
continue;
}
CheckValue<IkReal> x2960 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj6*r10*sj2))+(((-1.0)*cj2*r01*x2958))+(((-1.0)*r11*sj2*x2958))+((cj2*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2960.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2959.value)))+(x2960.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2961=IKsin(j5);
IkReal x2962=IKcos(j5);
IkReal x2963=(r01*sj6);
IkReal x2964=(r21*sj6);
IkReal x2965=((1.0)*cj0);
IkReal x2966=((1.0)*sj2);
IkReal x2967=(r11*sj6);
IkReal x2968=(cj1*sj0);
IkReal x2969=((1.0)*x2962);
IkReal x2970=((1.0)*x2961);
IkReal x2971=(cj6*x2962);
IkReal x2972=(cj6*x2970);
evalcond[0]=((((-1.0)*r20*x2972))+((x2961*x2964))+(((-1.0)*r22*x2969)));
evalcond[1]=(cj2+((x2961*x2967))+(((-1.0)*r10*x2972))+(((-1.0)*r12*x2969)));
evalcond[2]=((((-1.0)*r00*x2972))+((x2961*x2963))+(((-1.0)*r02*x2969))+(((-1.0)*x2966)));
evalcond[3]=(((sj0*sj1))+(((-1.0)*r22*x2970))+(((-1.0)*x2964*x2969))+(((-1.0)*cj1*x2965))+((r20*x2971)));
evalcond[4]=((((-1.0)*x2963*x2969))+(((-1.0)*r02*x2970))+((r00*x2971))+(((-1.0)*cj2*sj1*x2965))+(((-1.0)*cj2*x2968)));
evalcond[5]=((((-1.0)*r12*x2970))+((r10*x2971))+(((-1.0)*x2967*x2969))+(((-1.0)*x2966*x2968))+(((-1.0)*sj1*sj2*x2965)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2973=((1.0)*cj6);
CheckValue<IkReal> x2974=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x2973))+(((-1.0)*r10*sj6)))),-1);
if(!x2974.valid){
continue;
}
CheckValue<IkReal> x2975 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x2973))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2975.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2974.value)))+(x2975.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2976=IKsin(j5);
IkReal x2977=IKcos(j5);
IkReal x2978=(r01*sj6);
IkReal x2979=(r21*sj6);
IkReal x2980=((1.0)*cj0);
IkReal x2981=((1.0)*sj2);
IkReal x2982=(r11*sj6);
IkReal x2983=(cj1*sj0);
IkReal x2984=((1.0)*x2977);
IkReal x2985=((1.0)*x2976);
IkReal x2986=(cj6*x2977);
IkReal x2987=(cj6*x2985);
evalcond[0]=((((-1.0)*r20*x2987))+(((-1.0)*r22*x2984))+((x2976*x2979)));
evalcond[1]=(((x2976*x2982))+cj2+(((-1.0)*r10*x2987))+(((-1.0)*r12*x2984)));
evalcond[2]=((((-1.0)*r00*x2987))+(((-1.0)*x2981))+(((-1.0)*r02*x2984))+((x2976*x2978)));
evalcond[3]=((((-1.0)*x2979*x2984))+(((-1.0)*cj1*x2980))+((sj0*sj1))+((r20*x2986))+(((-1.0)*r22*x2985)));
evalcond[4]=((((-1.0)*x2978*x2984))+(((-1.0)*cj2*sj1*x2980))+((r00*x2986))+(((-1.0)*cj2*x2983))+(((-1.0)*r02*x2985)));
evalcond[5]=((((-1.0)*x2982*x2984))+(((-1.0)*x2981*x2983))+(((-1.0)*r12*x2985))+(((-1.0)*sj1*sj2*x2980))+((r10*x2986)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2988=((1.0)*cj6);
CheckValue<IkReal> x2989=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x2988))+(((-1.0)*r00*sj6)))),-1);
if(!x2989.valid){
continue;
}
CheckValue<IkReal> x2990 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x2988))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2990.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2989.value)))+(x2990.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x2991=IKsin(j5);
IkReal x2992=IKcos(j5);
IkReal x2993=(r01*sj6);
IkReal x2994=(r21*sj6);
IkReal x2995=((1.0)*cj0);
IkReal x2996=((1.0)*sj2);
IkReal x2997=(r11*sj6);
IkReal x2998=(cj1*sj0);
IkReal x2999=((1.0)*x2992);
IkReal x3000=((1.0)*x2991);
IkReal x3001=(cj6*x2992);
IkReal x3002=(cj6*x3000);
evalcond[0]=((((-1.0)*r22*x2999))+((x2991*x2994))+(((-1.0)*r20*x3002)));
evalcond[1]=((((-1.0)*r10*x3002))+cj2+(((-1.0)*r12*x2999))+((x2991*x2997)));
evalcond[2]=((((-1.0)*x2996))+(((-1.0)*r00*x3002))+((x2991*x2993))+(((-1.0)*r02*x2999)));
evalcond[3]=((((-1.0)*r22*x3000))+(((-1.0)*cj1*x2995))+((sj0*sj1))+((r20*x3001))+(((-1.0)*x2994*x2999)));
evalcond[4]=(((r00*x3001))+(((-1.0)*r02*x3000))+(((-1.0)*cj2*x2998))+(((-1.0)*x2993*x2999))+(((-1.0)*cj2*sj1*x2995)));
evalcond[5]=((((-1.0)*x2996*x2998))+(((-1.0)*sj1*sj2*x2995))+((r10*x3001))+(((-1.0)*x2997*x2999))+(((-1.0)*r12*x3000)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x3003=(((sj0*sj1))+(((-1.0)*cj0*cj1)));
j2eval[0]=x3003;
j2eval[1]=IKsign(x3003);
j2eval[2]=((IKabs((((r10*sj6))+((cj6*r11)))))+(IKabs((((r00*sj6))+((cj6*r01))))));
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  || IKabs(j2eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x3004=r21*r21;
IkReal x3005=cj6*cj6;
IkReal x3006=(cj6*r20);
IkReal x3007=(cj0*cj1);
IkReal x3008=(sj0*sj1);
IkReal x3009=(r21*sj6);
IkReal x3010=((((-1.0)*x3004))+(((2.0)*x3006*x3009))+(((-1.0)*(r22*r22)))+(((-1.0)*x3005*(r20*r20)))+((x3004*x3005)));
j5eval[0]=x3010;
j5eval[1]=IKsign(x3010);
j5eval[2]=((IKabs((((x3008*x3009))+(((-1.0)*x3006*x3008))+((x3006*x3007))+(((-1.0)*x3007*x3009)))))+(IKabs((((r22*x3008))+(((-1.0)*r22*x3007))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j2eval[1];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j2eval[0]=(((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(j2eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.20734818680435)*py))+(((-0.566898951975751)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((2.20734818680435)*px))+(((0.566898951975751)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.20734818680435)*py))+(((-0.566898951975751)*px))))+IKsqr(((((2.20734818680435)*px))+(((0.566898951975751)*py))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.20734818680435)*py))+(((-0.566898951975751)*px))), ((((2.20734818680435)*px))+(((0.566898951975751)*py))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3011=IKcos(j2);
IkReal x3012=IKsin(j2);
evalcond[0]=((((0.425)*x3011))+(((-0.10915)*x3012))+(((-1.0)*px)));
evalcond[1]=((((0.425)*x3012))+(((-1.0)*py))+(((0.10915)*x3011)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x3013=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x3013;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x3013);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x3014=((1.0)*cj6);
IkReal x3015=((((-1.0)*r00*sj6))+(((-1.0)*r01*x3014)));
j5eval[0]=x3015;
j5eval[1]=IKsign(x3015);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x3014))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x3016=((1.0)*cj6);
IkReal x3017=((((-1.0)*r00*sj6))+(((-1.0)*r01*x3016)));
j5eval[0]=x3017;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x3016)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x3017);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3018=((1.0)*cj6);
CheckValue<IkReal> x3019 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x3018)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x3019.valid){
continue;
}
CheckValue<IkReal> x3020=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x3018)))),-1);
if(!x3020.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3019.value)+(((1.5707963267949)*(x3020.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3021=IKcos(j5);
IkReal x3022=IKsin(j5);
IkReal x3023=((1.0)*sj2);
IkReal x3024=(cj6*r10);
IkReal x3025=(cj6*r00);
IkReal x3026=(cj6*r20);
IkReal x3027=(sj6*x3021);
IkReal x3028=(sj6*x3022);
IkReal x3029=((1.0)*x3021);
IkReal x3030=((1.0)*x3022);
evalcond[0]=((((-1.0)*x3026*x3029))+((r21*x3027))+((r22*x3022)));
evalcond[1]=(((r21*x3028))+(((-1.0)*x3026*x3030))+(((-1.0)*r22*x3029)));
evalcond[2]=((((-1.0)*r12*x3029))+(((-1.0)*x3024*x3030))+((r11*x3028))+cj2);
evalcond[3]=(((r02*x3022))+(((-1.0)*x3025*x3029))+((r01*x3027))+(((-1.0)*cj2)));
evalcond[4]=(((r12*x3022))+((r11*x3027))+(((-1.0)*x3023))+(((-1.0)*x3024*x3029)));
evalcond[5]=((((-1.0)*x3025*x3030))+(((-1.0)*x3023))+((r01*x3028))+(((-1.0)*r02*x3029)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3031=((1.0)*cj6);
CheckValue<IkReal> x3032 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x3031)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3032.valid){
continue;
}
CheckValue<IkReal> x3033=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x3031))+(((-1.0)*r00*sj6)))),-1);
if(!x3033.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3032.value)+(((1.5707963267949)*(x3033.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3034=IKcos(j5);
IkReal x3035=IKsin(j5);
IkReal x3036=((1.0)*sj2);
IkReal x3037=(cj6*r10);
IkReal x3038=(cj6*r00);
IkReal x3039=(cj6*r20);
IkReal x3040=(sj6*x3034);
IkReal x3041=(sj6*x3035);
IkReal x3042=((1.0)*x3034);
IkReal x3043=((1.0)*x3035);
evalcond[0]=(((r21*x3040))+(((-1.0)*x3039*x3042))+((r22*x3035)));
evalcond[1]=(((r21*x3041))+(((-1.0)*r22*x3042))+(((-1.0)*x3039*x3043)));
evalcond[2]=(cj2+(((-1.0)*r12*x3042))+(((-1.0)*x3037*x3043))+((r11*x3041)));
evalcond[3]=(((r02*x3035))+(((-1.0)*x3038*x3042))+(((-1.0)*cj2))+((r01*x3040)));
evalcond[4]=(((r12*x3035))+(((-1.0)*x3036))+(((-1.0)*x3037*x3042))+((r11*x3040)));
evalcond[5]=((((-1.0)*x3038*x3043))+(((-1.0)*x3036))+(((-1.0)*r02*x3042))+((r01*x3041)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3044=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x3044.valid){
continue;
}
CheckValue<IkReal> x3045 = IKatan2WithCheck(IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x3045.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3044.value)))+(x3045.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3046=IKcos(j5);
IkReal x3047=IKsin(j5);
IkReal x3048=((1.0)*sj2);
IkReal x3049=(cj6*r10);
IkReal x3050=(cj6*r00);
IkReal x3051=(cj6*r20);
IkReal x3052=(sj6*x3046);
IkReal x3053=(sj6*x3047);
IkReal x3054=((1.0)*x3046);
IkReal x3055=((1.0)*x3047);
evalcond[0]=(((r22*x3047))+(((-1.0)*x3051*x3054))+((r21*x3052)));
evalcond[1]=((((-1.0)*x3051*x3055))+((r21*x3053))+(((-1.0)*r22*x3054)));
evalcond[2]=(cj2+((r11*x3053))+(((-1.0)*r12*x3054))+(((-1.0)*x3049*x3055)));
evalcond[3]=(((r01*x3052))+((r02*x3047))+(((-1.0)*x3050*x3054))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x3048))+((r11*x3052))+((r12*x3047))+(((-1.0)*x3049*x3054)));
evalcond[5]=((((-1.0)*x3048))+((r01*x3053))+(((-1.0)*r02*x3054))+(((-1.0)*x3050*x3055)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.20734818680435)*py))+(((-0.566898951975751)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((2.20734818680435)*px))+(((0.566898951975751)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.20734818680435)*py))+(((-0.566898951975751)*px))))+IKsqr(((((2.20734818680435)*px))+(((0.566898951975751)*py))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.20734818680435)*py))+(((-0.566898951975751)*px))), ((((2.20734818680435)*px))+(((0.566898951975751)*py))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3056=IKcos(j2);
IkReal x3057=IKsin(j2);
evalcond[0]=((((-0.10915)*x3057))+(((0.425)*x3056))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*x3056))+(((0.425)*x3057))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x3058=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x3058;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x3058);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x3059=((1.0)*cj6);
IkReal x3060=((((-1.0)*r10*sj6))+(((-1.0)*r11*x3059)));
j5eval[0]=x3060;
j5eval[1]=((IKabs(((((-1.0)*cj2*r20*x3059))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x3060);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x3061=cj6*cj6;
IkReal x3062=(r21*sj6);
IkReal x3063=(cj6*r20);
IkReal x3064=(r01*r21);
IkReal x3065=((((-1.0)*x3064))+(((-1.0)*r00*r20*x3061))+(((-1.0)*r02*r22))+((r01*sj6*x3063))+((cj6*r00*x3062))+((x3061*x3064)));
j5eval[0]=x3065;
j5eval[1]=IKsign(x3065);
j5eval[2]=((IKabs((((cj2*x3062))+(((-1.0)*cj2*x3063)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3066=cj6*cj6;
IkReal x3067=(r21*sj6);
IkReal x3068=(cj6*r20);
IkReal x3069=(r01*r21);
CheckValue<IkReal> x3070 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*x3067))+(((-1.0)*cj2*x3068)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3070.valid){
continue;
}
CheckValue<IkReal> x3071=IKPowWithIntegerCheck(IKsign(((((-1.0)*x3069))+(((-1.0)*r00*r20*x3066))+(((-1.0)*r02*r22))+((x3066*x3069))+((r01*sj6*x3068))+((cj6*r00*x3067)))),-1);
if(!x3071.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3070.value)+(((1.5707963267949)*(x3071.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3072=IKcos(j5);
IkReal x3073=IKsin(j5);
IkReal x3074=(cj6*r00);
IkReal x3075=(cj6*r10);
IkReal x3076=(cj6*r20);
IkReal x3077=(sj6*x3072);
IkReal x3078=(sj6*x3073);
IkReal x3079=((1.0)*x3072);
IkReal x3080=((1.0)*x3073);
evalcond[0]=(((r22*x3073))+(((-1.0)*x3076*x3079))+((r21*x3077)));
evalcond[1]=((((-1.0)*r22*x3079))+(((-1.0)*x3076*x3080))+((r21*x3078)));
evalcond[2]=(((r01*x3077))+cj2+(((-1.0)*x3074*x3079))+((r02*x3073)));
evalcond[3]=(sj2+((r12*x3073))+((r11*x3077))+(((-1.0)*x3075*x3079)));
evalcond[4]=(cj2+(((-1.0)*x3075*x3080))+(((-1.0)*r12*x3079))+((r11*x3078)));
evalcond[5]=(((r01*x3078))+(((-1.0)*sj2))+(((-1.0)*r02*x3079))+(((-1.0)*x3074*x3080)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3081=((1.0)*cj6);
CheckValue<IkReal> x3082=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x3081)))),-1);
if(!x3082.valid){
continue;
}
CheckValue<IkReal> x3083 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r20*x3081))+((cj2*r21*sj6)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x3083.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3082.value)))+(x3083.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3084=IKcos(j5);
IkReal x3085=IKsin(j5);
IkReal x3086=(cj6*r00);
IkReal x3087=(cj6*r10);
IkReal x3088=(cj6*r20);
IkReal x3089=(sj6*x3084);
IkReal x3090=(sj6*x3085);
IkReal x3091=((1.0)*x3084);
IkReal x3092=((1.0)*x3085);
evalcond[0]=(((r21*x3089))+(((-1.0)*x3088*x3091))+((r22*x3085)));
evalcond[1]=((((-1.0)*r22*x3091))+((r21*x3090))+(((-1.0)*x3088*x3092)));
evalcond[2]=(cj2+((r02*x3085))+((r01*x3089))+(((-1.0)*x3086*x3091)));
evalcond[3]=(sj2+((r12*x3085))+((r11*x3089))+(((-1.0)*x3087*x3091)));
evalcond[4]=((((-1.0)*r12*x3091))+cj2+(((-1.0)*x3087*x3092))+((r11*x3090)));
evalcond[5]=(((r01*x3090))+(((-1.0)*r02*x3091))+(((-1.0)*sj2))+(((-1.0)*x3086*x3092)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3093=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x3093.valid){
continue;
}
CheckValue<IkReal> x3094 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x3094.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3093.value)))+(x3094.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3095=IKcos(j5);
IkReal x3096=IKsin(j5);
IkReal x3097=(cj6*r00);
IkReal x3098=(cj6*r10);
IkReal x3099=(cj6*r20);
IkReal x3100=(sj6*x3095);
IkReal x3101=(sj6*x3096);
IkReal x3102=((1.0)*x3095);
IkReal x3103=((1.0)*x3096);
evalcond[0]=(((r21*x3100))+(((-1.0)*x3099*x3102))+((r22*x3096)));
evalcond[1]=(((r21*x3101))+(((-1.0)*x3099*x3103))+(((-1.0)*r22*x3102)));
evalcond[2]=(cj2+((r02*x3096))+((r01*x3100))+(((-1.0)*x3097*x3102)));
evalcond[3]=(((r11*x3100))+sj2+(((-1.0)*x3098*x3102))+((r12*x3096)));
evalcond[4]=(((r11*x3101))+cj2+(((-1.0)*r12*x3102))+(((-1.0)*x3098*x3103)));
evalcond[5]=((((-1.0)*sj2))+((r01*x3101))+(((-1.0)*x3097*x3103))+(((-1.0)*r02*x3102)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((-9.16170407695831)*px)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((9.16170407695831)*py)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-9.16170407695831)*px))+IKsqr(((9.16170407695831)*py))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((-9.16170407695831)*px), ((9.16170407695831)*py));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
evalcond[0]=((((-0.10915)*(IKsin(j2))))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*(IKcos(j2))))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x3104=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x3104;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x3104);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x3105=((1.0)*cj6);
IkReal x3106=((((-1.0)*r01*x3105))+(((-1.0)*r00*sj6)));
j5eval[0]=x3106;
j5eval[1]=IKsign(x3106);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x3105))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x3107=((1.0)*cj6);
IkReal x3108=((((-1.0)*r01*x3107))+(((-1.0)*r00*sj6)));
j5eval[0]=x3108;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x3107))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x3108);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3109=((1.0)*cj6);
CheckValue<IkReal> x3110 = IKatan2WithCheck(IkReal(((((-1.0)*r20*sj2*x3109))+((r21*sj2*sj6)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x3110.valid){
continue;
}
CheckValue<IkReal> x3111=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x3109))+(((-1.0)*r00*sj6)))),-1);
if(!x3111.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3110.value)+(((1.5707963267949)*(x3111.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3112=IKcos(j5);
IkReal x3113=IKsin(j5);
IkReal x3114=((1.0)*sj2);
IkReal x3115=(cj6*r10);
IkReal x3116=(cj6*r00);
IkReal x3117=(cj6*r20);
IkReal x3118=(sj6*x3112);
IkReal x3119=(sj6*x3113);
IkReal x3120=((1.0)*x3112);
IkReal x3121=((1.0)*x3113);
evalcond[0]=((((-1.0)*x3117*x3120))+((r22*x3113))+((r21*x3118)));
evalcond[1]=((((-1.0)*x3117*x3121))+((r21*x3119))+(((-1.0)*r22*x3120)));
evalcond[2]=(cj2+(((-1.0)*x3115*x3121))+(((-1.0)*r12*x3120))+((r11*x3119)));
evalcond[3]=((((-1.0)*x3116*x3120))+((r02*x3113))+((r01*x3118))+(((-1.0)*cj2)));
evalcond[4]=(((r12*x3113))+(((-1.0)*x3114))+(((-1.0)*x3115*x3120))+((r11*x3118)));
evalcond[5]=((((-1.0)*r02*x3120))+(((-1.0)*x3116*x3121))+(((-1.0)*x3114))+((r01*x3119)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3122=((1.0)*cj6);
CheckValue<IkReal> x3123=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x3122)))),-1);
if(!x3123.valid){
continue;
}
CheckValue<IkReal> x3124 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x3122))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3124.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3123.value)))+(x3124.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3125=IKcos(j5);
IkReal x3126=IKsin(j5);
IkReal x3127=((1.0)*sj2);
IkReal x3128=(cj6*r10);
IkReal x3129=(cj6*r00);
IkReal x3130=(cj6*r20);
IkReal x3131=(sj6*x3125);
IkReal x3132=(sj6*x3126);
IkReal x3133=((1.0)*x3125);
IkReal x3134=((1.0)*x3126);
evalcond[0]=((((-1.0)*x3130*x3133))+((r21*x3131))+((r22*x3126)));
evalcond[1]=((((-1.0)*x3130*x3134))+((r21*x3132))+(((-1.0)*r22*x3133)));
evalcond[2]=(cj2+(((-1.0)*x3128*x3134))+(((-1.0)*r12*x3133))+((r11*x3132)));
evalcond[3]=(((r01*x3131))+((r02*x3126))+(((-1.0)*x3129*x3133))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x3128*x3133))+((r12*x3126))+((r11*x3131))+(((-1.0)*x3127)));
evalcond[5]=(((r01*x3132))+(((-1.0)*r02*x3133))+(((-1.0)*x3127))+(((-1.0)*x3129*x3134)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3135=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x3135.valid){
continue;
}
CheckValue<IkReal> x3136 = IKatan2WithCheck(IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x3136.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3135.value)))+(x3136.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3137=IKcos(j5);
IkReal x3138=IKsin(j5);
IkReal x3139=((1.0)*sj2);
IkReal x3140=(cj6*r10);
IkReal x3141=(cj6*r00);
IkReal x3142=(cj6*r20);
IkReal x3143=(sj6*x3137);
IkReal x3144=(sj6*x3138);
IkReal x3145=((1.0)*x3137);
IkReal x3146=((1.0)*x3138);
evalcond[0]=((((-1.0)*x3142*x3145))+((r22*x3138))+((r21*x3143)));
evalcond[1]=((((-1.0)*r22*x3145))+(((-1.0)*x3142*x3146))+((r21*x3144)));
evalcond[2]=((((-1.0)*r12*x3145))+cj2+(((-1.0)*x3140*x3146))+((r11*x3144)));
evalcond[3]=((((-1.0)*x3141*x3145))+((r01*x3143))+((r02*x3138))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x3140*x3145))+((r11*x3143))+((r12*x3138))+(((-1.0)*x3139)));
evalcond[5]=((((-1.0)*x3141*x3146))+((r01*x3144))+(((-1.0)*r02*x3145))+(((-1.0)*x3139)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((-9.16170407695831)*px)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((9.16170407695831)*py)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-9.16170407695831)*px))+IKsqr(((9.16170407695831)*py))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((-9.16170407695831)*px), ((9.16170407695831)*py));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
evalcond[0]=((((-0.10915)*(IKsin(j2))))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*(IKcos(j2))))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x3147=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x3147;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x3147);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x3148=((1.0)*cj6);
IkReal x3149=((((-1.0)*r11*x3148))+(((-1.0)*r10*sj6)));
j5eval[0]=x3149;
j5eval[1]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*r20*x3148))+((cj2*r21*sj6))))));
j5eval[2]=IKsign(x3149);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x3150=cj6*cj6;
IkReal x3151=(r21*sj6);
IkReal x3152=(cj6*r20);
IkReal x3153=(r01*r21);
IkReal x3154=(((cj6*r00*x3151))+(((-1.0)*r02*r22))+(((-1.0)*x3153))+((x3150*x3153))+((r01*sj6*x3152))+(((-1.0)*r00*r20*x3150)));
j5eval[0]=x3154;
j5eval[1]=IKsign(x3154);
j5eval[2]=((IKabs(((((-1.0)*cj2*x3152))+((cj2*x3151)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3155=cj6*cj6;
IkReal x3156=(r21*sj6);
IkReal x3157=(cj6*r20);
IkReal x3158=(r01*r21);
CheckValue<IkReal> x3159 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*x3157))+((cj2*x3156)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3159.valid){
continue;
}
CheckValue<IkReal> x3160=IKPowWithIntegerCheck(IKsign((((cj6*r00*x3156))+(((-1.0)*r02*r22))+((x3155*x3158))+(((-1.0)*x3158))+((r01*sj6*x3157))+(((-1.0)*r00*r20*x3155)))),-1);
if(!x3160.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3159.value)+(((1.5707963267949)*(x3160.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3161=IKcos(j5);
IkReal x3162=IKsin(j5);
IkReal x3163=(cj6*r00);
IkReal x3164=(cj6*r10);
IkReal x3165=(cj6*r20);
IkReal x3166=(sj6*x3161);
IkReal x3167=(sj6*x3162);
IkReal x3168=((1.0)*x3161);
IkReal x3169=((1.0)*x3162);
evalcond[0]=(((r22*x3162))+(((-1.0)*x3165*x3168))+((r21*x3166)));
evalcond[1]=((((-1.0)*x3165*x3169))+((r21*x3167))+(((-1.0)*r22*x3168)));
evalcond[2]=(((r02*x3162))+(((-1.0)*x3163*x3168))+cj2+((r01*x3166)));
evalcond[3]=(sj2+((r11*x3166))+((r12*x3162))+(((-1.0)*x3164*x3168)));
evalcond[4]=((((-1.0)*r12*x3168))+cj2+((r11*x3167))+(((-1.0)*x3164*x3169)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*x3163*x3169))+((r01*x3167))+(((-1.0)*r02*x3168)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3170=((1.0)*cj6);
CheckValue<IkReal> x3171 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r20*x3170))+((cj2*r21*sj6)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x3171.valid){
continue;
}
CheckValue<IkReal> x3172=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x3170)))),-1);
if(!x3172.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3171.value)+(((1.5707963267949)*(x3172.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3173=IKcos(j5);
IkReal x3174=IKsin(j5);
IkReal x3175=(cj6*r00);
IkReal x3176=(cj6*r10);
IkReal x3177=(cj6*r20);
IkReal x3178=(sj6*x3173);
IkReal x3179=(sj6*x3174);
IkReal x3180=((1.0)*x3173);
IkReal x3181=((1.0)*x3174);
evalcond[0]=((((-1.0)*x3177*x3180))+((r22*x3174))+((r21*x3178)));
evalcond[1]=((((-1.0)*r22*x3180))+(((-1.0)*x3177*x3181))+((r21*x3179)));
evalcond[2]=(cj2+((r02*x3174))+(((-1.0)*x3175*x3180))+((r01*x3178)));
evalcond[3]=(((r11*x3178))+sj2+(((-1.0)*x3176*x3180))+((r12*x3174)));
evalcond[4]=(((r11*x3179))+cj2+(((-1.0)*x3176*x3181))+(((-1.0)*r12*x3180)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x3180))+(((-1.0)*x3175*x3181))+((r01*x3179)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3182=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x3182.valid){
continue;
}
CheckValue<IkReal> x3183 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x3183.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3182.value)))+(x3183.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3184=IKcos(j5);
IkReal x3185=IKsin(j5);
IkReal x3186=(cj6*r00);
IkReal x3187=(cj6*r10);
IkReal x3188=(cj6*r20);
IkReal x3189=(sj6*x3184);
IkReal x3190=(sj6*x3185);
IkReal x3191=((1.0)*x3184);
IkReal x3192=((1.0)*x3185);
evalcond[0]=(((r22*x3185))+(((-1.0)*x3188*x3191))+((r21*x3189)));
evalcond[1]=((((-1.0)*r22*x3191))+((r21*x3190))+(((-1.0)*x3188*x3192)));
evalcond[2]=(cj2+((r01*x3189))+(((-1.0)*x3186*x3191))+((r02*x3185)));
evalcond[3]=(sj2+(((-1.0)*x3187*x3191))+((r12*x3185))+((r11*x3189)));
evalcond[4]=(cj2+(((-1.0)*x3187*x3192))+((r11*x3190))+(((-1.0)*r12*x3191)));
evalcond[5]=((((-1.0)*sj2))+((r01*x3190))+(((-1.0)*x3186*x3192))+(((-1.0)*r02*x3191)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-2.20734818680435)*py))+(((-0.566898951975751)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.566898951975751)*py))+(((-2.20734818680435)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.20734818680435)*py))+(((-0.566898951975751)*px))))+IKsqr(((((0.566898951975751)*py))+(((-2.20734818680435)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-2.20734818680435)*py))+(((-0.566898951975751)*px))), ((((0.566898951975751)*py))+(((-2.20734818680435)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3193=IKcos(j2);
IkReal x3194=IKsin(j2);
evalcond[0]=((((-0.425)*x3193))+(((-0.10915)*x3194))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*x3193))+(((-0.425)*x3194))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x3195=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x3195;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x3195);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x3196=((1.0)*cj6);
IkReal x3197=((((-1.0)*r10*sj6))+(((-1.0)*r11*x3196)));
j5eval[0]=x3197;
j5eval[1]=((IKabs(((((-1.0)*cj2*r20*x3196))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x3197);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x3198=cj6*cj6;
IkReal x3199=(r21*sj6);
IkReal x3200=(cj6*r20);
IkReal x3201=(r01*r21);
IkReal x3202=((((-1.0)*r02*r22))+((x3198*x3201))+(((-1.0)*x3201))+((r01*sj6*x3200))+(((-1.0)*r00*r20*x3198))+((cj6*r00*x3199)));
j5eval[0]=x3202;
j5eval[1]=IKsign(x3202);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs((((cj2*x3199))+(((-1.0)*cj2*x3200))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3203=cj6*cj6;
IkReal x3204=(r21*sj6);
IkReal x3205=(cj6*r20);
IkReal x3206=(r01*r21);
CheckValue<IkReal> x3207=IKPowWithIntegerCheck(IKsign(((((-1.0)*r02*r22))+(((-1.0)*x3206))+((r01*sj6*x3205))+(((-1.0)*r00*r20*x3203))+((x3203*x3206))+((cj6*r00*x3204)))),-1);
if(!x3207.valid){
continue;
}
CheckValue<IkReal> x3208 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*x3204))+(((-1.0)*cj2*x3205)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3208.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3207.value)))+(x3208.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3209=IKcos(j5);
IkReal x3210=IKsin(j5);
IkReal x3211=(cj6*r00);
IkReal x3212=(cj6*r10);
IkReal x3213=(cj6*r20);
IkReal x3214=(sj6*x3209);
IkReal x3215=(sj6*x3210);
IkReal x3216=((1.0)*x3209);
IkReal x3217=((1.0)*x3210);
evalcond[0]=(((r22*x3210))+((r21*x3214))+(((-1.0)*x3213*x3216)));
evalcond[1]=(((r21*x3215))+(((-1.0)*r22*x3216))+(((-1.0)*x3213*x3217)));
evalcond[2]=((((-1.0)*x3211*x3216))+cj2+((r01*x3214))+((r02*x3210)));
evalcond[3]=(sj2+((r12*x3210))+((r11*x3214))+(((-1.0)*x3212*x3216)));
evalcond[4]=(cj2+((r11*x3215))+(((-1.0)*x3212*x3217))+(((-1.0)*r12*x3216)));
evalcond[5]=((((-1.0)*x3211*x3217))+(((-1.0)*sj2))+((r01*x3215))+(((-1.0)*r02*x3216)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3218=((1.0)*cj6);
CheckValue<IkReal> x3219 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r20*x3218))+((cj2*r21*sj6)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x3219.valid){
continue;
}
CheckValue<IkReal> x3220=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x3218)))),-1);
if(!x3220.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3219.value)+(((1.5707963267949)*(x3220.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3221=IKcos(j5);
IkReal x3222=IKsin(j5);
IkReal x3223=(cj6*r00);
IkReal x3224=(cj6*r10);
IkReal x3225=(cj6*r20);
IkReal x3226=(sj6*x3221);
IkReal x3227=(sj6*x3222);
IkReal x3228=((1.0)*x3221);
IkReal x3229=((1.0)*x3222);
evalcond[0]=((((-1.0)*x3225*x3228))+((r21*x3226))+((r22*x3222)));
evalcond[1]=((((-1.0)*x3225*x3229))+((r21*x3227))+(((-1.0)*r22*x3228)));
evalcond[2]=(cj2+((r02*x3222))+((r01*x3226))+(((-1.0)*x3223*x3228)));
evalcond[3]=(((r12*x3222))+sj2+((r11*x3226))+(((-1.0)*x3224*x3228)));
evalcond[4]=(cj2+((r11*x3227))+(((-1.0)*x3224*x3229))+(((-1.0)*r12*x3228)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x3228))+((r01*x3227))+(((-1.0)*x3223*x3229)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3230=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x3230.valid){
continue;
}
CheckValue<IkReal> x3231 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x3231.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3230.value)))+(x3231.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3232=IKcos(j5);
IkReal x3233=IKsin(j5);
IkReal x3234=(cj6*r00);
IkReal x3235=(cj6*r10);
IkReal x3236=(cj6*r20);
IkReal x3237=(sj6*x3232);
IkReal x3238=(sj6*x3233);
IkReal x3239=((1.0)*x3232);
IkReal x3240=((1.0)*x3233);
evalcond[0]=(((r22*x3233))+(((-1.0)*x3236*x3239))+((r21*x3237)));
evalcond[1]=((((-1.0)*x3236*x3240))+(((-1.0)*r22*x3239))+((r21*x3238)));
evalcond[2]=(cj2+((r01*x3237))+(((-1.0)*x3234*x3239))+((r02*x3233)));
evalcond[3]=(sj2+(((-1.0)*x3235*x3239))+((r11*x3237))+((r12*x3233)));
evalcond[4]=(cj2+(((-1.0)*x3235*x3240))+((r11*x3238))+(((-1.0)*r12*x3239)));
evalcond[5]=((((-1.0)*r02*x3239))+(((-1.0)*sj2))+((r01*x3238))+(((-1.0)*x3234*x3240)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-2.20734818680435)*py))+(((-0.566898951975751)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.566898951975751)*py))+(((-2.20734818680435)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.20734818680435)*py))+(((-0.566898951975751)*px))))+IKsqr(((((0.566898951975751)*py))+(((-2.20734818680435)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-2.20734818680435)*py))+(((-0.566898951975751)*px))), ((((0.566898951975751)*py))+(((-2.20734818680435)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3241=IKcos(j2);
IkReal x3242=IKsin(j2);
evalcond[0]=((((-0.10915)*x3242))+(((-1.0)*px))+(((-0.425)*x3241)));
evalcond[1]=((((0.10915)*x3241))+(((-1.0)*py))+(((-0.425)*x3242)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x3243=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x3243;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x3243);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x3244=((1.0)*cj6);
IkReal x3245=((((-1.0)*r01*x3244))+(((-1.0)*r00*sj6)));
j5eval[0]=x3245;
j5eval[1]=IKsign(x3245);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x3244))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x3246=((1.0)*cj6);
IkReal x3247=((((-1.0)*r01*x3246))+(((-1.0)*r00*sj6)));
j5eval[0]=x3247;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x3246)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x3247);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3248=((1.0)*cj6);
CheckValue<IkReal> x3249 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x3248)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x3249.valid){
continue;
}
CheckValue<IkReal> x3250=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x3248))+(((-1.0)*r00*sj6)))),-1);
if(!x3250.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3249.value)+(((1.5707963267949)*(x3250.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3251=IKcos(j5);
IkReal x3252=IKsin(j5);
IkReal x3253=((1.0)*sj2);
IkReal x3254=(cj6*r10);
IkReal x3255=(cj6*r00);
IkReal x3256=(cj6*r20);
IkReal x3257=(sj6*x3251);
IkReal x3258=(sj6*x3252);
IkReal x3259=((1.0)*x3251);
IkReal x3260=((1.0)*x3252);
evalcond[0]=(((r21*x3257))+((r22*x3252))+(((-1.0)*x3256*x3259)));
evalcond[1]=((((-1.0)*x3256*x3260))+((r21*x3258))+(((-1.0)*r22*x3259)));
evalcond[2]=(cj2+((r11*x3258))+(((-1.0)*x3254*x3260))+(((-1.0)*r12*x3259)));
evalcond[3]=(((r02*x3252))+((r01*x3257))+(((-1.0)*x3255*x3259))+(((-1.0)*cj2)));
evalcond[4]=(((r12*x3252))+((r11*x3257))+(((-1.0)*x3254*x3259))+(((-1.0)*x3253)));
evalcond[5]=((((-1.0)*r02*x3259))+((r01*x3258))+(((-1.0)*x3255*x3260))+(((-1.0)*x3253)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3261=((1.0)*cj6);
CheckValue<IkReal> x3262 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x3261)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3262.valid){
continue;
}
CheckValue<IkReal> x3263=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x3261)))),-1);
if(!x3263.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3262.value)+(((1.5707963267949)*(x3263.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3264=IKcos(j5);
IkReal x3265=IKsin(j5);
IkReal x3266=((1.0)*sj2);
IkReal x3267=(cj6*r10);
IkReal x3268=(cj6*r00);
IkReal x3269=(cj6*r20);
IkReal x3270=(sj6*x3264);
IkReal x3271=(sj6*x3265);
IkReal x3272=((1.0)*x3264);
IkReal x3273=((1.0)*x3265);
evalcond[0]=(((r21*x3270))+(((-1.0)*x3269*x3272))+((r22*x3265)));
evalcond[1]=(((r21*x3271))+(((-1.0)*x3269*x3273))+(((-1.0)*r22*x3272)));
evalcond[2]=((((-1.0)*r12*x3272))+cj2+((r11*x3271))+(((-1.0)*x3267*x3273)));
evalcond[3]=((((-1.0)*x3268*x3272))+((r01*x3270))+((r02*x3265))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x3266))+((r11*x3270))+((r12*x3265))+(((-1.0)*x3267*x3272)));
evalcond[5]=((((-1.0)*x3268*x3273))+((r01*x3271))+(((-1.0)*x3266))+(((-1.0)*r02*x3272)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3274=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x3274.valid){
continue;
}
CheckValue<IkReal> x3275 = IKatan2WithCheck(IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x3275.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3274.value)))+(x3275.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3276=IKcos(j5);
IkReal x3277=IKsin(j5);
IkReal x3278=((1.0)*sj2);
IkReal x3279=(cj6*r10);
IkReal x3280=(cj6*r00);
IkReal x3281=(cj6*r20);
IkReal x3282=(sj6*x3276);
IkReal x3283=(sj6*x3277);
IkReal x3284=((1.0)*x3276);
IkReal x3285=((1.0)*x3277);
evalcond[0]=((((-1.0)*x3281*x3284))+((r21*x3282))+((r22*x3277)));
evalcond[1]=((((-1.0)*x3281*x3285))+(((-1.0)*r22*x3284))+((r21*x3283)));
evalcond[2]=((((-1.0)*r12*x3284))+cj2+(((-1.0)*x3279*x3285))+((r11*x3283)));
evalcond[3]=((((-1.0)*x3280*x3284))+((r02*x3277))+(((-1.0)*cj2))+((r01*x3282)));
evalcond[4]=((((-1.0)*x3279*x3284))+(((-1.0)*x3278))+((r12*x3277))+((r11*x3282)));
evalcond[5]=((((-1.0)*x3280*x3285))+(((-1.0)*x3278))+(((-1.0)*r02*x3284))+((r01*x3283)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((-9.16170407695831)*px)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((9.16170407695831)*py)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-9.16170407695831)*px))+IKsqr(((9.16170407695831)*py))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((-9.16170407695831)*px), ((9.16170407695831)*py));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
evalcond[0]=((((-0.10915)*(IKsin(j2))))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*(IKcos(j2))))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x3286=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x3286;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x3286);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x3287=((1.0)*cj6);
IkReal x3288=((((-1.0)*r10*sj6))+(((-1.0)*r11*x3287)));
j5eval[0]=x3288;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x3287)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x3288);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x3289=cj6*cj6;
IkReal x3290=(r21*sj6);
IkReal x3291=(cj6*r20);
IkReal x3292=(r01*r21);
IkReal x3293=((((-1.0)*r02*r22))+((x3289*x3292))+(((-1.0)*r00*r20*x3289))+((cj6*r00*x3290))+(((-1.0)*x3292))+((r01*sj6*x3291)));
j5eval[0]=x3293;
j5eval[1]=IKsign(x3293);
j5eval[2]=((IKabs(((((-1.0)*cj2*x3291))+((cj2*x3290)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3294=cj6*cj6;
IkReal x3295=(r21*sj6);
IkReal x3296=(cj6*r20);
IkReal x3297=(r01*r21);
CheckValue<IkReal> x3298=IKPowWithIntegerCheck(IKsign(((((-1.0)*r02*r22))+(((-1.0)*r00*r20*x3294))+((cj6*r00*x3295))+(((-1.0)*x3297))+((r01*sj6*x3296))+((x3294*x3297)))),-1);
if(!x3298.valid){
continue;
}
CheckValue<IkReal> x3299 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*x3296))+((cj2*x3295)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3299.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3298.value)))+(x3299.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3300=IKcos(j5);
IkReal x3301=IKsin(j5);
IkReal x3302=(cj6*r00);
IkReal x3303=(cj6*r10);
IkReal x3304=(cj6*r20);
IkReal x3305=(sj6*x3300);
IkReal x3306=(sj6*x3301);
IkReal x3307=((1.0)*x3300);
IkReal x3308=((1.0)*x3301);
evalcond[0]=((((-1.0)*x3304*x3307))+((r21*x3305))+((r22*x3301)));
evalcond[1]=((((-1.0)*x3304*x3308))+((r21*x3306))+(((-1.0)*r22*x3307)));
evalcond[2]=(cj2+((r02*x3301))+(((-1.0)*x3302*x3307))+((r01*x3305)));
evalcond[3]=(sj2+((r11*x3305))+((r12*x3301))+(((-1.0)*x3303*x3307)));
evalcond[4]=(cj2+((r11*x3306))+(((-1.0)*r12*x3307))+(((-1.0)*x3303*x3308)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*x3302*x3308))+(((-1.0)*r02*x3307))+((r01*x3306)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3309=((1.0)*cj6);
CheckValue<IkReal> x3310 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r20*x3309))+((cj2*r21*sj6)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x3310.valid){
continue;
}
CheckValue<IkReal> x3311=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x3309)))),-1);
if(!x3311.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3310.value)+(((1.5707963267949)*(x3311.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3312=IKcos(j5);
IkReal x3313=IKsin(j5);
IkReal x3314=(cj6*r00);
IkReal x3315=(cj6*r10);
IkReal x3316=(cj6*r20);
IkReal x3317=(sj6*x3312);
IkReal x3318=(sj6*x3313);
IkReal x3319=((1.0)*x3312);
IkReal x3320=((1.0)*x3313);
evalcond[0]=(((r21*x3317))+(((-1.0)*x3316*x3319))+((r22*x3313)));
evalcond[1]=(((r21*x3318))+(((-1.0)*r22*x3319))+(((-1.0)*x3316*x3320)));
evalcond[2]=(cj2+((r02*x3313))+(((-1.0)*x3314*x3319))+((r01*x3317)));
evalcond[3]=(sj2+((r11*x3317))+((r12*x3313))+(((-1.0)*x3315*x3319)));
evalcond[4]=(cj2+((r11*x3318))+(((-1.0)*x3315*x3320))+(((-1.0)*r12*x3319)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x3319))+((r01*x3318))+(((-1.0)*x3314*x3320)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3321=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x3321.valid){
continue;
}
CheckValue<IkReal> x3322 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x3322.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3321.value)))+(x3322.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3323=IKcos(j5);
IkReal x3324=IKsin(j5);
IkReal x3325=(cj6*r00);
IkReal x3326=(cj6*r10);
IkReal x3327=(cj6*r20);
IkReal x3328=(sj6*x3323);
IkReal x3329=(sj6*x3324);
IkReal x3330=((1.0)*x3323);
IkReal x3331=((1.0)*x3324);
evalcond[0]=(((r22*x3324))+((r21*x3328))+(((-1.0)*x3327*x3330)));
evalcond[1]=((((-1.0)*r22*x3330))+((r21*x3329))+(((-1.0)*x3327*x3331)));
evalcond[2]=(cj2+((r01*x3328))+((r02*x3324))+(((-1.0)*x3325*x3330)));
evalcond[3]=(((r12*x3324))+sj2+((r11*x3328))+(((-1.0)*x3326*x3330)));
evalcond[4]=(cj2+((r11*x3329))+(((-1.0)*x3326*x3331))+(((-1.0)*r12*x3330)));
evalcond[5]=((((-1.0)*sj2))+((r01*x3329))+(((-1.0)*r02*x3330))+(((-1.0)*x3325*x3331)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((-9.16170407695831)*px)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((9.16170407695831)*py)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-9.16170407695831)*px))+IKsqr(((9.16170407695831)*py))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((-9.16170407695831)*px), ((9.16170407695831)*py));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
evalcond[0]=((((-0.10915)*(IKsin(j2))))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*(IKcos(j2))))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x3332=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x3332;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x3332);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x3333=((1.0)*cj6);
IkReal x3334=((((-1.0)*r00*sj6))+(((-1.0)*r01*x3333)));
j5eval[0]=x3334;
j5eval[1]=IKsign(x3334);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x3333))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x3335=((1.0)*cj6);
IkReal x3336=((((-1.0)*r00*sj6))+(((-1.0)*r01*x3335)));
j5eval[0]=x3336;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x3335)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x3336);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3337=((1.0)*cj6);
CheckValue<IkReal> x3338 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x3337)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x3338.valid){
continue;
}
CheckValue<IkReal> x3339=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x3337)))),-1);
if(!x3339.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3338.value)+(((1.5707963267949)*(x3339.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3340=IKcos(j5);
IkReal x3341=IKsin(j5);
IkReal x3342=((1.0)*sj2);
IkReal x3343=(cj6*r10);
IkReal x3344=(cj6*r00);
IkReal x3345=(cj6*r20);
IkReal x3346=(sj6*x3340);
IkReal x3347=(sj6*x3341);
IkReal x3348=((1.0)*x3340);
IkReal x3349=((1.0)*x3341);
evalcond[0]=(((r22*x3341))+((r21*x3346))+(((-1.0)*x3345*x3348)));
evalcond[1]=(((r21*x3347))+(((-1.0)*x3345*x3349))+(((-1.0)*r22*x3348)));
evalcond[2]=((((-1.0)*x3343*x3349))+cj2+(((-1.0)*r12*x3348))+((r11*x3347)));
evalcond[3]=(((r02*x3341))+(((-1.0)*cj2))+(((-1.0)*x3344*x3348))+((r01*x3346)));
evalcond[4]=((((-1.0)*x3343*x3348))+(((-1.0)*x3342))+((r11*x3346))+((r12*x3341)));
evalcond[5]=((((-1.0)*x3342))+(((-1.0)*r02*x3348))+(((-1.0)*x3344*x3349))+((r01*x3347)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3350=((1.0)*cj6);
CheckValue<IkReal> x3351 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x3350)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3351.valid){
continue;
}
CheckValue<IkReal> x3352=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x3350)))),-1);
if(!x3352.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3351.value)+(((1.5707963267949)*(x3352.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3353=IKcos(j5);
IkReal x3354=IKsin(j5);
IkReal x3355=((1.0)*sj2);
IkReal x3356=(cj6*r10);
IkReal x3357=(cj6*r00);
IkReal x3358=(cj6*r20);
IkReal x3359=(sj6*x3353);
IkReal x3360=(sj6*x3354);
IkReal x3361=((1.0)*x3353);
IkReal x3362=((1.0)*x3354);
evalcond[0]=(((r21*x3359))+((r22*x3354))+(((-1.0)*x3358*x3361)));
evalcond[1]=(((r21*x3360))+(((-1.0)*r22*x3361))+(((-1.0)*x3358*x3362)));
evalcond[2]=((((-1.0)*r12*x3361))+cj2+(((-1.0)*x3356*x3362))+((r11*x3360)));
evalcond[3]=(((r01*x3359))+(((-1.0)*x3357*x3361))+((r02*x3354))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x3355))+((r12*x3354))+((r11*x3359))+(((-1.0)*x3356*x3361)));
evalcond[5]=((((-1.0)*x3355))+(((-1.0)*x3357*x3362))+((r01*x3360))+(((-1.0)*r02*x3361)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3363=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x3363.valid){
continue;
}
CheckValue<IkReal> x3364 = IKatan2WithCheck(IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x3364.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3363.value)))+(x3364.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3365=IKcos(j5);
IkReal x3366=IKsin(j5);
IkReal x3367=((1.0)*sj2);
IkReal x3368=(cj6*r10);
IkReal x3369=(cj6*r00);
IkReal x3370=(cj6*r20);
IkReal x3371=(sj6*x3365);
IkReal x3372=(sj6*x3366);
IkReal x3373=((1.0)*x3365);
IkReal x3374=((1.0)*x3366);
evalcond[0]=(((r22*x3366))+(((-1.0)*x3370*x3373))+((r21*x3371)));
evalcond[1]=((((-1.0)*r22*x3373))+(((-1.0)*x3370*x3374))+((r21*x3372)));
evalcond[2]=(cj2+(((-1.0)*r12*x3373))+((r11*x3372))+(((-1.0)*x3368*x3374)));
evalcond[3]=(((r01*x3371))+((r02*x3366))+(((-1.0)*x3369*x3373))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x3367))+((r12*x3366))+((r11*x3371))+(((-1.0)*x3368*x3373)));
evalcond[5]=(((r01*x3372))+(((-1.0)*x3367))+(((-1.0)*r02*x3373))+(((-1.0)*x3369*x3374)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2, j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3375=(r00*sj6);
IkReal x3376=(cj0*cj1);
IkReal x3377=(cj6*r01);
IkReal x3378=(sj0*sj1);
IkReal x3379=((20000.0)*px);
IkReal x3380=((8500.0)*cj1);
IkReal x3381=((9738.0)*x3378);
CheckValue<IkReal> x3382=IKPowWithIntegerCheck(((((-2183.0)*x3376))+(((2183.0)*x3378))),-1);
if(!x3382.valid){
continue;
}
CheckValue<IkReal> x3383=IKPowWithIntegerCheck(((((-1.0)*x3376))+x3378),-1);
if(!x3383.valid){
continue;
}
if( IKabs(((x3382.value)*((((x3375*x3380))+(((-1.0)*x3377*x3381))+((x3376*x3379))+(((9738.0)*x3375*x3376))+(((-1.0)*x3375*x3381))+(((9738.0)*x3376*x3377))+(((-1.0)*x3378*x3379))+((x3377*x3380)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x3383.value)*((x3377+x3375)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3382.value)*((((x3375*x3380))+(((-1.0)*x3377*x3381))+((x3376*x3379))+(((9738.0)*x3375*x3376))+(((-1.0)*x3375*x3381))+(((9738.0)*x3376*x3377))+(((-1.0)*x3378*x3379))+((x3377*x3380))))))+IKsqr(((x3383.value)*((x3377+x3375))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((x3382.value)*((((x3375*x3380))+(((-1.0)*x3377*x3381))+((x3376*x3379))+(((9738.0)*x3375*x3376))+(((-1.0)*x3375*x3381))+(((9738.0)*x3376*x3377))+(((-1.0)*x3378*x3379))+((x3377*x3380))))), ((x3383.value)*((x3377+x3375))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x3384=IKcos(j2);
IkReal x3385=IKsin(j2);
IkReal x3386=(r00*sj6);
IkReal x3387=(r10*sj6);
IkReal x3388=(sj0*sj1);
IkReal x3389=(cj0*cj1);
IkReal x3390=((1.0)*cj6);
IkReal x3391=((0.09465)*cj6);
IkReal x3392=(cj1*x3385);
IkReal x3393=((0.39225)*x3384);
evalcond[0]=((((-1.0)*r01*x3390))+(((-1.0)*x3386))+((x3384*x3388))+(((-1.0)*x3384*x3389)));
evalcond[1]=((((-1.0)*x3387))+(((-1.0)*x3385*x3389))+((x3385*x3388))+(((-1.0)*r11*x3390)));
evalcond[2]=((((-1.0)*r01*x3391))+((x3389*x3393))+(((-1.0)*px))+(((-0.10915)*x3385))+(((-1.0)*x3388*x3393))+(((0.425)*cj1*x3384))+(((-0.09465)*x3386)));
evalcond[3]=((((-0.39225)*x3385*x3388))+(((0.425)*x3392))+(((-1.0)*py))+(((0.39225)*x3385*x3389))+(((-1.0)*r11*x3391))+(((0.10915)*x3384))+(((-0.09465)*x3387)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x3394=((1.0)*cj6);
IkReal x3395=((((-1.0)*r01*x3394))+(((-1.0)*r00*sj6)));
j5eval[0]=x3395;
j5eval[1]=IKsign(x3395);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x3394))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x3396=((1.0)*cj6);
IkReal x3397=((((-1.0)*r10*sj6))+(((-1.0)*r11*x3396)));
j5eval[0]=x3397;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x3396))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x3397);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x3398=((1.0)*sj2);
IkReal x3399=((1.0)*sj6);
IkReal x3400=((((-1.0)*cj6*r21))+(((-1.0)*r20*x3399)));
j5eval[0]=x3400;
j5eval[1]=IKsign(x3400);
j5eval[2]=((IKabs((((cj6*r10*sj2))+(((-1.0)*cj2*r01*x3399))+((cj2*cj6*r00))+(((-1.0)*r11*sj6*x3398)))))+(IKabs(((((-1.0)*r12*x3398))+(((-1.0)*cj2*r02))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
IkReal x3401=((-1.0)*r20);
IkReal x3403 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x3403)==0){
continue;
}
IkReal x3402=pow(x3403,-0.5);
CheckValue<IkReal> x3404 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x3401),IKFAST_ATAN2_MAGTHRESH);
if(!x3404.valid){
continue;
}
IkReal gconst96=((-1.0)*(x3404.value));
IkReal gconst97=(r21*x3402);
IkReal gconst98=(x3401*x3402);
CheckValue<IkReal> x3405 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x3405.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x3405.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x3406=((-1.0)*r20);
IkReal x3407=x3402;
CheckValue<IkReal> x3409 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x3406),IKFAST_ATAN2_MAGTHRESH);
if(!x3409.valid){
continue;
}
IkReal x3408=((-1.0)*(x3409.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst97;
cj6=gconst98;
j6=x3408;
IkReal gconst96=x3408;
IkReal gconst97=(r21*x3407);
IkReal gconst98=(x3406*x3407);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x3410=((-1.0)*r20);
IkReal x3411=x3402;
CheckValue<IkReal> x3413 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x3410),IKFAST_ATAN2_MAGTHRESH);
if(!x3413.valid){
continue;
}
IkReal x3412=((-1.0)*(x3413.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst97;
cj6=gconst98;
j6=x3412;
IkReal gconst96=x3412;
IkReal gconst97=(r21*x3411);
IkReal gconst98=(x3410*x3411);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x3414=((-1.0)*r20);
IkReal x3415=x3402;
CheckValue<IkReal> x3417 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x3414),IKFAST_ATAN2_MAGTHRESH);
if(!x3417.valid){
continue;
}
IkReal x3416=((-1.0)*(x3417.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst97;
cj6=gconst98;
j6=x3416;
IkReal gconst96=x3416;
IkReal gconst97=(r21*x3415);
IkReal gconst98=(x3414*x3415);
IkReal x3418=((1.0)*(r22*r22));
CheckValue<IkReal> x3422=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x3418))),-1);
if(!x3422.valid){
continue;
}
IkReal x3419=x3422.value;
IkReal x3420=((1.0)*x3419);
IkReal x3421=((((-1.0)*x3420*(r20*r20*r20*r20)))+(((-1.0)*x3420*(r21*r21*r21*r21)))+(((-2.0)*x3419*(r20*r20)*(r21*r21)))+(((-1.0)*x3418)));
j5eval[0]=x3421;
j5eval[1]=IKsign(x3421);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3423=(sj0*sj1);
IkReal x3424=(gconst97*r21);
IkReal x3425=(gconst98*r20);
IkReal x3426=((1.0)*cj0*cj1);
CheckValue<IkReal> x3427=IKPowWithIntegerCheck(IKsign(((((2.0)*x3424*x3425))+(((-1.0)*(x3424*x3424)))+(((-1.0)*(x3425*x3425)))+(((-1.0)*(r22*r22))))),-1);
if(!x3427.valid){
continue;
}
CheckValue<IkReal> x3428 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x3426))+((r22*x3423)))),IkReal(((((-1.0)*x3424*x3426))+((cj0*cj1*x3425))+((x3423*x3424))+(((-1.0)*x3423*x3425)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3428.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3427.value)))+(x3428.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3429=IKsin(j5);
IkReal x3430=IKcos(j5);
IkReal x3431=((1.0)*cj0);
IkReal x3432=((1.0)*sj2);
IkReal x3433=((1.0)*gconst98);
IkReal x3434=(cj1*sj0);
IkReal x3435=(gconst97*x3430);
IkReal x3436=(r10*x3433);
IkReal x3437=(gconst97*x3429);
IkReal x3438=((1.0)*x3430);
evalcond[0]=((((-1.0)*r22*x3438))+((r21*x3437))+(((-1.0)*r20*x3429*x3433)));
evalcond[1]=((((-1.0)*r12*x3438))+cj2+((r11*x3437))+(((-1.0)*x3429*x3436)));
evalcond[2]=(((r01*x3437))+(((-1.0)*x3432))+(((-1.0)*r00*x3429*x3433))+(((-1.0)*r02*x3438)));
evalcond[3]=(((sj0*sj1))+(((-1.0)*r20*x3430*x3433))+((r21*x3435))+(((-1.0)*cj1*x3431))+((r22*x3429)));
evalcond[4]=((((-1.0)*cj2*sj1*x3431))+((r01*x3435))+(((-1.0)*r00*x3430*x3433))+(((-1.0)*cj2*x3434))+((r02*x3429)));
evalcond[5]=((((-1.0)*sj1*sj2*x3431))+(((-1.0)*x3432*x3434))+(((-1.0)*x3430*x3436))+((r12*x3429))+((r11*x3435)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3439=((1.0)*gconst98);
CheckValue<IkReal> x3440 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst97*r21*sj2))+(((-1.0)*r20*sj2*x3439)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3440.valid){
continue;
}
CheckValue<IkReal> x3441=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x3439))+(((-1.0)*gconst97*r10)))),-1);
if(!x3441.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3440.value)+(((1.5707963267949)*(x3441.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3442=IKsin(j5);
IkReal x3443=IKcos(j5);
IkReal x3444=((1.0)*cj0);
IkReal x3445=((1.0)*sj2);
IkReal x3446=((1.0)*gconst98);
IkReal x3447=(cj1*sj0);
IkReal x3448=(gconst97*x3443);
IkReal x3449=(r10*x3446);
IkReal x3450=(gconst97*x3442);
IkReal x3451=((1.0)*x3443);
evalcond[0]=(((r21*x3450))+(((-1.0)*r20*x3442*x3446))+(((-1.0)*r22*x3451)));
evalcond[1]=(cj2+(((-1.0)*r12*x3451))+(((-1.0)*x3442*x3449))+((r11*x3450)));
evalcond[2]=((((-1.0)*r00*x3442*x3446))+(((-1.0)*r02*x3451))+((r01*x3450))+(((-1.0)*x3445)));
evalcond[3]=(((r21*x3448))+((r22*x3442))+((sj0*sj1))+(((-1.0)*cj1*x3444))+(((-1.0)*r20*x3443*x3446)));
evalcond[4]=((((-1.0)*cj2*x3447))+((r02*x3442))+(((-1.0)*r00*x3443*x3446))+(((-1.0)*cj2*sj1*x3444))+((r01*x3448)));
evalcond[5]=(((r11*x3448))+((r12*x3442))+(((-1.0)*sj1*sj2*x3444))+(((-1.0)*x3443*x3449))+(((-1.0)*x3445*x3447)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3452=((1.0)*gconst98);
CheckValue<IkReal> x3453 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst97*r21))+(((-1.0)*cj2*r20*x3452)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3453.valid){
continue;
}
CheckValue<IkReal> x3454=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x3452))+(((-1.0)*gconst97*r00)))),-1);
if(!x3454.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3453.value)+(((1.5707963267949)*(x3454.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3455=IKsin(j5);
IkReal x3456=IKcos(j5);
IkReal x3457=((1.0)*cj0);
IkReal x3458=((1.0)*sj2);
IkReal x3459=((1.0)*gconst98);
IkReal x3460=(cj1*sj0);
IkReal x3461=(gconst97*x3456);
IkReal x3462=(r10*x3459);
IkReal x3463=(gconst97*x3455);
IkReal x3464=((1.0)*x3456);
evalcond[0]=((((-1.0)*r20*x3455*x3459))+(((-1.0)*r22*x3464))+((r21*x3463)));
evalcond[1]=(cj2+(((-1.0)*r12*x3464))+((r11*x3463))+(((-1.0)*x3455*x3462)));
evalcond[2]=((((-1.0)*r00*x3455*x3459))+(((-1.0)*x3458))+(((-1.0)*r02*x3464))+((r01*x3463)));
evalcond[3]=(((r22*x3455))+((sj0*sj1))+(((-1.0)*cj1*x3457))+((r21*x3461))+(((-1.0)*r20*x3456*x3459)));
evalcond[4]=((((-1.0)*cj2*x3460))+(((-1.0)*r00*x3456*x3459))+((r01*x3461))+((r02*x3455))+(((-1.0)*cj2*sj1*x3457)));
evalcond[5]=(((r12*x3455))+(((-1.0)*x3458*x3460))+((r11*x3461))+(((-1.0)*sj1*sj2*x3457))+(((-1.0)*x3456*x3462)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3465=((-1.0)*r21);
IkReal x3467 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x3467)==0){
continue;
}
IkReal x3466=pow(x3467,-0.5);
CheckValue<IkReal> x3468 = IKatan2WithCheck(IkReal(x3465),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x3468.valid){
continue;
}
IkReal gconst99=((3.14159265358979)+(((-1.0)*(x3468.value))));
IkReal gconst100=(x3465*x3466);
IkReal gconst101=((1.0)*r20*x3466);
CheckValue<IkReal> x3469 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x3469.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x3469.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x3470=((-1.0)*r21);
CheckValue<IkReal> x3473 = IKatan2WithCheck(IkReal(x3470),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x3473.valid){
continue;
}
IkReal x3471=((1.0)*(x3473.value));
IkReal x3472=x3466;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst100;
cj6=gconst101;
j6=((3.14159265)+(((-1.0)*x3471)));
IkReal gconst99=((3.14159265358979)+(((-1.0)*x3471)));
IkReal gconst100=(x3470*x3472);
IkReal gconst101=((1.0)*r20*x3472);
IkReal x3474=r22*r22;
IkReal x3475=((1.0)*x3474);
CheckValue<IkReal> x3479=IKPowWithIntegerCheck(((-1.0)+x3474),-1);
if(!x3479.valid){
continue;
}
IkReal x3476=x3479.value;
if((((1.0)+(((-1.0)*x3475)))) < -0.00001)
continue;
IkReal x3477=IKsqrt(((1.0)+(((-1.0)*x3475))));
IkReal x3478=(cj2*x3476*x3477);
j5eval[0]=((IKabs((x3478+(((-1.0)*x3475*x3478)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x3480=((-1.0)*r21);
CheckValue<IkReal> x3483 = IKatan2WithCheck(IkReal(x3480),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x3483.valid){
continue;
}
IkReal x3481=((1.0)*(x3483.value));
IkReal x3482=x3466;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst100;
cj6=gconst101;
j6=((3.14159265)+(((-1.0)*x3481)));
IkReal gconst99=((3.14159265358979)+(((-1.0)*x3481)));
IkReal gconst100=(x3480*x3482);
IkReal gconst101=((1.0)*r20*x3482);
IkReal x3484=r22*r22;
IkReal x3485=((1.0)*x3484);
CheckValue<IkReal> x3489=IKPowWithIntegerCheck(((-1.0)+x3484),-1);
if(!x3489.valid){
continue;
}
IkReal x3486=x3489.value;
if((((1.0)+(((-1.0)*x3485)))) < -0.00001)
continue;
IkReal x3487=IKsqrt(((1.0)+(((-1.0)*x3485))));
IkReal x3488=(sj2*x3486*x3487);
j5eval[0]=((IKabs(((((-1.0)*x3485*x3488))+x3488)))+(IKabs((r22*sj2))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x3490=((-1.0)*r21);
CheckValue<IkReal> x3493 = IKatan2WithCheck(IkReal(x3490),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x3493.valid){
continue;
}
IkReal x3491=((1.0)*(x3493.value));
IkReal x3492=x3466;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst100;
cj6=gconst101;
j6=((3.14159265)+(((-1.0)*x3491)));
IkReal gconst99=((3.14159265358979)+(((-1.0)*x3491)));
IkReal gconst100=(x3490*x3492);
IkReal gconst101=((1.0)*r20*x3492);
IkReal x3494=r22*r22;
IkReal x3495=(r12*sj2);
IkReal x3496=(cj2*r02);
CheckValue<IkReal> x3500=IKPowWithIntegerCheck(((-1.0)+x3494),-1);
if(!x3500.valid){
continue;
}
IkReal x3497=x3500.value;
if((((1.0)+(((-1.0)*x3494)))) < -0.00001)
continue;
IkReal x3498=IKsqrt(((1.0)+(((-1.0)*x3494))));
IkReal x3499=(r22*x3497*x3498);
j5eval[0]=0;
j5eval[1]=((IKabs(((((-1.0)*x3496))+(((-1.0)*x3495)))))+(IKabs((((x3496*x3499))+((x3495*x3499))))));
j5eval[2]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3501=((1.0)*sj2);
IkReal x3502=((1.0)*gconst100);
CheckValue<IkReal> x3503 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x3501))+(((-1.0)*cj2*r02)))),IkReal((((cj2*gconst101*r00))+((gconst101*r10*sj2))+(((-1.0)*cj2*r01*x3502))+(((-1.0)*gconst100*r11*x3501)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3503.valid){
continue;
}
CheckValue<IkReal> x3504=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x3502))+(((-1.0)*gconst101*r21)))),-1);
if(!x3504.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3503.value)+(((1.5707963267949)*(x3504.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3505=IKsin(j5);
IkReal x3506=IKcos(j5);
IkReal x3507=((1.0)*cj0);
IkReal x3508=((1.0)*gconst101);
IkReal x3509=((1.0)*sj2);
IkReal x3510=(cj1*sj0);
IkReal x3511=(gconst100*x3505);
IkReal x3512=(gconst100*x3506);
IkReal x3513=((1.0)*x3506);
evalcond[0]=(((r21*x3511))+(((-1.0)*r22*x3513))+(((-1.0)*r20*x3505*x3508)));
evalcond[1]=(cj2+(((-1.0)*r10*x3505*x3508))+((r11*x3511))+(((-1.0)*r12*x3513)));
evalcond[2]=((((-1.0)*r02*x3513))+((r01*x3511))+(((-1.0)*x3509))+(((-1.0)*r00*x3505*x3508)));
evalcond[3]=(((r21*x3512))+((sj0*sj1))+(((-1.0)*r20*x3506*x3508))+((r22*x3505))+(((-1.0)*cj1*x3507)));
evalcond[4]=(((r01*x3512))+(((-1.0)*cj2*sj1*x3507))+(((-1.0)*r00*x3506*x3508))+((r02*x3505))+(((-1.0)*cj2*x3510)));
evalcond[5]=((((-1.0)*x3509*x3510))+(((-1.0)*sj1*sj2*x3507))+(((-1.0)*r10*x3506*x3508))+((r12*x3505))+((r11*x3512)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3514=((1.0)*gconst101);
CheckValue<IkReal> x3515 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x3514))+((gconst100*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3515.valid){
continue;
}
CheckValue<IkReal> x3516=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst100*r10))+(((-1.0)*r11*x3514)))),-1);
if(!x3516.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3515.value)+(((1.5707963267949)*(x3516.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3517=IKsin(j5);
IkReal x3518=IKcos(j5);
IkReal x3519=((1.0)*cj0);
IkReal x3520=((1.0)*gconst101);
IkReal x3521=((1.0)*sj2);
IkReal x3522=(cj1*sj0);
IkReal x3523=(gconst100*x3517);
IkReal x3524=(gconst100*x3518);
IkReal x3525=((1.0)*x3518);
evalcond[0]=(((r21*x3523))+(((-1.0)*r22*x3525))+(((-1.0)*r20*x3517*x3520)));
evalcond[1]=(cj2+((r11*x3523))+(((-1.0)*r10*x3517*x3520))+(((-1.0)*r12*x3525)));
evalcond[2]=((((-1.0)*r02*x3525))+((r01*x3523))+(((-1.0)*x3521))+(((-1.0)*r00*x3517*x3520)));
evalcond[3]=((((-1.0)*cj1*x3519))+((r21*x3524))+(((-1.0)*r20*x3518*x3520))+((sj0*sj1))+((r22*x3517)));
evalcond[4]=(((r01*x3524))+((r02*x3517))+(((-1.0)*cj2*sj1*x3519))+(((-1.0)*r00*x3518*x3520))+(((-1.0)*cj2*x3522)));
evalcond[5]=((((-1.0)*sj1*sj2*x3519))+(((-1.0)*r10*x3518*x3520))+((r11*x3524))+(((-1.0)*x3521*x3522))+((r12*x3517)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3526=((1.0)*gconst101);
CheckValue<IkReal> x3527 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst100*r21))+(((-1.0)*cj2*r20*x3526)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3527.valid){
continue;
}
CheckValue<IkReal> x3528=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst100*r00))+(((-1.0)*r01*x3526)))),-1);
if(!x3528.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3527.value)+(((1.5707963267949)*(x3528.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3529=IKsin(j5);
IkReal x3530=IKcos(j5);
IkReal x3531=((1.0)*cj0);
IkReal x3532=((1.0)*gconst101);
IkReal x3533=((1.0)*sj2);
IkReal x3534=(cj1*sj0);
IkReal x3535=(gconst100*x3529);
IkReal x3536=(gconst100*x3530);
IkReal x3537=((1.0)*x3530);
evalcond[0]=((((-1.0)*r20*x3529*x3532))+((r21*x3535))+(((-1.0)*r22*x3537)));
evalcond[1]=(((r11*x3535))+cj2+(((-1.0)*r12*x3537))+(((-1.0)*r10*x3529*x3532)));
evalcond[2]=((((-1.0)*r02*x3537))+((r01*x3535))+(((-1.0)*x3533))+(((-1.0)*r00*x3529*x3532)));
evalcond[3]=((((-1.0)*cj1*x3531))+((r21*x3536))+((sj0*sj1))+(((-1.0)*r20*x3530*x3532))+((r22*x3529)));
evalcond[4]=((((-1.0)*cj2*x3534))+((r02*x3529))+(((-1.0)*cj2*sj1*x3531))+((r01*x3536))+(((-1.0)*r00*x3530*x3532)));
evalcond[5]=(((r11*x3536))+(((-1.0)*r10*x3530*x3532))+(((-1.0)*sj1*sj2*x3531))+((r12*x3529))+(((-1.0)*x3533*x3534)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3538=((-1.0)*r10);
IkReal x3540 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x3540)==0){
continue;
}
IkReal x3539=pow(x3540,-0.5);
CheckValue<IkReal> x3541 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x3538),IKFAST_ATAN2_MAGTHRESH);
if(!x3541.valid){
continue;
}
IkReal gconst102=((-1.0)*(x3541.value));
IkReal gconst103=(r11*x3539);
IkReal gconst104=(x3538*x3539);
CheckValue<IkReal> x3542 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x3542.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x3542.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x3543=((-1.0)*r10);
IkReal x3544=x3539;
CheckValue<IkReal> x3546 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x3543),IKFAST_ATAN2_MAGTHRESH);
if(!x3546.valid){
continue;
}
IkReal x3545=((-1.0)*(x3546.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst103;
cj6=gconst104;
j6=x3545;
IkReal gconst102=x3545;
IkReal gconst103=(r11*x3544);
IkReal gconst104=(x3543*x3544);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3547=((1.0)*sj2);
IkReal x3548=((1.0)*cj2);
CheckValue<IkReal> x3549=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst103*r20))+(((-1.0)*gconst104*r21)))),-1);
if(!x3549.valid){
continue;
}
CheckValue<IkReal> x3550 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x3548))+(((-1.0)*r12*x3547)))),IkReal((((cj2*gconst104*r00))+(((-1.0)*gconst103*r11*x3547))+((gconst104*r10*sj2))+(((-1.0)*gconst103*r01*x3548)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3550.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3549.value)))+(x3550.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3551=IKsin(j5);
IkReal x3552=IKcos(j5);
IkReal x3553=((1.0)*cj0);
IkReal x3554=((1.0)*sj2);
IkReal x3555=(cj1*sj0);
IkReal x3556=(gconst103*x3552);
IkReal x3557=((1.0)*x3552);
IkReal x3558=(gconst103*x3551);
IkReal x3559=(gconst104*x3557);
IkReal x3560=((1.0)*gconst104*x3551);
evalcond[0]=(((r21*x3558))+(((-1.0)*r20*x3560))+(((-1.0)*r22*x3557)));
evalcond[1]=(cj2+(((-1.0)*r10*x3560))+(((-1.0)*r12*x3557))+((r11*x3558)));
evalcond[2]=(((r01*x3558))+(((-1.0)*r00*x3560))+(((-1.0)*x3554))+(((-1.0)*r02*x3557)));
evalcond[3]=((((-1.0)*r20*x3559))+((r21*x3556))+((sj0*sj1))+(((-1.0)*cj1*x3553))+((r22*x3551)));
evalcond[4]=(((r01*x3556))+(((-1.0)*cj2*x3555))+(((-1.0)*r00*x3559))+((r02*x3551))+(((-1.0)*cj2*sj1*x3553)));
evalcond[5]=((((-1.0)*x3554*x3555))+(((-1.0)*r10*x3559))+(((-1.0)*sj1*sj2*x3553))+((r12*x3551))+((r11*x3556)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3561=((1.0)*gconst104);
CheckValue<IkReal> x3562=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst103*r00))+(((-1.0)*r01*x3561)))),-1);
if(!x3562.valid){
continue;
}
CheckValue<IkReal> x3563 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x3561))+((cj2*gconst103*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3563.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3562.value)))+(x3563.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3564=IKsin(j5);
IkReal x3565=IKcos(j5);
IkReal x3566=((1.0)*cj0);
IkReal x3567=((1.0)*sj2);
IkReal x3568=(cj1*sj0);
IkReal x3569=(gconst103*x3565);
IkReal x3570=((1.0)*x3565);
IkReal x3571=(gconst103*x3564);
IkReal x3572=(gconst104*x3570);
IkReal x3573=((1.0)*gconst104*x3564);
evalcond[0]=(((r21*x3571))+(((-1.0)*r22*x3570))+(((-1.0)*r20*x3573)));
evalcond[1]=((((-1.0)*r10*x3573))+cj2+((r11*x3571))+(((-1.0)*r12*x3570)));
evalcond[2]=(((r01*x3571))+(((-1.0)*x3567))+(((-1.0)*r00*x3573))+(((-1.0)*r02*x3570)));
evalcond[3]=(((r21*x3569))+((sj0*sj1))+((r22*x3564))+(((-1.0)*r20*x3572))+(((-1.0)*cj1*x3566)));
evalcond[4]=((((-1.0)*cj2*sj1*x3566))+(((-1.0)*cj2*x3568))+((r01*x3569))+(((-1.0)*r00*x3572))+((r02*x3564)));
evalcond[5]=((((-1.0)*r10*x3572))+(((-1.0)*sj1*sj2*x3566))+((r11*x3569))+((r12*x3564))+(((-1.0)*x3567*x3568)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3574=((-1.0)*r11);
IkReal x3576 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x3576)==0){
continue;
}
IkReal x3575=pow(x3576,-0.5);
CheckValue<IkReal> x3577 = IKatan2WithCheck(IkReal(x3574),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x3577.valid){
continue;
}
IkReal gconst105=((3.14159265358979)+(((-1.0)*(x3577.value))));
IkReal gconst106=(x3574*x3575);
IkReal gconst107=((1.0)*r10*x3575);
CheckValue<IkReal> x3578 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x3578.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x3578.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x3579=((-1.0)*r11);
CheckValue<IkReal> x3582 = IKatan2WithCheck(IkReal(x3579),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x3582.valid){
continue;
}
IkReal x3580=((1.0)*(x3582.value));
IkReal x3581=x3575;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst106;
cj6=gconst107;
j6=((3.14159265)+(((-1.0)*x3580)));
IkReal gconst105=((3.14159265358979)+(((-1.0)*x3580)));
IkReal gconst106=(x3579*x3581);
IkReal gconst107=((1.0)*r10*x3581);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x3583=((-1.0)*r11);
CheckValue<IkReal> x3586 = IKatan2WithCheck(IkReal(x3583),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x3586.valid){
continue;
}
IkReal x3584=((1.0)*(x3586.value));
IkReal x3585=x3575;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst106;
cj6=gconst107;
j6=((3.14159265)+(((-1.0)*x3584)));
IkReal gconst105=((3.14159265358979)+(((-1.0)*x3584)));
IkReal gconst106=(x3583*x3585);
IkReal gconst107=((1.0)*r10*x3585);
IkReal x3587=r12*r12;
IkReal x3588=((1.0)*sj2);
IkReal x3589=(cj2*r02);
IkReal x3590=x3575;
j5eval[0]=((IKabs(((((-1.0)*x3589))+(((-1.0)*r12*x3588)))))+(IKabs((((r12*x3589*x3590))+(((-1.0)*x3588*x3590))+((sj2*x3587*x3590))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x3591=((-1.0)*r11);
CheckValue<IkReal> x3594 = IKatan2WithCheck(IkReal(x3591),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x3594.valid){
continue;
}
IkReal x3592=((1.0)*(x3594.value));
IkReal x3593=x3575;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst106;
cj6=gconst107;
j6=((3.14159265)+(((-1.0)*x3592)));
IkReal gconst105=((3.14159265358979)+(((-1.0)*x3592)));
IkReal gconst106=(x3591*x3593);
IkReal gconst107=((1.0)*r10*x3593);
IkReal x3595=r12*r12;
IkReal x3596=((1.0)+(((-1.0)*x3595)));
IkReal x3597=(cj0*cj1*r22);
IkReal x3598=(r22*sj0*sj1);
CheckValue<IkReal> x3605=IKPowWithIntegerCheck(x3596,-1);
if(!x3605.valid){
continue;
}
IkReal x3599=x3605.value;
CheckValue<IkReal> x3606=IKPowWithIntegerCheck(((-1.0)+x3595),-1);
if(!x3606.valid){
continue;
}
IkReal x3600=x3606.value;
IkReal x3601=((1.0)*x3599);
if((x3596) < -0.00001)
continue;
IkReal x3602=IKsqrt(x3596);
IkReal x3603=(r12*x3600*x3602);
IkReal x3604=((((-2.0)*r10*r11*r20*r21*x3599))+(((-1.0)*x3601*(r10*r10)*(r20*r20)))+(((-1.0)*x3601*(r11*r11)*(r21*r21)))+(((-1.0)*(r22*r22))));
j5eval[0]=x3604;
j5eval[1]=((IKabs((x3598+(((-1.0)*x3597)))))+(IKabs(((((-1.0)*x3598*x3603))+((x3597*x3603))))));
j5eval[2]=IKsign(x3604);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3607=(cj0*cj1);
IkReal x3608=(gconst107*r20);
IkReal x3609=(gconst106*r21);
IkReal x3610=(sj0*sj1);
CheckValue<IkReal> x3611=IKPowWithIntegerCheck(IKsign(((((-1.0)*(r22*r22)))+(((-1.0)*(x3608*x3608)))+(((-1.0)*(x3609*x3609)))+(((2.0)*x3608*x3609)))),-1);
if(!x3611.valid){
continue;
}
CheckValue<IkReal> x3612 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x3607))+((r22*x3610)))),IkReal((((x3609*x3610))+((x3607*x3608))+(((-1.0)*x3607*x3609))+(((-1.0)*x3608*x3610)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3612.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3611.value)))+(x3612.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3613=IKsin(j5);
IkReal x3614=IKcos(j5);
IkReal x3615=((1.0)*cj0);
IkReal x3616=((1.0)*gconst107);
IkReal x3617=((1.0)*sj2);
IkReal x3618=(cj1*sj0);
IkReal x3619=(gconst106*x3614);
IkReal x3620=(gconst106*x3613);
IkReal x3621=((1.0)*x3614);
evalcond[0]=((((-1.0)*r20*x3613*x3616))+((r21*x3620))+(((-1.0)*r22*x3621)));
evalcond[1]=(cj2+(((-1.0)*r12*x3621))+((r11*x3620))+(((-1.0)*r10*x3613*x3616)));
evalcond[2]=(((r01*x3620))+(((-1.0)*r00*x3613*x3616))+(((-1.0)*x3617))+(((-1.0)*r02*x3621)));
evalcond[3]=(((r22*x3613))+((sj0*sj1))+((r21*x3619))+(((-1.0)*cj1*x3615))+(((-1.0)*r20*x3614*x3616)));
evalcond[4]=((((-1.0)*r00*x3614*x3616))+((r02*x3613))+(((-1.0)*cj2*sj1*x3615))+(((-1.0)*cj2*x3618))+((r01*x3619)));
evalcond[5]=(((r11*x3619))+(((-1.0)*x3617*x3618))+(((-1.0)*sj1*sj2*x3615))+(((-1.0)*r10*x3614*x3616))+((r12*x3613)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3622=((1.0)*sj2);
IkReal x3623=((1.0)*cj2);
CheckValue<IkReal> x3624 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x3622))+(((-1.0)*r02*x3623)))),IkReal((((cj2*gconst107*r00))+(((-1.0)*gconst106*r11*x3622))+((gconst107*r10*sj2))+(((-1.0)*gconst106*r01*x3623)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3624.valid){
continue;
}
CheckValue<IkReal> x3625=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst107*r21))+(((-1.0)*gconst106*r20)))),-1);
if(!x3625.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3624.value)+(((1.5707963267949)*(x3625.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3626=IKsin(j5);
IkReal x3627=IKcos(j5);
IkReal x3628=((1.0)*cj0);
IkReal x3629=((1.0)*gconst107);
IkReal x3630=((1.0)*sj2);
IkReal x3631=(cj1*sj0);
IkReal x3632=(gconst106*x3627);
IkReal x3633=(gconst106*x3626);
IkReal x3634=((1.0)*x3627);
evalcond[0]=((((-1.0)*r22*x3634))+((r21*x3633))+(((-1.0)*r20*x3626*x3629)));
evalcond[1]=(((r11*x3633))+cj2+(((-1.0)*r12*x3634))+(((-1.0)*r10*x3626*x3629)));
evalcond[2]=((((-1.0)*x3630))+(((-1.0)*r02*x3634))+((r01*x3633))+(((-1.0)*r00*x3626*x3629)));
evalcond[3]=(((sj0*sj1))+((r21*x3632))+(((-1.0)*cj1*x3628))+((r22*x3626))+(((-1.0)*r20*x3627*x3629)));
evalcond[4]=((((-1.0)*cj2*x3631))+((r02*x3626))+((r01*x3632))+(((-1.0)*cj2*sj1*x3628))+(((-1.0)*r00*x3627*x3629)));
evalcond[5]=(((r11*x3632))+(((-1.0)*sj1*sj2*x3628))+(((-1.0)*x3630*x3631))+((r12*x3626))+(((-1.0)*r10*x3627*x3629)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3635=((1.0)*gconst107);
CheckValue<IkReal> x3636 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst106*r21))+(((-1.0)*cj2*r20*x3635)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3636.valid){
continue;
}
CheckValue<IkReal> x3637=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst106*r00))+(((-1.0)*r01*x3635)))),-1);
if(!x3637.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3636.value)+(((1.5707963267949)*(x3637.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3638=IKsin(j5);
IkReal x3639=IKcos(j5);
IkReal x3640=((1.0)*cj0);
IkReal x3641=((1.0)*gconst107);
IkReal x3642=((1.0)*sj2);
IkReal x3643=(cj1*sj0);
IkReal x3644=(gconst106*x3639);
IkReal x3645=(gconst106*x3638);
IkReal x3646=((1.0)*x3639);
evalcond[0]=((((-1.0)*r20*x3638*x3641))+((r21*x3645))+(((-1.0)*r22*x3646)));
evalcond[1]=(((r11*x3645))+cj2+(((-1.0)*r12*x3646))+(((-1.0)*r10*x3638*x3641)));
evalcond[2]=(((r01*x3645))+(((-1.0)*r00*x3638*x3641))+(((-1.0)*r02*x3646))+(((-1.0)*x3642)));
evalcond[3]=((((-1.0)*r20*x3639*x3641))+((r22*x3638))+((sj0*sj1))+((r21*x3644))+(((-1.0)*cj1*x3640)));
evalcond[4]=(((r02*x3638))+((r01*x3644))+(((-1.0)*r00*x3639*x3641))+(((-1.0)*cj2*x3643))+(((-1.0)*cj2*sj1*x3640)));
evalcond[5]=(((r12*x3638))+((r11*x3644))+(((-1.0)*sj1*sj2*x3640))+(((-1.0)*x3642*x3643))+(((-1.0)*r10*x3639*x3641)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x3647=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x3647;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x3647);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x3648=((1.0)*cj6);
IkReal x3649=((((-1.0)*r00*sj6))+(((-1.0)*r01*x3648)));
j5eval[0]=x3649;
j5eval[1]=IKsign(x3649);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x3648)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x3650=(r11*sj6);
IkReal x3651=(cj0*cj1);
IkReal x3652=(sj0*sj1);
IkReal x3653=(cj6*r10);
IkReal x3654=((((-1.0)*r00*sj6))+(((-1.0)*cj6*r01)));
j5eval[0]=x3654;
j5eval[1]=((IKabs((((r12*x3651))+(((-1.0)*r12*x3652)))))+(IKabs((((x3650*x3652))+((x3651*x3653))+(((-1.0)*x3652*x3653))+(((-1.0)*x3650*x3651))))));
j5eval[2]=IKsign(x3654);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3655=(r11*sj6);
IkReal x3656=(cj0*cj1);
IkReal x3657=(sj0*sj1);
IkReal x3658=(cj6*r10);
CheckValue<IkReal> x3659=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*cj6*r01)))),-1);
if(!x3659.valid){
continue;
}
CheckValue<IkReal> x3660 = IKatan2WithCheck(IkReal(((((-1.0)*x3655*x3656))+((x3655*x3657))+(((-1.0)*x3657*x3658))+((x3656*x3658)))),IkReal((((r12*x3656))+(((-1.0)*r12*x3657)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3660.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3659.value)))+(x3660.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3661=IKcos(j5);
IkReal x3662=IKsin(j5);
IkReal x3663=((1.0)*cj0);
IkReal x3664=(sj6*x3662);
IkReal x3665=((1.0)*x3661);
IkReal x3666=(sj6*x3661);
IkReal x3667=((1.0)*cj6*x3662);
evalcond[0]=(((r11*x3666))+((r12*x3662))+(((-1.0)*cj6*r10*x3665)));
evalcond[1]=((((-1.0)*r20*x3667))+(((-1.0)*r22*x3665))+((r21*x3664)));
evalcond[2]=((((-1.0)*r02*x3665))+((r01*x3664))+(((-1.0)*r00*x3667)));
evalcond[3]=((1.0)+((r11*x3664))+(((-1.0)*r10*x3667))+(((-1.0)*r12*x3665)));
evalcond[4]=(((r22*x3662))+(((-1.0)*cj6*r20*x3665))+((sj0*sj1))+(((-1.0)*cj1*x3663))+((r21*x3666)));
evalcond[5]=((((-1.0)*cj1*sj0))+(((-1.0)*sj1*x3663))+((r01*x3666))+((r02*x3662))+(((-1.0)*cj6*r00*x3665)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3668=((1.0)*cj6);
CheckValue<IkReal> x3669 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x3668)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3669.valid){
continue;
}
CheckValue<IkReal> x3670=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x3668)))),-1);
if(!x3670.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3669.value)+(((1.5707963267949)*(x3670.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3671=IKcos(j5);
IkReal x3672=IKsin(j5);
IkReal x3673=((1.0)*cj0);
IkReal x3674=(sj6*x3672);
IkReal x3675=((1.0)*x3671);
IkReal x3676=(sj6*x3671);
IkReal x3677=((1.0)*cj6*x3672);
evalcond[0]=(((r11*x3676))+((r12*x3672))+(((-1.0)*cj6*r10*x3675)));
evalcond[1]=((((-1.0)*r20*x3677))+((r21*x3674))+(((-1.0)*r22*x3675)));
evalcond[2]=(((r01*x3674))+(((-1.0)*r00*x3677))+(((-1.0)*r02*x3675)));
evalcond[3]=((1.0)+((r11*x3674))+(((-1.0)*r10*x3677))+(((-1.0)*r12*x3675)));
evalcond[4]=(((sj0*sj1))+((r21*x3676))+((r22*x3672))+(((-1.0)*cj1*x3673))+(((-1.0)*cj6*r20*x3675)));
evalcond[5]=(((r01*x3676))+(((-1.0)*cj6*r00*x3675))+(((-1.0)*cj1*sj0))+((r02*x3672))+(((-1.0)*sj1*x3673)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3678=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x3678.valid){
continue;
}
CheckValue<IkReal> x3679 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3679.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3678.value)))+(x3679.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3680=IKcos(j5);
IkReal x3681=IKsin(j5);
IkReal x3682=((1.0)*cj0);
IkReal x3683=(sj6*x3681);
IkReal x3684=((1.0)*x3680);
IkReal x3685=(sj6*x3680);
IkReal x3686=((1.0)*cj6*x3681);
evalcond[0]=((((-1.0)*cj6*r10*x3684))+((r12*x3681))+((r11*x3685)));
evalcond[1]=((((-1.0)*r22*x3684))+(((-1.0)*r20*x3686))+((r21*x3683)));
evalcond[2]=(((r01*x3683))+(((-1.0)*r00*x3686))+(((-1.0)*r02*x3684)));
evalcond[3]=((1.0)+(((-1.0)*r12*x3684))+((r11*x3683))+(((-1.0)*r10*x3686)));
evalcond[4]=(((r21*x3685))+(((-1.0)*cj6*r20*x3684))+(((-1.0)*cj1*x3682))+((sj0*sj1))+((r22*x3681)));
evalcond[5]=(((r01*x3685))+(((-1.0)*cj1*sj0))+(((-1.0)*cj6*r00*x3684))+(((-1.0)*sj1*x3682))+((r02*x3681)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x3687=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x3687;
j5eval[1]=IKsign(x3687);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x3688=((1.0)*cj6);
IkReal x3689=((((-1.0)*r21*x3688))+(((-1.0)*r20*sj6)));
j5eval[0]=x3689;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x3688))))));
j5eval[2]=IKsign(x3689);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x3690=cj6*cj6;
IkReal x3691=r11*r11;
IkReal x3692=(r11*sj6);
IkReal x3693=(cj6*r10);
IkReal x3694=((r12*r12)+((x3690*(r10*r10)))+(((-2.0)*x3692*x3693))+x3691+(((-1.0)*x3690*x3691)));
j5eval[0]=x3694;
j5eval[1]=IKsign(x3694);
j5eval[2]=((IKabs(r12))+(IKabs((x3692+(((-1.0)*x3693))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3695=cj6*cj6;
IkReal x3696=r11*r11;
IkReal x3697=(r11*sj6);
IkReal x3698=(cj6*r10);
CheckValue<IkReal> x3699 = IKatan2WithCheck(IkReal((x3697+(((-1.0)*x3698)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x3699.valid){
continue;
}
CheckValue<IkReal> x3700=IKPowWithIntegerCheck(IKsign(((r12*r12)+x3696+(((-2.0)*x3697*x3698))+((x3695*(r10*r10)))+(((-1.0)*x3695*x3696)))),-1);
if(!x3700.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3699.value)+(((1.5707963267949)*(x3700.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3701=IKcos(j5);
IkReal x3702=IKsin(j5);
IkReal x3703=(sj6*x3702);
IkReal x3704=((1.0)*x3701);
IkReal x3705=(sj6*x3701);
IkReal x3706=((1.0)*cj6*x3702);
evalcond[0]=(((r12*x3702))+((r11*x3705))+(((-1.0)*cj6*r10*x3704)));
evalcond[1]=(((r21*x3703))+(((-1.0)*r20*x3706))+(((-1.0)*r22*x3704)));
evalcond[2]=((((-1.0)*r02*x3704))+(((-1.0)*r00*x3706))+((r01*x3703)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x3706))+((r11*x3703))+(((-1.0)*r12*x3704)));
evalcond[4]=(((r01*x3705))+(((-1.0)*cj6*r00*x3704))+((cj1*sj0))+((r02*x3702))+((cj0*sj1)));
evalcond[5]=((((-1.0)*cj6*r20*x3704))+((r21*x3705))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r22*x3702)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3707=((1.0)*cj6);
CheckValue<IkReal> x3708 = IKatan2WithCheck(IkReal(r02),IkReal(((((-1.0)*r00*x3707))+((r01*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3708.valid){
continue;
}
CheckValue<IkReal> x3709=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x3707))+(((-1.0)*r20*sj6)))),-1);
if(!x3709.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3708.value)+(((1.5707963267949)*(x3709.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3710=IKcos(j5);
IkReal x3711=IKsin(j5);
IkReal x3712=(sj6*x3711);
IkReal x3713=((1.0)*x3710);
IkReal x3714=(sj6*x3710);
IkReal x3715=((1.0)*cj6*x3711);
evalcond[0]=(((r11*x3714))+((r12*x3711))+(((-1.0)*cj6*r10*x3713)));
evalcond[1]=((((-1.0)*r20*x3715))+((r21*x3712))+(((-1.0)*r22*x3713)));
evalcond[2]=((((-1.0)*r00*x3715))+(((-1.0)*r02*x3713))+((r01*x3712)));
evalcond[3]=((-1.0)+((r11*x3712))+(((-1.0)*r10*x3715))+(((-1.0)*r12*x3713)));
evalcond[4]=((((-1.0)*cj6*r00*x3713))+((cj1*sj0))+((r01*x3714))+((r02*x3711))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*cj6*r20*x3713))+((r21*x3714))+((r22*x3711))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3716=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x3716.valid){
continue;
}
CheckValue<IkReal> x3717 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3717.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3716.value)))+(x3717.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3718=IKcos(j5);
IkReal x3719=IKsin(j5);
IkReal x3720=(sj6*x3719);
IkReal x3721=((1.0)*x3718);
IkReal x3722=(sj6*x3718);
IkReal x3723=((1.0)*cj6*x3719);
evalcond[0]=(((r12*x3719))+((r11*x3722))+(((-1.0)*cj6*r10*x3721)));
evalcond[1]=((((-1.0)*r22*x3721))+(((-1.0)*r20*x3723))+((r21*x3720)));
evalcond[2]=(((r01*x3720))+(((-1.0)*r00*x3723))+(((-1.0)*r02*x3721)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x3721))+((r11*x3720))+(((-1.0)*r10*x3723)));
evalcond[4]=(((r01*x3722))+((cj1*sj0))+(((-1.0)*cj6*r00*x3721))+((r02*x3719))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*cj6*r20*x3721))+((r22*x3719))+(((-1.0)*cj0*cj1))+((r21*x3722)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3724=((-1.0)*r00);
IkReal x3726 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x3726)==0){
continue;
}
IkReal x3725=pow(x3726,-0.5);
CheckValue<IkReal> x3727 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x3724),IKFAST_ATAN2_MAGTHRESH);
if(!x3727.valid){
continue;
}
IkReal gconst108=((-1.0)*(x3727.value));
IkReal gconst109=(r01*x3725);
IkReal gconst110=(x3724*x3725);
CheckValue<IkReal> x3728 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x3728.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x3728.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x3729=((-1.0)*r00);
IkReal x3730=x3725;
CheckValue<IkReal> x3732 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x3729),IKFAST_ATAN2_MAGTHRESH);
if(!x3732.valid){
continue;
}
IkReal x3731=((-1.0)*(x3732.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst109;
cj6=gconst110;
j6=x3731;
IkReal gconst108=x3731;
IkReal gconst109=(r01*x3730);
IkReal gconst110=(x3729*x3730);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3733=((1.0)*sj2);
IkReal x3734=((1.0)*cj2);
CheckValue<IkReal> x3735=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst109*r20))+(((-1.0)*gconst110*r21)))),-1);
if(!x3735.valid){
continue;
}
CheckValue<IkReal> x3736 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x3733))+(((-1.0)*r02*x3734)))),IkReal(((((-1.0)*gconst109*r11*x3733))+((gconst110*r10*sj2))+(((-1.0)*gconst109*r01*x3734))+((cj2*gconst110*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3736.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3735.value)))+(x3736.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3737=IKsin(j5);
IkReal x3738=IKcos(j5);
IkReal x3739=((1.0)*cj0);
IkReal x3740=((1.0)*sj2);
IkReal x3741=(gconst109*r01);
IkReal x3742=(cj1*sj0);
IkReal x3743=(gconst109*r21);
IkReal x3744=(gconst109*r11);
IkReal x3745=((1.0)*x3738);
IkReal x3746=(gconst110*x3745);
IkReal x3747=((1.0)*gconst110*x3737);
evalcond[0]=((((-1.0)*r22*x3745))+((x3737*x3743))+(((-1.0)*r20*x3747)));
evalcond[1]=(((x3737*x3744))+cj2+(((-1.0)*r12*x3745))+(((-1.0)*r10*x3747)));
evalcond[2]=(((x3737*x3741))+(((-1.0)*r00*x3747))+(((-1.0)*x3740))+(((-1.0)*r02*x3745)));
evalcond[3]=((((-1.0)*r20*x3746))+(((-1.0)*cj1*x3739))+((r22*x3737))+((sj0*sj1))+((x3738*x3743)));
evalcond[4]=((((-1.0)*cj2*sj1*x3739))+(((-1.0)*r00*x3746))+((r02*x3737))+(((-1.0)*cj2*x3742))+((x3738*x3741)));
evalcond[5]=((((-1.0)*x3740*x3742))+((r12*x3737))+(((-1.0)*r10*x3746))+(((-1.0)*sj1*sj2*x3739))+((x3738*x3744)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3748=((1.0)*gconst110);
CheckValue<IkReal> x3749=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x3748))+(((-1.0)*gconst109*r10)))),-1);
if(!x3749.valid){
continue;
}
CheckValue<IkReal> x3750 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst109*r21*sj2))+(((-1.0)*r20*sj2*x3748)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3750.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3749.value)))+(x3750.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3751=IKsin(j5);
IkReal x3752=IKcos(j5);
IkReal x3753=((1.0)*cj0);
IkReal x3754=((1.0)*sj2);
IkReal x3755=(gconst109*r01);
IkReal x3756=(cj1*sj0);
IkReal x3757=(gconst109*r21);
IkReal x3758=(gconst109*r11);
IkReal x3759=((1.0)*x3752);
IkReal x3760=(gconst110*x3759);
IkReal x3761=((1.0)*gconst110*x3751);
evalcond[0]=((((-1.0)*r20*x3761))+(((-1.0)*r22*x3759))+((x3751*x3757)));
evalcond[1]=((((-1.0)*r10*x3761))+cj2+((x3751*x3758))+(((-1.0)*r12*x3759)));
evalcond[2]=(((x3751*x3755))+(((-1.0)*x3754))+(((-1.0)*r00*x3761))+(((-1.0)*r02*x3759)));
evalcond[3]=((((-1.0)*cj1*x3753))+(((-1.0)*r20*x3760))+((x3752*x3757))+((r22*x3751))+((sj0*sj1)));
evalcond[4]=(((x3752*x3755))+((r02*x3751))+(((-1.0)*cj2*x3756))+(((-1.0)*r00*x3760))+(((-1.0)*cj2*sj1*x3753)));
evalcond[5]=((((-1.0)*r10*x3760))+((r12*x3751))+((x3752*x3758))+(((-1.0)*x3754*x3756))+(((-1.0)*sj1*sj2*x3753)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x3762=((-1.0)*r01);
IkReal x3764 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x3764)==0){
continue;
}
IkReal x3763=pow(x3764,-0.5);
CheckValue<IkReal> x3765 = IKatan2WithCheck(IkReal(x3762),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x3765.valid){
continue;
}
IkReal gconst111=((3.14159265358979)+(((-1.0)*(x3765.value))));
IkReal gconst112=(x3762*x3763);
IkReal gconst113=((1.0)*r00*x3763);
CheckValue<IkReal> x3766 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x3766.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x3766.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x3767=((-1.0)*r01);
CheckValue<IkReal> x3770 = IKatan2WithCheck(IkReal(x3767),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x3770.valid){
continue;
}
IkReal x3768=((1.0)*(x3770.value));
IkReal x3769=x3763;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst112;
cj6=gconst113;
j6=((3.14159265)+(((-1.0)*x3768)));
IkReal gconst111=((3.14159265358979)+(((-1.0)*x3768)));
IkReal gconst112=(x3767*x3769);
IkReal gconst113=((1.0)*r00*x3769);
j5eval[0]=0;
j5eval[1]=cj2;
j5eval[2]=r22;
j5eval[3]=((1.0)+(((-1.0)*(r02*r02))));
j5eval[4]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x3771=((-1.0)*r01);
CheckValue<IkReal> x3774 = IKatan2WithCheck(IkReal(x3771),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x3774.valid){
continue;
}
IkReal x3772=((1.0)*(x3774.value));
IkReal x3773=x3763;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst112;
cj6=gconst113;
j6=((3.14159265)+(((-1.0)*x3772)));
IkReal gconst111=((3.14159265358979)+(((-1.0)*x3772)));
IkReal gconst112=(x3771*x3773);
IkReal gconst113=((1.0)*r00*x3773);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x3775=((-1.0)*r01);
CheckValue<IkReal> x3778 = IKatan2WithCheck(IkReal(x3775),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x3778.valid){
continue;
}
IkReal x3776=((1.0)*(x3778.value));
IkReal x3777=x3763;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst112;
cj6=gconst113;
j6=((3.14159265)+(((-1.0)*x3776)));
IkReal gconst111=((3.14159265358979)+(((-1.0)*x3776)));
IkReal gconst112=(x3775*x3777);
IkReal gconst113=((1.0)*r00*x3777);
IkReal x3779=r02*r02;
IkReal x3780=(r12*sj2);
IkReal x3781=((1.0)*cj2);
IkReal x3782=x3763;
j5eval[0]=((IKabs((((cj2*x3779*x3782))+((r02*x3780*x3782))+(((-1.0)*x3781*x3782)))))+(IKabs(((((-1.0)*r02*x3781))+(((-1.0)*x3780))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3783=((1.0)*sj2);
IkReal x3784=((1.0)*cj2);
CheckValue<IkReal> x3785 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x3784))+(((-1.0)*r12*x3783)))),IkReal(((((-1.0)*gconst112*r11*x3783))+((cj2*gconst113*r00))+((gconst113*r10*sj2))+(((-1.0)*gconst112*r01*x3784)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3785.valid){
continue;
}
CheckValue<IkReal> x3786=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst113*r21))+(((-1.0)*gconst112*r20)))),-1);
if(!x3786.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3785.value)+(((1.5707963267949)*(x3786.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3787=IKsin(j5);
IkReal x3788=IKcos(j5);
IkReal x3789=((1.0)*sj2);
IkReal x3790=((1.0)*cj0);
IkReal x3791=(cj1*sj0);
IkReal x3792=(gconst112*x3787);
IkReal x3793=(gconst112*x3788);
IkReal x3794=((1.0)*x3788);
IkReal x3795=((1.0)*gconst113*x3787);
evalcond[0]=(((r21*x3792))+(((-1.0)*r22*x3794))+(((-1.0)*r20*x3795)));
evalcond[1]=((((-1.0)*r12*x3794))+cj2+((r11*x3792))+(((-1.0)*r10*x3795)));
evalcond[2]=((((-1.0)*x3789))+(((-1.0)*r00*x3795))+(((-1.0)*r02*x3794))+((r01*x3792)));
evalcond[3]=(((r21*x3793))+((r22*x3787))+((sj0*sj1))+(((-1.0)*gconst113*r20*x3794))+(((-1.0)*cj1*x3790)));
evalcond[4]=(((r02*x3787))+(((-1.0)*cj2*sj1*x3790))+(((-1.0)*cj2*x3791))+(((-1.0)*gconst113*r00*x3794))+((r01*x3793)));
evalcond[5]=(((r12*x3787))+(((-1.0)*x3789*x3791))+((r11*x3793))+(((-1.0)*gconst113*r10*x3794))+(((-1.0)*cj0*sj1*x3789)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3796=((1.0)*gconst113);
CheckValue<IkReal> x3797 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst112*r21*sj2))+(((-1.0)*r20*sj2*x3796)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3797.valid){
continue;
}
CheckValue<IkReal> x3798=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x3796))+(((-1.0)*gconst112*r10)))),-1);
if(!x3798.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3797.value)+(((1.5707963267949)*(x3798.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3799=IKsin(j5);
IkReal x3800=IKcos(j5);
IkReal x3801=((1.0)*sj2);
IkReal x3802=((1.0)*cj0);
IkReal x3803=(cj1*sj0);
IkReal x3804=(gconst112*x3799);
IkReal x3805=(gconst112*x3800);
IkReal x3806=((1.0)*x3800);
IkReal x3807=((1.0)*gconst113*x3799);
evalcond[0]=(((r21*x3804))+(((-1.0)*r20*x3807))+(((-1.0)*r22*x3806)));
evalcond[1]=(((r11*x3804))+cj2+(((-1.0)*r12*x3806))+(((-1.0)*r10*x3807)));
evalcond[2]=(((r01*x3804))+(((-1.0)*r00*x3807))+(((-1.0)*x3801))+(((-1.0)*r02*x3806)));
evalcond[3]=(((r22*x3799))+((r21*x3805))+(((-1.0)*cj1*x3802))+((sj0*sj1))+(((-1.0)*gconst113*r20*x3806)));
evalcond[4]=(((r01*x3805))+(((-1.0)*gconst113*r00*x3806))+((r02*x3799))+(((-1.0)*cj2*sj1*x3802))+(((-1.0)*cj2*x3803)));
evalcond[5]=(((r11*x3805))+(((-1.0)*x3801*x3803))+(((-1.0)*gconst113*r10*x3806))+(((-1.0)*cj0*sj1*x3801))+((r12*x3799)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3808=((1.0)*gconst113);
CheckValue<IkReal> x3809=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x3808))+(((-1.0)*gconst112*r00)))),-1);
if(!x3809.valid){
continue;
}
CheckValue<IkReal> x3810 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst112*r21))+(((-1.0)*cj2*r20*x3808)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3810.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3809.value)))+(x3810.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3811=IKsin(j5);
IkReal x3812=IKcos(j5);
IkReal x3813=((1.0)*sj2);
IkReal x3814=((1.0)*cj0);
IkReal x3815=(cj1*sj0);
IkReal x3816=(gconst112*x3811);
IkReal x3817=(gconst112*x3812);
IkReal x3818=((1.0)*x3812);
IkReal x3819=((1.0)*gconst113*x3811);
evalcond[0]=((((-1.0)*r22*x3818))+((r21*x3816))+(((-1.0)*r20*x3819)));
evalcond[1]=((((-1.0)*r12*x3818))+cj2+((r11*x3816))+(((-1.0)*r10*x3819)));
evalcond[2]=((((-1.0)*r00*x3819))+(((-1.0)*r02*x3818))+(((-1.0)*x3813))+((r01*x3816)));
evalcond[3]=(((r21*x3817))+(((-1.0)*cj1*x3814))+((r22*x3811))+((sj0*sj1))+(((-1.0)*gconst113*r20*x3818)));
evalcond[4]=((((-1.0)*cj2*sj1*x3814))+((r02*x3811))+(((-1.0)*gconst113*r00*x3818))+((r01*x3817))+(((-1.0)*cj2*x3815)));
evalcond[5]=(((r12*x3811))+((r11*x3817))+(((-1.0)*gconst113*r10*x3818))+(((-1.0)*x3813*x3815))+(((-1.0)*cj0*sj1*x3813)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x3820=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x3820;
j5eval[1]=IKsign(x3820);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x3821=((1.0)*cj6);
IkReal x3822=((((-1.0)*r10*sj6))+(((-1.0)*r11*x3821)));
j5eval[0]=x3822;
j5eval[1]=IKsign(x3822);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x3821)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x3823=cj6*cj6;
IkReal x3824=r01*r01;
IkReal x3825=(r01*sj6);
IkReal x3826=(cj6*r00);
IkReal x3827=((((-1.0)*x3823*x3824))+x3824+(r02*r02)+(((-2.0)*x3825*x3826))+((x3823*(r00*r00))));
j5eval[0]=x3827;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*x3826))+x3825))));
j5eval[2]=IKsign(x3827);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3828=cj6*cj6;
IkReal x3829=r01*r01;
IkReal x3830=(r01*sj6);
IkReal x3831=(cj6*r00);
CheckValue<IkReal> x3832 = IKatan2WithCheck(IkReal(((((-1.0)*x3831))+x3830)),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x3832.valid){
continue;
}
CheckValue<IkReal> x3833=IKPowWithIntegerCheck(IKsign((((x3828*(r00*r00)))+x3829+(((-1.0)*x3828*x3829))+(r02*r02)+(((-2.0)*x3830*x3831)))),-1);
if(!x3833.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3832.value)+(((1.5707963267949)*(x3833.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3834=IKcos(j5);
IkReal x3835=IKsin(j5);
IkReal x3836=((1.0)*cj0);
IkReal x3837=(sj6*x3835);
IkReal x3838=((1.0)*x3834);
IkReal x3839=(sj6*x3834);
IkReal x3840=((1.0)*cj6*x3835);
evalcond[0]=(((r02*x3835))+((r01*x3839))+(((-1.0)*cj6*r00*x3838)));
evalcond[1]=((((-1.0)*r20*x3840))+((r21*x3837))+(((-1.0)*r22*x3838)));
evalcond[2]=((((-1.0)*r12*x3838))+((r11*x3837))+(((-1.0)*r10*x3840)));
evalcond[3]=((-1.0)+((r01*x3837))+(((-1.0)*r00*x3840))+(((-1.0)*r02*x3838)));
evalcond[4]=(((sj0*sj1))+((r21*x3839))+(((-1.0)*cj6*r20*x3838))+(((-1.0)*cj1*x3836))+((r22*x3835)));
evalcond[5]=((((-1.0)*cj1*sj0))+((r12*x3835))+(((-1.0)*cj6*r10*x3838))+((r11*x3839))+(((-1.0)*sj1*x3836)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3841=((1.0)*cj6);
CheckValue<IkReal> x3842 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x3841))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3842.valid){
continue;
}
CheckValue<IkReal> x3843=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x3841)))),-1);
if(!x3843.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3842.value)+(((1.5707963267949)*(x3843.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3844=IKcos(j5);
IkReal x3845=IKsin(j5);
IkReal x3846=((1.0)*cj0);
IkReal x3847=(sj6*x3845);
IkReal x3848=((1.0)*x3844);
IkReal x3849=(sj6*x3844);
IkReal x3850=((1.0)*cj6*x3845);
evalcond[0]=((((-1.0)*cj6*r00*x3848))+((r01*x3849))+((r02*x3845)));
evalcond[1]=((((-1.0)*r20*x3850))+((r21*x3847))+(((-1.0)*r22*x3848)));
evalcond[2]=((((-1.0)*r12*x3848))+(((-1.0)*r10*x3850))+((r11*x3847)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x3848))+((r01*x3847))+(((-1.0)*r00*x3850)));
evalcond[4]=(((r21*x3849))+(((-1.0)*cj6*r20*x3848))+((sj0*sj1))+(((-1.0)*cj1*x3846))+((r22*x3845)));
evalcond[5]=(((r12*x3845))+(((-1.0)*sj1*x3846))+(((-1.0)*cj1*sj0))+(((-1.0)*cj6*r10*x3848))+((r11*x3849)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3851=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x3851.valid){
continue;
}
CheckValue<IkReal> x3852 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3852.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3851.value)))+(x3852.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3853=IKcos(j5);
IkReal x3854=IKsin(j5);
IkReal x3855=((1.0)*cj0);
IkReal x3856=(sj6*x3854);
IkReal x3857=((1.0)*x3853);
IkReal x3858=(sj6*x3853);
IkReal x3859=((1.0)*cj6*x3854);
evalcond[0]=(((r02*x3854))+((r01*x3858))+(((-1.0)*cj6*r00*x3857)));
evalcond[1]=(((r21*x3856))+(((-1.0)*r20*x3859))+(((-1.0)*r22*x3857)));
evalcond[2]=(((r11*x3856))+(((-1.0)*r10*x3859))+(((-1.0)*r12*x3857)));
evalcond[3]=((-1.0)+((r01*x3856))+(((-1.0)*r00*x3859))+(((-1.0)*r02*x3857)));
evalcond[4]=(((r21*x3858))+(((-1.0)*cj6*r20*x3857))+((sj0*sj1))+(((-1.0)*cj1*x3855))+((r22*x3854)));
evalcond[5]=(((r11*x3858))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x3855))+(((-1.0)*cj6*r10*x3857))+((r12*x3854)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x3860=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x3860;
j5eval[1]=IKsign(x3860);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x3861=((1.0)*cj6);
IkReal x3862=((((-1.0)*r21*x3861))+(((-1.0)*r20*sj6)));
j5eval[0]=x3862;
j5eval[1]=((IKabs(r12))+(IKabs((((r11*sj6))+(((-1.0)*r10*x3861))))));
j5eval[2]=IKsign(x3862);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x3863=r01*r01;
IkReal x3864=cj6*cj6;
IkReal x3865=(r01*sj6);
IkReal x3866=(cj6*r00);
IkReal x3867=((((2.0)*x3865*x3866))+(((-1.0)*(r02*r02)))+(((-1.0)*x3863))+((x3863*x3864))+(((-1.0)*x3864*(r00*r00))));
j5eval[0]=x3867;
j5eval[1]=IKsign(x3867);
j5eval[2]=((IKabs(r02))+(IKabs(((((-1.0)*x3866))+x3865))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3868=r01*r01;
IkReal x3869=cj6*cj6;
IkReal x3870=(r01*sj6);
IkReal x3871=(cj6*r00);
CheckValue<IkReal> x3872=IKPowWithIntegerCheck(IKsign(((((2.0)*x3870*x3871))+(((-1.0)*(r02*r02)))+((x3868*x3869))+(((-1.0)*x3868))+(((-1.0)*x3869*(r00*r00))))),-1);
if(!x3872.valid){
continue;
}
CheckValue<IkReal> x3873 = IKatan2WithCheck(IkReal((x3870+(((-1.0)*x3871)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x3873.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3872.value)))+(x3873.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3874=IKcos(j5);
IkReal x3875=IKsin(j5);
IkReal x3876=(sj6*x3875);
IkReal x3877=((1.0)*x3874);
IkReal x3878=(sj6*x3874);
IkReal x3879=((1.0)*cj6*x3875);
evalcond[0]=((((-1.0)*cj6*r00*x3877))+((r01*x3878))+((r02*x3875)));
evalcond[1]=(((r21*x3876))+(((-1.0)*r22*x3877))+(((-1.0)*r20*x3879)));
evalcond[2]=((((-1.0)*r12*x3877))+(((-1.0)*r10*x3879))+((r11*x3876)));
evalcond[3]=((1.0)+((r01*x3876))+(((-1.0)*r02*x3877))+(((-1.0)*r00*x3879)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*cj6*r10*x3877))+((r12*x3875))+((r11*x3878))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*cj6*r20*x3877))+((r22*x3875))+((r21*x3878))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3880=((1.0)*cj6);
CheckValue<IkReal> x3881 = IKatan2WithCheck(IkReal(r12),IkReal((((r11*sj6))+(((-1.0)*r10*x3880)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3881.valid){
continue;
}
CheckValue<IkReal> x3882=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x3880))+(((-1.0)*r20*sj6)))),-1);
if(!x3882.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3881.value)+(((1.5707963267949)*(x3882.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3883=IKcos(j5);
IkReal x3884=IKsin(j5);
IkReal x3885=(sj6*x3884);
IkReal x3886=((1.0)*x3883);
IkReal x3887=(sj6*x3883);
IkReal x3888=((1.0)*cj6*x3884);
evalcond[0]=(((r02*x3884))+(((-1.0)*cj6*r00*x3886))+((r01*x3887)));
evalcond[1]=(((r21*x3885))+(((-1.0)*r22*x3886))+(((-1.0)*r20*x3888)));
evalcond[2]=(((r11*x3885))+(((-1.0)*r12*x3886))+(((-1.0)*r10*x3888)));
evalcond[3]=((1.0)+(((-1.0)*r02*x3886))+(((-1.0)*r00*x3888))+((r01*x3885)));
evalcond[4]=((((-1.0)*cj6*r10*x3886))+((r12*x3884))+((cj1*sj0))+((r11*x3887))+((cj0*sj1)));
evalcond[5]=(((r22*x3884))+((r21*x3887))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*cj6*r20*x3886)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x3889 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3889.valid){
continue;
}
CheckValue<IkReal> x3890=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x3890.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3889.value)+(((1.5707963267949)*(x3890.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3891=IKcos(j5);
IkReal x3892=IKsin(j5);
IkReal x3893=(sj6*x3892);
IkReal x3894=((1.0)*x3891);
IkReal x3895=(sj6*x3891);
IkReal x3896=((1.0)*cj6*x3892);
evalcond[0]=(((r01*x3895))+(((-1.0)*cj6*r00*x3894))+((r02*x3892)));
evalcond[1]=((((-1.0)*r20*x3896))+(((-1.0)*r22*x3894))+((r21*x3893)));
evalcond[2]=((((-1.0)*r10*x3896))+(((-1.0)*r12*x3894))+((r11*x3893)));
evalcond[3]=((1.0)+((r01*x3893))+(((-1.0)*r00*x3896))+(((-1.0)*r02*x3894)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*cj6*r10*x3894))+((r11*x3895))+((r12*x3892))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+((r21*x3895))+(((-1.0)*cj6*r20*x3894))+(((-1.0)*cj0*cj1))+((r22*x3892)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x3897=((-1.0)*px);
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x3897);
rxp1_1=(px*r21);
rxp1_2=(r11*x3897);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=((((-1.0)*cj6*r20))+((r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x3899=IKPowWithIntegerCheck(((((-1.0)*cj6*r20))+((r21*sj6))),-1);
if(!x3899.valid){
continue;
}
IkReal x3898=x3899.value;
cj5array[0]=(((cj0*cj1*x3898))+(((-1.0)*sj0*sj1*x3898)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3900=IKsin(j5);
IkReal x3901=(sj6*x3900);
IkReal x3902=((1.0)*cj6*x3900);
evalcond[0]=(r02*x3900);
evalcond[1]=(((r21*x3901))+(((-1.0)*r20*x3902)));
evalcond[2]=(((r11*x3901))+(((-1.0)*r10*x3902)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3903=((1.0)*sj6);
CheckValue<IkReal> x3904 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj6*r10*sj2))+(((-1.0)*r11*sj2*x3903))+(((-1.0)*cj2*r01*x3903))+((cj2*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3904.valid){
continue;
}
CheckValue<IkReal> x3905=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r21))+(((-1.0)*r20*x3903)))),-1);
if(!x3905.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3904.value)+(((1.5707963267949)*(x3905.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3906=IKsin(j5);
IkReal x3907=IKcos(j5);
IkReal x3908=((1.0)*cj0);
IkReal x3909=((1.0)*sj2);
IkReal x3910=(cj1*sj0);
IkReal x3911=(sj6*x3906);
IkReal x3912=((1.0)*x3907);
IkReal x3913=(sj6*x3907);
IkReal x3914=((1.0)*cj6*x3906);
evalcond[0]=((((-1.0)*r20*x3914))+((r21*x3911))+(((-1.0)*r22*x3912)));
evalcond[1]=(cj2+((r11*x3911))+(((-1.0)*r12*x3912))+(((-1.0)*r10*x3914)));
evalcond[2]=((((-1.0)*x3909))+(((-1.0)*r02*x3912))+((r01*x3911))+(((-1.0)*r00*x3914)));
evalcond[3]=(((r21*x3913))+((r22*x3906))+((sj0*sj1))+(((-1.0)*cj6*r20*x3912))+(((-1.0)*cj1*x3908)));
evalcond[4]=((((-1.0)*cj2*x3910))+(((-1.0)*cj2*sj1*x3908))+((r01*x3913))+(((-1.0)*cj6*r00*x3912))+((r02*x3906)));
evalcond[5]=((((-1.0)*sj1*sj2*x3908))+(((-1.0)*x3909*x3910))+((r12*x3906))+((r11*x3913))+(((-1.0)*cj6*r10*x3912)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3915=((1.0)*cj6);
CheckValue<IkReal> x3916 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x3915)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3916.valid){
continue;
}
CheckValue<IkReal> x3917=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x3915)))),-1);
if(!x3917.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3916.value)+(((1.5707963267949)*(x3917.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3918=IKsin(j5);
IkReal x3919=IKcos(j5);
IkReal x3920=((1.0)*cj0);
IkReal x3921=((1.0)*sj2);
IkReal x3922=(cj1*sj0);
IkReal x3923=(sj6*x3918);
IkReal x3924=((1.0)*x3919);
IkReal x3925=(sj6*x3919);
IkReal x3926=((1.0)*cj6*x3918);
evalcond[0]=(((r21*x3923))+(((-1.0)*r20*x3926))+(((-1.0)*r22*x3924)));
evalcond[1]=(((r11*x3923))+(((-1.0)*r10*x3926))+cj2+(((-1.0)*r12*x3924)));
evalcond[2]=((((-1.0)*x3921))+(((-1.0)*r02*x3924))+(((-1.0)*r00*x3926))+((r01*x3923)));
evalcond[3]=((((-1.0)*cj1*x3920))+(((-1.0)*cj6*r20*x3924))+((r21*x3925))+((sj0*sj1))+((r22*x3918)));
evalcond[4]=((((-1.0)*cj2*sj1*x3920))+(((-1.0)*cj6*r00*x3924))+(((-1.0)*cj2*x3922))+((r02*x3918))+((r01*x3925)));
evalcond[5]=(((r11*x3925))+(((-1.0)*sj1*sj2*x3920))+(((-1.0)*x3921*x3922))+((r12*x3918))+(((-1.0)*cj6*r10*x3924)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3927=((1.0)*cj6);
CheckValue<IkReal> x3928 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x3927))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3928.valid){
continue;
}
CheckValue<IkReal> x3929=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x3927)))),-1);
if(!x3929.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3928.value)+(((1.5707963267949)*(x3929.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x3930=IKsin(j5);
IkReal x3931=IKcos(j5);
IkReal x3932=((1.0)*cj0);
IkReal x3933=((1.0)*sj2);
IkReal x3934=(cj1*sj0);
IkReal x3935=(sj6*x3930);
IkReal x3936=((1.0)*x3931);
IkReal x3937=(sj6*x3931);
IkReal x3938=((1.0)*cj6*x3930);
evalcond[0]=(((r21*x3935))+(((-1.0)*r22*x3936))+(((-1.0)*r20*x3938)));
evalcond[1]=(cj2+(((-1.0)*r12*x3936))+(((-1.0)*r10*x3938))+((r11*x3935)));
evalcond[2]=(((r01*x3935))+(((-1.0)*r00*x3938))+(((-1.0)*r02*x3936))+(((-1.0)*x3933)));
evalcond[3]=(((r21*x3937))+((r22*x3930))+(((-1.0)*cj1*x3932))+(((-1.0)*cj6*r20*x3936))+((sj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x3934))+((r01*x3937))+(((-1.0)*cj6*r00*x3936))+(((-1.0)*cj2*sj1*x3932))+((r02*x3930)));
evalcond[5]=((((-1.0)*x3933*x3934))+(((-1.0)*cj6*r10*x3936))+((r12*x3930))+((r11*x3937))+(((-1.0)*sj1*sj2*x3932)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3939=r21*r21;
IkReal x3940=cj6*cj6;
IkReal x3941=(cj6*r20);
IkReal x3942=(cj0*cj1);
IkReal x3943=(sj0*sj1);
IkReal x3944=(r21*sj6);
CheckValue<IkReal> x3945 = IKatan2WithCheck(IkReal((((r22*x3943))+(((-1.0)*r22*x3942)))),IkReal((((x3941*x3942))+((x3943*x3944))+(((-1.0)*x3942*x3944))+(((-1.0)*x3941*x3943)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3945.valid){
continue;
}
CheckValue<IkReal> x3946=IKPowWithIntegerCheck(IKsign(((((-1.0)*x3939))+(((-1.0)*x3940*(r20*r20)))+((x3939*x3940))+(((2.0)*x3941*x3944))+(((-1.0)*(r22*r22))))),-1);
if(!x3946.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3945.value)+(((1.5707963267949)*(x3946.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x3947=IKsin(j5);
IkReal x3948=IKcos(j5);
IkReal x3949=(r21*sj6);
IkReal x3950=(cj6*r20);
IkReal x3951=((1.0)*x3948);
evalcond[0]=((((-1.0)*r22*x3951))+((x3947*x3949))+(((-1.0)*x3947*x3950)));
evalcond[1]=(((r22*x3947))+((sj0*sj1))+(((-1.0)*x3950*x3951))+((x3948*x3949))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3952=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x3952))+(((-1.0)*cj5*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x3952)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x3952))+(((-1.0)*cj5*r02))))+IKsqr((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x3952))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x3952))+(((-1.0)*cj5*r02))), (((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x3952))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x3953=IKcos(j2);
IkReal x3954=IKsin(j2);
IkReal x3955=(r00*sj6);
IkReal x3956=(r10*sj6);
IkReal x3957=((1.0)*sj0);
IkReal x3958=(sj5*sj6);
IkReal x3959=((1.0)*cj0);
IkReal x3960=((1.0)*cj6);
IkReal x3961=((0.39225)*sj0);
IkReal x3962=(cj5*sj6);
IkReal x3963=((1.0)*cj5);
IkReal x3964=((0.09465)*cj6);
IkReal x3965=(r10*x3960);
IkReal x3966=(cj1*x3954);
IkReal x3967=(sj1*x3954);
IkReal x3968=(cj1*x3953);
IkReal x3969=(sj1*x3953);
IkReal x3970=(cj0*x3968);
evalcond[0]=(x3953+((r11*x3958))+(((-1.0)*sj5*x3965))+(((-1.0)*r12*x3963)));
evalcond[1]=((((-1.0)*r02*x3963))+((r01*x3958))+(((-1.0)*x3954))+(((-1.0)*r00*sj5*x3960)));
evalcond[2]=((((-1.0)*x3955))+(((-1.0)*x3959*x3968))+(((-1.0)*r01*x3960))+((sj0*x3969)));
evalcond[3]=((((-1.0)*x3956))+(((-1.0)*x3959*x3966))+((sj0*x3967))+(((-1.0)*r11*x3960)));
evalcond[4]=(((r02*sj5))+(((-1.0)*x3959*x3969))+(((-1.0)*x3957*x3968))+((r01*x3962))+(((-1.0)*cj5*r00*x3960)));
evalcond[5]=(((r11*x3962))+(((-1.0)*x3959*x3967))+(((-1.0)*cj5*x3965))+((r12*sj5))+(((-1.0)*x3957*x3966)));
evalcond[6]=((((0.39225)*x3970))+(((-0.09465)*x3955))+(((-1.0)*px))+(((0.425)*x3968))+(((-1.0)*x3961*x3969))+(((-0.10915)*x3954))+(((-1.0)*r01*x3964)));
evalcond[7]=((((0.39225)*cj0*x3966))+(((-0.09465)*x3956))+(((-1.0)*py))+(((0.425)*x3966))+(((-1.0)*x3961*x3967))+(((0.10915)*x3953))+(((-1.0)*r11*x3964)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
CheckValue<IkReal> x3971=IKPowWithIntegerCheck(IKsign((((sj0*sj1))+(((-1.0)*cj0*cj1)))),-1);
if(!x3971.valid){
continue;
}
CheckValue<IkReal> x3972 = IKatan2WithCheck(IkReal((((r10*sj6))+((cj6*r11)))),IkReal((((r00*sj6))+((cj6*r01)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3972.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3971.value)))+(x3972.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x3973=IKcos(j2);
IkReal x3974=IKsin(j2);
IkReal x3975=(r00*sj6);
IkReal x3976=(r10*sj6);
IkReal x3977=(sj0*sj1);
IkReal x3978=(cj0*cj1);
IkReal x3979=((1.0)*cj6);
IkReal x3980=((0.09465)*cj6);
IkReal x3981=(cj1*x3974);
IkReal x3982=((0.39225)*x3973);
evalcond[0]=(((x3973*x3977))+(((-1.0)*x3973*x3978))+(((-1.0)*x3975))+(((-1.0)*r01*x3979)));
evalcond[1]=((((-1.0)*x3974*x3978))+((x3974*x3977))+(((-1.0)*x3976))+(((-1.0)*r11*x3979)));
evalcond[2]=((((-1.0)*x3977*x3982))+(((-1.0)*px))+(((-0.10915)*x3974))+(((0.425)*cj1*x3973))+((x3978*x3982))+(((-1.0)*r01*x3980))+(((-0.09465)*x3975)));
evalcond[3]=((((-0.39225)*x3974*x3977))+(((-1.0)*r11*x3980))+(((0.425)*x3981))+(((-1.0)*py))+(((0.10915)*x3973))+(((0.39225)*x3974*x3978))+(((-0.09465)*x3976)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x3983=((1.0)*cj6);
IkReal x3984=((((-1.0)*r00*sj6))+(((-1.0)*r01*x3983)));
j5eval[0]=x3984;
j5eval[1]=IKsign(x3984);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*r20*x3983))+((cj2*r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x3985=((1.0)*cj6);
IkReal x3986=((((-1.0)*r11*x3985))+(((-1.0)*r10*sj6)));
j5eval[0]=x3986;
j5eval[1]=((IKabs((r22*sj2)))+(IKabs((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x3985))))));
j5eval[2]=IKsign(x3986);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x3987=((1.0)*sj2);
IkReal x3988=((1.0)*sj6);
IkReal x3989=((((-1.0)*cj6*r21))+(((-1.0)*r20*x3988)));
j5eval[0]=x3989;
j5eval[1]=IKsign(x3989);
j5eval[2]=((IKabs(((((-1.0)*r12*x3987))+(((-1.0)*cj2*r02)))))+(IKabs((((cj6*r10*sj2))+((cj2*cj6*r00))+(((-1.0)*cj2*r01*x3988))+(((-1.0)*r11*sj6*x3987))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
IkReal x3990=((-1.0)*r20);
IkReal x3992 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x3992)==0){
continue;
}
IkReal x3991=pow(x3992,-0.5);
CheckValue<IkReal> x3993 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x3990),IKFAST_ATAN2_MAGTHRESH);
if(!x3993.valid){
continue;
}
IkReal gconst96=((-1.0)*(x3993.value));
IkReal gconst97=(r21*x3991);
IkReal gconst98=(x3990*x3991);
CheckValue<IkReal> x3994 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x3994.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x3994.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x3995=((-1.0)*r20);
IkReal x3996=x3991;
CheckValue<IkReal> x3998 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x3995),IKFAST_ATAN2_MAGTHRESH);
if(!x3998.valid){
continue;
}
IkReal x3997=((-1.0)*(x3998.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst97;
cj6=gconst98;
j6=x3997;
IkReal gconst96=x3997;
IkReal gconst97=(r21*x3996);
IkReal gconst98=(x3995*x3996);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x3999=((-1.0)*r20);
IkReal x4000=x3991;
CheckValue<IkReal> x4002 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x3999),IKFAST_ATAN2_MAGTHRESH);
if(!x4002.valid){
continue;
}
IkReal x4001=((-1.0)*(x4002.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst97;
cj6=gconst98;
j6=x4001;
IkReal gconst96=x4001;
IkReal gconst97=(r21*x4000);
IkReal gconst98=(x3999*x4000);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x4003=((-1.0)*r20);
IkReal x4004=x3991;
CheckValue<IkReal> x4006 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x4003),IKFAST_ATAN2_MAGTHRESH);
if(!x4006.valid){
continue;
}
IkReal x4005=((-1.0)*(x4006.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst97;
cj6=gconst98;
j6=x4005;
IkReal gconst96=x4005;
IkReal gconst97=(r21*x4004);
IkReal gconst98=(x4003*x4004);
IkReal x4007=((1.0)*(r22*r22));
CheckValue<IkReal> x4011=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x4007))),-1);
if(!x4011.valid){
continue;
}
IkReal x4008=x4011.value;
IkReal x4009=((1.0)*x4008);
IkReal x4010=((((-1.0)*x4007))+(((-1.0)*x4009*(r20*r20*r20*r20)))+(((-1.0)*x4009*(r21*r21*r21*r21)))+(((-2.0)*x4008*(r20*r20)*(r21*r21))));
j5eval[0]=x4010;
j5eval[1]=IKsign(x4010);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4012=(sj0*sj1);
IkReal x4013=(gconst97*r21);
IkReal x4014=(gconst98*r20);
IkReal x4015=((1.0)*cj0*cj1);
CheckValue<IkReal> x4016 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x4015))+((r22*x4012)))),IkReal(((((-1.0)*x4013*x4015))+(((-1.0)*x4012*x4014))+((x4012*x4013))+((cj0*cj1*x4014)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4016.valid){
continue;
}
CheckValue<IkReal> x4017=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x4014*x4014)))+(((2.0)*x4013*x4014))+(((-1.0)*(x4013*x4013)))+(((-1.0)*(r22*r22))))),-1);
if(!x4017.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4016.value)+(((1.5707963267949)*(x4017.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4018=IKsin(j5);
IkReal x4019=IKcos(j5);
IkReal x4020=((1.0)*cj0);
IkReal x4021=((1.0)*sj2);
IkReal x4022=((1.0)*gconst98);
IkReal x4023=(cj1*sj0);
IkReal x4024=(gconst97*x4019);
IkReal x4025=(r10*x4022);
IkReal x4026=(gconst97*x4018);
IkReal x4027=((1.0)*x4019);
evalcond[0]=((((-1.0)*r22*x4027))+(((-1.0)*r20*x4018*x4022))+((r21*x4026)));
evalcond[1]=((((-1.0)*r12*x4027))+cj2+(((-1.0)*x4018*x4025))+((r11*x4026)));
evalcond[2]=((((-1.0)*r02*x4027))+((r01*x4026))+(((-1.0)*r00*x4018*x4022))+(((-1.0)*x4021)));
evalcond[3]=((((-1.0)*cj1*x4020))+((r21*x4024))+((sj0*sj1))+(((-1.0)*r20*x4019*x4022))+((r22*x4018)));
evalcond[4]=(((r02*x4018))+((r01*x4024))+(((-1.0)*cj2*sj1*x4020))+(((-1.0)*r00*x4019*x4022))+(((-1.0)*cj2*x4023)));
evalcond[5]=((((-1.0)*sj1*sj2*x4020))+((r12*x4018))+(((-1.0)*x4021*x4023))+((r11*x4024))+(((-1.0)*x4019*x4025)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4028=((1.0)*gconst98);
CheckValue<IkReal> x4029 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst97*r21*sj2))+(((-1.0)*r20*sj2*x4028)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4029.valid){
continue;
}
CheckValue<IkReal> x4030=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x4028))+(((-1.0)*gconst97*r10)))),-1);
if(!x4030.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4029.value)+(((1.5707963267949)*(x4030.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4031=IKsin(j5);
IkReal x4032=IKcos(j5);
IkReal x4033=((1.0)*cj0);
IkReal x4034=((1.0)*sj2);
IkReal x4035=((1.0)*gconst98);
IkReal x4036=(cj1*sj0);
IkReal x4037=(gconst97*x4032);
IkReal x4038=(r10*x4035);
IkReal x4039=(gconst97*x4031);
IkReal x4040=((1.0)*x4032);
evalcond[0]=(((r21*x4039))+(((-1.0)*r20*x4031*x4035))+(((-1.0)*r22*x4040)));
evalcond[1]=((((-1.0)*x4031*x4038))+cj2+(((-1.0)*r12*x4040))+((r11*x4039)));
evalcond[2]=(((r01*x4039))+(((-1.0)*r00*x4031*x4035))+(((-1.0)*x4034))+(((-1.0)*r02*x4040)));
evalcond[3]=(((r21*x4037))+(((-1.0)*r20*x4032*x4035))+(((-1.0)*cj1*x4033))+((sj0*sj1))+((r22*x4031)));
evalcond[4]=(((r02*x4031))+(((-1.0)*cj2*sj1*x4033))+(((-1.0)*cj2*x4036))+((r01*x4037))+(((-1.0)*r00*x4032*x4035)));
evalcond[5]=((((-1.0)*x4034*x4036))+((r12*x4031))+(((-1.0)*x4032*x4038))+((r11*x4037))+(((-1.0)*sj1*sj2*x4033)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4041=((1.0)*gconst98);
CheckValue<IkReal> x4042=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x4041))+(((-1.0)*gconst97*r00)))),-1);
if(!x4042.valid){
continue;
}
CheckValue<IkReal> x4043 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst97*r21))+(((-1.0)*cj2*r20*x4041)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4043.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4042.value)))+(x4043.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4044=IKsin(j5);
IkReal x4045=IKcos(j5);
IkReal x4046=((1.0)*cj0);
IkReal x4047=((1.0)*sj2);
IkReal x4048=((1.0)*gconst98);
IkReal x4049=(cj1*sj0);
IkReal x4050=(gconst97*x4045);
IkReal x4051=(r10*x4048);
IkReal x4052=(gconst97*x4044);
IkReal x4053=((1.0)*x4045);
evalcond[0]=((((-1.0)*r20*x4044*x4048))+((r21*x4052))+(((-1.0)*r22*x4053)));
evalcond[1]=(cj2+(((-1.0)*r12*x4053))+(((-1.0)*x4044*x4051))+((r11*x4052)));
evalcond[2]=((((-1.0)*r00*x4044*x4048))+(((-1.0)*r02*x4053))+(((-1.0)*x4047))+((r01*x4052)));
evalcond[3]=(((r22*x4044))+(((-1.0)*r20*x4045*x4048))+((r21*x4050))+((sj0*sj1))+(((-1.0)*cj1*x4046)));
evalcond[4]=((((-1.0)*r00*x4045*x4048))+(((-1.0)*cj2*sj1*x4046))+(((-1.0)*cj2*x4049))+((r02*x4044))+((r01*x4050)));
evalcond[5]=((((-1.0)*sj1*sj2*x4046))+(((-1.0)*x4047*x4049))+((r11*x4050))+((r12*x4044))+(((-1.0)*x4045*x4051)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4054=((-1.0)*r21);
IkReal x4056 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x4056)==0){
continue;
}
IkReal x4055=pow(x4056,-0.5);
CheckValue<IkReal> x4057 = IKatan2WithCheck(IkReal(x4054),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x4057.valid){
continue;
}
IkReal gconst99=((3.14159265358979)+(((-1.0)*(x4057.value))));
IkReal gconst100=(x4054*x4055);
IkReal gconst101=((1.0)*r20*x4055);
CheckValue<IkReal> x4058 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x4058.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x4058.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x4059=((-1.0)*r21);
CheckValue<IkReal> x4062 = IKatan2WithCheck(IkReal(x4059),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x4062.valid){
continue;
}
IkReal x4060=((1.0)*(x4062.value));
IkReal x4061=x4055;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst100;
cj6=gconst101;
j6=((3.14159265)+(((-1.0)*x4060)));
IkReal gconst99=((3.14159265358979)+(((-1.0)*x4060)));
IkReal gconst100=(x4059*x4061);
IkReal gconst101=((1.0)*r20*x4061);
IkReal x4063=r22*r22;
IkReal x4064=((1.0)*x4063);
CheckValue<IkReal> x4068=IKPowWithIntegerCheck(((-1.0)+x4063),-1);
if(!x4068.valid){
continue;
}
IkReal x4065=x4068.value;
if((((1.0)+(((-1.0)*x4064)))) < -0.00001)
continue;
IkReal x4066=IKsqrt(((1.0)+(((-1.0)*x4064))));
IkReal x4067=(cj2*x4065*x4066);
j5eval[0]=((IKabs(((((-1.0)*x4064*x4067))+x4067)))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x4069=((-1.0)*r21);
CheckValue<IkReal> x4072 = IKatan2WithCheck(IkReal(x4069),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x4072.valid){
continue;
}
IkReal x4070=((1.0)*(x4072.value));
IkReal x4071=x4055;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst100;
cj6=gconst101;
j6=((3.14159265)+(((-1.0)*x4070)));
IkReal gconst99=((3.14159265358979)+(((-1.0)*x4070)));
IkReal gconst100=(x4069*x4071);
IkReal gconst101=((1.0)*r20*x4071);
IkReal x4073=r22*r22;
IkReal x4074=((1.0)*x4073);
CheckValue<IkReal> x4078=IKPowWithIntegerCheck(((-1.0)+x4073),-1);
if(!x4078.valid){
continue;
}
IkReal x4075=x4078.value;
if((((1.0)+(((-1.0)*x4074)))) < -0.00001)
continue;
IkReal x4076=IKsqrt(((1.0)+(((-1.0)*x4074))));
IkReal x4077=(sj2*x4075*x4076);
j5eval[0]=((IKabs(((((-1.0)*x4074*x4077))+x4077)))+(IKabs((r22*sj2))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x4079=((-1.0)*r21);
CheckValue<IkReal> x4082 = IKatan2WithCheck(IkReal(x4079),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x4082.valid){
continue;
}
IkReal x4080=((1.0)*(x4082.value));
IkReal x4081=x4055;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst100;
cj6=gconst101;
j6=((3.14159265)+(((-1.0)*x4080)));
IkReal gconst99=((3.14159265358979)+(((-1.0)*x4080)));
IkReal gconst100=(x4079*x4081);
IkReal gconst101=((1.0)*r20*x4081);
IkReal x4083=r22*r22;
IkReal x4084=(r12*sj2);
IkReal x4085=(cj2*r02);
CheckValue<IkReal> x4089=IKPowWithIntegerCheck(((-1.0)+x4083),-1);
if(!x4089.valid){
continue;
}
IkReal x4086=x4089.value;
if((((1.0)+(((-1.0)*x4083)))) < -0.00001)
continue;
IkReal x4087=IKsqrt(((1.0)+(((-1.0)*x4083))));
IkReal x4088=(r22*x4086*x4087);
j5eval[0]=0;
j5eval[1]=((IKabs(((((-1.0)*x4084))+(((-1.0)*x4085)))))+(IKabs((((x4085*x4088))+((x4084*x4088))))));
j5eval[2]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4090=((1.0)*sj2);
IkReal x4091=((1.0)*gconst100);
CheckValue<IkReal> x4092 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x4090))+(((-1.0)*cj2*r02)))),IkReal(((((-1.0)*gconst100*r11*x4090))+((cj2*gconst101*r00))+((gconst101*r10*sj2))+(((-1.0)*cj2*r01*x4091)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4092.valid){
continue;
}
CheckValue<IkReal> x4093=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x4091))+(((-1.0)*gconst101*r21)))),-1);
if(!x4093.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4092.value)+(((1.5707963267949)*(x4093.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4094=IKsin(j5);
IkReal x4095=IKcos(j5);
IkReal x4096=((1.0)*cj0);
IkReal x4097=((1.0)*gconst101);
IkReal x4098=((1.0)*sj2);
IkReal x4099=(cj1*sj0);
IkReal x4100=(gconst100*x4094);
IkReal x4101=(gconst100*x4095);
IkReal x4102=((1.0)*x4095);
evalcond[0]=((((-1.0)*r22*x4102))+(((-1.0)*r20*x4094*x4097))+((r21*x4100)));
evalcond[1]=(cj2+(((-1.0)*r12*x4102))+(((-1.0)*r10*x4094*x4097))+((r11*x4100)));
evalcond[2]=((((-1.0)*x4098))+(((-1.0)*r00*x4094*x4097))+((r01*x4100))+(((-1.0)*r02*x4102)));
evalcond[3]=((((-1.0)*r20*x4095*x4097))+((sj0*sj1))+((r22*x4094))+(((-1.0)*cj1*x4096))+((r21*x4101)));
evalcond[4]=((((-1.0)*cj2*x4099))+(((-1.0)*r00*x4095*x4097))+(((-1.0)*cj2*sj1*x4096))+((r02*x4094))+((r01*x4101)));
evalcond[5]=((((-1.0)*x4098*x4099))+(((-1.0)*sj1*sj2*x4096))+((r12*x4094))+((r11*x4101))+(((-1.0)*r10*x4095*x4097)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4103=((1.0)*gconst101);
CheckValue<IkReal> x4104=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst100*r10))+(((-1.0)*r11*x4103)))),-1);
if(!x4104.valid){
continue;
}
CheckValue<IkReal> x4105 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x4103))+((gconst100*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4105.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4104.value)))+(x4105.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4106=IKsin(j5);
IkReal x4107=IKcos(j5);
IkReal x4108=((1.0)*cj0);
IkReal x4109=((1.0)*gconst101);
IkReal x4110=((1.0)*sj2);
IkReal x4111=(cj1*sj0);
IkReal x4112=(gconst100*x4106);
IkReal x4113=(gconst100*x4107);
IkReal x4114=((1.0)*x4107);
evalcond[0]=(((r21*x4112))+(((-1.0)*r22*x4114))+(((-1.0)*r20*x4106*x4109)));
evalcond[1]=((((-1.0)*r12*x4114))+cj2+(((-1.0)*r10*x4106*x4109))+((r11*x4112)));
evalcond[2]=((((-1.0)*x4110))+(((-1.0)*r00*x4106*x4109))+(((-1.0)*r02*x4114))+((r01*x4112)));
evalcond[3]=(((r21*x4113))+((r22*x4106))+(((-1.0)*cj1*x4108))+((sj0*sj1))+(((-1.0)*r20*x4107*x4109)));
evalcond[4]=((((-1.0)*cj2*sj1*x4108))+(((-1.0)*r00*x4107*x4109))+(((-1.0)*cj2*x4111))+((r02*x4106))+((r01*x4113)));
evalcond[5]=((((-1.0)*r10*x4107*x4109))+(((-1.0)*x4110*x4111))+(((-1.0)*sj1*sj2*x4108))+((r12*x4106))+((r11*x4113)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4115=((1.0)*gconst101);
CheckValue<IkReal> x4116=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x4115))+(((-1.0)*gconst100*r00)))),-1);
if(!x4116.valid){
continue;
}
CheckValue<IkReal> x4117 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst100*r21))+(((-1.0)*cj2*r20*x4115)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4117.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4116.value)))+(x4117.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4118=IKsin(j5);
IkReal x4119=IKcos(j5);
IkReal x4120=((1.0)*cj0);
IkReal x4121=((1.0)*gconst101);
IkReal x4122=((1.0)*sj2);
IkReal x4123=(cj1*sj0);
IkReal x4124=(gconst100*x4118);
IkReal x4125=(gconst100*x4119);
IkReal x4126=((1.0)*x4119);
evalcond[0]=(((r21*x4124))+(((-1.0)*r22*x4126))+(((-1.0)*r20*x4118*x4121)));
evalcond[1]=((((-1.0)*r12*x4126))+cj2+(((-1.0)*r10*x4118*x4121))+((r11*x4124)));
evalcond[2]=((((-1.0)*r00*x4118*x4121))+(((-1.0)*x4122))+(((-1.0)*r02*x4126))+((r01*x4124)));
evalcond[3]=(((r21*x4125))+(((-1.0)*cj1*x4120))+((sj0*sj1))+((r22*x4118))+(((-1.0)*r20*x4119*x4121)));
evalcond[4]=(((r02*x4118))+(((-1.0)*r00*x4119*x4121))+(((-1.0)*cj2*sj1*x4120))+(((-1.0)*cj2*x4123))+((r01*x4125)));
evalcond[5]=(((r12*x4118))+(((-1.0)*sj1*sj2*x4120))+(((-1.0)*x4122*x4123))+(((-1.0)*r10*x4119*x4121))+((r11*x4125)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4127=((-1.0)*r10);
IkReal x4129 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x4129)==0){
continue;
}
IkReal x4128=pow(x4129,-0.5);
CheckValue<IkReal> x4130 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x4127),IKFAST_ATAN2_MAGTHRESH);
if(!x4130.valid){
continue;
}
IkReal gconst102=((-1.0)*(x4130.value));
IkReal gconst103=(r11*x4128);
IkReal gconst104=(x4127*x4128);
CheckValue<IkReal> x4131 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x4131.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x4131.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x4132=((-1.0)*r10);
IkReal x4133=x4128;
CheckValue<IkReal> x4135 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x4132),IKFAST_ATAN2_MAGTHRESH);
if(!x4135.valid){
continue;
}
IkReal x4134=((-1.0)*(x4135.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst103;
cj6=gconst104;
j6=x4134;
IkReal gconst102=x4134;
IkReal gconst103=(r11*x4133);
IkReal gconst104=(x4132*x4133);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4136=((1.0)*sj2);
IkReal x4137=((1.0)*cj2);
CheckValue<IkReal> x4138 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x4137))+(((-1.0)*r12*x4136)))),IkReal((((cj2*gconst104*r00))+(((-1.0)*gconst103*r01*x4137))+((gconst104*r10*sj2))+(((-1.0)*gconst103*r11*x4136)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4138.valid){
continue;
}
CheckValue<IkReal> x4139=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst103*r20))+(((-1.0)*gconst104*r21)))),-1);
if(!x4139.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4138.value)+(((1.5707963267949)*(x4139.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4140=IKsin(j5);
IkReal x4141=IKcos(j5);
IkReal x4142=((1.0)*cj0);
IkReal x4143=((1.0)*sj2);
IkReal x4144=(cj1*sj0);
IkReal x4145=(gconst103*x4141);
IkReal x4146=((1.0)*x4141);
IkReal x4147=(gconst103*x4140);
IkReal x4148=(gconst104*x4146);
IkReal x4149=((1.0)*gconst104*x4140);
evalcond[0]=(((r21*x4147))+(((-1.0)*r22*x4146))+(((-1.0)*r20*x4149)));
evalcond[1]=(cj2+((r11*x4147))+(((-1.0)*r10*x4149))+(((-1.0)*r12*x4146)));
evalcond[2]=(((r01*x4147))+(((-1.0)*r02*x4146))+(((-1.0)*r00*x4149))+(((-1.0)*x4143)));
evalcond[3]=(((r21*x4145))+((r22*x4140))+((sj0*sj1))+(((-1.0)*cj1*x4142))+(((-1.0)*r20*x4148)));
evalcond[4]=(((r02*x4140))+((r01*x4145))+(((-1.0)*r00*x4148))+(((-1.0)*cj2*x4144))+(((-1.0)*cj2*sj1*x4142)));
evalcond[5]=(((r12*x4140))+(((-1.0)*sj1*sj2*x4142))+((r11*x4145))+(((-1.0)*x4143*x4144))+(((-1.0)*r10*x4148)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4150=((1.0)*gconst104);
CheckValue<IkReal> x4151=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst103*r00))+(((-1.0)*r01*x4150)))),-1);
if(!x4151.valid){
continue;
}
CheckValue<IkReal> x4152 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x4150))+((cj2*gconst103*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4152.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4151.value)))+(x4152.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4153=IKsin(j5);
IkReal x4154=IKcos(j5);
IkReal x4155=((1.0)*cj0);
IkReal x4156=((1.0)*sj2);
IkReal x4157=(cj1*sj0);
IkReal x4158=(gconst103*x4154);
IkReal x4159=((1.0)*x4154);
IkReal x4160=(gconst103*x4153);
IkReal x4161=(gconst104*x4159);
IkReal x4162=((1.0)*gconst104*x4153);
evalcond[0]=(((r21*x4160))+(((-1.0)*r20*x4162))+(((-1.0)*r22*x4159)));
evalcond[1]=(cj2+(((-1.0)*r10*x4162))+((r11*x4160))+(((-1.0)*r12*x4159)));
evalcond[2]=((((-1.0)*r00*x4162))+((r01*x4160))+(((-1.0)*r02*x4159))+(((-1.0)*x4156)));
evalcond[3]=(((r21*x4158))+((r22*x4153))+(((-1.0)*cj1*x4155))+((sj0*sj1))+(((-1.0)*r20*x4161)));
evalcond[4]=((((-1.0)*r00*x4161))+((r02*x4153))+((r01*x4158))+(((-1.0)*cj2*x4157))+(((-1.0)*cj2*sj1*x4155)));
evalcond[5]=((((-1.0)*r10*x4161))+(((-1.0)*sj1*sj2*x4155))+((r12*x4153))+(((-1.0)*x4156*x4157))+((r11*x4158)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4163=((-1.0)*r11);
IkReal x4165 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x4165)==0){
continue;
}
IkReal x4164=pow(x4165,-0.5);
CheckValue<IkReal> x4166 = IKatan2WithCheck(IkReal(x4163),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x4166.valid){
continue;
}
IkReal gconst105=((3.14159265358979)+(((-1.0)*(x4166.value))));
IkReal gconst106=(x4163*x4164);
IkReal gconst107=((1.0)*r10*x4164);
CheckValue<IkReal> x4167 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x4167.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x4167.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x4168=((-1.0)*r11);
CheckValue<IkReal> x4171 = IKatan2WithCheck(IkReal(x4168),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x4171.valid){
continue;
}
IkReal x4169=((1.0)*(x4171.value));
IkReal x4170=x4164;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst106;
cj6=gconst107;
j6=((3.14159265)+(((-1.0)*x4169)));
IkReal gconst105=((3.14159265358979)+(((-1.0)*x4169)));
IkReal gconst106=(x4168*x4170);
IkReal gconst107=((1.0)*r10*x4170);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x4172=((-1.0)*r11);
CheckValue<IkReal> x4175 = IKatan2WithCheck(IkReal(x4172),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x4175.valid){
continue;
}
IkReal x4173=((1.0)*(x4175.value));
IkReal x4174=x4164;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst106;
cj6=gconst107;
j6=((3.14159265)+(((-1.0)*x4173)));
IkReal gconst105=((3.14159265358979)+(((-1.0)*x4173)));
IkReal gconst106=(x4172*x4174);
IkReal gconst107=((1.0)*r10*x4174);
IkReal x4176=r12*r12;
IkReal x4177=((1.0)*sj2);
IkReal x4178=(cj2*r02);
IkReal x4179=x4164;
j5eval[0]=((IKabs(((((-1.0)*x4177*x4179))+((sj2*x4176*x4179))+((r12*x4178*x4179)))))+(IKabs(((((-1.0)*x4178))+(((-1.0)*r12*x4177))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x4180=((-1.0)*r11);
CheckValue<IkReal> x4183 = IKatan2WithCheck(IkReal(x4180),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x4183.valid){
continue;
}
IkReal x4181=((1.0)*(x4183.value));
IkReal x4182=x4164;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst106;
cj6=gconst107;
j6=((3.14159265)+(((-1.0)*x4181)));
IkReal gconst105=((3.14159265358979)+(((-1.0)*x4181)));
IkReal gconst106=(x4180*x4182);
IkReal gconst107=((1.0)*r10*x4182);
IkReal x4184=r12*r12;
IkReal x4185=((1.0)+(((-1.0)*x4184)));
IkReal x4186=(cj0*cj1*r22);
IkReal x4187=(r22*sj0*sj1);
CheckValue<IkReal> x4194=IKPowWithIntegerCheck(x4185,-1);
if(!x4194.valid){
continue;
}
IkReal x4188=x4194.value;
CheckValue<IkReal> x4195=IKPowWithIntegerCheck(((-1.0)+x4184),-1);
if(!x4195.valid){
continue;
}
IkReal x4189=x4195.value;
IkReal x4190=((1.0)*x4188);
if((x4185) < -0.00001)
continue;
IkReal x4191=IKsqrt(x4185);
IkReal x4192=(r12*x4189*x4191);
IkReal x4193=((((-2.0)*r10*r11*r20*r21*x4188))+(((-1.0)*x4190*(r11*r11)*(r21*r21)))+(((-1.0)*(r22*r22)))+(((-1.0)*x4190*(r10*r10)*(r20*r20))));
j5eval[0]=x4193;
j5eval[1]=((IKabs(((((-1.0)*x4186))+x4187)))+(IKabs(((((-1.0)*x4187*x4192))+((x4186*x4192))))));
j5eval[2]=IKsign(x4193);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4196=(cj0*cj1);
IkReal x4197=(gconst107*r20);
IkReal x4198=(gconst106*r21);
IkReal x4199=(sj0*sj1);
CheckValue<IkReal> x4200=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x4197*x4197)))+(((2.0)*x4197*x4198))+(((-1.0)*(r22*r22)))+(((-1.0)*(x4198*x4198))))),-1);
if(!x4200.valid){
continue;
}
CheckValue<IkReal> x4201 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x4196))+((r22*x4199)))),IkReal((((x4196*x4197))+(((-1.0)*x4196*x4198))+((x4198*x4199))+(((-1.0)*x4197*x4199)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4201.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4200.value)))+(x4201.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4202=IKsin(j5);
IkReal x4203=IKcos(j5);
IkReal x4204=((1.0)*cj0);
IkReal x4205=((1.0)*gconst107);
IkReal x4206=((1.0)*sj2);
IkReal x4207=(cj1*sj0);
IkReal x4208=(gconst106*x4203);
IkReal x4209=(gconst106*x4202);
IkReal x4210=((1.0)*x4203);
evalcond[0]=((((-1.0)*r22*x4210))+((r21*x4209))+(((-1.0)*r20*x4202*x4205)));
evalcond[1]=(((r11*x4209))+(((-1.0)*r10*x4202*x4205))+cj2+(((-1.0)*r12*x4210)));
evalcond[2]=((((-1.0)*r02*x4210))+(((-1.0)*x4206))+((r01*x4209))+(((-1.0)*r00*x4202*x4205)));
evalcond[3]=(((r22*x4202))+(((-1.0)*cj1*x4204))+((sj0*sj1))+((r21*x4208))+(((-1.0)*r20*x4203*x4205)));
evalcond[4]=(((r02*x4202))+(((-1.0)*cj2*sj1*x4204))+((r01*x4208))+(((-1.0)*cj2*x4207))+(((-1.0)*r00*x4203*x4205)));
evalcond[5]=(((r11*x4208))+(((-1.0)*x4206*x4207))+(((-1.0)*r10*x4203*x4205))+(((-1.0)*sj1*sj2*x4204))+((r12*x4202)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4211=((1.0)*sj2);
IkReal x4212=((1.0)*cj2);
CheckValue<IkReal> x4213 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x4212))+(((-1.0)*r12*x4211)))),IkReal((((cj2*gconst107*r00))+(((-1.0)*gconst106*r01*x4212))+((gconst107*r10*sj2))+(((-1.0)*gconst106*r11*x4211)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4213.valid){
continue;
}
CheckValue<IkReal> x4214=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst107*r21))+(((-1.0)*gconst106*r20)))),-1);
if(!x4214.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4213.value)+(((1.5707963267949)*(x4214.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4215=IKsin(j5);
IkReal x4216=IKcos(j5);
IkReal x4217=((1.0)*cj0);
IkReal x4218=((1.0)*gconst107);
IkReal x4219=((1.0)*sj2);
IkReal x4220=(cj1*sj0);
IkReal x4221=(gconst106*x4216);
IkReal x4222=(gconst106*x4215);
IkReal x4223=((1.0)*x4216);
evalcond[0]=((((-1.0)*r22*x4223))+(((-1.0)*r20*x4215*x4218))+((r21*x4222)));
evalcond[1]=(cj2+(((-1.0)*r12*x4223))+(((-1.0)*r10*x4215*x4218))+((r11*x4222)));
evalcond[2]=((((-1.0)*r00*x4215*x4218))+((r01*x4222))+(((-1.0)*r02*x4223))+(((-1.0)*x4219)));
evalcond[3]=(((r22*x4215))+((sj0*sj1))+((r21*x4221))+(((-1.0)*cj1*x4217))+(((-1.0)*r20*x4216*x4218)));
evalcond[4]=((((-1.0)*r00*x4216*x4218))+((r01*x4221))+(((-1.0)*cj2*x4220))+((r02*x4215))+(((-1.0)*cj2*sj1*x4217)));
evalcond[5]=(((r12*x4215))+(((-1.0)*r10*x4216*x4218))+(((-1.0)*sj1*sj2*x4217))+(((-1.0)*x4219*x4220))+((r11*x4221)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4224=((1.0)*gconst107);
CheckValue<IkReal> x4225 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x4224))+((cj2*gconst106*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4225.valid){
continue;
}
CheckValue<IkReal> x4226=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst106*r00))+(((-1.0)*r01*x4224)))),-1);
if(!x4226.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4225.value)+(((1.5707963267949)*(x4226.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4227=IKsin(j5);
IkReal x4228=IKcos(j5);
IkReal x4229=((1.0)*cj0);
IkReal x4230=((1.0)*gconst107);
IkReal x4231=((1.0)*sj2);
IkReal x4232=(cj1*sj0);
IkReal x4233=(gconst106*x4228);
IkReal x4234=(gconst106*x4227);
IkReal x4235=((1.0)*x4228);
evalcond[0]=((((-1.0)*r22*x4235))+(((-1.0)*r20*x4227*x4230))+((r21*x4234)));
evalcond[1]=(cj2+(((-1.0)*r12*x4235))+(((-1.0)*r10*x4227*x4230))+((r11*x4234)));
evalcond[2]=((((-1.0)*x4231))+((r01*x4234))+(((-1.0)*r00*x4227*x4230))+(((-1.0)*r02*x4235)));
evalcond[3]=((((-1.0)*r20*x4228*x4230))+((r22*x4227))+((sj0*sj1))+((r21*x4233))+(((-1.0)*cj1*x4229)));
evalcond[4]=((((-1.0)*r00*x4228*x4230))+((r01*x4233))+(((-1.0)*cj2*sj1*x4229))+(((-1.0)*cj2*x4232))+((r02*x4227)));
evalcond[5]=((((-1.0)*x4231*x4232))+(((-1.0)*sj1*sj2*x4229))+(((-1.0)*r10*x4228*x4230))+((r11*x4233))+((r12*x4227)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x4236=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x4236;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x4236);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x4237=((1.0)*cj6);
IkReal x4238=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4237)));
j5eval[0]=x4238;
j5eval[1]=IKsign(x4238);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x4237))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=1.0;
j2=0;
IkReal x4239=(r11*sj6);
IkReal x4240=(cj0*cj1);
IkReal x4241=(sj0*sj1);
IkReal x4242=(cj6*r10);
IkReal x4243=((((-1.0)*r00*sj6))+(((-1.0)*cj6*r01)));
j5eval[0]=x4243;
j5eval[1]=((IKabs((((x4240*x4242))+(((-1.0)*x4241*x4242))+((x4239*x4241))+(((-1.0)*x4239*x4240)))))+(IKabs(((((-1.0)*r12*x4241))+((r12*x4240))))));
j5eval[2]=IKsign(x4243);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4244=(r11*sj6);
IkReal x4245=(cj0*cj1);
IkReal x4246=(sj0*sj1);
IkReal x4247=(cj6*r10);
CheckValue<IkReal> x4248=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*cj6*r01)))),-1);
if(!x4248.valid){
continue;
}
CheckValue<IkReal> x4249 = IKatan2WithCheck(IkReal(((((-1.0)*x4246*x4247))+((x4244*x4246))+(((-1.0)*x4244*x4245))+((x4245*x4247)))),IkReal(((((-1.0)*r12*x4246))+((r12*x4245)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4249.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4248.value)))+(x4249.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4250=IKcos(j5);
IkReal x4251=IKsin(j5);
IkReal x4252=((1.0)*cj0);
IkReal x4253=(sj6*x4251);
IkReal x4254=((1.0)*x4250);
IkReal x4255=(sj6*x4250);
IkReal x4256=((1.0)*cj6*x4251);
evalcond[0]=((((-1.0)*cj6*r10*x4254))+((r12*x4251))+((r11*x4255)));
evalcond[1]=((((-1.0)*r22*x4254))+(((-1.0)*r20*x4256))+((r21*x4253)));
evalcond[2]=(((r01*x4253))+(((-1.0)*r00*x4256))+(((-1.0)*r02*x4254)));
evalcond[3]=((1.0)+((r11*x4253))+(((-1.0)*r10*x4256))+(((-1.0)*r12*x4254)));
evalcond[4]=(((r22*x4251))+(((-1.0)*cj1*x4252))+((sj0*sj1))+(((-1.0)*cj6*r20*x4254))+((r21*x4255)));
evalcond[5]=((((-1.0)*sj1*x4252))+((r02*x4251))+(((-1.0)*cj1*sj0))+((r01*x4255))+(((-1.0)*cj6*r00*x4254)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4257=((1.0)*cj6);
CheckValue<IkReal> x4258=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x4257)))),-1);
if(!x4258.valid){
continue;
}
CheckValue<IkReal> x4259 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x4257)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4259.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4258.value)))+(x4259.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4260=IKcos(j5);
IkReal x4261=IKsin(j5);
IkReal x4262=((1.0)*cj0);
IkReal x4263=(sj6*x4261);
IkReal x4264=((1.0)*x4260);
IkReal x4265=(sj6*x4260);
IkReal x4266=((1.0)*cj6*x4261);
evalcond[0]=(((r11*x4265))+((r12*x4261))+(((-1.0)*cj6*r10*x4264)));
evalcond[1]=(((r21*x4263))+(((-1.0)*r20*x4266))+(((-1.0)*r22*x4264)));
evalcond[2]=(((r01*x4263))+(((-1.0)*r00*x4266))+(((-1.0)*r02*x4264)));
evalcond[3]=((1.0)+(((-1.0)*r12*x4264))+((r11*x4263))+(((-1.0)*r10*x4266)));
evalcond[4]=(((r21*x4265))+((sj0*sj1))+(((-1.0)*cj1*x4262))+((r22*x4261))+(((-1.0)*cj6*r20*x4264)));
evalcond[5]=(((r01*x4265))+(((-1.0)*sj1*x4262))+((r02*x4261))+(((-1.0)*cj1*sj0))+(((-1.0)*cj6*r00*x4264)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4267=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x4267.valid){
continue;
}
CheckValue<IkReal> x4268 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4268.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4267.value)))+(x4268.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4269=IKcos(j5);
IkReal x4270=IKsin(j5);
IkReal x4271=((1.0)*cj0);
IkReal x4272=(sj6*x4270);
IkReal x4273=((1.0)*x4269);
IkReal x4274=(sj6*x4269);
IkReal x4275=((1.0)*cj6*x4270);
evalcond[0]=(((r11*x4274))+((r12*x4270))+(((-1.0)*cj6*r10*x4273)));
evalcond[1]=(((r21*x4272))+(((-1.0)*r20*x4275))+(((-1.0)*r22*x4273)));
evalcond[2]=((((-1.0)*r02*x4273))+(((-1.0)*r00*x4275))+((r01*x4272)));
evalcond[3]=((1.0)+(((-1.0)*r10*x4275))+(((-1.0)*r12*x4273))+((r11*x4272)));
evalcond[4]=((((-1.0)*cj1*x4271))+((r21*x4274))+((sj0*sj1))+(((-1.0)*cj6*r20*x4273))+((r22*x4270)));
evalcond[5]=(((r02*x4270))+(((-1.0)*cj1*sj0))+(((-1.0)*cj6*r00*x4273))+((r01*x4274))+(((-1.0)*sj1*x4271)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x4276=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x4276;
j5eval[1]=IKsign(x4276);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x4277=((1.0)*cj6);
IkReal x4278=((((-1.0)*r21*x4277))+(((-1.0)*r20*sj6)));
j5eval[0]=x4278;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x4277))))));
j5eval[2]=IKsign(x4278);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x4279=cj6*cj6;
IkReal x4280=r11*r11;
IkReal x4281=(r11*sj6);
IkReal x4282=(cj6*r10);
IkReal x4283=((((-1.0)*x4279*x4280))+(r12*r12)+((x4279*(r10*r10)))+x4280+(((-2.0)*x4281*x4282)));
j5eval[0]=x4283;
j5eval[1]=IKsign(x4283);
j5eval[2]=((IKabs(r12))+(IKabs((x4281+(((-1.0)*x4282))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4284=cj6*cj6;
IkReal x4285=r11*r11;
IkReal x4286=(r11*sj6);
IkReal x4287=(cj6*r10);
CheckValue<IkReal> x4288 = IKatan2WithCheck(IkReal((x4286+(((-1.0)*x4287)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x4288.valid){
continue;
}
CheckValue<IkReal> x4289=IKPowWithIntegerCheck(IKsign(((r12*r12)+((x4284*(r10*r10)))+x4285+(((-1.0)*x4284*x4285))+(((-2.0)*x4286*x4287)))),-1);
if(!x4289.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4288.value)+(((1.5707963267949)*(x4289.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4290=IKcos(j5);
IkReal x4291=IKsin(j5);
IkReal x4292=(sj6*x4291);
IkReal x4293=((1.0)*x4290);
IkReal x4294=(sj6*x4290);
IkReal x4295=((1.0)*cj6*x4291);
evalcond[0]=(((r12*x4291))+((r11*x4294))+(((-1.0)*cj6*r10*x4293)));
evalcond[1]=((((-1.0)*r22*x4293))+((r21*x4292))+(((-1.0)*r20*x4295)));
evalcond[2]=((((-1.0)*r00*x4295))+((r01*x4292))+(((-1.0)*r02*x4293)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x4295))+(((-1.0)*r12*x4293))+((r11*x4292)));
evalcond[4]=(((r01*x4294))+((cj1*sj0))+(((-1.0)*cj6*r00*x4293))+((cj0*sj1))+((r02*x4291)));
evalcond[5]=(((r21*x4294))+((sj0*sj1))+(((-1.0)*cj6*r20*x4293))+((r22*x4291))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4296=((1.0)*cj6);
CheckValue<IkReal> x4297=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x4296))+(((-1.0)*r20*sj6)))),-1);
if(!x4297.valid){
continue;
}
CheckValue<IkReal> x4298 = IKatan2WithCheck(IkReal(r02),IkReal(((((-1.0)*r00*x4296))+((r01*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4298.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4297.value)))+(x4298.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4299=IKcos(j5);
IkReal x4300=IKsin(j5);
IkReal x4301=(sj6*x4300);
IkReal x4302=((1.0)*x4299);
IkReal x4303=(sj6*x4299);
IkReal x4304=((1.0)*cj6*x4300);
evalcond[0]=(((r12*x4300))+((r11*x4303))+(((-1.0)*cj6*r10*x4302)));
evalcond[1]=((((-1.0)*r22*x4302))+(((-1.0)*r20*x4304))+((r21*x4301)));
evalcond[2]=((((-1.0)*r00*x4304))+((r01*x4301))+(((-1.0)*r02*x4302)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x4302))+((r11*x4301))+(((-1.0)*r10*x4304)));
evalcond[4]=((((-1.0)*cj6*r00*x4302))+((r02*x4300))+((cj1*sj0))+((r01*x4303))+((cj0*sj1)));
evalcond[5]=(((r22*x4300))+((sj0*sj1))+(((-1.0)*cj6*r20*x4302))+(((-1.0)*cj0*cj1))+((r21*x4303)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4305=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x4305.valid){
continue;
}
CheckValue<IkReal> x4306 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4306.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4305.value)))+(x4306.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4307=IKcos(j5);
IkReal x4308=IKsin(j5);
IkReal x4309=(sj6*x4308);
IkReal x4310=((1.0)*x4307);
IkReal x4311=(sj6*x4307);
IkReal x4312=((1.0)*cj6*x4308);
evalcond[0]=(((r12*x4308))+(((-1.0)*cj6*r10*x4310))+((r11*x4311)));
evalcond[1]=((((-1.0)*r22*x4310))+(((-1.0)*r20*x4312))+((r21*x4309)));
evalcond[2]=((((-1.0)*r02*x4310))+((r01*x4309))+(((-1.0)*r00*x4312)));
evalcond[3]=((-1.0)+((r11*x4309))+(((-1.0)*r12*x4310))+(((-1.0)*r10*x4312)));
evalcond[4]=((((-1.0)*cj6*r00*x4310))+((r02*x4308))+((cj1*sj0))+((r01*x4311))+((cj0*sj1)));
evalcond[5]=(((r22*x4308))+((r21*x4311))+((sj0*sj1))+(((-1.0)*cj6*r20*x4310))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4313=((-1.0)*r00);
IkReal x4315 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x4315)==0){
continue;
}
IkReal x4314=pow(x4315,-0.5);
CheckValue<IkReal> x4316 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x4313),IKFAST_ATAN2_MAGTHRESH);
if(!x4316.valid){
continue;
}
IkReal gconst108=((-1.0)*(x4316.value));
IkReal gconst109=(r01*x4314);
IkReal gconst110=(x4313*x4314);
CheckValue<IkReal> x4317 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x4317.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x4317.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x4318=((-1.0)*r00);
IkReal x4319=x4314;
CheckValue<IkReal> x4321 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x4318),IKFAST_ATAN2_MAGTHRESH);
if(!x4321.valid){
continue;
}
IkReal x4320=((-1.0)*(x4321.value));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst109;
cj6=gconst110;
j6=x4320;
IkReal gconst108=x4320;
IkReal gconst109=(r01*x4319);
IkReal gconst110=(x4318*x4319);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4322=((1.0)*sj2);
IkReal x4323=((1.0)*cj2);
CheckValue<IkReal> x4324=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst109*r20))+(((-1.0)*gconst110*r21)))),-1);
if(!x4324.valid){
continue;
}
CheckValue<IkReal> x4325 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x4323))+(((-1.0)*r12*x4322)))),IkReal((((gconst110*r10*sj2))+(((-1.0)*gconst109*r01*x4323))+((cj2*gconst110*r00))+(((-1.0)*gconst109*r11*x4322)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4325.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4324.value)))+(x4325.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4326=IKsin(j5);
IkReal x4327=IKcos(j5);
IkReal x4328=((1.0)*cj0);
IkReal x4329=((1.0)*sj2);
IkReal x4330=(gconst109*r01);
IkReal x4331=(cj1*sj0);
IkReal x4332=(gconst109*r21);
IkReal x4333=(gconst109*r11);
IkReal x4334=((1.0)*x4327);
IkReal x4335=(gconst110*x4334);
IkReal x4336=((1.0)*gconst110*x4326);
evalcond[0]=((((-1.0)*r20*x4336))+((x4326*x4332))+(((-1.0)*r22*x4334)));
evalcond[1]=((((-1.0)*r10*x4336))+cj2+((x4326*x4333))+(((-1.0)*r12*x4334)));
evalcond[2]=((((-1.0)*r00*x4336))+(((-1.0)*x4329))+(((-1.0)*r02*x4334))+((x4326*x4330)));
evalcond[3]=((((-1.0)*r20*x4335))+((x4327*x4332))+((sj0*sj1))+(((-1.0)*cj1*x4328))+((r22*x4326)));
evalcond[4]=((((-1.0)*r00*x4335))+(((-1.0)*cj2*sj1*x4328))+((x4327*x4330))+(((-1.0)*cj2*x4331))+((r02*x4326)));
evalcond[5]=((((-1.0)*r10*x4335))+((x4327*x4333))+(((-1.0)*sj1*sj2*x4328))+((r12*x4326))+(((-1.0)*x4329*x4331)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4337=((1.0)*gconst110);
CheckValue<IkReal> x4338 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst109*r21*sj2))+(((-1.0)*r20*sj2*x4337)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4338.valid){
continue;
}
CheckValue<IkReal> x4339=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x4337))+(((-1.0)*gconst109*r10)))),-1);
if(!x4339.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4338.value)+(((1.5707963267949)*(x4339.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4340=IKsin(j5);
IkReal x4341=IKcos(j5);
IkReal x4342=((1.0)*cj0);
IkReal x4343=((1.0)*sj2);
IkReal x4344=(gconst109*r01);
IkReal x4345=(cj1*sj0);
IkReal x4346=(gconst109*r21);
IkReal x4347=(gconst109*r11);
IkReal x4348=((1.0)*x4341);
IkReal x4349=(gconst110*x4348);
IkReal x4350=((1.0)*gconst110*x4340);
evalcond[0]=(((x4340*x4346))+(((-1.0)*r22*x4348))+(((-1.0)*r20*x4350)));
evalcond[1]=(cj2+(((-1.0)*r12*x4348))+((x4340*x4347))+(((-1.0)*r10*x4350)));
evalcond[2]=((((-1.0)*r02*x4348))+(((-1.0)*x4343))+((x4340*x4344))+(((-1.0)*r00*x4350)));
evalcond[3]=((((-1.0)*r20*x4349))+((r22*x4340))+((sj0*sj1))+((x4341*x4346))+(((-1.0)*cj1*x4342)));
evalcond[4]=(((r02*x4340))+(((-1.0)*cj2*x4345))+((x4341*x4344))+(((-1.0)*cj2*sj1*x4342))+(((-1.0)*r00*x4349)));
evalcond[5]=((((-1.0)*x4343*x4345))+(((-1.0)*r10*x4349))+((x4341*x4347))+((r12*x4340))+(((-1.0)*sj1*sj2*x4342)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x4351=((-1.0)*r01);
IkReal x4353 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x4353)==0){
continue;
}
IkReal x4352=pow(x4353,-0.5);
CheckValue<IkReal> x4354 = IKatan2WithCheck(IkReal(x4351),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x4354.valid){
continue;
}
IkReal gconst111=((3.14159265358979)+(((-1.0)*(x4354.value))));
IkReal gconst112=(x4351*x4352);
IkReal gconst113=((1.0)*r00*x4352);
CheckValue<IkReal> x4355 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x4355.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x4355.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x4356=((-1.0)*r01);
CheckValue<IkReal> x4359 = IKatan2WithCheck(IkReal(x4356),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x4359.valid){
continue;
}
IkReal x4357=((1.0)*(x4359.value));
IkReal x4358=x4352;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst112;
cj6=gconst113;
j6=((3.14159265)+(((-1.0)*x4357)));
IkReal gconst111=((3.14159265358979)+(((-1.0)*x4357)));
IkReal gconst112=(x4356*x4358);
IkReal gconst113=((1.0)*r00*x4358);
j5eval[0]=0;
j5eval[1]=cj2;
j5eval[2]=r22;
j5eval[3]=((1.0)+(((-1.0)*(r02*r02))));
j5eval[4]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x4360=((-1.0)*r01);
CheckValue<IkReal> x4363 = IKatan2WithCheck(IkReal(x4360),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x4363.valid){
continue;
}
IkReal x4361=((1.0)*(x4363.value));
IkReal x4362=x4352;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst112;
cj6=gconst113;
j6=((3.14159265)+(((-1.0)*x4361)));
IkReal gconst111=((3.14159265358979)+(((-1.0)*x4361)));
IkReal gconst112=(x4360*x4362);
IkReal gconst113=((1.0)*r00*x4362);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x4364=((-1.0)*r01);
CheckValue<IkReal> x4367 = IKatan2WithCheck(IkReal(x4364),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x4367.valid){
continue;
}
IkReal x4365=((1.0)*(x4367.value));
IkReal x4366=x4352;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj6=gconst112;
cj6=gconst113;
j6=((3.14159265)+(((-1.0)*x4365)));
IkReal gconst111=((3.14159265358979)+(((-1.0)*x4365)));
IkReal gconst112=(x4364*x4366);
IkReal gconst113=((1.0)*r00*x4366);
IkReal x4368=r02*r02;
IkReal x4369=(r12*sj2);
IkReal x4370=((1.0)*cj2);
IkReal x4371=x4352;
j5eval[0]=((IKabs(((((-1.0)*x4370*x4371))+((r02*x4369*x4371))+((cj2*x4368*x4371)))))+(IKabs(((((-1.0)*r02*x4370))+(((-1.0)*x4369))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4372=((1.0)*sj2);
IkReal x4373=((1.0)*cj2);
CheckValue<IkReal> x4374 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x4373))+(((-1.0)*r12*x4372)))),IkReal((((cj2*gconst113*r00))+((gconst113*r10*sj2))+(((-1.0)*gconst112*r01*x4373))+(((-1.0)*gconst112*r11*x4372)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4374.valid){
continue;
}
CheckValue<IkReal> x4375=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst113*r21))+(((-1.0)*gconst112*r20)))),-1);
if(!x4375.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4374.value)+(((1.5707963267949)*(x4375.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4376=IKsin(j5);
IkReal x4377=IKcos(j5);
IkReal x4378=((1.0)*sj2);
IkReal x4379=((1.0)*cj0);
IkReal x4380=(cj1*sj0);
IkReal x4381=(gconst112*x4376);
IkReal x4382=(gconst112*x4377);
IkReal x4383=((1.0)*x4377);
IkReal x4384=((1.0)*gconst113*x4376);
evalcond[0]=((((-1.0)*r22*x4383))+((r21*x4381))+(((-1.0)*r20*x4384)));
evalcond[1]=((((-1.0)*r12*x4383))+cj2+(((-1.0)*r10*x4384))+((r11*x4381)));
evalcond[2]=((((-1.0)*r02*x4383))+(((-1.0)*r00*x4384))+(((-1.0)*x4378))+((r01*x4381)));
evalcond[3]=(((r22*x4376))+((sj0*sj1))+((r21*x4382))+(((-1.0)*gconst113*r20*x4383))+(((-1.0)*cj1*x4379)));
evalcond[4]=(((r02*x4376))+(((-1.0)*cj2*x4380))+(((-1.0)*gconst113*r00*x4383))+(((-1.0)*cj2*sj1*x4379))+((r01*x4382)));
evalcond[5]=((((-1.0)*cj0*sj1*x4378))+((r12*x4376))+(((-1.0)*gconst113*r10*x4383))+(((-1.0)*x4378*x4380))+((r11*x4382)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4385=((1.0)*gconst113);
CheckValue<IkReal> x4386 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst112*r21*sj2))+(((-1.0)*r20*sj2*x4385)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4386.valid){
continue;
}
CheckValue<IkReal> x4387=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x4385))+(((-1.0)*gconst112*r10)))),-1);
if(!x4387.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4386.value)+(((1.5707963267949)*(x4387.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4388=IKsin(j5);
IkReal x4389=IKcos(j5);
IkReal x4390=((1.0)*sj2);
IkReal x4391=((1.0)*cj0);
IkReal x4392=(cj1*sj0);
IkReal x4393=(gconst112*x4388);
IkReal x4394=(gconst112*x4389);
IkReal x4395=((1.0)*x4389);
IkReal x4396=((1.0)*gconst113*x4388);
evalcond[0]=((((-1.0)*r22*x4395))+((r21*x4393))+(((-1.0)*r20*x4396)));
evalcond[1]=((((-1.0)*r12*x4395))+cj2+(((-1.0)*r10*x4396))+((r11*x4393)));
evalcond[2]=((((-1.0)*x4390))+((r01*x4393))+(((-1.0)*r02*x4395))+(((-1.0)*r00*x4396)));
evalcond[3]=(((r22*x4388))+((sj0*sj1))+(((-1.0)*cj1*x4391))+(((-1.0)*gconst113*r20*x4395))+((r21*x4394)));
evalcond[4]=(((r01*x4394))+(((-1.0)*cj2*x4392))+(((-1.0)*cj2*sj1*x4391))+((r02*x4388))+(((-1.0)*gconst113*r00*x4395)));
evalcond[5]=((((-1.0)*cj0*sj1*x4390))+(((-1.0)*x4390*x4392))+(((-1.0)*gconst113*r10*x4395))+((r11*x4394))+((r12*x4388)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4397=((1.0)*gconst113);
CheckValue<IkReal> x4398=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x4397))+(((-1.0)*gconst112*r00)))),-1);
if(!x4398.valid){
continue;
}
CheckValue<IkReal> x4399 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst112*r21))+(((-1.0)*cj2*r20*x4397)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4399.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4398.value)))+(x4399.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4400=IKsin(j5);
IkReal x4401=IKcos(j5);
IkReal x4402=((1.0)*sj2);
IkReal x4403=((1.0)*cj0);
IkReal x4404=(cj1*sj0);
IkReal x4405=(gconst112*x4400);
IkReal x4406=(gconst112*x4401);
IkReal x4407=((1.0)*x4401);
IkReal x4408=((1.0)*gconst113*x4400);
evalcond[0]=(((r21*x4405))+(((-1.0)*r20*x4408))+(((-1.0)*r22*x4407)));
evalcond[1]=(((r11*x4405))+cj2+(((-1.0)*r10*x4408))+(((-1.0)*r12*x4407)));
evalcond[2]=((((-1.0)*r00*x4408))+((r01*x4405))+(((-1.0)*r02*x4407))+(((-1.0)*x4402)));
evalcond[3]=(((r22*x4400))+((r21*x4406))+((sj0*sj1))+(((-1.0)*cj1*x4403))+(((-1.0)*gconst113*r20*x4407)));
evalcond[4]=((((-1.0)*cj2*sj1*x4403))+((r01*x4406))+(((-1.0)*cj2*x4404))+(((-1.0)*gconst113*r00*x4407))+((r02*x4400)));
evalcond[5]=(((r11*x4406))+((r12*x4400))+(((-1.0)*x4402*x4404))+(((-1.0)*gconst113*r10*x4407))+(((-1.0)*cj0*sj1*x4402)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x4409=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x4409;
j5eval[1]=IKsign(x4409);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x4410=((1.0)*cj6);
IkReal x4411=((((-1.0)*r10*sj6))+(((-1.0)*r11*x4410)));
j5eval[0]=x4411;
j5eval[1]=IKsign(x4411);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x4410))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x4412=cj6*cj6;
IkReal x4413=r01*r01;
IkReal x4414=(r01*sj6);
IkReal x4415=(cj6*r00);
IkReal x4416=(((x4412*(r00*r00)))+x4413+(((-2.0)*x4414*x4415))+(r02*r02)+(((-1.0)*x4412*x4413)));
j5eval[0]=x4416;
j5eval[1]=((IKabs(r02))+(IKabs((x4414+(((-1.0)*x4415))))));
j5eval[2]=IKsign(x4416);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4417=cj6*cj6;
IkReal x4418=r01*r01;
IkReal x4419=(r01*sj6);
IkReal x4420=(cj6*r00);
CheckValue<IkReal> x4421 = IKatan2WithCheck(IkReal((x4419+(((-1.0)*x4420)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x4421.valid){
continue;
}
CheckValue<IkReal> x4422=IKPowWithIntegerCheck(IKsign((x4418+(((-2.0)*x4419*x4420))+((x4417*(r00*r00)))+(((-1.0)*x4417*x4418))+(r02*r02))),-1);
if(!x4422.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4421.value)+(((1.5707963267949)*(x4422.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4423=IKcos(j5);
IkReal x4424=IKsin(j5);
IkReal x4425=((1.0)*cj0);
IkReal x4426=(sj6*x4424);
IkReal x4427=((1.0)*x4423);
IkReal x4428=(sj6*x4423);
IkReal x4429=((1.0)*cj6*x4424);
evalcond[0]=(((r02*x4424))+(((-1.0)*cj6*r00*x4427))+((r01*x4428)));
evalcond[1]=((((-1.0)*r22*x4427))+(((-1.0)*r20*x4429))+((r21*x4426)));
evalcond[2]=((((-1.0)*r12*x4427))+(((-1.0)*r10*x4429))+((r11*x4426)));
evalcond[3]=((-1.0)+((r01*x4426))+(((-1.0)*r02*x4427))+(((-1.0)*r00*x4429)));
evalcond[4]=(((r22*x4424))+((sj0*sj1))+((r21*x4428))+(((-1.0)*cj1*x4425))+(((-1.0)*cj6*r20*x4427)));
evalcond[5]=((((-1.0)*cj1*sj0))+(((-1.0)*sj1*x4425))+(((-1.0)*cj6*r10*x4427))+((r12*x4424))+((r11*x4428)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4430=((1.0)*cj6);
CheckValue<IkReal> x4431=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x4430)))),-1);
if(!x4431.valid){
continue;
}
CheckValue<IkReal> x4432 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x4430)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4432.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4431.value)))+(x4432.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4433=IKcos(j5);
IkReal x4434=IKsin(j5);
IkReal x4435=((1.0)*cj0);
IkReal x4436=(sj6*x4434);
IkReal x4437=((1.0)*x4433);
IkReal x4438=(sj6*x4433);
IkReal x4439=((1.0)*cj6*x4434);
evalcond[0]=((((-1.0)*cj6*r00*x4437))+((r02*x4434))+((r01*x4438)));
evalcond[1]=((((-1.0)*r22*x4437))+(((-1.0)*r20*x4439))+((r21*x4436)));
evalcond[2]=((((-1.0)*r10*x4439))+(((-1.0)*r12*x4437))+((r11*x4436)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x4437))+(((-1.0)*r00*x4439))+((r01*x4436)));
evalcond[4]=(((r22*x4434))+(((-1.0)*cj6*r20*x4437))+(((-1.0)*cj1*x4435))+((sj0*sj1))+((r21*x4438)));
evalcond[5]=((((-1.0)*cj6*r10*x4437))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x4435))+((r12*x4434))+((r11*x4438)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4440=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x4440.valid){
continue;
}
CheckValue<IkReal> x4441 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4441.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4440.value)))+(x4441.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4442=IKcos(j5);
IkReal x4443=IKsin(j5);
IkReal x4444=((1.0)*cj0);
IkReal x4445=(sj6*x4443);
IkReal x4446=((1.0)*x4442);
IkReal x4447=(sj6*x4442);
IkReal x4448=((1.0)*cj6*x4443);
evalcond[0]=((((-1.0)*cj6*r00*x4446))+((r01*x4447))+((r02*x4443)));
evalcond[1]=(((r21*x4445))+(((-1.0)*r22*x4446))+(((-1.0)*r20*x4448)));
evalcond[2]=((((-1.0)*r12*x4446))+((r11*x4445))+(((-1.0)*r10*x4448)));
evalcond[3]=((-1.0)+((r01*x4445))+(((-1.0)*r02*x4446))+(((-1.0)*r00*x4448)));
evalcond[4]=(((r21*x4447))+((sj0*sj1))+(((-1.0)*cj6*r20*x4446))+(((-1.0)*cj1*x4444))+((r22*x4443)));
evalcond[5]=((((-1.0)*cj6*r10*x4446))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x4444))+((r11*x4447))+((r12*x4443)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x4449=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x4449;
j5eval[1]=IKsign(x4449);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x4450=((1.0)*cj6);
IkReal x4451=((((-1.0)*r21*x4450))+(((-1.0)*r20*sj6)));
j5eval[0]=x4451;
j5eval[1]=((IKabs(r12))+(IKabs((((r11*sj6))+(((-1.0)*r10*x4450))))));
j5eval[2]=IKsign(x4451);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x4452=r01*r01;
IkReal x4453=cj6*cj6;
IkReal x4454=(r01*sj6);
IkReal x4455=(cj6*r00);
IkReal x4456=(((x4452*x4453))+(((-1.0)*(r02*r02)))+(((-1.0)*x4452))+(((2.0)*x4454*x4455))+(((-1.0)*x4453*(r00*r00))));
j5eval[0]=x4456;
j5eval[1]=IKsign(x4456);
j5eval[2]=((IKabs(r02))+(IKabs((x4454+(((-1.0)*x4455))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4457=r01*r01;
IkReal x4458=cj6*cj6;
IkReal x4459=(r01*sj6);
IkReal x4460=(cj6*r00);
CheckValue<IkReal> x4461=IKPowWithIntegerCheck(IKsign(((((-1.0)*(r02*r02)))+(((-1.0)*x4457))+(((2.0)*x4459*x4460))+((x4457*x4458))+(((-1.0)*x4458*(r00*r00))))),-1);
if(!x4461.valid){
continue;
}
CheckValue<IkReal> x4462 = IKatan2WithCheck(IkReal((x4459+(((-1.0)*x4460)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x4462.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4461.value)))+(x4462.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4463=IKcos(j5);
IkReal x4464=IKsin(j5);
IkReal x4465=(sj6*x4464);
IkReal x4466=((1.0)*x4463);
IkReal x4467=(sj6*x4463);
IkReal x4468=((1.0)*cj6*x4464);
evalcond[0]=(((r01*x4467))+((r02*x4464))+(((-1.0)*cj6*r00*x4466)));
evalcond[1]=((((-1.0)*r22*x4466))+((r21*x4465))+(((-1.0)*r20*x4468)));
evalcond[2]=(((r11*x4465))+(((-1.0)*r10*x4468))+(((-1.0)*r12*x4466)));
evalcond[3]=((1.0)+((r01*x4465))+(((-1.0)*r02*x4466))+(((-1.0)*r00*x4468)));
evalcond[4]=(((cj1*sj0))+((r12*x4464))+((r11*x4467))+(((-1.0)*cj6*r10*x4466))+((cj0*sj1)));
evalcond[5]=(((r22*x4464))+(((-1.0)*cj6*r20*x4466))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r21*x4467)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4469=((1.0)*cj6);
CheckValue<IkReal> x4470 = IKatan2WithCheck(IkReal(r12),IkReal((((r11*sj6))+(((-1.0)*r10*x4469)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4470.valid){
continue;
}
CheckValue<IkReal> x4471=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x4469))+(((-1.0)*r20*sj6)))),-1);
if(!x4471.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4470.value)+(((1.5707963267949)*(x4471.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4472=IKcos(j5);
IkReal x4473=IKsin(j5);
IkReal x4474=(sj6*x4473);
IkReal x4475=((1.0)*x4472);
IkReal x4476=(sj6*x4472);
IkReal x4477=((1.0)*cj6*x4473);
evalcond[0]=((((-1.0)*cj6*r00*x4475))+((r02*x4473))+((r01*x4476)));
evalcond[1]=(((r21*x4474))+(((-1.0)*r20*x4477))+(((-1.0)*r22*x4475)));
evalcond[2]=((((-1.0)*r12*x4475))+(((-1.0)*r10*x4477))+((r11*x4474)));
evalcond[3]=((1.0)+(((-1.0)*r00*x4477))+((r01*x4474))+(((-1.0)*r02*x4475)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*cj6*r10*x4475))+((r12*x4473))+((cj0*sj1))+((r11*x4476)));
evalcond[5]=((((-1.0)*cj6*r20*x4475))+((r21*x4476))+((sj0*sj1))+((r22*x4473))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4478 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4478.valid){
continue;
}
CheckValue<IkReal> x4479=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x4479.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4478.value)+(((1.5707963267949)*(x4479.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4480=IKcos(j5);
IkReal x4481=IKsin(j5);
IkReal x4482=(sj6*x4481);
IkReal x4483=((1.0)*x4480);
IkReal x4484=(sj6*x4480);
IkReal x4485=((1.0)*cj6*x4481);
evalcond[0]=(((r02*x4481))+(((-1.0)*cj6*r00*x4483))+((r01*x4484)));
evalcond[1]=(((r21*x4482))+(((-1.0)*r20*x4485))+(((-1.0)*r22*x4483)));
evalcond[2]=(((r11*x4482))+(((-1.0)*r12*x4483))+(((-1.0)*r10*x4485)));
evalcond[3]=((1.0)+((r01*x4482))+(((-1.0)*r00*x4485))+(((-1.0)*r02*x4483)));
evalcond[4]=(((r11*x4484))+((cj1*sj0))+(((-1.0)*cj6*r10*x4483))+((r12*x4481))+((cj0*sj1)));
evalcond[5]=(((r21*x4484))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r22*x4481))+(((-1.0)*cj6*r20*x4483)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x4486=((-1.0)*px);
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x4486);
rxp1_1=(px*r21);
rxp1_2=(r11*x4486);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=((((-1.0)*cj6*r20))+((r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x4488=IKPowWithIntegerCheck(((((-1.0)*cj6*r20))+((r21*sj6))),-1);
if(!x4488.valid){
continue;
}
IkReal x4487=x4488.value;
cj5array[0]=(((cj0*cj1*x4487))+(((-1.0)*sj0*sj1*x4487)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x4489=IKsin(j5);
IkReal x4490=(sj6*x4489);
IkReal x4491=((1.0)*cj6*x4489);
evalcond[0]=(r02*x4489);
evalcond[1]=(((r21*x4490))+(((-1.0)*r20*x4491)));
evalcond[2]=(((r11*x4490))+(((-1.0)*r10*x4491)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4492=((1.0)*sj6);
CheckValue<IkReal> x4493=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r21))+(((-1.0)*r20*x4492)))),-1);
if(!x4493.valid){
continue;
}
CheckValue<IkReal> x4494 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj6*r10*sj2))+((cj2*cj6*r00))+(((-1.0)*cj2*r01*x4492))+(((-1.0)*r11*sj2*x4492)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4494.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4493.value)))+(x4494.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4495=IKsin(j5);
IkReal x4496=IKcos(j5);
IkReal x4497=((1.0)*cj0);
IkReal x4498=((1.0)*sj2);
IkReal x4499=(cj1*sj0);
IkReal x4500=(sj6*x4495);
IkReal x4501=((1.0)*x4496);
IkReal x4502=(sj6*x4496);
IkReal x4503=((1.0)*cj6*x4495);
evalcond[0]=(((r21*x4500))+(((-1.0)*r22*x4501))+(((-1.0)*r20*x4503)));
evalcond[1]=(cj2+((r11*x4500))+(((-1.0)*r12*x4501))+(((-1.0)*r10*x4503)));
evalcond[2]=((((-1.0)*r00*x4503))+(((-1.0)*r02*x4501))+((r01*x4500))+(((-1.0)*x4498)));
evalcond[3]=((((-1.0)*cj1*x4497))+(((-1.0)*cj6*r20*x4501))+((r21*x4502))+((sj0*sj1))+((r22*x4495)));
evalcond[4]=(((r02*x4495))+(((-1.0)*cj2*sj1*x4497))+(((-1.0)*cj6*r00*x4501))+(((-1.0)*cj2*x4499))+((r01*x4502)));
evalcond[5]=(((r12*x4495))+(((-1.0)*x4498*x4499))+((r11*x4502))+(((-1.0)*sj1*sj2*x4497))+(((-1.0)*cj6*r10*x4501)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4504=((1.0)*cj6);
CheckValue<IkReal> x4505 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x4504))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4505.valid){
continue;
}
CheckValue<IkReal> x4506=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x4504)))),-1);
if(!x4506.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4505.value)+(((1.5707963267949)*(x4506.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4507=IKsin(j5);
IkReal x4508=IKcos(j5);
IkReal x4509=((1.0)*cj0);
IkReal x4510=((1.0)*sj2);
IkReal x4511=(cj1*sj0);
IkReal x4512=(sj6*x4507);
IkReal x4513=((1.0)*x4508);
IkReal x4514=(sj6*x4508);
IkReal x4515=((1.0)*cj6*x4507);
evalcond[0]=(((r21*x4512))+(((-1.0)*r20*x4515))+(((-1.0)*r22*x4513)));
evalcond[1]=(cj2+(((-1.0)*r12*x4513))+(((-1.0)*r10*x4515))+((r11*x4512)));
evalcond[2]=((((-1.0)*r02*x4513))+((r01*x4512))+(((-1.0)*r00*x4515))+(((-1.0)*x4510)));
evalcond[3]=((((-1.0)*cj1*x4509))+(((-1.0)*cj6*r20*x4513))+((r22*x4507))+((sj0*sj1))+((r21*x4514)));
evalcond[4]=(((r02*x4507))+((r01*x4514))+(((-1.0)*cj2*x4511))+(((-1.0)*cj6*r00*x4513))+(((-1.0)*cj2*sj1*x4509)));
evalcond[5]=(((r12*x4507))+(((-1.0)*sj1*sj2*x4509))+((r11*x4514))+(((-1.0)*x4510*x4511))+(((-1.0)*cj6*r10*x4513)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4516=((1.0)*cj6);
CheckValue<IkReal> x4517=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x4516)))),-1);
if(!x4517.valid){
continue;
}
CheckValue<IkReal> x4518 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x4516))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4518.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4517.value)))+(x4518.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4519=IKsin(j5);
IkReal x4520=IKcos(j5);
IkReal x4521=((1.0)*cj0);
IkReal x4522=((1.0)*sj2);
IkReal x4523=(cj1*sj0);
IkReal x4524=(sj6*x4519);
IkReal x4525=((1.0)*x4520);
IkReal x4526=(sj6*x4520);
IkReal x4527=((1.0)*cj6*x4519);
evalcond[0]=(((r21*x4524))+(((-1.0)*r20*x4527))+(((-1.0)*r22*x4525)));
evalcond[1]=((((-1.0)*r12*x4525))+((r11*x4524))+cj2+(((-1.0)*r10*x4527)));
evalcond[2]=(((r01*x4524))+(((-1.0)*x4522))+(((-1.0)*r00*x4527))+(((-1.0)*r02*x4525)));
evalcond[3]=(((r21*x4526))+(((-1.0)*cj1*x4521))+(((-1.0)*cj6*r20*x4525))+((sj0*sj1))+((r22*x4519)));
evalcond[4]=(((r02*x4519))+((r01*x4526))+(((-1.0)*cj2*sj1*x4521))+(((-1.0)*cj6*r00*x4525))+(((-1.0)*cj2*x4523)));
evalcond[5]=(((r11*x4526))+(((-1.0)*cj6*r10*x4525))+(((-1.0)*sj1*sj2*x4521))+((r12*x4519))+(((-1.0)*x4522*x4523)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2eval[3];
sj4=0;
cj4=1.0;
j4=0;
IkReal x4528=((1.0)*sj6);
IkReal x4529=((1.0)*cj6);
IkReal x4530=((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1)));
j2eval[0]=x4530;
j2eval[1]=((IKabs(((((-1.0)*r01*x4529))+(((-1.0)*r00*x4528)))))+(IKabs(((((-1.0)*r10*x4528))+(((-1.0)*r11*x4529))))));
j2eval[2]=IKsign(x4530);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  || IKabs(j2eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
IkReal x4531=r21*r21;
IkReal x4532=cj6*cj6;
IkReal x4533=(cj0*sj1);
IkReal x4534=(r21*sj6);
IkReal x4535=(cj1*sj0);
IkReal x4536=((1.0)*cj6*r20);
IkReal x4537=((((-1.0)*x4532*(r20*r20)))+(((-1.0)*x4531))+((x4531*x4532))+(((-1.0)*(r22*r22)))+(((2.0)*cj6*r20*x4534)));
j5eval[0]=x4537;
j5eval[1]=IKsign(x4537);
j5eval[2]=((IKabs((((x4533*x4534))+(((-1.0)*x4533*x4536))+((x4534*x4535))+(((-1.0)*x4535*x4536)))))+(IKabs((((r22*x4535))+((r22*x4533))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
sj4=0;
cj4=1.0;
j4=0;
IkReal x4538=cj1*cj1;
IkReal x4539=(cj0*sj0);
IkReal x4540=(cj1*sj1);
j2eval[0]=(x4540+x4539+(((-1.08349267049076)*sj0*x4538))+(((-1.08349267049076)*cj0*x4540))+(((-2.0)*x4538*x4539))+(((-2.0)*x4540*(cj0*cj0))));
j2eval[1]=((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1)));
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-0.160559264620033)*px))+(((1.20217186450501)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.160559264620033)*py))+(((1.20217186450501)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.160559264620033)*px))+(((1.20217186450501)*py))))+IKsqr(((((0.160559264620033)*py))+(((1.20217186450501)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-0.160559264620033)*px))+(((1.20217186450501)*py))), ((((0.160559264620033)*py))+(((1.20217186450501)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x4541=IKsin(j2);
IkReal x4542=IKcos(j2);
evalcond[0]=((((-0.10915)*x4541))+(((0.81725)*x4542))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*x4542))+(((0.81725)*x4541))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=0;
sj1=0;
cj1=1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4543=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x4543;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x4543);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=0;
sj1=0;
cj1=1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4544=((1.0)*cj6);
IkReal x4545=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4544)));
j5eval[0]=x4545;
j5eval[1]=IKsign(x4545);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x4544))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=0;
sj1=0;
cj1=1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4546=((1.0)*cj6);
IkReal x4547=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4546)));
j5eval[0]=x4547;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x4546))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x4547);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4548=((1.0)*cj6);
CheckValue<IkReal> x4549 = IKatan2WithCheck(IkReal(((((-1.0)*r20*sj2*x4548))+((r21*sj2*sj6)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x4549.valid){
continue;
}
CheckValue<IkReal> x4550=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x4548)))),-1);
if(!x4550.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4549.value)+(((1.5707963267949)*(x4550.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4551=IKcos(j5);
IkReal x4552=IKsin(j5);
IkReal x4553=((1.0)*sj2);
IkReal x4554=(cj6*r10);
IkReal x4555=(cj6*r00);
IkReal x4556=(cj6*r20);
IkReal x4557=(sj6*x4551);
IkReal x4558=(sj6*x4552);
IkReal x4559=((1.0)*x4551);
IkReal x4560=((1.0)*x4552);
evalcond[0]=((((-1.0)*x4556*x4559))+((r22*x4552))+((r21*x4557)));
evalcond[1]=((((-1.0)*x4556*x4560))+((r21*x4558))+(((-1.0)*r22*x4559)));
evalcond[2]=((((-1.0)*r12*x4559))+cj2+((r11*x4558))+(((-1.0)*x4554*x4560)));
evalcond[3]=(((r01*x4557))+(((-1.0)*x4555*x4559))+((r02*x4552))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x4553))+((r11*x4557))+((r12*x4552))+(((-1.0)*x4554*x4559)));
evalcond[5]=(((r01*x4558))+(((-1.0)*x4553))+(((-1.0)*x4555*x4560))+(((-1.0)*r02*x4559)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4561=((1.0)*cj6);
CheckValue<IkReal> x4562=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x4561))+(((-1.0)*r00*sj6)))),-1);
if(!x4562.valid){
continue;
}
CheckValue<IkReal> x4563 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x4561)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4563.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4562.value)))+(x4563.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4564=IKcos(j5);
IkReal x4565=IKsin(j5);
IkReal x4566=((1.0)*sj2);
IkReal x4567=(cj6*r10);
IkReal x4568=(cj6*r00);
IkReal x4569=(cj6*r20);
IkReal x4570=(sj6*x4564);
IkReal x4571=(sj6*x4565);
IkReal x4572=((1.0)*x4564);
IkReal x4573=((1.0)*x4565);
evalcond[0]=((((-1.0)*x4569*x4572))+((r22*x4565))+((r21*x4570)));
evalcond[1]=((((-1.0)*x4569*x4573))+((r21*x4571))+(((-1.0)*r22*x4572)));
evalcond[2]=(cj2+(((-1.0)*x4567*x4573))+((r11*x4571))+(((-1.0)*r12*x4572)));
evalcond[3]=(((r02*x4565))+(((-1.0)*x4568*x4572))+((r01*x4570))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x4567*x4572))+((r12*x4565))+((r11*x4570))+(((-1.0)*x4566)));
evalcond[5]=((((-1.0)*r02*x4572))+(((-1.0)*x4568*x4573))+((r01*x4571))+(((-1.0)*x4566)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4574=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x4574.valid){
continue;
}
CheckValue<IkReal> x4575 = IKatan2WithCheck(IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x4575.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4574.value)))+(x4575.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4576=IKcos(j5);
IkReal x4577=IKsin(j5);
IkReal x4578=((1.0)*sj2);
IkReal x4579=(cj6*r10);
IkReal x4580=(cj6*r00);
IkReal x4581=(cj6*r20);
IkReal x4582=(sj6*x4576);
IkReal x4583=(sj6*x4577);
IkReal x4584=((1.0)*x4576);
IkReal x4585=((1.0)*x4577);
evalcond[0]=(((r21*x4582))+((r22*x4577))+(((-1.0)*x4581*x4584)));
evalcond[1]=(((r21*x4583))+(((-1.0)*r22*x4584))+(((-1.0)*x4581*x4585)));
evalcond[2]=((((-1.0)*x4579*x4585))+cj2+((r11*x4583))+(((-1.0)*r12*x4584)));
evalcond[3]=((((-1.0)*x4580*x4584))+((r02*x4577))+((r01*x4582))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x4579*x4584))+(((-1.0)*x4578))+((r12*x4577))+((r11*x4582)));
evalcond[5]=((((-1.0)*x4578))+(((-1.0)*x4580*x4585))+(((-1.0)*r02*x4584))+((r01*x4583)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.52189136462044)*py))+(((-8.4050211434602)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((8.4050211434602)*py))+(((2.52189136462044)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.52189136462044)*py))+(((-8.4050211434602)*px))))+IKsqr(((((8.4050211434602)*py))+(((2.52189136462044)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.52189136462044)*py))+(((-8.4050211434602)*px))), ((((8.4050211434602)*py))+(((2.52189136462044)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x4586=IKcos(j2);
IkReal x4587=IKsin(j2);
evalcond[0]=((((-0.10915)*x4587))+(((-1.0)*px))+(((0.03275)*x4586)));
evalcond[1]=((((0.10915)*x4586))+(((-1.0)*py))+(((0.03275)*x4587)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=0;
sj1=0;
cj1=1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x4588=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x4588;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x4588);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=0;
sj1=0;
cj1=1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x4589=((1.0)*cj6);
IkReal x4590=((((-1.0)*r10*sj6))+(((-1.0)*r11*x4589)));
j5eval[0]=x4590;
j5eval[1]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*r20*x4589))+((cj2*r21*sj6))))));
j5eval[2]=IKsign(x4590);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=0;
sj1=0;
cj1=1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x4591=cj6*cj6;
IkReal x4592=(r21*sj6);
IkReal x4593=(cj6*r20);
IkReal x4594=(r01*r21);
IkReal x4595=((((-1.0)*r00*r20*x4591))+(((-1.0)*r02*r22))+((cj6*r00*x4592))+(((-1.0)*x4594))+((r01*sj6*x4593))+((x4591*x4594)));
j5eval[0]=x4595;
j5eval[1]=IKsign(x4595);
j5eval[2]=((IKabs((((cj2*x4592))+(((-1.0)*cj2*x4593)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4596=cj6*cj6;
IkReal x4597=(r21*sj6);
IkReal x4598=(cj6*r20);
IkReal x4599=(r01*r21);
CheckValue<IkReal> x4600 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*x4597))+(((-1.0)*cj2*x4598)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4600.valid){
continue;
}
CheckValue<IkReal> x4601=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*r20*x4596))+(((-1.0)*r02*r22))+((cj6*r00*x4597))+(((-1.0)*x4599))+((r01*sj6*x4598))+((x4596*x4599)))),-1);
if(!x4601.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4600.value)+(((1.5707963267949)*(x4601.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4602=IKcos(j5);
IkReal x4603=IKsin(j5);
IkReal x4604=(cj6*r00);
IkReal x4605=(cj6*r10);
IkReal x4606=(cj6*r20);
IkReal x4607=(sj6*x4602);
IkReal x4608=(sj6*x4603);
IkReal x4609=((1.0)*x4602);
IkReal x4610=((1.0)*x4603);
evalcond[0]=((((-1.0)*x4606*x4609))+((r21*x4607))+((r22*x4603)));
evalcond[1]=(((r21*x4608))+(((-1.0)*x4606*x4610))+(((-1.0)*r22*x4609)));
evalcond[2]=(cj2+((r01*x4607))+((r02*x4603))+(((-1.0)*x4604*x4609)));
evalcond[3]=(((r11*x4607))+sj2+((r12*x4603))+(((-1.0)*x4605*x4609)));
evalcond[4]=(((r11*x4608))+cj2+(((-1.0)*r12*x4609))+(((-1.0)*x4605*x4610)));
evalcond[5]=((((-1.0)*sj2))+((r01*x4608))+(((-1.0)*r02*x4609))+(((-1.0)*x4604*x4610)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4611=((1.0)*cj6);
CheckValue<IkReal> x4612=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x4611)))),-1);
if(!x4612.valid){
continue;
}
CheckValue<IkReal> x4613 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r20*x4611))+((cj2*r21*sj6)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x4613.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4612.value)))+(x4613.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4614=IKcos(j5);
IkReal x4615=IKsin(j5);
IkReal x4616=(cj6*r00);
IkReal x4617=(cj6*r10);
IkReal x4618=(cj6*r20);
IkReal x4619=(sj6*x4614);
IkReal x4620=(sj6*x4615);
IkReal x4621=((1.0)*x4614);
IkReal x4622=((1.0)*x4615);
evalcond[0]=(((r21*x4619))+(((-1.0)*x4618*x4621))+((r22*x4615)));
evalcond[1]=((((-1.0)*x4618*x4622))+(((-1.0)*r22*x4621))+((r21*x4620)));
evalcond[2]=(cj2+((r02*x4615))+((r01*x4619))+(((-1.0)*x4616*x4621)));
evalcond[3]=(sj2+((r12*x4615))+((r11*x4619))+(((-1.0)*x4617*x4621)));
evalcond[4]=(cj2+((r11*x4620))+(((-1.0)*r12*x4621))+(((-1.0)*x4617*x4622)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x4621))+(((-1.0)*x4616*x4622))+((r01*x4620)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4623=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x4623.valid){
continue;
}
CheckValue<IkReal> x4624 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x4624.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4623.value)))+(x4624.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4625=IKcos(j5);
IkReal x4626=IKsin(j5);
IkReal x4627=(cj6*r00);
IkReal x4628=(cj6*r10);
IkReal x4629=(cj6*r20);
IkReal x4630=(sj6*x4625);
IkReal x4631=(sj6*x4626);
IkReal x4632=((1.0)*x4625);
IkReal x4633=((1.0)*x4626);
evalcond[0]=(((r21*x4630))+((r22*x4626))+(((-1.0)*x4629*x4632)));
evalcond[1]=(((r21*x4631))+(((-1.0)*x4629*x4633))+(((-1.0)*r22*x4632)));
evalcond[2]=(((r01*x4630))+cj2+((r02*x4626))+(((-1.0)*x4627*x4632)));
evalcond[3]=(((r12*x4626))+sj2+((r11*x4630))+(((-1.0)*x4628*x4632)));
evalcond[4]=(cj2+((r11*x4631))+(((-1.0)*x4628*x4633))+(((-1.0)*r12*x4632)));
evalcond[5]=(((r01*x4631))+(((-1.0)*sj2))+(((-1.0)*r02*x4632))+(((-1.0)*x4627*x4633)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs((((r10*sj6))+((cj6*r11)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*sj6))+((cj6*r01)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*sj6))+((cj6*r11))))+IKsqr((((r00*sj6))+((cj6*r01))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r10*sj6))+((cj6*r11))), (((r00*sj6))+((cj6*r01))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x4634=IKsin(j2);
IkReal x4635=IKcos(j2);
IkReal x4636=(cj6*r11);
IkReal x4637=(cj6*r01);
IkReal x4638=((0.09465)*sj6);
evalcond[0]=(((r00*sj6))+(((-1.0)*x4635))+x4637);
evalcond[1]=((((-1.0)*x4634))+((r10*sj6))+x4636);
evalcond[2]=((((-0.09465)*x4637))+(((-0.10915)*x4634))+(((-1.0)*px))+(((-1.0)*r00*x4638)));
evalcond[3]=((((-0.09465)*x4636))+(((-1.0)*py))+(((-1.0)*r10*x4638))+(((0.10915)*x4635)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4639=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x4639;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x4639);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4640=((1.0)*cj6);
IkReal x4641=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4640)));
j5eval[0]=x4641;
j5eval[1]=IKsign(x4641);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*r10*x4640))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4642=cj6*cj6;
IkReal x4643=(r01*r11);
IkReal x4644=(r01*sj6);
IkReal x4645=(cj6*r00);
IkReal x4646=((((-1.0)*r00*r10*x4642))+(((-1.0)*r02*r12))+((cj6*r10*x4644))+(((-1.0)*x4643))+((x4642*x4643))+((r11*sj6*x4645)));
j5eval[0]=x4646;
j5eval[1]=((IKabs((((cj2*x4644))+(((-1.0)*cj2*x4645)))))+(IKabs((cj2*r02))));
j5eval[2]=IKsign(x4646);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4647=cj6*cj6;
IkReal x4648=(r01*r11);
IkReal x4649=(r01*sj6);
IkReal x4650=(cj6*r00);
CheckValue<IkReal> x4651 = IKatan2WithCheck(IkReal((((cj2*x4649))+(((-1.0)*cj2*x4650)))),IkReal(((-1.0)*cj2*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x4651.valid){
continue;
}
CheckValue<IkReal> x4652=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*r10*x4647))+((r11*sj6*x4650))+(((-1.0)*r02*r12))+((cj6*r10*x4649))+(((-1.0)*x4648))+((x4647*x4648)))),-1);
if(!x4652.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4651.value)+(((1.5707963267949)*(x4652.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4653=IKcos(j5);
IkReal x4654=IKsin(j5);
IkReal x4655=(cj6*r00);
IkReal x4656=(cj6*r10);
IkReal x4657=(cj6*r20);
IkReal x4658=(sj6*x4653);
IkReal x4659=(sj6*x4654);
IkReal x4660=((1.0)*x4653);
IkReal x4661=((1.0)*x4654);
evalcond[0]=(((r02*x4654))+((r01*x4658))+(((-1.0)*x4655*x4660)));
evalcond[1]=(((r12*x4654))+(((-1.0)*x4656*x4660))+((r11*x4658)));
evalcond[2]=((((-1.0)*r22*x4660))+((r21*x4659))+(((-1.0)*x4657*x4661)));
evalcond[3]=((1.0)+((r22*x4654))+((r21*x4658))+(((-1.0)*x4657*x4660)));
evalcond[4]=((((-1.0)*x4656*x4661))+((r11*x4659))+cj2+(((-1.0)*r12*x4660)));
evalcond[5]=((((-1.0)*sj2))+((r01*x4659))+(((-1.0)*x4655*x4661))+(((-1.0)*r02*x4660)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4662=((1.0)*cj6);
CheckValue<IkReal> x4663=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x4662)))),-1);
if(!x4663.valid){
continue;
}
CheckValue<IkReal> x4664 = IKatan2WithCheck(IkReal(((((-1.0)*r10*x4662))+((r11*sj6)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x4664.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4663.value)))+(x4664.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4665=IKcos(j5);
IkReal x4666=IKsin(j5);
IkReal x4667=(cj6*r00);
IkReal x4668=(cj6*r10);
IkReal x4669=(cj6*r20);
IkReal x4670=(sj6*x4665);
IkReal x4671=(sj6*x4666);
IkReal x4672=((1.0)*x4665);
IkReal x4673=((1.0)*x4666);
evalcond[0]=(((r02*x4666))+(((-1.0)*x4667*x4672))+((r01*x4670)));
evalcond[1]=(((r12*x4666))+((r11*x4670))+(((-1.0)*x4668*x4672)));
evalcond[2]=(((r21*x4671))+(((-1.0)*r22*x4672))+(((-1.0)*x4669*x4673)));
evalcond[3]=((1.0)+((r21*x4670))+((r22*x4666))+(((-1.0)*x4669*x4672)));
evalcond[4]=(cj2+((r11*x4671))+(((-1.0)*r12*x4672))+(((-1.0)*x4668*x4673)));
evalcond[5]=((((-1.0)*r02*x4672))+(((-1.0)*sj2))+(((-1.0)*x4667*x4673))+((r01*x4671)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4674 = IKatan2WithCheck(IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x4674.valid){
continue;
}
CheckValue<IkReal> x4675=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x4675.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4674.value)+(((1.5707963267949)*(x4675.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4676=IKcos(j5);
IkReal x4677=IKsin(j5);
IkReal x4678=(cj6*r00);
IkReal x4679=(cj6*r10);
IkReal x4680=(cj6*r20);
IkReal x4681=(sj6*x4676);
IkReal x4682=(sj6*x4677);
IkReal x4683=((1.0)*x4676);
IkReal x4684=((1.0)*x4677);
evalcond[0]=(((r02*x4677))+((r01*x4681))+(((-1.0)*x4678*x4683)));
evalcond[1]=((((-1.0)*x4679*x4683))+((r12*x4677))+((r11*x4681)));
evalcond[2]=((((-1.0)*x4680*x4684))+((r21*x4682))+(((-1.0)*r22*x4683)));
evalcond[3]=((1.0)+(((-1.0)*x4680*x4683))+((r22*x4677))+((r21*x4681)));
evalcond[4]=((((-1.0)*x4679*x4684))+cj2+((r11*x4682))+(((-1.0)*r12*x4683)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x4683))+((r01*x4682))+(((-1.0)*x4678*x4684)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-0.658427386453172)*px))+(((-2.36617629259053)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.658427386453172)*py))+(((-2.36617629259053)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.658427386453172)*px))+(((-2.36617629259053)*py))))+IKsqr(((((0.658427386453172)*py))+(((-2.36617629259053)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-0.658427386453172)*px))+(((-2.36617629259053)*py))), ((((0.658427386453172)*py))+(((-2.36617629259053)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x4685=IKcos(j2);
IkReal x4686=IKsin(j2);
evalcond[0]=((((-1.0)*px))+(((-0.39225)*x4685))+(((-0.10915)*x4686)));
evalcond[1]=((((0.10915)*x4685))+(((-1.0)*py))+(((-0.39225)*x4686)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x4687=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x4687;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x4687);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x4688=((1.0)*cj6);
IkReal x4689=((((-1.0)*r11*x4688))+(((-1.0)*r10*sj6)));
j5eval[0]=x4689;
j5eval[1]=((IKabs(((((-1.0)*cj2*r20*x4688))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x4689);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x4690=cj6*cj6;
IkReal x4691=(r21*sj6);
IkReal x4692=(cj6*r20);
IkReal x4693=(r01*r21);
IkReal x4694=((((-1.0)*r02*r22))+((x4690*x4693))+(((-1.0)*r00*r20*x4690))+((cj6*r00*x4691))+(((-1.0)*x4693))+((r01*sj6*x4692)));
j5eval[0]=x4694;
j5eval[1]=IKsign(x4694);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*x4692))+((cj2*x4691))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4695=cj6*cj6;
IkReal x4696=(r21*sj6);
IkReal x4697=(cj6*r20);
IkReal x4698=(r01*r21);
CheckValue<IkReal> x4699 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*x4697))+((cj2*x4696)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4699.valid){
continue;
}
CheckValue<IkReal> x4700=IKPowWithIntegerCheck(IKsign(((((-1.0)*r02*r22))+(((-1.0)*r00*r20*x4695))+((x4695*x4698))+((cj6*r00*x4696))+(((-1.0)*x4698))+((r01*sj6*x4697)))),-1);
if(!x4700.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4699.value)+(((1.5707963267949)*(x4700.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4701=IKcos(j5);
IkReal x4702=IKsin(j5);
IkReal x4703=(cj6*r00);
IkReal x4704=(cj6*r10);
IkReal x4705=(cj6*r20);
IkReal x4706=(sj6*x4701);
IkReal x4707=(sj6*x4702);
IkReal x4708=((1.0)*x4701);
IkReal x4709=((1.0)*x4702);
evalcond[0]=(((r21*x4706))+(((-1.0)*x4705*x4708))+((r22*x4702)));
evalcond[1]=((((-1.0)*r22*x4708))+((r21*x4707))+(((-1.0)*x4705*x4709)));
evalcond[2]=(cj2+(((-1.0)*x4703*x4708))+((r01*x4706))+((r02*x4702)));
evalcond[3]=(sj2+(((-1.0)*x4704*x4708))+((r11*x4706))+((r12*x4702)));
evalcond[4]=(cj2+(((-1.0)*r12*x4708))+(((-1.0)*x4704*x4709))+((r11*x4707)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x4708))+(((-1.0)*x4703*x4709))+((r01*x4707)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4710=((1.0)*cj6);
CheckValue<IkReal> x4711=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x4710)))),-1);
if(!x4711.valid){
continue;
}
CheckValue<IkReal> x4712 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r20*x4710))+((cj2*r21*sj6)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x4712.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4711.value)))+(x4712.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4713=IKcos(j5);
IkReal x4714=IKsin(j5);
IkReal x4715=(cj6*r00);
IkReal x4716=(cj6*r10);
IkReal x4717=(cj6*r20);
IkReal x4718=(sj6*x4713);
IkReal x4719=(sj6*x4714);
IkReal x4720=((1.0)*x4713);
IkReal x4721=((1.0)*x4714);
evalcond[0]=(((r22*x4714))+((r21*x4718))+(((-1.0)*x4717*x4720)));
evalcond[1]=(((r21*x4719))+(((-1.0)*x4717*x4721))+(((-1.0)*r22*x4720)));
evalcond[2]=(cj2+(((-1.0)*x4715*x4720))+((r01*x4718))+((r02*x4714)));
evalcond[3]=(sj2+(((-1.0)*x4716*x4720))+((r12*x4714))+((r11*x4718)));
evalcond[4]=(cj2+(((-1.0)*x4716*x4721))+(((-1.0)*r12*x4720))+((r11*x4719)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*x4715*x4721))+((r01*x4719))+(((-1.0)*r02*x4720)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4722=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x4722.valid){
continue;
}
CheckValue<IkReal> x4723 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x4723.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4722.value)))+(x4723.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4724=IKcos(j5);
IkReal x4725=IKsin(j5);
IkReal x4726=(cj6*r00);
IkReal x4727=(cj6*r10);
IkReal x4728=(cj6*r20);
IkReal x4729=(sj6*x4724);
IkReal x4730=(sj6*x4725);
IkReal x4731=((1.0)*x4724);
IkReal x4732=((1.0)*x4725);
evalcond[0]=((((-1.0)*x4728*x4731))+((r21*x4729))+((r22*x4725)));
evalcond[1]=((((-1.0)*x4728*x4732))+((r21*x4730))+(((-1.0)*r22*x4731)));
evalcond[2]=(cj2+((r02*x4725))+(((-1.0)*x4726*x4731))+((r01*x4729)));
evalcond[3]=(((r11*x4729))+sj2+(((-1.0)*x4727*x4731))+((r12*x4725)));
evalcond[4]=(((r11*x4730))+cj2+(((-1.0)*r12*x4731))+(((-1.0)*x4727*x4732)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*x4726*x4732))+((r01*x4730))+(((-1.0)*r02*x4731)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4733=((1.0)*sj6);
IkReal x4734=((1.0)*cj6);
if( IKabs(((((-1.0)*r10*x4733))+(((-1.0)*r11*x4734)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x4734))+(((-1.0)*r00*x4733)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*x4733))+(((-1.0)*r11*x4734))))+IKsqr(((((-1.0)*r01*x4734))+(((-1.0)*r00*x4733))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r10*x4733))+(((-1.0)*r11*x4734))), ((((-1.0)*r01*x4734))+(((-1.0)*r00*x4733))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x4735=IKsin(j2);
IkReal x4736=IKcos(j2);
IkReal x4737=((0.09465)*sj6);
IkReal x4738=((0.09465)*cj6);
evalcond[0]=(((r00*sj6))+x4736+((cj6*r01)));
evalcond[1]=(((r10*sj6))+x4735+((cj6*r11)));
evalcond[2]=((((-1.0)*r01*x4738))+(((-0.10915)*x4735))+(((-1.0)*px))+(((-1.0)*r00*x4737)));
evalcond[3]=((((-1.0)*r10*x4737))+(((-1.0)*r11*x4738))+(((0.10915)*x4736))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x4739=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x4739;
j5eval[1]=IKsign(x4739);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x4740=((1.0)*cj6);
IkReal x4741=((((-1.0)*r11*x4740))+(((-1.0)*r10*sj6)));
j5eval[0]=x4741;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x4740))))));
j5eval[2]=IKsign(x4741);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x4742=cj6*cj6;
IkReal x4743=(r01*r11);
IkReal x4744=(r01*sj6);
IkReal x4745=(cj6*r00);
IkReal x4746=(((x4742*x4743))+(((-1.0)*r02*r12))+(((-1.0)*r00*r10*x4742))+((cj6*r10*x4744))+((r11*sj6*x4745))+(((-1.0)*x4743)));
j5eval[0]=x4746;
j5eval[1]=((IKabs((cj2*r02)))+(IKabs((((cj2*x4744))+(((-1.0)*cj2*x4745))))));
j5eval[2]=IKsign(x4746);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4747=cj6*cj6;
IkReal x4748=(r01*r11);
IkReal x4749=(r01*sj6);
IkReal x4750=(cj6*r00);
CheckValue<IkReal> x4751=IKPowWithIntegerCheck(IKsign((((r11*sj6*x4750))+(((-1.0)*r02*r12))+((x4747*x4748))+(((-1.0)*r00*r10*x4747))+((cj6*r10*x4749))+(((-1.0)*x4748)))),-1);
if(!x4751.valid){
continue;
}
CheckValue<IkReal> x4752 = IKatan2WithCheck(IkReal((((cj2*x4749))+(((-1.0)*cj2*x4750)))),IkReal(((-1.0)*cj2*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x4752.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4751.value)))+(x4752.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4753=IKcos(j5);
IkReal x4754=IKsin(j5);
IkReal x4755=(cj6*r00);
IkReal x4756=(cj6*r10);
IkReal x4757=(cj6*r20);
IkReal x4758=(sj6*x4753);
IkReal x4759=(sj6*x4754);
IkReal x4760=((1.0)*x4753);
IkReal x4761=((1.0)*x4754);
evalcond[0]=(((r01*x4758))+(((-1.0)*x4755*x4760))+((r02*x4754)));
evalcond[1]=(((r12*x4754))+((r11*x4758))+(((-1.0)*x4756*x4760)));
evalcond[2]=((((-1.0)*r22*x4760))+(((-1.0)*x4757*x4761))+((r21*x4759)));
evalcond[3]=((-1.0)+(((-1.0)*x4757*x4760))+((r21*x4758))+((r22*x4754)));
evalcond[4]=(cj2+((r11*x4759))+(((-1.0)*x4756*x4761))+(((-1.0)*r12*x4760)));
evalcond[5]=(((r01*x4759))+(((-1.0)*sj2))+(((-1.0)*r02*x4760))+(((-1.0)*x4755*x4761)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4762=((1.0)*cj6);
CheckValue<IkReal> x4763=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x4762)))),-1);
if(!x4763.valid){
continue;
}
CheckValue<IkReal> x4764 = IKatan2WithCheck(IkReal((((r01*sj6))+(((-1.0)*r00*x4762)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x4764.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4763.value)))+(x4764.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4765=IKcos(j5);
IkReal x4766=IKsin(j5);
IkReal x4767=(cj6*r00);
IkReal x4768=(cj6*r10);
IkReal x4769=(cj6*r20);
IkReal x4770=(sj6*x4765);
IkReal x4771=(sj6*x4766);
IkReal x4772=((1.0)*x4765);
IkReal x4773=((1.0)*x4766);
evalcond[0]=(((r02*x4766))+((r01*x4770))+(((-1.0)*x4767*x4772)));
evalcond[1]=(((r11*x4770))+((r12*x4766))+(((-1.0)*x4768*x4772)));
evalcond[2]=((((-1.0)*x4769*x4773))+(((-1.0)*r22*x4772))+((r21*x4771)));
evalcond[3]=((-1.0)+((r22*x4766))+(((-1.0)*x4769*x4772))+((r21*x4770)));
evalcond[4]=(((r11*x4771))+cj2+(((-1.0)*r12*x4772))+(((-1.0)*x4768*x4773)));
evalcond[5]=((((-1.0)*sj2))+((r01*x4771))+(((-1.0)*x4767*x4773))+(((-1.0)*r02*x4772)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4774=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x4774.valid){
continue;
}
CheckValue<IkReal> x4775 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x4775.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4774.value)))+(x4775.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4776=IKcos(j5);
IkReal x4777=IKsin(j5);
IkReal x4778=(cj6*r00);
IkReal x4779=(cj6*r10);
IkReal x4780=(cj6*r20);
IkReal x4781=(sj6*x4776);
IkReal x4782=(sj6*x4777);
IkReal x4783=((1.0)*x4776);
IkReal x4784=((1.0)*x4777);
evalcond[0]=(((r01*x4781))+((r02*x4777))+(((-1.0)*x4778*x4783)));
evalcond[1]=((((-1.0)*x4779*x4783))+((r12*x4777))+((r11*x4781)));
evalcond[2]=((((-1.0)*r22*x4783))+(((-1.0)*x4780*x4784))+((r21*x4782)));
evalcond[3]=((-1.0)+((r22*x4777))+(((-1.0)*x4780*x4783))+((r21*x4781)));
evalcond[4]=((((-1.0)*x4779*x4784))+cj2+((r11*x4782))+(((-1.0)*r12*x4783)));
evalcond[5]=((((-1.0)*sj2))+((r01*x4782))+(((-1.0)*r02*x4783))+(((-1.0)*x4778*x4784)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.36617629259053)*py))+(((-0.658427386453172)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.658427386453172)*py))+(((2.36617629259053)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.36617629259053)*py))+(((-0.658427386453172)*px))))+IKsqr(((((0.658427386453172)*py))+(((2.36617629259053)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.36617629259053)*py))+(((-0.658427386453172)*px))), ((((0.658427386453172)*py))+(((2.36617629259053)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x4785=IKcos(j2);
IkReal x4786=IKsin(j2);
evalcond[0]=((((0.39225)*x4785))+(((-1.0)*px))+(((-0.10915)*x4786)));
evalcond[1]=((((0.39225)*x4786))+(((-1.0)*py))+(((0.10915)*x4785)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x4787=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x4787;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x4787);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x4788=((1.0)*cj6);
IkReal x4789=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4788)));
j5eval[0]=x4789;
j5eval[1]=IKsign(x4789);
j5eval[2]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x4788)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x4790=((1.0)*cj6);
IkReal x4791=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4790)));
j5eval[0]=x4791;
j5eval[1]=((IKabs((r22*sj2)))+(IKabs((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x4790))))));
j5eval[2]=IKsign(x4791);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4792=((1.0)*cj6);
CheckValue<IkReal> x4793 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x4792)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x4793.valid){
continue;
}
CheckValue<IkReal> x4794=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x4792)))),-1);
if(!x4794.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4793.value)+(((1.5707963267949)*(x4794.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4795=IKcos(j5);
IkReal x4796=IKsin(j5);
IkReal x4797=((1.0)*sj2);
IkReal x4798=(cj6*r10);
IkReal x4799=(cj6*r00);
IkReal x4800=(cj6*r20);
IkReal x4801=(sj6*x4795);
IkReal x4802=(sj6*x4796);
IkReal x4803=((1.0)*x4795);
IkReal x4804=((1.0)*x4796);
evalcond[0]=((((-1.0)*x4800*x4803))+((r21*x4801))+((r22*x4796)));
evalcond[1]=((((-1.0)*r22*x4803))+(((-1.0)*x4800*x4804))+((r21*x4802)));
evalcond[2]=(cj2+(((-1.0)*x4798*x4804))+(((-1.0)*r12*x4803))+((r11*x4802)));
evalcond[3]=(((r01*x4801))+(((-1.0)*x4799*x4803))+((r02*x4796))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x4797))+(((-1.0)*x4798*x4803))+((r12*x4796))+((r11*x4801)));
evalcond[5]=(((r01*x4802))+(((-1.0)*x4799*x4804))+(((-1.0)*x4797))+(((-1.0)*r02*x4803)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4805=((1.0)*cj6);
CheckValue<IkReal> x4806 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x4805))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4806.valid){
continue;
}
CheckValue<IkReal> x4807=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x4805)))),-1);
if(!x4807.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4806.value)+(((1.5707963267949)*(x4807.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4808=IKcos(j5);
IkReal x4809=IKsin(j5);
IkReal x4810=((1.0)*sj2);
IkReal x4811=(cj6*r10);
IkReal x4812=(cj6*r00);
IkReal x4813=(cj6*r20);
IkReal x4814=(sj6*x4808);
IkReal x4815=(sj6*x4809);
IkReal x4816=((1.0)*x4808);
IkReal x4817=((1.0)*x4809);
evalcond[0]=(((r21*x4814))+(((-1.0)*x4813*x4816))+((r22*x4809)));
evalcond[1]=(((r21*x4815))+(((-1.0)*r22*x4816))+(((-1.0)*x4813*x4817)));
evalcond[2]=((((-1.0)*x4811*x4817))+cj2+((r11*x4815))+(((-1.0)*r12*x4816)));
evalcond[3]=(((r02*x4809))+(((-1.0)*cj2))+(((-1.0)*x4812*x4816))+((r01*x4814)));
evalcond[4]=((((-1.0)*x4811*x4816))+((r11*x4814))+(((-1.0)*x4810))+((r12*x4809)));
evalcond[5]=((((-1.0)*x4810))+(((-1.0)*r02*x4816))+(((-1.0)*x4812*x4817))+((r01*x4815)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4818=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x4818.valid){
continue;
}
CheckValue<IkReal> x4819 = IKatan2WithCheck(IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x4819.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4818.value)))+(x4819.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4820=IKcos(j5);
IkReal x4821=IKsin(j5);
IkReal x4822=((1.0)*sj2);
IkReal x4823=(cj6*r10);
IkReal x4824=(cj6*r00);
IkReal x4825=(cj6*r20);
IkReal x4826=(sj6*x4820);
IkReal x4827=(sj6*x4821);
IkReal x4828=((1.0)*x4820);
IkReal x4829=((1.0)*x4821);
evalcond[0]=(((r22*x4821))+((r21*x4826))+(((-1.0)*x4825*x4828)));
evalcond[1]=(((r21*x4827))+(((-1.0)*r22*x4828))+(((-1.0)*x4825*x4829)));
evalcond[2]=(cj2+(((-1.0)*x4823*x4829))+((r11*x4827))+(((-1.0)*r12*x4828)));
evalcond[3]=(((r02*x4821))+(((-1.0)*x4824*x4828))+((r01*x4826))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x4822))+(((-1.0)*x4823*x4828))+((r11*x4826))+((r12*x4821)));
evalcond[5]=((((-1.0)*x4822))+(((-1.0)*r02*x4828))+(((-1.0)*x4824*x4829))+((r01*x4827)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-0.160559264620033)*px))+(((-1.20217186450501)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.160559264620033)*py))+(((-1.20217186450501)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.160559264620033)*px))+(((-1.20217186450501)*py))))+IKsqr(((((0.160559264620033)*py))+(((-1.20217186450501)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-0.160559264620033)*px))+(((-1.20217186450501)*py))), ((((0.160559264620033)*py))+(((-1.20217186450501)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x4830=IKcos(j2);
IkReal x4831=IKsin(j2);
evalcond[0]=((((-0.81725)*x4830))+(((-0.10915)*x4831))+(((-1.0)*px)));
evalcond[1]=((((-0.81725)*x4831))+(((-1.0)*py))+(((0.10915)*x4830)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4832=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x4832;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x4832);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4833=((1.0)*cj6);
IkReal x4834=((((-1.0)*r10*sj6))+(((-1.0)*r11*x4833)));
j5eval[0]=x4834;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x4833)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x4834);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4835=cj6*cj6;
IkReal x4836=(r21*sj6);
IkReal x4837=(cj6*r20);
IkReal x4838=(r01*r21);
IkReal x4839=((((-1.0)*r02*r22))+((cj6*r00*x4836))+((r01*sj6*x4837))+(((-1.0)*r00*r20*x4835))+(((-1.0)*x4838))+((x4835*x4838)));
j5eval[0]=x4839;
j5eval[1]=IKsign(x4839);
j5eval[2]=((IKabs(((((-1.0)*cj2*x4837))+((cj2*x4836)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4840=cj6*cj6;
IkReal x4841=(r21*sj6);
IkReal x4842=(cj6*r20);
IkReal x4843=(r01*r21);
CheckValue<IkReal> x4844 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*x4842))+((cj2*x4841)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4844.valid){
continue;
}
CheckValue<IkReal> x4845=IKPowWithIntegerCheck(IKsign(((((-1.0)*r02*r22))+((r01*sj6*x4842))+((x4840*x4843))+(((-1.0)*r00*r20*x4840))+((cj6*r00*x4841))+(((-1.0)*x4843)))),-1);
if(!x4845.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4844.value)+(((1.5707963267949)*(x4845.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4846=IKcos(j5);
IkReal x4847=IKsin(j5);
IkReal x4848=(cj6*r00);
IkReal x4849=(cj6*r10);
IkReal x4850=(cj6*r20);
IkReal x4851=(sj6*x4846);
IkReal x4852=(sj6*x4847);
IkReal x4853=((1.0)*x4846);
IkReal x4854=((1.0)*x4847);
evalcond[0]=(((r21*x4851))+((r22*x4847))+(((-1.0)*x4850*x4853)));
evalcond[1]=(((r21*x4852))+(((-1.0)*r22*x4853))+(((-1.0)*x4850*x4854)));
evalcond[2]=(((r02*x4847))+((r01*x4851))+cj2+(((-1.0)*x4848*x4853)));
evalcond[3]=(sj2+((r12*x4847))+(((-1.0)*x4849*x4853))+((r11*x4851)));
evalcond[4]=(cj2+(((-1.0)*r12*x4853))+(((-1.0)*x4849*x4854))+((r11*x4852)));
evalcond[5]=((((-1.0)*sj2))+((r01*x4852))+(((-1.0)*r02*x4853))+(((-1.0)*x4848*x4854)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4855=((1.0)*cj6);
CheckValue<IkReal> x4856 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r20*x4855))+((cj2*r21*sj6)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x4856.valid){
continue;
}
CheckValue<IkReal> x4857=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x4855)))),-1);
if(!x4857.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4856.value)+(((1.5707963267949)*(x4857.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4858=IKcos(j5);
IkReal x4859=IKsin(j5);
IkReal x4860=(cj6*r00);
IkReal x4861=(cj6*r10);
IkReal x4862=(cj6*r20);
IkReal x4863=(sj6*x4858);
IkReal x4864=(sj6*x4859);
IkReal x4865=((1.0)*x4858);
IkReal x4866=((1.0)*x4859);
evalcond[0]=((((-1.0)*x4862*x4865))+((r22*x4859))+((r21*x4863)));
evalcond[1]=((((-1.0)*x4862*x4866))+(((-1.0)*r22*x4865))+((r21*x4864)));
evalcond[2]=(((r01*x4863))+cj2+((r02*x4859))+(((-1.0)*x4860*x4865)));
evalcond[3]=(((r11*x4863))+sj2+((r12*x4859))+(((-1.0)*x4861*x4865)));
evalcond[4]=(((r11*x4864))+cj2+(((-1.0)*r12*x4865))+(((-1.0)*x4861*x4866)));
evalcond[5]=(((r01*x4864))+(((-1.0)*sj2))+(((-1.0)*r02*x4865))+(((-1.0)*x4860*x4866)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4867=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x4867.valid){
continue;
}
CheckValue<IkReal> x4868 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x4868.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4867.value)))+(x4868.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4869=IKcos(j5);
IkReal x4870=IKsin(j5);
IkReal x4871=(cj6*r00);
IkReal x4872=(cj6*r10);
IkReal x4873=(cj6*r20);
IkReal x4874=(sj6*x4869);
IkReal x4875=(sj6*x4870);
IkReal x4876=((1.0)*x4869);
IkReal x4877=((1.0)*x4870);
evalcond[0]=(((r21*x4874))+((r22*x4870))+(((-1.0)*x4873*x4876)));
evalcond[1]=((((-1.0)*r22*x4876))+((r21*x4875))+(((-1.0)*x4873*x4877)));
evalcond[2]=(((r02*x4870))+cj2+((r01*x4874))+(((-1.0)*x4871*x4876)));
evalcond[3]=(sj2+((r12*x4870))+((r11*x4874))+(((-1.0)*x4872*x4876)));
evalcond[4]=(cj2+(((-1.0)*r12*x4876))+((r11*x4875))+(((-1.0)*x4872*x4877)));
evalcond[5]=((((-1.0)*sj2))+((r01*x4875))+(((-1.0)*x4871*x4877))+(((-1.0)*r02*x4876)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-2.52189136462044)*py))+(((-8.4050211434602)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((8.4050211434602)*py))+(((-2.52189136462044)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.52189136462044)*py))+(((-8.4050211434602)*px))))+IKsqr(((((8.4050211434602)*py))+(((-2.52189136462044)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-2.52189136462044)*py))+(((-8.4050211434602)*px))), ((((8.4050211434602)*py))+(((-2.52189136462044)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x4878=IKcos(j2);
IkReal x4879=IKsin(j2);
evalcond[0]=((((-1.0)*px))+(((-0.03275)*x4878))+(((-0.10915)*x4879)));
evalcond[1]=((((0.10915)*x4878))+(((-1.0)*py))+(((-0.03275)*x4879)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x4880=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x4880;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x4880);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x4881=((1.0)*cj6);
IkReal x4882=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4881)));
j5eval[0]=x4882;
j5eval[1]=IKsign(x4882);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x4881))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x4883=((1.0)*cj6);
IkReal x4884=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4883)));
j5eval[0]=x4884;
j5eval[1]=((IKabs((r22*sj2)))+(IKabs(((((-1.0)*r20*sj2*x4883))+((r21*sj2*sj6))))));
j5eval[2]=IKsign(x4884);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4885=((1.0)*cj6);
CheckValue<IkReal> x4886 = IKatan2WithCheck(IkReal(((((-1.0)*r20*sj2*x4885))+((r21*sj2*sj6)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x4886.valid){
continue;
}
CheckValue<IkReal> x4887=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x4885)))),-1);
if(!x4887.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4886.value)+(((1.5707963267949)*(x4887.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4888=IKcos(j5);
IkReal x4889=IKsin(j5);
IkReal x4890=((1.0)*sj2);
IkReal x4891=(cj6*r10);
IkReal x4892=(cj6*r00);
IkReal x4893=(cj6*r20);
IkReal x4894=(sj6*x4888);
IkReal x4895=(sj6*x4889);
IkReal x4896=((1.0)*x4888);
IkReal x4897=((1.0)*x4889);
evalcond[0]=(((r21*x4894))+(((-1.0)*x4893*x4896))+((r22*x4889)));
evalcond[1]=(((r21*x4895))+(((-1.0)*x4893*x4897))+(((-1.0)*r22*x4896)));
evalcond[2]=(((r11*x4895))+(((-1.0)*r12*x4896))+cj2+(((-1.0)*x4891*x4897)));
evalcond[3]=(((r02*x4889))+(((-1.0)*x4892*x4896))+((r01*x4894))+(((-1.0)*cj2)));
evalcond[4]=(((r11*x4894))+(((-1.0)*x4890))+((r12*x4889))+(((-1.0)*x4891*x4896)));
evalcond[5]=((((-1.0)*x4890))+(((-1.0)*r02*x4896))+(((-1.0)*x4892*x4897))+((r01*x4895)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4898=((1.0)*cj6);
CheckValue<IkReal> x4899 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x4898)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4899.valid){
continue;
}
CheckValue<IkReal> x4900=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x4898))+(((-1.0)*r00*sj6)))),-1);
if(!x4900.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4899.value)+(((1.5707963267949)*(x4900.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4901=IKcos(j5);
IkReal x4902=IKsin(j5);
IkReal x4903=((1.0)*sj2);
IkReal x4904=(cj6*r10);
IkReal x4905=(cj6*r00);
IkReal x4906=(cj6*r20);
IkReal x4907=(sj6*x4901);
IkReal x4908=(sj6*x4902);
IkReal x4909=((1.0)*x4901);
IkReal x4910=((1.0)*x4902);
evalcond[0]=(((r21*x4907))+(((-1.0)*x4906*x4909))+((r22*x4902)));
evalcond[1]=(((r21*x4908))+(((-1.0)*x4906*x4910))+(((-1.0)*r22*x4909)));
evalcond[2]=((((-1.0)*r12*x4909))+cj2+(((-1.0)*x4904*x4910))+((r11*x4908)));
evalcond[3]=(((r02*x4902))+(((-1.0)*x4905*x4909))+((r01*x4907))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x4903))+(((-1.0)*x4904*x4909))+((r11*x4907))+((r12*x4902)));
evalcond[5]=((((-1.0)*x4903))+(((-1.0)*x4905*x4910))+(((-1.0)*r02*x4909))+((r01*x4908)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4911=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x4911.valid){
continue;
}
CheckValue<IkReal> x4912 = IKatan2WithCheck(IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x4912.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4911.value)))+(x4912.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4913=IKcos(j5);
IkReal x4914=IKsin(j5);
IkReal x4915=((1.0)*sj2);
IkReal x4916=(cj6*r10);
IkReal x4917=(cj6*r00);
IkReal x4918=(cj6*r20);
IkReal x4919=(sj6*x4913);
IkReal x4920=(sj6*x4914);
IkReal x4921=((1.0)*x4913);
IkReal x4922=((1.0)*x4914);
evalcond[0]=(((r21*x4919))+(((-1.0)*x4918*x4921))+((r22*x4914)));
evalcond[1]=((((-1.0)*x4918*x4922))+((r21*x4920))+(((-1.0)*r22*x4921)));
evalcond[2]=(cj2+(((-1.0)*x4916*x4922))+(((-1.0)*r12*x4921))+((r11*x4920)));
evalcond[3]=(((r02*x4914))+(((-1.0)*x4917*x4921))+((r01*x4919))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x4915))+(((-1.0)*x4916*x4921))+((r12*x4914))+((r11*x4919)));
evalcond[5]=((((-1.0)*r02*x4921))+(((-1.0)*x4915))+(((-1.0)*x4917*x4922))+((r01*x4920)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4923=((1.0)*sj6);
IkReal x4924=((1.0)*cj6);
if( IKabs(((((-1.0)*r11*x4924))+(((-1.0)*r10*x4923)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*x4924))+(((-1.0)*r00*x4923)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x4924))+(((-1.0)*r10*x4923))))+IKsqr(((((-1.0)*r01*x4924))+(((-1.0)*r00*x4923))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r11*x4924))+(((-1.0)*r10*x4923))), ((((-1.0)*r01*x4924))+(((-1.0)*r00*x4923))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x4925=IKsin(j2);
IkReal x4926=IKcos(j2);
IkReal x4927=((0.09465)*sj6);
IkReal x4928=((0.09465)*cj6);
evalcond[0]=(x4926+((r00*sj6))+((cj6*r01)));
evalcond[1]=(x4925+((r10*sj6))+((cj6*r11)));
evalcond[2]=((((-1.0)*r01*x4928))+(((-1.0)*r00*x4927))+(((-1.0)*px))+(((-0.10915)*x4925)));
evalcond[3]=((((0.10915)*x4926))+(((-1.0)*py))+(((-1.0)*r11*x4928))+(((-1.0)*r10*x4927)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4929=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x4929;
j5eval[1]=IKsign(x4929);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4930=((1.0)*cj6);
IkReal x4931=((((-1.0)*r10*sj6))+(((-1.0)*r11*x4930)));
j5eval[0]=x4931;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x4930))))));
j5eval[2]=IKsign(x4931);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x4932=cj6*cj6;
IkReal x4933=(r01*r11);
IkReal x4934=(r01*sj6);
IkReal x4935=(cj6*r00);
IkReal x4936=((((-1.0)*x4933))+((x4932*x4933))+(((-1.0)*r00*r10*x4932))+(((-1.0)*r02*r12))+((r11*sj6*x4935))+((cj6*r10*x4934)));
j5eval[0]=x4936;
j5eval[1]=((IKabs((cj2*r02)))+(IKabs(((((-1.0)*cj2*x4935))+((cj2*x4934))))));
j5eval[2]=IKsign(x4936);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4937=cj6*cj6;
IkReal x4938=(r01*r11);
IkReal x4939=(r01*sj6);
IkReal x4940=(cj6*r00);
CheckValue<IkReal> x4941 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*x4940))+((cj2*x4939)))),IkReal(((-1.0)*cj2*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x4941.valid){
continue;
}
CheckValue<IkReal> x4942=IKPowWithIntegerCheck(IKsign(((((-1.0)*x4938))+((x4937*x4938))+(((-1.0)*r00*r10*x4937))+(((-1.0)*r02*r12))+((r11*sj6*x4940))+((cj6*r10*x4939)))),-1);
if(!x4942.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4941.value)+(((1.5707963267949)*(x4942.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4943=IKcos(j5);
IkReal x4944=IKsin(j5);
IkReal x4945=(cj6*r00);
IkReal x4946=(cj6*r10);
IkReal x4947=(cj6*r20);
IkReal x4948=(sj6*x4943);
IkReal x4949=(sj6*x4944);
IkReal x4950=((1.0)*x4943);
IkReal x4951=((1.0)*x4944);
evalcond[0]=(((r01*x4948))+((r02*x4944))+(((-1.0)*x4945*x4950)));
evalcond[1]=(((r11*x4948))+(((-1.0)*x4946*x4950))+((r12*x4944)));
evalcond[2]=(((r21*x4949))+(((-1.0)*x4947*x4951))+(((-1.0)*r22*x4950)));
evalcond[3]=((-1.0)+((r21*x4948))+(((-1.0)*x4947*x4950))+((r22*x4944)));
evalcond[4]=(cj2+((r11*x4949))+(((-1.0)*x4946*x4951))+(((-1.0)*r12*x4950)));
evalcond[5]=(((r01*x4949))+(((-1.0)*sj2))+(((-1.0)*r02*x4950))+(((-1.0)*x4945*x4951)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4952=((1.0)*cj6);
CheckValue<IkReal> x4953=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x4952)))),-1);
if(!x4953.valid){
continue;
}
CheckValue<IkReal> x4954 = IKatan2WithCheck(IkReal((((r01*sj6))+(((-1.0)*r00*x4952)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x4954.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4953.value)))+(x4954.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4955=IKcos(j5);
IkReal x4956=IKsin(j5);
IkReal x4957=(cj6*r00);
IkReal x4958=(cj6*r10);
IkReal x4959=(cj6*r20);
IkReal x4960=(sj6*x4955);
IkReal x4961=(sj6*x4956);
IkReal x4962=((1.0)*x4955);
IkReal x4963=((1.0)*x4956);
evalcond[0]=((((-1.0)*x4957*x4962))+((r02*x4956))+((r01*x4960)));
evalcond[1]=((((-1.0)*x4958*x4962))+((r12*x4956))+((r11*x4960)));
evalcond[2]=((((-1.0)*x4959*x4963))+(((-1.0)*r22*x4962))+((r21*x4961)));
evalcond[3]=((-1.0)+((r22*x4956))+(((-1.0)*x4959*x4962))+((r21*x4960)));
evalcond[4]=(cj2+(((-1.0)*x4958*x4963))+((r11*x4961))+(((-1.0)*r12*x4962)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*x4957*x4963))+(((-1.0)*r02*x4962))+((r01*x4961)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x4964=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x4964.valid){
continue;
}
CheckValue<IkReal> x4965 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x4965.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4964.value)))+(x4965.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4966=IKcos(j5);
IkReal x4967=IKsin(j5);
IkReal x4968=(cj6*r00);
IkReal x4969=(cj6*r10);
IkReal x4970=(cj6*r20);
IkReal x4971=(sj6*x4966);
IkReal x4972=(sj6*x4967);
IkReal x4973=((1.0)*x4966);
IkReal x4974=((1.0)*x4967);
evalcond[0]=((((-1.0)*x4968*x4973))+((r02*x4967))+((r01*x4971)));
evalcond[1]=(((r12*x4967))+((r11*x4971))+(((-1.0)*x4969*x4973)));
evalcond[2]=((((-1.0)*r22*x4973))+(((-1.0)*x4970*x4974))+((r21*x4972)));
evalcond[3]=((-1.0)+((r22*x4967))+(((-1.0)*x4970*x4973))+((r21*x4971)));
evalcond[4]=(cj2+((r11*x4972))+(((-1.0)*r12*x4973))+(((-1.0)*x4969*x4974)));
evalcond[5]=((((-1.0)*x4968*x4974))+(((-1.0)*sj2))+(((-1.0)*r02*x4973))+((r01*x4972)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.36617629259053)*py))+(((-0.658427386453172)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.658427386453172)*py))+(((2.36617629259053)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.36617629259053)*py))+(((-0.658427386453172)*px))))+IKsqr(((((0.658427386453172)*py))+(((2.36617629259053)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.36617629259053)*py))+(((-0.658427386453172)*px))), ((((0.658427386453172)*py))+(((2.36617629259053)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x4975=IKcos(j2);
IkReal x4976=IKsin(j2);
evalcond[0]=((((0.39225)*x4975))+(((-1.0)*px))+(((-0.10915)*x4976)));
evalcond[1]=((((0.39225)*x4976))+(((0.10915)*x4975))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x4977=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x4977;
j5eval[1]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x4977);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x4978=((1.0)*cj6);
IkReal x4979=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4978)));
j5eval[0]=x4979;
j5eval[1]=IKsign(x4979);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x4978))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x4980=((1.0)*cj6);
IkReal x4981=((((-1.0)*r00*sj6))+(((-1.0)*r01*x4980)));
j5eval[0]=x4981;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x4980))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x4981);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4982=((1.0)*cj6);
CheckValue<IkReal> x4983 = IKatan2WithCheck(IkReal(((((-1.0)*r20*sj2*x4982))+((r21*sj2*sj6)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x4983.valid){
continue;
}
CheckValue<IkReal> x4984=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x4982)))),-1);
if(!x4984.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x4983.value)+(((1.5707963267949)*(x4984.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4985=IKcos(j5);
IkReal x4986=IKsin(j5);
IkReal x4987=((1.0)*sj2);
IkReal x4988=(cj6*r10);
IkReal x4989=(cj6*r00);
IkReal x4990=(cj6*r20);
IkReal x4991=(sj6*x4985);
IkReal x4992=(sj6*x4986);
IkReal x4993=((1.0)*x4985);
IkReal x4994=((1.0)*x4986);
evalcond[0]=((((-1.0)*x4990*x4993))+((r22*x4986))+((r21*x4991)));
evalcond[1]=((((-1.0)*r22*x4993))+(((-1.0)*x4990*x4994))+((r21*x4992)));
evalcond[2]=(cj2+(((-1.0)*r12*x4993))+((r11*x4992))+(((-1.0)*x4988*x4994)));
evalcond[3]=(((r01*x4991))+((r02*x4986))+(((-1.0)*cj2))+(((-1.0)*x4989*x4993)));
evalcond[4]=(((r12*x4986))+((r11*x4991))+(((-1.0)*x4987))+(((-1.0)*x4988*x4993)));
evalcond[5]=((((-1.0)*r02*x4993))+(((-1.0)*x4987))+((r01*x4992))+(((-1.0)*x4989*x4994)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4995=((1.0)*cj6);
CheckValue<IkReal> x4996=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x4995))+(((-1.0)*r00*sj6)))),-1);
if(!x4996.valid){
continue;
}
CheckValue<IkReal> x4997 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x4995)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4997.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4996.value)))+(x4997.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x4998=IKcos(j5);
IkReal x4999=IKsin(j5);
IkReal x5000=((1.0)*sj2);
IkReal x5001=(cj6*r10);
IkReal x5002=(cj6*r00);
IkReal x5003=(cj6*r20);
IkReal x5004=(sj6*x4998);
IkReal x5005=(sj6*x4999);
IkReal x5006=((1.0)*x4998);
IkReal x5007=((1.0)*x4999);
evalcond[0]=((((-1.0)*x5003*x5006))+((r22*x4999))+((r21*x5004)));
evalcond[1]=((((-1.0)*x5003*x5007))+((r21*x5005))+(((-1.0)*r22*x5006)));
evalcond[2]=(((r11*x5005))+cj2+(((-1.0)*x5001*x5007))+(((-1.0)*r12*x5006)));
evalcond[3]=((((-1.0)*x5002*x5006))+((r02*x4999))+((r01*x5004))+(((-1.0)*cj2)));
evalcond[4]=(((r11*x5004))+(((-1.0)*x5001*x5006))+((r12*x4999))+(((-1.0)*x5000)));
evalcond[5]=((((-1.0)*x5002*x5007))+((r01*x5005))+(((-1.0)*r02*x5006))+(((-1.0)*x5000)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x5008=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x5008.valid){
continue;
}
CheckValue<IkReal> x5009 = IKatan2WithCheck(IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*cj6*r20)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x5009.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5008.value)))+(x5009.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5010=IKcos(j5);
IkReal x5011=IKsin(j5);
IkReal x5012=((1.0)*sj2);
IkReal x5013=(cj6*r10);
IkReal x5014=(cj6*r00);
IkReal x5015=(cj6*r20);
IkReal x5016=(sj6*x5010);
IkReal x5017=(sj6*x5011);
IkReal x5018=((1.0)*x5010);
IkReal x5019=((1.0)*x5011);
evalcond[0]=(((r21*x5016))+((r22*x5011))+(((-1.0)*x5015*x5018)));
evalcond[1]=((((-1.0)*r22*x5018))+((r21*x5017))+(((-1.0)*x5015*x5019)));
evalcond[2]=(cj2+(((-1.0)*x5013*x5019))+(((-1.0)*r12*x5018))+((r11*x5017)));
evalcond[3]=(((r02*x5011))+(((-1.0)*x5014*x5018))+((r01*x5016))+(((-1.0)*cj2)));
evalcond[4]=((((-1.0)*x5013*x5018))+((r11*x5016))+((r12*x5011))+(((-1.0)*x5012)));
evalcond[5]=((((-1.0)*r02*x5018))+(((-1.0)*x5014*x5019))+((r01*x5017))+(((-1.0)*x5012)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs((((r10*sj6))+((cj6*r11)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*sj6))+((cj6*r01)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*sj6))+((cj6*r11))))+IKsqr((((r00*sj6))+((cj6*r01))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r10*sj6))+((cj6*r11))), (((r00*sj6))+((cj6*r01))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x5020=IKsin(j2);
IkReal x5021=IKcos(j2);
IkReal x5022=(cj6*r11);
IkReal x5023=(cj6*r01);
IkReal x5024=((0.09465)*sj6);
evalcond[0]=(((r00*sj6))+(((-1.0)*x5021))+x5023);
evalcond[1]=(((r10*sj6))+(((-1.0)*x5020))+x5022);
evalcond[2]=((((-1.0)*r00*x5024))+(((-0.09465)*x5023))+(((-1.0)*px))+(((-0.10915)*x5020)));
evalcond[3]=((((-0.09465)*x5022))+(((0.10915)*x5021))+(((-1.0)*py))+(((-1.0)*r10*x5024)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x5025=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x5025;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x5025);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x5026=((1.0)*cj6);
IkReal x5027=((((-1.0)*r01*x5026))+(((-1.0)*r00*sj6)));
j5eval[0]=x5027;
j5eval[1]=IKsign(x5027);
j5eval[2]=((IKabs(r12))+(IKabs((((r11*sj6))+(((-1.0)*r10*x5026))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x5028=cj6*cj6;
IkReal x5029=(r01*r11);
IkReal x5030=(r01*sj6);
IkReal x5031=(cj6*r00);
IkReal x5032=(((cj6*r10*x5030))+(((-1.0)*r02*r12))+((x5028*x5029))+(((-1.0)*x5029))+((r11*sj6*x5031))+(((-1.0)*r00*r10*x5028)));
j5eval[0]=x5032;
j5eval[1]=((IKabs((cj2*r02)))+(IKabs((((cj2*x5030))+(((-1.0)*cj2*x5031))))));
j5eval[2]=IKsign(x5032);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5033=cj6*cj6;
IkReal x5034=(r01*r11);
IkReal x5035=(r01*sj6);
IkReal x5036=(cj6*r00);
CheckValue<IkReal> x5037 = IKatan2WithCheck(IkReal((((cj2*x5035))+(((-1.0)*cj2*x5036)))),IkReal(((-1.0)*cj2*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x5037.valid){
continue;
}
CheckValue<IkReal> x5038=IKPowWithIntegerCheck(IKsign((((cj6*r10*x5035))+(((-1.0)*r02*r12))+(((-1.0)*x5034))+((x5033*x5034))+(((-1.0)*r00*r10*x5033))+((r11*sj6*x5036)))),-1);
if(!x5038.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5037.value)+(((1.5707963267949)*(x5038.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5039=IKcos(j5);
IkReal x5040=IKsin(j5);
IkReal x5041=(cj6*r00);
IkReal x5042=(cj6*r10);
IkReal x5043=(cj6*r20);
IkReal x5044=(sj6*x5039);
IkReal x5045=(sj6*x5040);
IkReal x5046=((1.0)*x5039);
IkReal x5047=((1.0)*x5040);
evalcond[0]=((((-1.0)*x5041*x5046))+((r02*x5040))+((r01*x5044)));
evalcond[1]=((((-1.0)*x5042*x5046))+((r12*x5040))+((r11*x5044)));
evalcond[2]=((((-1.0)*x5043*x5047))+((r21*x5045))+(((-1.0)*r22*x5046)));
evalcond[3]=((1.0)+(((-1.0)*x5043*x5046))+((r21*x5044))+((r22*x5040)));
evalcond[4]=(cj2+(((-1.0)*x5042*x5047))+(((-1.0)*r12*x5046))+((r11*x5045)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x5046))+(((-1.0)*x5041*x5047))+((r01*x5045)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5048=((1.0)*cj6);
CheckValue<IkReal> x5049 = IKatan2WithCheck(IkReal(((((-1.0)*r10*x5048))+((r11*sj6)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x5049.valid){
continue;
}
CheckValue<IkReal> x5050=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x5048)))),-1);
if(!x5050.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5049.value)+(((1.5707963267949)*(x5050.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5051=IKcos(j5);
IkReal x5052=IKsin(j5);
IkReal x5053=(cj6*r00);
IkReal x5054=(cj6*r10);
IkReal x5055=(cj6*r20);
IkReal x5056=(sj6*x5051);
IkReal x5057=(sj6*x5052);
IkReal x5058=((1.0)*x5051);
IkReal x5059=((1.0)*x5052);
evalcond[0]=((((-1.0)*x5053*x5058))+((r01*x5056))+((r02*x5052)));
evalcond[1]=((((-1.0)*x5054*x5058))+((r12*x5052))+((r11*x5056)));
evalcond[2]=(((r21*x5057))+(((-1.0)*x5055*x5059))+(((-1.0)*r22*x5058)));
evalcond[3]=((1.0)+((r21*x5056))+((r22*x5052))+(((-1.0)*x5055*x5058)));
evalcond[4]=(cj2+(((-1.0)*x5054*x5059))+(((-1.0)*r12*x5058))+((r11*x5057)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*x5053*x5059))+((r01*x5057))+(((-1.0)*r02*x5058)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x5060 = IKatan2WithCheck(IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x5060.valid){
continue;
}
CheckValue<IkReal> x5061=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x5061.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5060.value)+(((1.5707963267949)*(x5061.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5062=IKcos(j5);
IkReal x5063=IKsin(j5);
IkReal x5064=(cj6*r00);
IkReal x5065=(cj6*r10);
IkReal x5066=(cj6*r20);
IkReal x5067=(sj6*x5062);
IkReal x5068=(sj6*x5063);
IkReal x5069=((1.0)*x5062);
IkReal x5070=((1.0)*x5063);
evalcond[0]=(((r02*x5063))+((r01*x5067))+(((-1.0)*x5064*x5069)));
evalcond[1]=(((r11*x5067))+(((-1.0)*x5065*x5069))+((r12*x5063)));
evalcond[2]=((((-1.0)*x5066*x5070))+(((-1.0)*r22*x5069))+((r21*x5068)));
evalcond[3]=((1.0)+(((-1.0)*x5066*x5069))+((r21*x5067))+((r22*x5063)));
evalcond[4]=(cj2+(((-1.0)*x5065*x5070))+(((-1.0)*r12*x5069))+((r11*x5068)));
evalcond[5]=((((-1.0)*x5064*x5070))+(((-1.0)*sj2))+(((-1.0)*r02*x5069))+((r01*x5068)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-0.658427386453172)*px))+(((-2.36617629259053)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.658427386453172)*py))+(((-2.36617629259053)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.658427386453172)*px))+(((-2.36617629259053)*py))))+IKsqr(((((0.658427386453172)*py))+(((-2.36617629259053)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-0.658427386453172)*px))+(((-2.36617629259053)*py))), ((((0.658427386453172)*py))+(((-2.36617629259053)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x5071=IKcos(j2);
IkReal x5072=IKsin(j2);
evalcond[0]=((((-0.39225)*x5071))+(((-0.10915)*x5072))+(((-1.0)*px)));
evalcond[1]=((((-0.39225)*x5072))+(((0.10915)*x5071))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x5073=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x5073;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x5073);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x5074=((1.0)*cj6);
IkReal x5075=((((-1.0)*r10*sj6))+(((-1.0)*r11*x5074)));
j5eval[0]=x5075;
j5eval[1]=((IKabs(((((-1.0)*cj2*r20*x5074))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x5075);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x5076=cj6*cj6;
IkReal x5077=(r21*sj6);
IkReal x5078=(cj6*r20);
IkReal x5079=(r01*r21);
IkReal x5080=((((-1.0)*r02*r22))+(((-1.0)*r00*r20*x5076))+((r01*sj6*x5078))+((x5076*x5079))+(((-1.0)*x5079))+((cj6*r00*x5077)));
j5eval[0]=x5080;
j5eval[1]=IKsign(x5080);
j5eval[2]=((IKabs((((cj2*x5077))+(((-1.0)*cj2*x5078)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5081=cj6*cj6;
IkReal x5082=(r21*sj6);
IkReal x5083=(cj6*r20);
IkReal x5084=(r01*r21);
CheckValue<IkReal> x5085 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*x5083))+((cj2*x5082)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5085.valid){
continue;
}
CheckValue<IkReal> x5086=IKPowWithIntegerCheck(IKsign(((((-1.0)*r02*r22))+(((-1.0)*x5084))+((r01*sj6*x5083))+(((-1.0)*r00*r20*x5081))+((cj6*r00*x5082))+((x5081*x5084)))),-1);
if(!x5086.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5085.value)+(((1.5707963267949)*(x5086.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5087=IKcos(j5);
IkReal x5088=IKsin(j5);
IkReal x5089=(cj6*r00);
IkReal x5090=(cj6*r10);
IkReal x5091=(cj6*r20);
IkReal x5092=(sj6*x5087);
IkReal x5093=(sj6*x5088);
IkReal x5094=((1.0)*x5087);
IkReal x5095=((1.0)*x5088);
evalcond[0]=(((r21*x5092))+(((-1.0)*x5091*x5094))+((r22*x5088)));
evalcond[1]=((((-1.0)*r22*x5094))+((r21*x5093))+(((-1.0)*x5091*x5095)));
evalcond[2]=(cj2+((r01*x5092))+(((-1.0)*x5089*x5094))+((r02*x5088)));
evalcond[3]=(sj2+((r11*x5092))+(((-1.0)*x5090*x5094))+((r12*x5088)));
evalcond[4]=(cj2+((r11*x5093))+(((-1.0)*x5090*x5095))+(((-1.0)*r12*x5094)));
evalcond[5]=((((-1.0)*sj2))+((r01*x5093))+(((-1.0)*x5089*x5095))+(((-1.0)*r02*x5094)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5096=((1.0)*cj6);
CheckValue<IkReal> x5097 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r20*x5096))+((cj2*r21*sj6)))),IkReal(((-1.0)*cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x5097.valid){
continue;
}
CheckValue<IkReal> x5098=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x5096))+(((-1.0)*r10*sj6)))),-1);
if(!x5098.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5097.value)+(((1.5707963267949)*(x5098.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5099=IKcos(j5);
IkReal x5100=IKsin(j5);
IkReal x5101=(cj6*r00);
IkReal x5102=(cj6*r10);
IkReal x5103=(cj6*r20);
IkReal x5104=(sj6*x5099);
IkReal x5105=(sj6*x5100);
IkReal x5106=((1.0)*x5099);
IkReal x5107=((1.0)*x5100);
evalcond[0]=((((-1.0)*x5103*x5106))+((r22*x5100))+((r21*x5104)));
evalcond[1]=((((-1.0)*r22*x5106))+(((-1.0)*x5103*x5107))+((r21*x5105)));
evalcond[2]=(((r01*x5104))+(((-1.0)*x5101*x5106))+cj2+((r02*x5100)));
evalcond[3]=(((r12*x5100))+sj2+(((-1.0)*x5102*x5106))+((r11*x5104)));
evalcond[4]=(cj2+(((-1.0)*x5102*x5107))+((r11*x5105))+(((-1.0)*r12*x5106)));
evalcond[5]=((((-1.0)*sj2))+((r01*x5105))+(((-1.0)*x5101*x5107))+(((-1.0)*r02*x5106)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x5108=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x5108.valid){
continue;
}
CheckValue<IkReal> x5109 = IKatan2WithCheck(IkReal((((r21*sj2*sj6))+(((-1.0)*cj6*r20*sj2)))),IkReal(((-1.0)*r22*sj2)),IKFAST_ATAN2_MAGTHRESH);
if(!x5109.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5108.value)))+(x5109.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5110=IKcos(j5);
IkReal x5111=IKsin(j5);
IkReal x5112=(cj6*r00);
IkReal x5113=(cj6*r10);
IkReal x5114=(cj6*r20);
IkReal x5115=(sj6*x5110);
IkReal x5116=(sj6*x5111);
IkReal x5117=((1.0)*x5110);
IkReal x5118=((1.0)*x5111);
evalcond[0]=((((-1.0)*x5114*x5117))+((r21*x5115))+((r22*x5111)));
evalcond[1]=((((-1.0)*r22*x5117))+(((-1.0)*x5114*x5118))+((r21*x5116)));
evalcond[2]=((((-1.0)*x5112*x5117))+((r01*x5115))+cj2+((r02*x5111)));
evalcond[3]=(sj2+(((-1.0)*x5113*x5117))+((r11*x5115))+((r12*x5111)));
evalcond[4]=(cj2+(((-1.0)*x5113*x5118))+((r11*x5116))+(((-1.0)*r12*x5117)));
evalcond[5]=((((-1.0)*x5112*x5118))+((r01*x5116))+(((-1.0)*sj2))+(((-1.0)*r02*x5117)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2, j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5119=cj1*cj1;
IkReal x5120=(r00*sj6);
IkReal x5121=((20000.0)*py);
IkReal x5122=(cj0*sj1);
IkReal x5123=(cj1*sj0);
IkReal x5124=(cj1*sj1);
IkReal x5125=(cj6*r01);
IkReal x5126=((1893.0)*r10*sj6);
IkReal x5127=((1893.0)*cj6*r11);
IkReal x5128=(sj0*x5119);
CheckValue<IkReal> x5129=IKPowWithIntegerCheck(((((7845.0)*cj0*sj0))+(((7845.0)*x5124))+(((-15690.0)*cj0*cj1*x5122))+(((-8500.0)*x5128))+(((-15690.0)*cj0*x5128))+(((-8500.0)*cj1*x5122))),-1);
if(!x5129.valid){
continue;
}
CheckValue<IkReal> x5130=IKPowWithIntegerCheck(((((-1.0)*x5123))+(((-1.0)*x5122))),-1);
if(!x5130.valid){
continue;
}
if( IKabs(((x5129.value)*(((((2183.0)*x5125))+(((2183.0)*x5120))+(((-1.0)*x5123*x5127))+(((-1.0)*x5123*x5126))+(((-1.0)*x5121*x5123))+(((-1.0)*x5121*x5122))+(((-1.0)*x5122*x5126))+(((-1.0)*x5122*x5127)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5130.value)*(((((-1.0)*x5120))+(((-1.0)*x5125)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5129.value)*(((((2183.0)*x5125))+(((2183.0)*x5120))+(((-1.0)*x5123*x5127))+(((-1.0)*x5123*x5126))+(((-1.0)*x5121*x5123))+(((-1.0)*x5121*x5122))+(((-1.0)*x5122*x5126))+(((-1.0)*x5122*x5127))))))+IKsqr(((x5130.value)*(((((-1.0)*x5120))+(((-1.0)*x5125))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((x5129.value)*(((((2183.0)*x5125))+(((2183.0)*x5120))+(((-1.0)*x5123*x5127))+(((-1.0)*x5123*x5126))+(((-1.0)*x5121*x5123))+(((-1.0)*x5121*x5122))+(((-1.0)*x5122*x5126))+(((-1.0)*x5122*x5127))))), ((x5130.value)*(((((-1.0)*x5120))+(((-1.0)*x5125))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x5131=IKcos(j2);
IkReal x5132=IKsin(j2);
IkReal x5133=(cj0*cj1);
IkReal x5134=(cj6*r11);
IkReal x5135=((0.09465)*sj6);
IkReal x5136=(sj0*sj1);
IkReal x5137=((1.0)*sj0);
IkReal x5138=(cj6*r01);
IkReal x5139=((0.39225)*x5131);
IkReal x5140=(cj1*x5132);
IkReal x5141=((1.0)*cj0*sj1);
IkReal x5142=(cj1*x5131);
IkReal x5143=((0.39225)*x5132);
evalcond[0]=(((r00*sj6))+(((-1.0)*x5131*x5141))+(((-1.0)*x5137*x5142))+x5138);
evalcond[1]=(((r10*sj6))+(((-1.0)*x5137*x5140))+(((-1.0)*x5132*x5141))+x5134);
evalcond[2]=((((-1.0)*x5136*x5139))+(((-0.10915)*x5132))+(((-1.0)*r00*x5135))+(((0.425)*x5142))+(((-0.09465)*x5138))+(((-1.0)*px))+((x5133*x5139)));
evalcond[3]=((((-1.0)*x5136*x5143))+(((-1.0)*r10*x5135))+((x5133*x5143))+(((0.10915)*x5131))+(((0.425)*x5140))+(((-0.09465)*x5134))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
IkReal x5144=((1.0)*cj6);
IkReal x5145=((((-1.0)*r00*sj6))+(((-1.0)*r01*x5144)));
j5eval[0]=x5145;
j5eval[1]=IKsign(x5145);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*r20*x5144))+((cj2*r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
IkReal x5146=((1.0)*cj6);
IkReal x5147=((((-1.0)*r10*sj6))+(((-1.0)*r11*x5146)));
j5eval[0]=x5147;
j5eval[1]=((IKabs((r22*sj2)))+(IKabs(((((-1.0)*r20*sj2*x5146))+((r21*sj2*sj6))))));
j5eval[2]=IKsign(x5147);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
IkReal x5148=((1.0)*sj2);
IkReal x5149=((1.0)*sj6);
IkReal x5150=((((-1.0)*r20*x5149))+(((-1.0)*cj6*r21)));
j5eval[0]=x5150;
j5eval[1]=IKsign(x5150);
j5eval[2]=((IKabs(((((-1.0)*cj2*r01*x5149))+((cj6*r10*sj2))+(((-1.0)*r11*sj6*x5148))+((cj2*cj6*r00)))))+(IKabs(((((-1.0)*r12*x5148))+(((-1.0)*cj2*r02))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
IkReal x5151=((-1.0)*r20);
IkReal x5153 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x5153)==0){
continue;
}
IkReal x5152=pow(x5153,-0.5);
CheckValue<IkReal> x5154 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x5151),IKFAST_ATAN2_MAGTHRESH);
if(!x5154.valid){
continue;
}
IkReal gconst114=((-1.0)*(x5154.value));
IkReal gconst115=(r21*x5152);
IkReal gconst116=(x5151*x5152);
CheckValue<IkReal> x5155 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5155.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x5155.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x5156=((-1.0)*r20);
IkReal x5157=x5152;
CheckValue<IkReal> x5159 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x5156),IKFAST_ATAN2_MAGTHRESH);
if(!x5159.valid){
continue;
}
IkReal x5158=((-1.0)*(x5159.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst115;
cj6=gconst116;
j6=x5158;
IkReal gconst114=x5158;
IkReal gconst115=(r21*x5157);
IkReal gconst116=(x5156*x5157);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x5160=((-1.0)*r20);
IkReal x5161=x5152;
CheckValue<IkReal> x5163 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x5160),IKFAST_ATAN2_MAGTHRESH);
if(!x5163.valid){
continue;
}
IkReal x5162=((-1.0)*(x5163.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst115;
cj6=gconst116;
j6=x5162;
IkReal gconst114=x5162;
IkReal gconst115=(r21*x5161);
IkReal gconst116=(x5160*x5161);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x5164=((-1.0)*r20);
IkReal x5165=x5152;
CheckValue<IkReal> x5167 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x5164),IKFAST_ATAN2_MAGTHRESH);
if(!x5167.valid){
continue;
}
IkReal x5166=((-1.0)*(x5167.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst115;
cj6=gconst116;
j6=x5166;
IkReal gconst114=x5166;
IkReal gconst115=(r21*x5165);
IkReal gconst116=(x5164*x5165);
IkReal x5168=((1.0)*(r22*r22));
CheckValue<IkReal> x5172=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x5168))),-1);
if(!x5172.valid){
continue;
}
IkReal x5169=x5172.value;
IkReal x5170=((1.0)*x5169);
IkReal x5171=((((-1.0)*x5170*(r20*r20*r20*r20)))+(((-2.0)*x5169*(r20*r20)*(r21*r21)))+(((-1.0)*x5168))+(((-1.0)*x5170*(r21*r21*r21*r21))));
j5eval[0]=x5171;
j5eval[1]=IKsign(x5171);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5173=(cj0*sj1);
IkReal x5174=(gconst115*r21);
IkReal x5175=(cj1*sj0);
IkReal x5176=((1.0)*gconst116*r20);
CheckValue<IkReal> x5177 = IKatan2WithCheck(IkReal((((r22*x5173))+((r22*x5175)))),IkReal(((((-1.0)*x5175*x5176))+(((-1.0)*x5173*x5176))+((x5174*x5175))+((x5173*x5174)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5177.valid){
continue;
}
CheckValue<IkReal> x5178=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst116*r20*x5176))+(((-1.0)*(x5174*x5174)))+(((-1.0)*(r22*r22)))+(((2.0)*gconst116*r20*x5174)))),-1);
if(!x5178.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5177.value)+(((1.5707963267949)*(x5178.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5179=IKsin(j5);
IkReal x5180=IKcos(j5);
IkReal x5181=(sj0*sj1);
IkReal x5182=(gconst116*r20);
IkReal x5183=((1.0)*cj0*cj1);
IkReal x5184=((1.0)*gconst116*r00);
IkReal x5185=(gconst115*x5179);
IkReal x5186=((1.0)*gconst116*r10);
IkReal x5187=(gconst115*x5180);
IkReal x5188=((1.0)*x5180);
evalcond[0]=((((-1.0)*x5179*x5182))+(((-1.0)*r22*x5188))+((r21*x5185)));
evalcond[1]=(cj2+(((-1.0)*r12*x5188))+((r11*x5185))+(((-1.0)*x5179*x5186)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x5188))+((r01*x5185))+(((-1.0)*x5179*x5184)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*x5182*x5188))+((r21*x5187))+((r22*x5179))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x5183))+((r01*x5187))+((cj2*x5181))+((r02*x5179))+(((-1.0)*x5180*x5184)));
evalcond[5]=(((sj2*x5181))+(((-1.0)*sj2*x5183))+((r12*x5179))+((r11*x5187))+(((-1.0)*x5180*x5186)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5189=((1.0)*gconst116);
CheckValue<IkReal> x5190=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst115*r10))+(((-1.0)*r11*x5189)))),-1);
if(!x5190.valid){
continue;
}
CheckValue<IkReal> x5191 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst115*r21*sj2))+(((-1.0)*r20*sj2*x5189)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5191.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5190.value)))+(x5191.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5192=IKsin(j5);
IkReal x5193=IKcos(j5);
IkReal x5194=(sj0*sj1);
IkReal x5195=(gconst116*r20);
IkReal x5196=((1.0)*cj0*cj1);
IkReal x5197=((1.0)*gconst116*r00);
IkReal x5198=(gconst115*x5192);
IkReal x5199=((1.0)*gconst116*r10);
IkReal x5200=(gconst115*x5193);
IkReal x5201=((1.0)*x5193);
evalcond[0]=(((r21*x5198))+(((-1.0)*r22*x5201))+(((-1.0)*x5192*x5195)));
evalcond[1]=(cj2+((r11*x5198))+(((-1.0)*x5192*x5199))+(((-1.0)*r12*x5201)));
evalcond[2]=((((-1.0)*r02*x5201))+(((-1.0)*sj2))+(((-1.0)*x5192*x5197))+((r01*x5198)));
evalcond[3]=(((cj1*sj0))+((r22*x5192))+(((-1.0)*x5195*x5201))+((r21*x5200))+((cj0*sj1)));
evalcond[4]=(((cj2*x5194))+((r01*x5200))+((r02*x5192))+(((-1.0)*cj2*x5196))+(((-1.0)*x5193*x5197)));
evalcond[5]=(((r11*x5200))+(((-1.0)*x5193*x5199))+((r12*x5192))+((sj2*x5194))+(((-1.0)*sj2*x5196)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5202=((1.0)*gconst116);
CheckValue<IkReal> x5203 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst115*r21))+(((-1.0)*cj2*r20*x5202)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5203.valid){
continue;
}
CheckValue<IkReal> x5204=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst115*r00))+(((-1.0)*r01*x5202)))),-1);
if(!x5204.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5203.value)+(((1.5707963267949)*(x5204.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5205=IKsin(j5);
IkReal x5206=IKcos(j5);
IkReal x5207=(sj0*sj1);
IkReal x5208=(gconst116*r20);
IkReal x5209=((1.0)*cj0*cj1);
IkReal x5210=((1.0)*gconst116*r00);
IkReal x5211=(gconst115*x5205);
IkReal x5212=((1.0)*gconst116*r10);
IkReal x5213=(gconst115*x5206);
IkReal x5214=((1.0)*x5206);
evalcond[0]=((((-1.0)*r22*x5214))+((r21*x5211))+(((-1.0)*x5205*x5208)));
evalcond[1]=(cj2+((r11*x5211))+(((-1.0)*x5205*x5212))+(((-1.0)*r12*x5214)));
evalcond[2]=(((r01*x5211))+(((-1.0)*sj2))+(((-1.0)*x5205*x5210))+(((-1.0)*r02*x5214)));
evalcond[3]=(((cj1*sj0))+((r22*x5205))+((r21*x5213))+(((-1.0)*x5208*x5214))+((cj0*sj1)));
evalcond[4]=(((r01*x5213))+(((-1.0)*x5206*x5210))+((cj2*x5207))+((r02*x5205))+(((-1.0)*cj2*x5209)));
evalcond[5]=((((-1.0)*x5206*x5212))+((r11*x5213))+((r12*x5205))+((sj2*x5207))+(((-1.0)*sj2*x5209)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5215=((-1.0)*r21);
IkReal x5217 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x5217)==0){
continue;
}
IkReal x5216=pow(x5217,-0.5);
CheckValue<IkReal> x5218 = IKatan2WithCheck(IkReal(x5215),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5218.valid){
continue;
}
IkReal gconst117=((3.14159265358979)+(((-1.0)*(x5218.value))));
IkReal gconst118=(x5215*x5216);
IkReal gconst119=((1.0)*r20*x5216);
CheckValue<IkReal> x5219 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5219.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x5219.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x5220=((-1.0)*r21);
CheckValue<IkReal> x5223 = IKatan2WithCheck(IkReal(x5220),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5223.valid){
continue;
}
IkReal x5221=((1.0)*(x5223.value));
IkReal x5222=x5216;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst118;
cj6=gconst119;
j6=((3.14159265)+(((-1.0)*x5221)));
IkReal gconst117=((3.14159265358979)+(((-1.0)*x5221)));
IkReal gconst118=(x5220*x5222);
IkReal gconst119=((1.0)*r20*x5222);
IkReal x5224=r22*r22;
IkReal x5225=((1.0)*x5224);
CheckValue<IkReal> x5229=IKPowWithIntegerCheck(((-1.0)+x5224),-1);
if(!x5229.valid){
continue;
}
IkReal x5226=x5229.value;
if((((1.0)+(((-1.0)*x5225)))) < -0.00001)
continue;
IkReal x5227=IKsqrt(((1.0)+(((-1.0)*x5225))));
IkReal x5228=(cj2*x5226*x5227);
j5eval[0]=((IKabs((x5228+(((-1.0)*x5225*x5228)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x5230=((-1.0)*r21);
CheckValue<IkReal> x5233 = IKatan2WithCheck(IkReal(x5230),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5233.valid){
continue;
}
IkReal x5231=((1.0)*(x5233.value));
IkReal x5232=x5216;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst118;
cj6=gconst119;
j6=((3.14159265)+(((-1.0)*x5231)));
IkReal gconst117=((3.14159265358979)+(((-1.0)*x5231)));
IkReal gconst118=(x5230*x5232);
IkReal gconst119=((1.0)*r20*x5232);
IkReal x5234=r22*r22;
IkReal x5235=((1.0)*x5234);
CheckValue<IkReal> x5239=IKPowWithIntegerCheck(((-1.0)+x5234),-1);
if(!x5239.valid){
continue;
}
IkReal x5236=x5239.value;
if((((1.0)+(((-1.0)*x5235)))) < -0.00001)
continue;
IkReal x5237=IKsqrt(((1.0)+(((-1.0)*x5235))));
IkReal x5238=(sj2*x5236*x5237);
j5eval[0]=((IKabs(((((-1.0)*x5235*x5238))+x5238)))+(IKabs((r22*sj2))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x5240=((-1.0)*r21);
CheckValue<IkReal> x5243 = IKatan2WithCheck(IkReal(x5240),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5243.valid){
continue;
}
IkReal x5241=((1.0)*(x5243.value));
IkReal x5242=x5216;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst118;
cj6=gconst119;
j6=((3.14159265)+(((-1.0)*x5241)));
IkReal gconst117=((3.14159265358979)+(((-1.0)*x5241)));
IkReal gconst118=(x5240*x5242);
IkReal gconst119=((1.0)*r20*x5242);
IkReal x5244=r22*r22;
IkReal x5245=(r12*sj2);
IkReal x5246=(cj2*r02);
CheckValue<IkReal> x5250=IKPowWithIntegerCheck(((-1.0)+x5244),-1);
if(!x5250.valid){
continue;
}
IkReal x5247=x5250.value;
if((((1.0)+(((-1.0)*x5244)))) < -0.00001)
continue;
IkReal x5248=IKsqrt(((1.0)+(((-1.0)*x5244))));
IkReal x5249=(r22*x5247*x5248);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=((IKabs((((x5245*x5249))+((x5246*x5249)))))+(IKabs(((((-1.0)*x5246))+(((-1.0)*x5245))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5251=((1.0)*sj2);
IkReal x5252=((1.0)*gconst118);
CheckValue<IkReal> x5253=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x5252))+(((-1.0)*gconst119*r21)))),-1);
if(!x5253.valid){
continue;
}
CheckValue<IkReal> x5254 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x5251))+(((-1.0)*cj2*r02)))),IkReal((((gconst119*r10*sj2))+((cj2*gconst119*r00))+(((-1.0)*gconst118*r11*x5251))+(((-1.0)*cj2*r01*x5252)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5254.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5253.value)))+(x5254.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5255=IKsin(j5);
IkReal x5256=IKcos(j5);
IkReal x5257=(sj0*sj1);
IkReal x5258=((1.0)*cj0*cj1);
IkReal x5259=(gconst118*x5255);
IkReal x5260=((1.0)*x5256);
IkReal x5261=(gconst118*x5256);
IkReal x5262=((1.0)*gconst119*x5255);
evalcond[0]=(((r21*x5259))+(((-1.0)*r22*x5260))+(((-1.0)*r20*x5262)));
evalcond[1]=(cj2+(((-1.0)*r12*x5260))+((r11*x5259))+(((-1.0)*r10*x5262)));
evalcond[2]=((((-1.0)*sj2))+((r01*x5259))+(((-1.0)*r02*x5260))+(((-1.0)*r00*x5262)));
evalcond[3]=(((r22*x5255))+((cj1*sj0))+((r21*x5261))+(((-1.0)*gconst119*r20*x5260))+((cj0*sj1)));
evalcond[4]=((((-1.0)*gconst119*r00*x5260))+((r01*x5261))+((cj2*x5257))+(((-1.0)*cj2*x5258))+((r02*x5255)));
evalcond[5]=(((sj2*x5257))+((r12*x5255))+((r11*x5261))+(((-1.0)*sj2*x5258))+(((-1.0)*gconst119*r10*x5260)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5263=((1.0)*gconst119);
CheckValue<IkReal> x5264 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x5263))+((gconst118*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5264.valid){
continue;
}
CheckValue<IkReal> x5265=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst118*r10))+(((-1.0)*r11*x5263)))),-1);
if(!x5265.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5264.value)+(((1.5707963267949)*(x5265.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5266=IKsin(j5);
IkReal x5267=IKcos(j5);
IkReal x5268=(sj0*sj1);
IkReal x5269=((1.0)*cj0*cj1);
IkReal x5270=(gconst118*x5266);
IkReal x5271=((1.0)*x5267);
IkReal x5272=(gconst118*x5267);
IkReal x5273=((1.0)*gconst119*x5266);
evalcond[0]=(((r21*x5270))+(((-1.0)*r20*x5273))+(((-1.0)*r22*x5271)));
evalcond[1]=(cj2+(((-1.0)*r12*x5271))+(((-1.0)*r10*x5273))+((r11*x5270)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x5273))+((r01*x5270))+(((-1.0)*r02*x5271)));
evalcond[3]=((((-1.0)*gconst119*r20*x5271))+((cj1*sj0))+((r21*x5272))+((cj0*sj1))+((r22*x5266)));
evalcond[4]=(((r02*x5266))+((cj2*x5268))+((r01*x5272))+(((-1.0)*gconst119*r00*x5271))+(((-1.0)*cj2*x5269)));
evalcond[5]=(((sj2*x5268))+((r12*x5266))+(((-1.0)*sj2*x5269))+(((-1.0)*gconst119*r10*x5271))+((r11*x5272)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5274=((1.0)*gconst119);
CheckValue<IkReal> x5275 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x5274))+((cj2*gconst118*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5275.valid){
continue;
}
CheckValue<IkReal> x5276=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x5274))+(((-1.0)*gconst118*r00)))),-1);
if(!x5276.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5275.value)+(((1.5707963267949)*(x5276.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5277=IKsin(j5);
IkReal x5278=IKcos(j5);
IkReal x5279=(sj0*sj1);
IkReal x5280=((1.0)*cj0*cj1);
IkReal x5281=(gconst118*x5277);
IkReal x5282=((1.0)*x5278);
IkReal x5283=(gconst118*x5278);
IkReal x5284=((1.0)*gconst119*x5277);
evalcond[0]=((((-1.0)*r22*x5282))+((r21*x5281))+(((-1.0)*r20*x5284)));
evalcond[1]=(cj2+(((-1.0)*r12*x5282))+(((-1.0)*r10*x5284))+((r11*x5281)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x5284))+((r01*x5281))+(((-1.0)*r02*x5282)));
evalcond[3]=(((r22*x5277))+((r21*x5283))+((cj1*sj0))+(((-1.0)*gconst119*r20*x5282))+((cj0*sj1)));
evalcond[4]=(((r02*x5277))+(((-1.0)*cj2*x5280))+((r01*x5283))+(((-1.0)*gconst119*r00*x5282))+((cj2*x5279)));
evalcond[5]=((((-1.0)*gconst119*r10*x5282))+((sj2*x5279))+(((-1.0)*sj2*x5280))+((r11*x5283))+((r12*x5277)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5285=((-1.0)*r10);
IkReal x5287 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x5287)==0){
continue;
}
IkReal x5286=pow(x5287,-0.5);
CheckValue<IkReal> x5288 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x5285),IKFAST_ATAN2_MAGTHRESH);
if(!x5288.valid){
continue;
}
IkReal gconst120=((-1.0)*(x5288.value));
IkReal gconst121=(r11*x5286);
IkReal gconst122=(x5285*x5286);
CheckValue<IkReal> x5289 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5289.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x5289.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x5290=((-1.0)*r10);
IkReal x5291=x5286;
CheckValue<IkReal> x5293 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x5290),IKFAST_ATAN2_MAGTHRESH);
if(!x5293.valid){
continue;
}
IkReal x5292=((-1.0)*(x5293.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst121;
cj6=gconst122;
j6=x5292;
IkReal gconst120=x5292;
IkReal gconst121=(r11*x5291);
IkReal gconst122=(x5290*x5291);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5294=((1.0)*sj2);
IkReal x5295=((1.0)*gconst121);
CheckValue<IkReal> x5296 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x5294))+(((-1.0)*cj2*r02)))),IkReal((((cj2*gconst122*r00))+(((-1.0)*cj2*r01*x5295))+(((-1.0)*gconst121*r11*x5294))+((gconst122*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5296.valid){
continue;
}
CheckValue<IkReal> x5297=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x5295))+(((-1.0)*gconst122*r21)))),-1);
if(!x5297.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5296.value)+(((1.5707963267949)*(x5297.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5298=IKsin(j5);
IkReal x5299=IKcos(j5);
IkReal x5300=(sj0*sj1);
IkReal x5301=((1.0)*cj0*cj1);
IkReal x5302=((1.0)*gconst122*r00);
IkReal x5303=(gconst121*x5298);
IkReal x5304=((1.0)*x5299);
IkReal x5305=(gconst121*x5299);
IkReal x5306=(gconst122*x5304);
IkReal x5307=((1.0)*gconst122*x5298);
evalcond[0]=((((-1.0)*r22*x5304))+((r21*x5303))+(((-1.0)*r20*x5307)));
evalcond[1]=(cj2+(((-1.0)*r12*x5304))+(((-1.0)*r10*x5307))+((r11*x5303)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x5304))+(((-1.0)*x5298*x5302))+((r01*x5303)));
evalcond[3]=(((r21*x5305))+((r22*x5298))+((cj1*sj0))+(((-1.0)*r20*x5306))+((cj0*sj1)));
evalcond[4]=(((r02*x5298))+((cj2*x5300))+(((-1.0)*cj2*x5301))+((r01*x5305))+(((-1.0)*x5299*x5302)));
evalcond[5]=(((r12*x5298))+((sj2*x5300))+(((-1.0)*r10*x5306))+((r11*x5305))+(((-1.0)*sj2*x5301)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5308=((1.0)*gconst122);
CheckValue<IkReal> x5309 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst121*r21))+(((-1.0)*cj2*r20*x5308)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5309.valid){
continue;
}
CheckValue<IkReal> x5310=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst121*r00))+(((-1.0)*r01*x5308)))),-1);
if(!x5310.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5309.value)+(((1.5707963267949)*(x5310.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5311=IKsin(j5);
IkReal x5312=IKcos(j5);
IkReal x5313=(sj0*sj1);
IkReal x5314=((1.0)*cj0*cj1);
IkReal x5315=((1.0)*gconst122*r00);
IkReal x5316=(gconst121*x5311);
IkReal x5317=((1.0)*x5312);
IkReal x5318=(gconst121*x5312);
IkReal x5319=(gconst122*x5317);
IkReal x5320=((1.0)*gconst122*x5311);
evalcond[0]=((((-1.0)*r20*x5320))+((r21*x5316))+(((-1.0)*r22*x5317)));
evalcond[1]=((((-1.0)*r12*x5317))+cj2+(((-1.0)*r10*x5320))+((r11*x5316)));
evalcond[2]=(((r01*x5316))+(((-1.0)*sj2))+(((-1.0)*r02*x5317))+(((-1.0)*x5311*x5315)));
evalcond[3]=(((r22*x5311))+((r21*x5318))+((cj1*sj0))+(((-1.0)*r20*x5319))+((cj0*sj1)));
evalcond[4]=(((r01*x5318))+(((-1.0)*x5312*x5315))+((cj2*x5313))+((r02*x5311))+(((-1.0)*cj2*x5314)));
evalcond[5]=(((sj2*x5313))+((r11*x5318))+(((-1.0)*sj2*x5314))+((r12*x5311))+(((-1.0)*r10*x5319)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5321=((-1.0)*r11);
IkReal x5323 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x5323)==0){
continue;
}
IkReal x5322=pow(x5323,-0.5);
CheckValue<IkReal> x5324 = IKatan2WithCheck(IkReal(x5321),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5324.valid){
continue;
}
IkReal gconst123=((3.14159265358979)+(((-1.0)*(x5324.value))));
IkReal gconst124=(x5321*x5322);
IkReal gconst125=((1.0)*r10*x5322);
CheckValue<IkReal> x5325 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5325.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x5325.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x5326=((-1.0)*r11);
CheckValue<IkReal> x5329 = IKatan2WithCheck(IkReal(x5326),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5329.valid){
continue;
}
IkReal x5327=((1.0)*(x5329.value));
IkReal x5328=x5322;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst124;
cj6=gconst125;
j6=((3.14159265)+(((-1.0)*x5327)));
IkReal gconst123=((3.14159265358979)+(((-1.0)*x5327)));
IkReal gconst124=(x5326*x5328);
IkReal gconst125=((1.0)*r10*x5328);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x5330=((-1.0)*r11);
CheckValue<IkReal> x5333 = IKatan2WithCheck(IkReal(x5330),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5333.valid){
continue;
}
IkReal x5331=((1.0)*(x5333.value));
IkReal x5332=x5322;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst124;
cj6=gconst125;
j6=((3.14159265)+(((-1.0)*x5331)));
IkReal gconst123=((3.14159265358979)+(((-1.0)*x5331)));
IkReal gconst124=(x5330*x5332);
IkReal gconst125=((1.0)*r10*x5332);
IkReal x5334=r12*r12;
IkReal x5335=((1.0)*sj2);
IkReal x5336=(cj2*r02);
IkReal x5337=x5322;
j5eval[0]=((IKabs(((((-1.0)*x5336))+(((-1.0)*r12*x5335)))))+(IKabs((((sj2*x5334*x5337))+(((-1.0)*x5335*x5337))+((r12*x5336*x5337))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x5338=((-1.0)*r11);
CheckValue<IkReal> x5341 = IKatan2WithCheck(IkReal(x5338),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5341.valid){
continue;
}
IkReal x5339=((1.0)*(x5341.value));
IkReal x5340=x5322;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst124;
cj6=gconst125;
j6=((3.14159265)+(((-1.0)*x5339)));
IkReal gconst123=((3.14159265358979)+(((-1.0)*x5339)));
IkReal gconst124=(x5338*x5340);
IkReal gconst125=((1.0)*r10*x5340);
IkReal x5342=r12*r12;
IkReal x5343=((1.0)+(((-1.0)*x5342)));
IkReal x5344=(cj0*r22*sj1);
IkReal x5345=(cj1*r22*sj0);
CheckValue<IkReal> x5352=IKPowWithIntegerCheck(x5343,-1);
if(!x5352.valid){
continue;
}
IkReal x5346=x5352.value;
CheckValue<IkReal> x5353=IKPowWithIntegerCheck(((-1.0)+x5342),-1);
if(!x5353.valid){
continue;
}
IkReal x5347=x5353.value;
IkReal x5348=((1.0)*x5346);
if((x5343) < -0.00001)
continue;
IkReal x5349=IKsqrt(x5343);
IkReal x5350=((1.0)*r12*x5347*x5349);
IkReal x5351=((((-1.0)*x5348*(r10*r10)*(r20*r20)))+(((-1.0)*x5348*(r11*r11)*(r21*r21)))+(((-2.0)*r10*r11*r20*r21*x5346))+(((-1.0)*(r22*r22))));
j5eval[0]=x5351;
j5eval[1]=IKsign(x5351);
j5eval[2]=((IKabs(((((-1.0)*x5345*x5350))+(((-1.0)*x5344*x5350)))))+(IKabs((x5344+x5345))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5354=(gconst124*r21);
IkReal x5355=(cj0*sj1);
IkReal x5356=(cj1*sj0);
IkReal x5357=(gconst125*r20);
CheckValue<IkReal> x5358=IKPowWithIntegerCheck(IKsign(((((2.0)*x5354*x5357))+(((-1.0)*(x5354*x5354)))+(((-1.0)*(r22*r22)))+(((-1.0)*(x5357*x5357))))),-1);
if(!x5358.valid){
continue;
}
CheckValue<IkReal> x5359 = IKatan2WithCheck(IkReal((((r22*x5356))+((r22*x5355)))),IkReal(((((-1.0)*x5355*x5357))+((x5354*x5356))+((x5354*x5355))+(((-1.0)*x5356*x5357)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5359.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5358.value)))+(x5359.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5360=IKsin(j5);
IkReal x5361=IKcos(j5);
IkReal x5362=(sj0*sj1);
IkReal x5363=((1.0)*gconst125);
IkReal x5364=((1.0)*cj0*cj1);
IkReal x5365=(gconst124*x5360);
IkReal x5366=(r10*x5363);
IkReal x5367=(gconst124*x5361);
IkReal x5368=((1.0)*x5361);
evalcond[0]=((((-1.0)*r22*x5368))+((r21*x5365))+(((-1.0)*r20*x5360*x5363)));
evalcond[1]=(cj2+(((-1.0)*x5360*x5366))+(((-1.0)*r12*x5368))+((r11*x5365)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x5360*x5363))+(((-1.0)*r02*x5368))+((r01*x5365)));
evalcond[3]=(((r22*x5360))+((cj1*sj0))+((r21*x5367))+(((-1.0)*r20*x5361*x5363))+((cj0*sj1)));
evalcond[4]=(((r02*x5360))+(((-1.0)*cj2*x5364))+((cj2*x5362))+(((-1.0)*r00*x5361*x5363))+((r01*x5367)));
evalcond[5]=(((r12*x5360))+(((-1.0)*sj2*x5364))+(((-1.0)*x5361*x5366))+((sj2*x5362))+((r11*x5367)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5369=((1.0)*sj2);
IkReal x5370=((1.0)*gconst124);
CheckValue<IkReal> x5371=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst125*r21))+(((-1.0)*r20*x5370)))),-1);
if(!x5371.valid){
continue;
}
CheckValue<IkReal> x5372 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x5369))+(((-1.0)*cj2*r02)))),IkReal((((cj2*gconst125*r00))+((gconst125*r10*sj2))+(((-1.0)*cj2*r01*x5370))+(((-1.0)*gconst124*r11*x5369)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5372.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5371.value)))+(x5372.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5373=IKsin(j5);
IkReal x5374=IKcos(j5);
IkReal x5375=(sj0*sj1);
IkReal x5376=((1.0)*gconst125);
IkReal x5377=((1.0)*cj0*cj1);
IkReal x5378=(gconst124*x5373);
IkReal x5379=(r10*x5376);
IkReal x5380=(gconst124*x5374);
IkReal x5381=((1.0)*x5374);
evalcond[0]=(((r21*x5378))+(((-1.0)*r20*x5373*x5376))+(((-1.0)*r22*x5381)));
evalcond[1]=(cj2+(((-1.0)*x5373*x5379))+(((-1.0)*r12*x5381))+((r11*x5378)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x5373*x5376))+(((-1.0)*r02*x5381))+((r01*x5378)));
evalcond[3]=(((cj1*sj0))+((r22*x5373))+((r21*x5380))+((cj0*sj1))+(((-1.0)*r20*x5374*x5376)));
evalcond[4]=(((cj2*x5375))+((r02*x5373))+(((-1.0)*r00*x5374*x5376))+(((-1.0)*cj2*x5377))+((r01*x5380)));
evalcond[5]=(((sj2*x5375))+((r11*x5380))+((r12*x5373))+(((-1.0)*x5374*x5379))+(((-1.0)*sj2*x5377)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5382=((1.0)*gconst125);
CheckValue<IkReal> x5383 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x5382))+((cj2*gconst124*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5383.valid){
continue;
}
CheckValue<IkReal> x5384=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst124*r00))+(((-1.0)*r01*x5382)))),-1);
if(!x5384.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5383.value)+(((1.5707963267949)*(x5384.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5385=IKsin(j5);
IkReal x5386=IKcos(j5);
IkReal x5387=(sj0*sj1);
IkReal x5388=((1.0)*gconst125);
IkReal x5389=((1.0)*cj0*cj1);
IkReal x5390=(gconst124*x5385);
IkReal x5391=(r10*x5388);
IkReal x5392=(gconst124*x5386);
IkReal x5393=((1.0)*x5386);
evalcond[0]=((((-1.0)*r20*x5385*x5388))+(((-1.0)*r22*x5393))+((r21*x5390)));
evalcond[1]=(cj2+(((-1.0)*x5385*x5391))+((r11*x5390))+(((-1.0)*r12*x5393)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x5393))+(((-1.0)*r00*x5385*x5388))+((r01*x5390)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r20*x5386*x5388))+((r21*x5392))+((cj0*sj1))+((r22*x5385)));
evalcond[4]=((((-1.0)*r00*x5386*x5388))+((r02*x5385))+(((-1.0)*cj2*x5389))+((cj2*x5387))+((r01*x5392)));
evalcond[5]=(((r11*x5392))+((sj2*x5387))+((r12*x5385))+(((-1.0)*x5386*x5391))+(((-1.0)*sj2*x5389)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal x5394=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x5394;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x5394);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal x5395=((1.0)*cj6);
IkReal x5396=((((-1.0)*r00*sj6))+(((-1.0)*r01*x5395)));
j5eval[0]=x5396;
j5eval[1]=IKsign(x5396);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x5395)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal x5397=cj6*cj6;
IkReal x5398=r11*r11;
IkReal x5399=(r11*sj6);
IkReal x5400=(cj6*r10);
IkReal x5401=((((-1.0)*x5397*(r10*r10)))+(((-1.0)*(r12*r12)))+(((2.0)*x5399*x5400))+((x5397*x5398))+(((-1.0)*x5398)));
j5eval[0]=x5401;
j5eval[1]=((IKabs(r12))+(IKabs(((((-1.0)*x5400))+x5399))));
j5eval[2]=IKsign(x5401);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5402=cj6*cj6;
IkReal x5403=r11*r11;
IkReal x5404=(r11*sj6);
IkReal x5405=(cj6*r10);
CheckValue<IkReal> x5406=IKPowWithIntegerCheck(IKsign(((((-1.0)*x5403))+((x5402*x5403))+(((-1.0)*(r12*r12)))+(((-1.0)*x5402*(r10*r10)))+(((2.0)*x5404*x5405)))),-1);
if(!x5406.valid){
continue;
}
CheckValue<IkReal> x5407 = IKatan2WithCheck(IkReal(((((-1.0)*x5405))+x5404)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x5407.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5406.value)))+(x5407.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5408=IKcos(j5);
IkReal x5409=IKsin(j5);
IkReal x5410=(sj6*x5409);
IkReal x5411=((1.0)*x5408);
IkReal x5412=(sj6*x5408);
IkReal x5413=((1.0)*cj6*x5409);
evalcond[0]=(((r12*x5409))+((r11*x5412))+(((-1.0)*cj6*r10*x5411)));
evalcond[1]=((((-1.0)*r20*x5413))+(((-1.0)*r22*x5411))+((r21*x5410)));
evalcond[2]=((((-1.0)*r00*x5413))+(((-1.0)*r02*x5411))+((r01*x5410)));
evalcond[3]=((1.0)+((r11*x5410))+(((-1.0)*r10*x5413))+(((-1.0)*r12*x5411)));
evalcond[4]=((((-1.0)*cj6*r20*x5411))+((r22*x5409))+((cj1*sj0))+((r21*x5412))+((cj0*sj1)));
evalcond[5]=((((-1.0)*cj6*r00*x5411))+((r02*x5409))+((sj0*sj1))+((r01*x5412))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5414=((1.0)*cj6);
CheckValue<IkReal> x5415 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x5414)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5415.valid){
continue;
}
CheckValue<IkReal> x5416=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x5414)))),-1);
if(!x5416.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5415.value)+(((1.5707963267949)*(x5416.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5417=IKcos(j5);
IkReal x5418=IKsin(j5);
IkReal x5419=(sj6*x5418);
IkReal x5420=((1.0)*x5417);
IkReal x5421=(sj6*x5417);
IkReal x5422=((1.0)*cj6*x5418);
evalcond[0]=(((r12*x5418))+(((-1.0)*cj6*r10*x5420))+((r11*x5421)));
evalcond[1]=((((-1.0)*r20*x5422))+((r21*x5419))+(((-1.0)*r22*x5420)));
evalcond[2]=(((r01*x5419))+(((-1.0)*r02*x5420))+(((-1.0)*r00*x5422)));
evalcond[3]=((1.0)+((r11*x5419))+(((-1.0)*r10*x5422))+(((-1.0)*r12*x5420)));
evalcond[4]=(((cj1*sj0))+((r22*x5418))+((r21*x5421))+((cj0*sj1))+(((-1.0)*cj6*r20*x5420)));
evalcond[5]=(((r01*x5421))+((r02*x5418))+((sj0*sj1))+(((-1.0)*cj6*r00*x5420))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x5423=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x5423.valid){
continue;
}
CheckValue<IkReal> x5424 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5424.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5423.value)))+(x5424.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5425=IKcos(j5);
IkReal x5426=IKsin(j5);
IkReal x5427=(sj6*x5426);
IkReal x5428=((1.0)*x5425);
IkReal x5429=(sj6*x5425);
IkReal x5430=((1.0)*cj6*x5426);
evalcond[0]=(((r12*x5426))+(((-1.0)*cj6*r10*x5428))+((r11*x5429)));
evalcond[1]=(((r21*x5427))+(((-1.0)*r20*x5430))+(((-1.0)*r22*x5428)));
evalcond[2]=((((-1.0)*r00*x5430))+((r01*x5427))+(((-1.0)*r02*x5428)));
evalcond[3]=((1.0)+(((-1.0)*r10*x5430))+((r11*x5427))+(((-1.0)*r12*x5428)));
evalcond[4]=(((cj1*sj0))+((r22*x5426))+((r21*x5429))+((cj0*sj1))+(((-1.0)*cj6*r20*x5428)));
evalcond[5]=(((r01*x5429))+((sj0*sj1))+((r02*x5426))+(((-1.0)*cj6*r00*x5428))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x5431=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x5431;
j5eval[1]=IKsign(x5431);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x5432=((1.0)*cj6);
IkReal x5433=((((-1.0)*r21*x5432))+(((-1.0)*r20*sj6)));
j5eval[0]=x5433;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x5432))))));
j5eval[2]=IKsign(x5433);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x5434=cj6*cj6;
IkReal x5435=r11*r11;
IkReal x5436=(r11*sj6);
IkReal x5437=(cj6*r10);
IkReal x5438=((r12*r12)+x5435+(((-1.0)*x5434*x5435))+(((-2.0)*x5436*x5437))+((x5434*(r10*r10))));
j5eval[0]=x5438;
j5eval[1]=IKsign(x5438);
j5eval[2]=((IKabs((x5436+(((-1.0)*x5437)))))+(IKabs(r12)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5439=cj6*cj6;
IkReal x5440=r11*r11;
IkReal x5441=(r11*sj6);
IkReal x5442=(cj6*r10);
CheckValue<IkReal> x5443 = IKatan2WithCheck(IkReal(((((-1.0)*x5442))+x5441)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x5443.valid){
continue;
}
CheckValue<IkReal> x5444=IKPowWithIntegerCheck(IKsign(((r12*r12)+x5440+(((-2.0)*x5441*x5442))+(((-1.0)*x5439*x5440))+((x5439*(r10*r10))))),-1);
if(!x5444.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5443.value)+(((1.5707963267949)*(x5444.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5445=IKcos(j5);
IkReal x5446=IKsin(j5);
IkReal x5447=(sj6*x5446);
IkReal x5448=((1.0)*x5445);
IkReal x5449=(sj6*x5445);
IkReal x5450=((1.0)*cj6*x5446);
evalcond[0]=((((-1.0)*cj6*r10*x5448))+((r12*x5446))+((r11*x5449)));
evalcond[1]=((((-1.0)*r22*x5448))+(((-1.0)*r20*x5450))+((r21*x5447)));
evalcond[2]=(((r01*x5447))+(((-1.0)*r02*x5448))+(((-1.0)*r00*x5450)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x5448))+(((-1.0)*r10*x5450))+((r11*x5447)));
evalcond[4]=(((cj1*sj0))+((r22*x5446))+((r21*x5449))+((cj0*sj1))+(((-1.0)*cj6*r20*x5448)));
evalcond[5]=(((r01*x5449))+((cj0*cj1))+(((-1.0)*cj6*r00*x5448))+(((-1.0)*sj0*sj1))+((r02*x5446)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5451=((1.0)*cj6);
CheckValue<IkReal> x5452 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*r00*x5451)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5452.valid){
continue;
}
CheckValue<IkReal> x5453=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x5451))+(((-1.0)*r20*sj6)))),-1);
if(!x5453.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5452.value)+(((1.5707963267949)*(x5453.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5454=IKcos(j5);
IkReal x5455=IKsin(j5);
IkReal x5456=(sj6*x5455);
IkReal x5457=((1.0)*x5454);
IkReal x5458=(sj6*x5454);
IkReal x5459=((1.0)*cj6*x5455);
evalcond[0]=(((r12*x5455))+(((-1.0)*cj6*r10*x5457))+((r11*x5458)));
evalcond[1]=(((r21*x5456))+(((-1.0)*r20*x5459))+(((-1.0)*r22*x5457)));
evalcond[2]=(((r01*x5456))+(((-1.0)*r02*x5457))+(((-1.0)*r00*x5459)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x5457))+(((-1.0)*r10*x5459))+((r11*x5456)));
evalcond[4]=(((cj1*sj0))+((r21*x5458))+((r22*x5455))+(((-1.0)*cj6*r20*x5457))+((cj0*sj1)));
evalcond[5]=(((r01*x5458))+((cj0*cj1))+((r02*x5455))+(((-1.0)*sj0*sj1))+(((-1.0)*cj6*r00*x5457)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x5460=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x5460.valid){
continue;
}
CheckValue<IkReal> x5461 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5461.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5460.value)))+(x5461.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5462=IKcos(j5);
IkReal x5463=IKsin(j5);
IkReal x5464=(sj6*x5463);
IkReal x5465=((1.0)*x5462);
IkReal x5466=(sj6*x5462);
IkReal x5467=((1.0)*cj6*x5463);
evalcond[0]=((((-1.0)*cj6*r10*x5465))+((r11*x5466))+((r12*x5463)));
evalcond[1]=((((-1.0)*r20*x5467))+((r21*x5464))+(((-1.0)*r22*x5465)));
evalcond[2]=(((r01*x5464))+(((-1.0)*r02*x5465))+(((-1.0)*r00*x5467)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x5467))+((r11*x5464))+(((-1.0)*r12*x5465)));
evalcond[4]=(((r22*x5463))+((cj1*sj0))+((r21*x5466))+(((-1.0)*cj6*r20*x5465))+((cj0*sj1)));
evalcond[5]=(((r01*x5466))+(((-1.0)*cj6*r00*x5465))+((r02*x5463))+((cj0*cj1))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5468=((-1.0)*r00);
IkReal x5470 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x5470)==0){
continue;
}
IkReal x5469=pow(x5470,-0.5);
CheckValue<IkReal> x5471 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x5468),IKFAST_ATAN2_MAGTHRESH);
if(!x5471.valid){
continue;
}
IkReal gconst126=((-1.0)*(x5471.value));
IkReal gconst127=(r01*x5469);
IkReal gconst128=(x5468*x5469);
CheckValue<IkReal> x5472 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x5472.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x5472.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x5473=((-1.0)*r00);
IkReal x5474=x5469;
CheckValue<IkReal> x5476 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x5473),IKFAST_ATAN2_MAGTHRESH);
if(!x5476.valid){
continue;
}
IkReal x5475=((-1.0)*(x5476.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst127;
cj6=gconst128;
j6=x5475;
IkReal gconst126=x5475;
IkReal gconst127=(r01*x5474);
IkReal gconst128=(x5473*x5474);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5477=((1.0)*sj2);
IkReal x5478=((1.0)*gconst127);
CheckValue<IkReal> x5479=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst128*r21))+(((-1.0)*r20*x5478)))),-1);
if(!x5479.valid){
continue;
}
CheckValue<IkReal> x5480 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x5477))+(((-1.0)*cj2*r02)))),IkReal((((cj2*gconst128*r00))+((gconst128*r10*sj2))+(((-1.0)*cj2*r01*x5478))+(((-1.0)*gconst127*r11*x5477)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5480.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5479.value)))+(x5480.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5481=IKsin(j5);
IkReal x5482=IKcos(j5);
IkReal x5483=(gconst127*r01);
IkReal x5484=(sj0*sj1);
IkReal x5485=(gconst128*r10);
IkReal x5486=(gconst128*r20);
IkReal x5487=((1.0)*gconst128*r00);
IkReal x5488=((1.0)*cj0*cj1);
IkReal x5489=((1.0)*x5482);
IkReal x5490=((1.0)*x5481);
IkReal x5491=(gconst127*x5482);
IkReal x5492=(gconst127*x5481);
evalcond[0]=((((-1.0)*r22*x5489))+((r21*x5492))+(((-1.0)*x5486*x5490)));
evalcond[1]=((((-1.0)*r12*x5489))+cj2+(((-1.0)*x5485*x5490))+((r11*x5492)));
evalcond[2]=(((x5481*x5483))+(((-1.0)*x5481*x5487))+(((-1.0)*sj2))+(((-1.0)*r02*x5489)));
evalcond[3]=((((-1.0)*x5486*x5489))+((cj1*sj0))+((r21*x5491))+((r22*x5481))+((cj0*sj1)));
evalcond[4]=(((x5482*x5483))+((cj2*x5484))+(((-1.0)*cj2*x5488))+((r02*x5481))+(((-1.0)*x5482*x5487)));
evalcond[5]=((((-1.0)*x5485*x5489))+((r12*x5481))+((r11*x5491))+((sj2*x5484))+(((-1.0)*sj2*x5488)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5493=((1.0)*gconst128);
CheckValue<IkReal> x5494 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x5493))+((gconst127*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5494.valid){
continue;
}
CheckValue<IkReal> x5495=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x5493))+(((-1.0)*gconst127*r10)))),-1);
if(!x5495.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5494.value)+(((1.5707963267949)*(x5495.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5496=IKsin(j5);
IkReal x5497=IKcos(j5);
IkReal x5498=(gconst127*r01);
IkReal x5499=(sj0*sj1);
IkReal x5500=(gconst128*r10);
IkReal x5501=(gconst128*r20);
IkReal x5502=((1.0)*gconst128*r00);
IkReal x5503=((1.0)*cj0*cj1);
IkReal x5504=((1.0)*x5497);
IkReal x5505=((1.0)*x5496);
IkReal x5506=(gconst127*x5497);
IkReal x5507=(gconst127*x5496);
evalcond[0]=((((-1.0)*r22*x5504))+(((-1.0)*x5501*x5505))+((r21*x5507)));
evalcond[1]=(cj2+(((-1.0)*x5500*x5505))+(((-1.0)*r12*x5504))+((r11*x5507)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*x5496*x5502))+(((-1.0)*r02*x5504))+((x5496*x5498)));
evalcond[3]=((((-1.0)*x5501*x5504))+((cj1*sj0))+((r21*x5506))+((r22*x5496))+((cj0*sj1)));
evalcond[4]=((((-1.0)*x5497*x5502))+((cj2*x5499))+(((-1.0)*cj2*x5503))+((x5497*x5498))+((r02*x5496)));
evalcond[5]=((((-1.0)*x5500*x5504))+((r12*x5496))+((r11*x5506))+((sj2*x5499))+(((-1.0)*sj2*x5503)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5508=((-1.0)*r01);
IkReal x5510 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x5510)==0){
continue;
}
IkReal x5509=pow(x5510,-0.5);
CheckValue<IkReal> x5511 = IKatan2WithCheck(IkReal(x5508),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x5511.valid){
continue;
}
IkReal gconst129=((3.14159265358979)+(((-1.0)*(x5511.value))));
IkReal gconst130=(x5508*x5509);
IkReal gconst131=((1.0)*r00*x5509);
CheckValue<IkReal> x5512 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x5512.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x5512.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x5513=((-1.0)*r01);
CheckValue<IkReal> x5516 = IKatan2WithCheck(IkReal(x5513),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x5516.valid){
continue;
}
IkReal x5514=((1.0)*(x5516.value));
IkReal x5515=x5509;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst130;
cj6=gconst131;
j6=((3.14159265)+(((-1.0)*x5514)));
IkReal gconst129=((3.14159265358979)+(((-1.0)*x5514)));
IkReal gconst130=(x5513*x5515);
IkReal gconst131=((1.0)*r00*x5515);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=cj2;
j5eval[3]=r22;
j5eval[4]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x5517=((-1.0)*r01);
CheckValue<IkReal> x5520 = IKatan2WithCheck(IkReal(x5517),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x5520.valid){
continue;
}
IkReal x5518=((1.0)*(x5520.value));
IkReal x5519=x5509;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst130;
cj6=gconst131;
j6=((3.14159265)+(((-1.0)*x5518)));
IkReal gconst129=((3.14159265358979)+(((-1.0)*x5518)));
IkReal gconst130=(x5517*x5519);
IkReal gconst131=((1.0)*r00*x5519);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x5521=((-1.0)*r01);
CheckValue<IkReal> x5524 = IKatan2WithCheck(IkReal(x5521),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x5524.valid){
continue;
}
IkReal x5522=((1.0)*(x5524.value));
IkReal x5523=x5509;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst130;
cj6=gconst131;
j6=((3.14159265)+(((-1.0)*x5522)));
IkReal gconst129=((3.14159265358979)+(((-1.0)*x5522)));
IkReal gconst130=(x5521*x5523);
IkReal gconst131=((1.0)*r00*x5523);
IkReal x5525=r02*r02;
IkReal x5526=(r12*sj2);
IkReal x5527=((1.0)*cj2);
IkReal x5528=x5509;
j5eval[0]=((IKabs(((((-1.0)*r02*x5527))+(((-1.0)*x5526)))))+(IKabs(((((-1.0)*x5527*x5528))+((r02*x5526*x5528))+((cj2*x5525*x5528))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5529=((1.0)*sj2);
IkReal x5530=((1.0)*cj2);
CheckValue<IkReal> x5531=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst131*r21))+(((-1.0)*gconst130*r20)))),-1);
if(!x5531.valid){
continue;
}
CheckValue<IkReal> x5532 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x5530))+(((-1.0)*r12*x5529)))),IkReal(((((-1.0)*gconst130*r01*x5530))+(((-1.0)*gconst130*r11*x5529))+((gconst131*r10*sj2))+((cj2*gconst131*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5532.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5531.value)))+(x5532.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5533=IKsin(j5);
IkReal x5534=IKcos(j5);
IkReal x5535=(sj0*sj1);
IkReal x5536=((1.0)*cj0*cj1);
IkReal x5537=(gconst130*x5533);
IkReal x5538=(gconst130*x5534);
IkReal x5539=((1.0)*x5534);
IkReal x5540=((1.0)*gconst131*x5533);
evalcond[0]=((((-1.0)*r22*x5539))+((r21*x5537))+(((-1.0)*r20*x5540)));
evalcond[1]=(cj2+(((-1.0)*r10*x5540))+((r11*x5537))+(((-1.0)*r12*x5539)));
evalcond[2]=((((-1.0)*r00*x5540))+(((-1.0)*r02*x5539))+(((-1.0)*sj2))+((r01*x5537)));
evalcond[3]=(((cj1*sj0))+((r22*x5533))+((r21*x5538))+(((-1.0)*gconst131*r20*x5539))+((cj0*sj1)));
evalcond[4]=(((cj2*x5535))+((r01*x5538))+(((-1.0)*cj2*x5536))+(((-1.0)*gconst131*r00*x5539))+((r02*x5533)));
evalcond[5]=((((-1.0)*gconst131*r10*x5539))+(((-1.0)*sj2*x5536))+((r11*x5538))+((sj2*x5535))+((r12*x5533)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5541=((1.0)*gconst131);
CheckValue<IkReal> x5542=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x5541))+(((-1.0)*gconst130*r10)))),-1);
if(!x5542.valid){
continue;
}
CheckValue<IkReal> x5543 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst130*r21*sj2))+(((-1.0)*r20*sj2*x5541)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5543.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5542.value)))+(x5543.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5544=IKsin(j5);
IkReal x5545=IKcos(j5);
IkReal x5546=(sj0*sj1);
IkReal x5547=((1.0)*cj0*cj1);
IkReal x5548=(gconst130*x5544);
IkReal x5549=(gconst130*x5545);
IkReal x5550=((1.0)*x5545);
IkReal x5551=((1.0)*gconst131*x5544);
evalcond[0]=((((-1.0)*r20*x5551))+(((-1.0)*r22*x5550))+((r21*x5548)));
evalcond[1]=(cj2+((r11*x5548))+(((-1.0)*r12*x5550))+(((-1.0)*r10*x5551)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x5551))+(((-1.0)*r02*x5550))+((r01*x5548)));
evalcond[3]=(((cj1*sj0))+((r22*x5544))+(((-1.0)*gconst131*r20*x5550))+((cj0*sj1))+((r21*x5549)));
evalcond[4]=(((cj2*x5546))+(((-1.0)*cj2*x5547))+((r02*x5544))+(((-1.0)*gconst131*r00*x5550))+((r01*x5549)));
evalcond[5]=((((-1.0)*gconst131*r10*x5550))+((r12*x5544))+(((-1.0)*sj2*x5547))+((r11*x5549))+((sj2*x5546)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5552=((1.0)*gconst131);
CheckValue<IkReal> x5553=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x5552))+(((-1.0)*gconst130*r00)))),-1);
if(!x5553.valid){
continue;
}
CheckValue<IkReal> x5554 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst130*r21))+(((-1.0)*cj2*r20*x5552)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5554.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5553.value)))+(x5554.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5555=IKsin(j5);
IkReal x5556=IKcos(j5);
IkReal x5557=(sj0*sj1);
IkReal x5558=((1.0)*cj0*cj1);
IkReal x5559=(gconst130*x5555);
IkReal x5560=(gconst130*x5556);
IkReal x5561=((1.0)*x5556);
IkReal x5562=((1.0)*gconst131*x5555);
evalcond[0]=((((-1.0)*r22*x5561))+((r21*x5559))+(((-1.0)*r20*x5562)));
evalcond[1]=((((-1.0)*r12*x5561))+cj2+((r11*x5559))+(((-1.0)*r10*x5562)));
evalcond[2]=((((-1.0)*sj2))+((r01*x5559))+(((-1.0)*r00*x5562))+(((-1.0)*r02*x5561)));
evalcond[3]=((((-1.0)*gconst131*r20*x5561))+((cj1*sj0))+((r21*x5560))+((r22*x5555))+((cj0*sj1)));
evalcond[4]=(((cj2*x5557))+(((-1.0)*gconst131*r00*x5561))+(((-1.0)*cj2*x5558))+((r02*x5555))+((r01*x5560)));
evalcond[5]=((((-1.0)*sj2*x5558))+((r12*x5555))+(((-1.0)*gconst131*r10*x5561))+((r11*x5560))+((sj2*x5557)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x5563=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x5563;
j5eval[1]=IKsign(x5563);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x5564=((1.0)*cj6);
IkReal x5565=((((-1.0)*r10*sj6))+(((-1.0)*r11*x5564)));
j5eval[0]=x5565;
j5eval[1]=IKsign(x5565);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x5564)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x5566=cj6*cj6;
IkReal x5567=r01*r01;
IkReal x5568=(r01*sj6);
IkReal x5569=(cj6*r00);
IkReal x5570=(x5567+(((-2.0)*x5568*x5569))+((x5566*(r00*r00)))+(r02*r02)+(((-1.0)*x5566*x5567)));
j5eval[0]=x5570;
j5eval[1]=((IKabs(r02))+(IKabs((x5568+(((-1.0)*x5569))))));
j5eval[2]=IKsign(x5570);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5571=cj6*cj6;
IkReal x5572=r01*r01;
IkReal x5573=(r01*sj6);
IkReal x5574=(cj6*r00);
CheckValue<IkReal> x5575 = IKatan2WithCheck(IkReal((x5573+(((-1.0)*x5574)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x5575.valid){
continue;
}
CheckValue<IkReal> x5576=IKPowWithIntegerCheck(IKsign((x5572+(((-2.0)*x5573*x5574))+(r02*r02)+(((-1.0)*x5571*x5572))+((x5571*(r00*r00))))),-1);
if(!x5576.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5575.value)+(((1.5707963267949)*(x5576.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5577=IKcos(j5);
IkReal x5578=IKsin(j5);
IkReal x5579=(sj6*x5578);
IkReal x5580=((1.0)*x5577);
IkReal x5581=(sj6*x5577);
IkReal x5582=((1.0)*cj6*x5578);
evalcond[0]=(((r02*x5578))+(((-1.0)*cj6*r00*x5580))+((r01*x5581)));
evalcond[1]=((((-1.0)*r20*x5582))+((r21*x5579))+(((-1.0)*r22*x5580)));
evalcond[2]=((((-1.0)*r12*x5580))+(((-1.0)*r10*x5582))+((r11*x5579)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x5580))+(((-1.0)*r00*x5582))+((r01*x5579)));
evalcond[4]=(((r21*x5581))+((cj1*sj0))+((r22*x5578))+(((-1.0)*cj6*r20*x5580))+((cj0*sj1)));
evalcond[5]=((((-1.0)*cj6*r10*x5580))+((r11*x5581))+((sj0*sj1))+((r12*x5578))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5583=((1.0)*cj6);
CheckValue<IkReal> x5584=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x5583)))),-1);
if(!x5584.valid){
continue;
}
CheckValue<IkReal> x5585 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x5583))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5585.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5584.value)))+(x5585.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5586=IKcos(j5);
IkReal x5587=IKsin(j5);
IkReal x5588=(sj6*x5587);
IkReal x5589=((1.0)*x5586);
IkReal x5590=(sj6*x5586);
IkReal x5591=((1.0)*cj6*x5587);
evalcond[0]=((((-1.0)*cj6*r00*x5589))+((r02*x5587))+((r01*x5590)));
evalcond[1]=(((r21*x5588))+(((-1.0)*r20*x5591))+(((-1.0)*r22*x5589)));
evalcond[2]=((((-1.0)*r12*x5589))+((r11*x5588))+(((-1.0)*r10*x5591)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x5589))+(((-1.0)*r00*x5591))+((r01*x5588)));
evalcond[4]=(((r21*x5590))+((cj1*sj0))+(((-1.0)*cj6*r20*x5589))+((r22*x5587))+((cj0*sj1)));
evalcond[5]=((((-1.0)*cj6*r10*x5589))+((r11*x5590))+((sj0*sj1))+((r12*x5587))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x5592=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x5592.valid){
continue;
}
CheckValue<IkReal> x5593 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5593.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5592.value)))+(x5593.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5594=IKcos(j5);
IkReal x5595=IKsin(j5);
IkReal x5596=(sj6*x5595);
IkReal x5597=((1.0)*x5594);
IkReal x5598=(sj6*x5594);
IkReal x5599=((1.0)*cj6*x5595);
evalcond[0]=((((-1.0)*cj6*r00*x5597))+((r02*x5595))+((r01*x5598)));
evalcond[1]=(((r21*x5596))+(((-1.0)*r20*x5599))+(((-1.0)*r22*x5597)));
evalcond[2]=((((-1.0)*r12*x5597))+((r11*x5596))+(((-1.0)*r10*x5599)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x5597))+(((-1.0)*r00*x5599))+((r01*x5596)));
evalcond[4]=(((r21*x5598))+((cj1*sj0))+(((-1.0)*cj6*r20*x5597))+((r22*x5595))+((cj0*sj1)));
evalcond[5]=((((-1.0)*cj6*r10*x5597))+((r11*x5598))+((r12*x5595))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x5600=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x5600;
j5eval[1]=IKsign(x5600);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x5601=((1.0)*cj6);
IkReal x5602=((((-1.0)*r21*x5601))+(((-1.0)*r20*sj6)));
j5eval[0]=x5602;
j5eval[1]=((IKabs(r12))+(IKabs(((((-1.0)*r10*x5601))+((r11*sj6))))));
j5eval[2]=IKsign(x5602);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x5603=(cj0*sj1);
IkReal x5604=(cj1*sj0);
IkReal x5605=(r01*sj6);
IkReal x5606=((1.0)*r02);
IkReal x5607=((1.0)*cj6*r00);
IkReal x5608=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x5608;
j5eval[1]=IKsign(x5608);
j5eval[2]=((IKabs(((((-1.0)*x5603*x5606))+(((-1.0)*x5604*x5606)))))+(IKabs((((x5603*x5605))+((x5604*x5605))+(((-1.0)*x5603*x5607))+(((-1.0)*x5604*x5607))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5609=(cj0*sj1);
IkReal x5610=(cj1*sj0);
IkReal x5611=(r01*sj6);
IkReal x5612=((1.0)*r02);
IkReal x5613=((1.0)*cj6*r00);
CheckValue<IkReal> x5614 = IKatan2WithCheck(IkReal(((((-1.0)*x5609*x5613))+((x5609*x5611))+((x5610*x5611))+(((-1.0)*x5610*x5613)))),IkReal(((((-1.0)*x5609*x5612))+(((-1.0)*x5610*x5612)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5614.valid){
continue;
}
CheckValue<IkReal> x5615=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x5615.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5614.value)+(((1.5707963267949)*(x5615.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5616=IKcos(j5);
IkReal x5617=IKsin(j5);
IkReal x5618=(sj6*x5617);
IkReal x5619=((1.0)*x5616);
IkReal x5620=(sj6*x5616);
IkReal x5621=((1.0)*cj6*x5617);
evalcond[0]=(((r02*x5617))+(((-1.0)*cj6*r00*x5619))+((r01*x5620)));
evalcond[1]=((((-1.0)*r22*x5619))+((r21*x5618))+(((-1.0)*r20*x5621)));
evalcond[2]=((((-1.0)*r10*x5621))+(((-1.0)*r12*x5619))+((r11*x5618)));
evalcond[3]=((1.0)+(((-1.0)*r00*x5621))+((r01*x5618))+(((-1.0)*r02*x5619)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*cj6*r20*x5619))+((r21*x5620))+((cj0*sj1))+((r22*x5617)));
evalcond[5]=(((cj0*cj1))+((r12*x5617))+((r11*x5620))+(((-1.0)*sj0*sj1))+(((-1.0)*cj6*r10*x5619)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5622=((1.0)*cj6);
CheckValue<IkReal> x5623 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*r10*x5622))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5623.valid){
continue;
}
CheckValue<IkReal> x5624=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x5622))+(((-1.0)*r20*sj6)))),-1);
if(!x5624.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5623.value)+(((1.5707963267949)*(x5624.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5625=IKcos(j5);
IkReal x5626=IKsin(j5);
IkReal x5627=(sj6*x5626);
IkReal x5628=((1.0)*x5625);
IkReal x5629=(sj6*x5625);
IkReal x5630=((1.0)*cj6*x5626);
evalcond[0]=(((r02*x5626))+(((-1.0)*cj6*r00*x5628))+((r01*x5629)));
evalcond[1]=((((-1.0)*r22*x5628))+(((-1.0)*r20*x5630))+((r21*x5627)));
evalcond[2]=((((-1.0)*r12*x5628))+((r11*x5627))+(((-1.0)*r10*x5630)));
evalcond[3]=((1.0)+((r01*x5627))+(((-1.0)*r00*x5630))+(((-1.0)*r02*x5628)));
evalcond[4]=(((cj1*sj0))+((r21*x5629))+(((-1.0)*cj6*r20*x5628))+((r22*x5626))+((cj0*sj1)));
evalcond[5]=((((-1.0)*cj6*r10*x5628))+((cj0*cj1))+((r12*x5626))+((r11*x5629))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x5631 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5631.valid){
continue;
}
CheckValue<IkReal> x5632=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x5632.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5631.value)+(((1.5707963267949)*(x5632.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5633=IKcos(j5);
IkReal x5634=IKsin(j5);
IkReal x5635=(sj6*x5634);
IkReal x5636=((1.0)*x5633);
IkReal x5637=(sj6*x5633);
IkReal x5638=((1.0)*cj6*x5634);
evalcond[0]=(((r01*x5637))+((r02*x5634))+(((-1.0)*cj6*r00*x5636)));
evalcond[1]=((((-1.0)*r20*x5638))+(((-1.0)*r22*x5636))+((r21*x5635)));
evalcond[2]=((((-1.0)*r12*x5636))+((r11*x5635))+(((-1.0)*r10*x5638)));
evalcond[3]=((1.0)+((r01*x5635))+(((-1.0)*r02*x5636))+(((-1.0)*r00*x5638)));
evalcond[4]=(((cj1*sj0))+((r22*x5634))+(((-1.0)*cj6*r20*x5636))+((cj0*sj1))+((r21*x5637)));
evalcond[5]=(((r12*x5634))+((r11*x5637))+((cj0*cj1))+(((-1.0)*cj6*r10*x5636))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x5639=((-1.0)*px);
sj4=0;
cj4=1.0;
j4=0;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x5639);
rxp1_1=(px*r21);
rxp1_2=(r11*x5639);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=((((-1.0)*cj6*r20))+((r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x5642=IKPowWithIntegerCheck(((((-1.0)*cj6*r20))+((r21*sj6))),-1);
if(!x5642.valid){
continue;
}
IkReal x5640=x5642.value;
IkReal x5641=((1.0)*x5640);
cj5array[0]=((((-1.0)*cj0*sj1*x5641))+(((-1.0)*cj1*sj0*x5641)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x5643=IKsin(j5);
IkReal x5644=(sj6*x5643);
IkReal x5645=((1.0)*cj6*x5643);
evalcond[0]=(r02*x5643);
evalcond[1]=((((-1.0)*r20*x5645))+((r21*x5644)));
evalcond[2]=((((-1.0)*r10*x5645))+((r11*x5644)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5646=((1.0)*sj6);
CheckValue<IkReal> x5647 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal(((((-1.0)*cj2*r01*x5646))+((cj6*r10*sj2))+((cj2*cj6*r00))+(((-1.0)*r11*sj2*x5646)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5647.valid){
continue;
}
CheckValue<IkReal> x5648=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r21))+(((-1.0)*r20*x5646)))),-1);
if(!x5648.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5647.value)+(((1.5707963267949)*(x5648.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5649=IKsin(j5);
IkReal x5650=IKcos(j5);
IkReal x5651=(sj0*sj1);
IkReal x5652=((1.0)*sj2);
IkReal x5653=(cj0*cj1);
IkReal x5654=(sj6*x5649);
IkReal x5655=((1.0)*x5650);
IkReal x5656=(sj6*x5650);
IkReal x5657=((1.0)*cj6*x5649);
evalcond[0]=((((-1.0)*r22*x5655))+(((-1.0)*r20*x5657))+((r21*x5654)));
evalcond[1]=((((-1.0)*r12*x5655))+cj2+(((-1.0)*r10*x5657))+((r11*x5654)));
evalcond[2]=(((r01*x5654))+(((-1.0)*r02*x5655))+(((-1.0)*x5652))+(((-1.0)*r00*x5657)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*cj6*r20*x5655))+((r22*x5649))+((r21*x5656))+((cj0*sj1)));
evalcond[4]=(((r01*x5656))+((r02*x5649))+(((-1.0)*cj6*r00*x5655))+(((-1.0)*cj2*x5653))+((cj2*x5651)));
evalcond[5]=((((-1.0)*x5652*x5653))+((r12*x5649))+((r11*x5656))+((sj2*x5651))+(((-1.0)*cj6*r10*x5655)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5658=((1.0)*cj6);
CheckValue<IkReal> x5659=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x5658)))),-1);
if(!x5659.valid){
continue;
}
CheckValue<IkReal> x5660 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x5658))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5660.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5659.value)))+(x5660.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5661=IKsin(j5);
IkReal x5662=IKcos(j5);
IkReal x5663=(sj0*sj1);
IkReal x5664=((1.0)*sj2);
IkReal x5665=(cj0*cj1);
IkReal x5666=(sj6*x5661);
IkReal x5667=((1.0)*x5662);
IkReal x5668=(sj6*x5662);
IkReal x5669=((1.0)*cj6*x5661);
evalcond[0]=((((-1.0)*r20*x5669))+(((-1.0)*r22*x5667))+((r21*x5666)));
evalcond[1]=(cj2+(((-1.0)*r10*x5669))+((r11*x5666))+(((-1.0)*r12*x5667)));
evalcond[2]=(((r01*x5666))+(((-1.0)*x5664))+(((-1.0)*r00*x5669))+(((-1.0)*r02*x5667)));
evalcond[3]=(((r22*x5661))+(((-1.0)*cj6*r20*x5667))+((cj1*sj0))+((cj0*sj1))+((r21*x5668)));
evalcond[4]=(((r01*x5668))+((cj2*x5663))+((r02*x5661))+(((-1.0)*cj2*x5665))+(((-1.0)*cj6*r00*x5667)));
evalcond[5]=(((sj2*x5663))+((r11*x5668))+((r12*x5661))+(((-1.0)*x5664*x5665))+(((-1.0)*cj6*r10*x5667)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5670=((1.0)*cj6);
CheckValue<IkReal> x5671 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x5670))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5671.valid){
continue;
}
CheckValue<IkReal> x5672=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x5670))+(((-1.0)*r00*sj6)))),-1);
if(!x5672.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5671.value)+(((1.5707963267949)*(x5672.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5673=IKsin(j5);
IkReal x5674=IKcos(j5);
IkReal x5675=(sj0*sj1);
IkReal x5676=((1.0)*sj2);
IkReal x5677=(cj0*cj1);
IkReal x5678=(sj6*x5673);
IkReal x5679=((1.0)*x5674);
IkReal x5680=(sj6*x5674);
IkReal x5681=((1.0)*cj6*x5673);
evalcond[0]=((((-1.0)*r22*x5679))+((r21*x5678))+(((-1.0)*r20*x5681)));
evalcond[1]=(cj2+(((-1.0)*r12*x5679))+(((-1.0)*r10*x5681))+((r11*x5678)));
evalcond[2]=(((r01*x5678))+(((-1.0)*x5676))+(((-1.0)*r00*x5681))+(((-1.0)*r02*x5679)));
evalcond[3]=(((cj1*sj0))+((r22*x5673))+(((-1.0)*cj6*r20*x5679))+((r21*x5680))+((cj0*sj1)));
evalcond[4]=(((r02*x5673))+((cj2*x5675))+(((-1.0)*cj6*r00*x5679))+((r01*x5680))+(((-1.0)*cj2*x5677)));
evalcond[5]=(((r12*x5673))+((r11*x5680))+(((-1.0)*x5676*x5677))+(((-1.0)*cj6*r10*x5679))+((sj2*x5675)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5682=r21*r21;
IkReal x5683=cj6*cj6;
IkReal x5684=(cj1*sj0);
IkReal x5685=(cj0*sj1);
IkReal x5686=(r21*sj6);
IkReal x5687=((1.0)*cj6*r20);
CheckValue<IkReal> x5688=IKPowWithIntegerCheck(IKsign(((((-1.0)*x5683*(r20*r20)))+(((2.0)*cj6*r20*x5686))+(((-1.0)*(r22*r22)))+(((-1.0)*x5682))+((x5682*x5683)))),-1);
if(!x5688.valid){
continue;
}
CheckValue<IkReal> x5689 = IKatan2WithCheck(IkReal((((r22*x5685))+((r22*x5684)))),IkReal(((((-1.0)*x5684*x5687))+((x5685*x5686))+(((-1.0)*x5685*x5687))+((x5684*x5686)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5689.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5688.value)))+(x5689.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x5690=IKsin(j5);
IkReal x5691=IKcos(j5);
IkReal x5692=(r21*sj6);
IkReal x5693=(cj6*r20);
IkReal x5694=((1.0)*x5691);
evalcond[0]=(((x5690*x5692))+(((-1.0)*x5690*x5693))+(((-1.0)*r22*x5694)));
evalcond[1]=(((r22*x5690))+((cj1*sj0))+((x5691*x5692))+((cj0*sj1))+(((-1.0)*x5693*x5694)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5695=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x5695))+(((-1.0)*cj5*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x5695)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x5695))+(((-1.0)*cj5*r02))))+IKsqr((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x5695))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x5695))+(((-1.0)*cj5*r02))), (((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x5695))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x5696=IKcos(j2);
IkReal x5697=IKsin(j2);
IkReal x5698=(cj6*r11);
IkReal x5699=(r10*sj6);
IkReal x5700=(r00*sj6);
IkReal x5701=((1.0)*cj0);
IkReal x5702=(sj5*sj6);
IkReal x5703=((0.39225)*cj0);
IkReal x5704=((1.0)*sj0);
IkReal x5705=((0.39225)*sj0);
IkReal x5706=(cj5*sj6);
IkReal x5707=((1.0)*cj5);
IkReal x5708=(cj6*r01);
IkReal x5709=((1.0)*cj6*r10);
IkReal x5710=(cj1*x5697);
IkReal x5711=(sj1*x5697);
IkReal x5712=(cj1*x5696);
IkReal x5713=((1.0)*cj6*r00);
IkReal x5714=(sj1*x5696);
evalcond[0]=(x5696+(((-1.0)*r12*x5707))+((r11*x5702))+(((-1.0)*sj5*x5709)));
evalcond[1]=((((-1.0)*sj5*x5713))+((r01*x5702))+(((-1.0)*x5697))+(((-1.0)*r02*x5707)));
evalcond[2]=((((-1.0)*x5701*x5714))+(((-1.0)*x5704*x5712))+x5708+x5700);
evalcond[3]=(x5698+x5699+(((-1.0)*x5701*x5711))+(((-1.0)*x5704*x5710)));
evalcond[4]=((((-1.0)*cj6*r00*x5707))+(((-1.0)*x5701*x5712))+((r02*sj5))+((sj0*x5714))+((r01*x5706)));
evalcond[5]=((((-1.0)*cj6*r10*x5707))+(((-1.0)*x5701*x5710))+((sj0*x5711))+((r12*sj5))+((r11*x5706)));
evalcond[6]=((((0.425)*x5712))+(((-0.10915)*x5697))+(((-1.0)*px))+(((-1.0)*x5705*x5714))+(((-0.09465)*x5708))+(((-0.09465)*x5700))+((x5703*x5712)));
evalcond[7]=((((0.425)*x5710))+(((-1.0)*py))+(((-1.0)*x5705*x5711))+((x5703*x5710))+(((-0.09465)*x5698))+(((-0.09465)*x5699))+(((0.10915)*x5696)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5715=((1.0)*sj6);
IkReal x5716=((1.0)*cj6);
CheckValue<IkReal> x5717=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1)))),-1);
if(!x5717.valid){
continue;
}
CheckValue<IkReal> x5718 = IKatan2WithCheck(IkReal(((((-1.0)*r10*x5715))+(((-1.0)*r11*x5716)))),IkReal(((((-1.0)*r00*x5715))+(((-1.0)*r01*x5716)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5718.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5717.value)))+(x5718.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x5719=IKcos(j2);
IkReal x5720=IKsin(j2);
IkReal x5721=(cj0*cj1);
IkReal x5722=(cj6*r11);
IkReal x5723=((0.09465)*sj6);
IkReal x5724=(sj0*sj1);
IkReal x5725=((1.0)*sj0);
IkReal x5726=(cj6*r01);
IkReal x5727=((0.39225)*x5719);
IkReal x5728=(cj1*x5720);
IkReal x5729=((1.0)*cj0*sj1);
IkReal x5730=(cj1*x5719);
IkReal x5731=((0.39225)*x5720);
evalcond[0]=(((r00*sj6))+(((-1.0)*x5725*x5730))+(((-1.0)*x5719*x5729))+x5726);
evalcond[1]=((((-1.0)*x5725*x5728))+((r10*sj6))+(((-1.0)*x5720*x5729))+x5722);
evalcond[2]=(((x5721*x5727))+(((-0.10915)*x5720))+(((-0.09465)*x5726))+(((-1.0)*x5724*x5727))+(((0.425)*x5730))+(((-1.0)*px))+(((-1.0)*r00*x5723)));
evalcond[3]=((((-0.09465)*x5722))+(((-1.0)*x5724*x5731))+(((0.425)*x5728))+(((-1.0)*py))+(((-1.0)*r10*x5723))+(((0.10915)*x5719))+((x5721*x5731)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
IkReal x5732=((1.0)*cj6);
IkReal x5733=((((-1.0)*r00*sj6))+(((-1.0)*r01*x5732)));
j5eval[0]=x5733;
j5eval[1]=IKsign(x5733);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x5732))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
IkReal x5734=((1.0)*cj6);
IkReal x5735=((((-1.0)*r10*sj6))+(((-1.0)*r11*x5734)));
j5eval[0]=x5735;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x5734))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x5735);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
IkReal x5736=((1.0)*sj2);
IkReal x5737=((1.0)*sj6);
IkReal x5738=((((-1.0)*r20*x5737))+(((-1.0)*cj6*r21)));
j5eval[0]=x5738;
j5eval[1]=IKsign(x5738);
j5eval[2]=((IKabs(((((-1.0)*r12*x5736))+(((-1.0)*cj2*r02)))))+(IKabs(((((-1.0)*r11*sj6*x5736))+((cj6*r10*sj2))+((cj2*cj6*r00))+(((-1.0)*cj2*r01*x5737))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
IkReal x5739=((-1.0)*r20);
IkReal x5741 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x5741)==0){
continue;
}
IkReal x5740=pow(x5741,-0.5);
CheckValue<IkReal> x5742 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x5739),IKFAST_ATAN2_MAGTHRESH);
if(!x5742.valid){
continue;
}
IkReal gconst114=((-1.0)*(x5742.value));
IkReal gconst115=(r21*x5740);
IkReal gconst116=(x5739*x5740);
CheckValue<IkReal> x5743 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5743.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x5743.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x5744=((-1.0)*r20);
IkReal x5745=x5740;
CheckValue<IkReal> x5747 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x5744),IKFAST_ATAN2_MAGTHRESH);
if(!x5747.valid){
continue;
}
IkReal x5746=((-1.0)*(x5747.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst115;
cj6=gconst116;
j6=x5746;
IkReal gconst114=x5746;
IkReal gconst115=(r21*x5745);
IkReal gconst116=(x5744*x5745);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x5748=((-1.0)*r20);
IkReal x5749=x5740;
CheckValue<IkReal> x5751 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x5748),IKFAST_ATAN2_MAGTHRESH);
if(!x5751.valid){
continue;
}
IkReal x5750=((-1.0)*(x5751.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst115;
cj6=gconst116;
j6=x5750;
IkReal gconst114=x5750;
IkReal gconst115=(r21*x5749);
IkReal gconst116=(x5748*x5749);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x5752=((-1.0)*r20);
IkReal x5753=x5740;
CheckValue<IkReal> x5755 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x5752),IKFAST_ATAN2_MAGTHRESH);
if(!x5755.valid){
continue;
}
IkReal x5754=((-1.0)*(x5755.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst115;
cj6=gconst116;
j6=x5754;
IkReal gconst114=x5754;
IkReal gconst115=(r21*x5753);
IkReal gconst116=(x5752*x5753);
IkReal x5756=((1.0)*(r22*r22));
CheckValue<IkReal> x5760=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x5756))),-1);
if(!x5760.valid){
continue;
}
IkReal x5757=x5760.value;
IkReal x5758=((1.0)*x5757);
IkReal x5759=((((-1.0)*x5758*(r21*r21*r21*r21)))+(((-2.0)*x5757*(r20*r20)*(r21*r21)))+(((-1.0)*x5758*(r20*r20*r20*r20)))+(((-1.0)*x5756)));
j5eval[0]=x5759;
j5eval[1]=IKsign(x5759);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5761=(cj0*sj1);
IkReal x5762=(gconst115*r21);
IkReal x5763=(cj1*sj0);
IkReal x5764=((1.0)*gconst116*r20);
CheckValue<IkReal> x5765 = IKatan2WithCheck(IkReal((((r22*x5763))+((r22*x5761)))),IkReal(((((-1.0)*x5761*x5764))+(((-1.0)*x5763*x5764))+((x5761*x5762))+((x5762*x5763)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5765.valid){
continue;
}
CheckValue<IkReal> x5766=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst116*r20*x5764))+(((2.0)*gconst116*r20*x5762))+(((-1.0)*(r22*r22)))+(((-1.0)*(x5762*x5762))))),-1);
if(!x5766.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5765.value)+(((1.5707963267949)*(x5766.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5767=IKsin(j5);
IkReal x5768=IKcos(j5);
IkReal x5769=(sj0*sj1);
IkReal x5770=(gconst116*r20);
IkReal x5771=((1.0)*cj0*cj1);
IkReal x5772=((1.0)*gconst116*r00);
IkReal x5773=(gconst115*x5767);
IkReal x5774=((1.0)*gconst116*r10);
IkReal x5775=(gconst115*x5768);
IkReal x5776=((1.0)*x5768);
evalcond[0]=(((r21*x5773))+(((-1.0)*r22*x5776))+(((-1.0)*x5767*x5770)));
evalcond[1]=((((-1.0)*x5767*x5774))+cj2+(((-1.0)*r12*x5776))+((r11*x5773)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*x5767*x5772))+((r01*x5773))+(((-1.0)*r02*x5776)));
evalcond[3]=(((cj1*sj0))+((r22*x5767))+(((-1.0)*x5770*x5776))+((r21*x5775))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x5771))+((r01*x5775))+((cj2*x5769))+((r02*x5767))+(((-1.0)*x5768*x5772)));
evalcond[5]=(((sj2*x5769))+(((-1.0)*sj2*x5771))+((r11*x5775))+(((-1.0)*x5768*x5774))+((r12*x5767)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5777=((1.0)*gconst116);
CheckValue<IkReal> x5778 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x5777))+((gconst115*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5778.valid){
continue;
}
CheckValue<IkReal> x5779=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x5777))+(((-1.0)*gconst115*r10)))),-1);
if(!x5779.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5778.value)+(((1.5707963267949)*(x5779.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5780=IKsin(j5);
IkReal x5781=IKcos(j5);
IkReal x5782=(sj0*sj1);
IkReal x5783=(gconst116*r20);
IkReal x5784=((1.0)*cj0*cj1);
IkReal x5785=((1.0)*gconst116*r00);
IkReal x5786=(gconst115*x5780);
IkReal x5787=((1.0)*gconst116*r10);
IkReal x5788=(gconst115*x5781);
IkReal x5789=((1.0)*x5781);
evalcond[0]=(((r21*x5786))+(((-1.0)*r22*x5789))+(((-1.0)*x5780*x5783)));
evalcond[1]=(cj2+((r11*x5786))+(((-1.0)*r12*x5789))+(((-1.0)*x5780*x5787)));
evalcond[2]=((((-1.0)*sj2))+((r01*x5786))+(((-1.0)*x5780*x5785))+(((-1.0)*r02*x5789)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*x5783*x5789))+((r21*x5788))+((r22*x5780))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x5784))+((cj2*x5782))+((r01*x5788))+(((-1.0)*x5781*x5785))+((r02*x5780)));
evalcond[5]=(((r12*x5780))+((r11*x5788))+((sj2*x5782))+(((-1.0)*sj2*x5784))+(((-1.0)*x5781*x5787)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5790=((1.0)*gconst116);
CheckValue<IkReal> x5791=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x5790))+(((-1.0)*gconst115*r00)))),-1);
if(!x5791.valid){
continue;
}
CheckValue<IkReal> x5792 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x5790))+((cj2*gconst115*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5792.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5791.value)))+(x5792.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5793=IKsin(j5);
IkReal x5794=IKcos(j5);
IkReal x5795=(sj0*sj1);
IkReal x5796=(gconst116*r20);
IkReal x5797=((1.0)*cj0*cj1);
IkReal x5798=((1.0)*gconst116*r00);
IkReal x5799=(gconst115*x5793);
IkReal x5800=((1.0)*gconst116*r10);
IkReal x5801=(gconst115*x5794);
IkReal x5802=((1.0)*x5794);
evalcond[0]=((((-1.0)*r22*x5802))+((r21*x5799))+(((-1.0)*x5793*x5796)));
evalcond[1]=(cj2+(((-1.0)*r12*x5802))+((r11*x5799))+(((-1.0)*x5793*x5800)));
evalcond[2]=((((-1.0)*x5793*x5798))+(((-1.0)*sj2))+((r01*x5799))+(((-1.0)*r02*x5802)));
evalcond[3]=(((cj1*sj0))+((r21*x5801))+(((-1.0)*x5796*x5802))+((r22*x5793))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x5797))+((cj2*x5795))+((r01*x5801))+(((-1.0)*x5794*x5798))+((r02*x5793)));
evalcond[5]=(((r12*x5793))+((sj2*x5795))+(((-1.0)*x5794*x5800))+((r11*x5801))+(((-1.0)*sj2*x5797)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5803=((-1.0)*r21);
IkReal x5805 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x5805)==0){
continue;
}
IkReal x5804=pow(x5805,-0.5);
CheckValue<IkReal> x5806 = IKatan2WithCheck(IkReal(x5803),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5806.valid){
continue;
}
IkReal gconst117=((3.14159265358979)+(((-1.0)*(x5806.value))));
IkReal gconst118=(x5803*x5804);
IkReal gconst119=((1.0)*r20*x5804);
CheckValue<IkReal> x5807 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5807.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x5807.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x5808=((-1.0)*r21);
CheckValue<IkReal> x5811 = IKatan2WithCheck(IkReal(x5808),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5811.valid){
continue;
}
IkReal x5809=((1.0)*(x5811.value));
IkReal x5810=x5804;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst118;
cj6=gconst119;
j6=((3.14159265)+(((-1.0)*x5809)));
IkReal gconst117=((3.14159265358979)+(((-1.0)*x5809)));
IkReal gconst118=(x5808*x5810);
IkReal gconst119=((1.0)*r20*x5810);
IkReal x5812=r22*r22;
IkReal x5813=((1.0)*x5812);
CheckValue<IkReal> x5817=IKPowWithIntegerCheck(((-1.0)+x5812),-1);
if(!x5817.valid){
continue;
}
IkReal x5814=x5817.value;
if((((1.0)+(((-1.0)*x5813)))) < -0.00001)
continue;
IkReal x5815=IKsqrt(((1.0)+(((-1.0)*x5813))));
IkReal x5816=(cj2*x5814*x5815);
j5eval[0]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*x5813*x5816))+x5816))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x5818=((-1.0)*r21);
CheckValue<IkReal> x5821 = IKatan2WithCheck(IkReal(x5818),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5821.valid){
continue;
}
IkReal x5819=((1.0)*(x5821.value));
IkReal x5820=x5804;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst118;
cj6=gconst119;
j6=((3.14159265)+(((-1.0)*x5819)));
IkReal gconst117=((3.14159265358979)+(((-1.0)*x5819)));
IkReal gconst118=(x5818*x5820);
IkReal gconst119=((1.0)*r20*x5820);
IkReal x5822=r22*r22;
IkReal x5823=((1.0)*x5822);
CheckValue<IkReal> x5827=IKPowWithIntegerCheck(((-1.0)+x5822),-1);
if(!x5827.valid){
continue;
}
IkReal x5824=x5827.value;
if((((1.0)+(((-1.0)*x5823)))) < -0.00001)
continue;
IkReal x5825=IKsqrt(((1.0)+(((-1.0)*x5823))));
IkReal x5826=(sj2*x5824*x5825);
j5eval[0]=((IKabs(((((-1.0)*x5823*x5826))+x5826)))+(IKabs((r22*sj2))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x5828=((-1.0)*r21);
CheckValue<IkReal> x5831 = IKatan2WithCheck(IkReal(x5828),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x5831.valid){
continue;
}
IkReal x5829=((1.0)*(x5831.value));
IkReal x5830=x5804;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst118;
cj6=gconst119;
j6=((3.14159265)+(((-1.0)*x5829)));
IkReal gconst117=((3.14159265358979)+(((-1.0)*x5829)));
IkReal gconst118=(x5828*x5830);
IkReal gconst119=((1.0)*r20*x5830);
IkReal x5832=r22*r22;
IkReal x5833=(r12*sj2);
IkReal x5834=(cj2*r02);
CheckValue<IkReal> x5838=IKPowWithIntegerCheck(((-1.0)+x5832),-1);
if(!x5838.valid){
continue;
}
IkReal x5835=x5838.value;
if((((1.0)+(((-1.0)*x5832)))) < -0.00001)
continue;
IkReal x5836=IKsqrt(((1.0)+(((-1.0)*x5832))));
IkReal x5837=(r22*x5835*x5836);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=((IKabs(((((-1.0)*x5833))+(((-1.0)*x5834)))))+(IKabs((((x5834*x5837))+((x5833*x5837))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5839=((1.0)*sj2);
IkReal x5840=((1.0)*gconst118);
CheckValue<IkReal> x5841 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x5839))+(((-1.0)*cj2*r02)))),IkReal((((gconst119*r10*sj2))+((cj2*gconst119*r00))+(((-1.0)*gconst118*r11*x5839))+(((-1.0)*cj2*r01*x5840)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5841.valid){
continue;
}
CheckValue<IkReal> x5842=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst119*r21))+(((-1.0)*r20*x5840)))),-1);
if(!x5842.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5841.value)+(((1.5707963267949)*(x5842.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5843=IKsin(j5);
IkReal x5844=IKcos(j5);
IkReal x5845=(sj0*sj1);
IkReal x5846=((1.0)*cj0*cj1);
IkReal x5847=(gconst118*x5843);
IkReal x5848=((1.0)*x5844);
IkReal x5849=(gconst118*x5844);
IkReal x5850=((1.0)*gconst119*x5843);
evalcond[0]=(((r21*x5847))+(((-1.0)*r20*x5850))+(((-1.0)*r22*x5848)));
evalcond[1]=(cj2+((r11*x5847))+(((-1.0)*r10*x5850))+(((-1.0)*r12*x5848)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x5848))+((r01*x5847))+(((-1.0)*r00*x5850)));
evalcond[3]=(((r21*x5849))+((cj1*sj0))+(((-1.0)*gconst119*r20*x5848))+((r22*x5843))+((cj0*sj1)));
evalcond[4]=(((cj2*x5845))+(((-1.0)*gconst119*r00*x5848))+(((-1.0)*cj2*x5846))+((r01*x5849))+((r02*x5843)));
evalcond[5]=((((-1.0)*gconst119*r10*x5848))+((r11*x5849))+((r12*x5843))+((sj2*x5845))+(((-1.0)*sj2*x5846)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5851=((1.0)*gconst119);
CheckValue<IkReal> x5852 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x5851))+((gconst118*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5852.valid){
continue;
}
CheckValue<IkReal> x5853=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst118*r10))+(((-1.0)*r11*x5851)))),-1);
if(!x5853.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5852.value)+(((1.5707963267949)*(x5853.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5854=IKsin(j5);
IkReal x5855=IKcos(j5);
IkReal x5856=(sj0*sj1);
IkReal x5857=((1.0)*cj0*cj1);
IkReal x5858=(gconst118*x5854);
IkReal x5859=((1.0)*x5855);
IkReal x5860=(gconst118*x5855);
IkReal x5861=((1.0)*gconst119*x5854);
evalcond[0]=((((-1.0)*r22*x5859))+((r21*x5858))+(((-1.0)*r20*x5861)));
evalcond[1]=((((-1.0)*r10*x5861))+cj2+((r11*x5858))+(((-1.0)*r12*x5859)));
evalcond[2]=((((-1.0)*sj2))+((r01*x5858))+(((-1.0)*r02*x5859))+(((-1.0)*r00*x5861)));
evalcond[3]=((((-1.0)*gconst119*r20*x5859))+((r21*x5860))+((cj1*sj0))+((r22*x5854))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x5857))+((cj2*x5856))+((r02*x5854))+(((-1.0)*gconst119*r00*x5859))+((r01*x5860)));
evalcond[5]=(((sj2*x5856))+((r12*x5854))+(((-1.0)*gconst119*r10*x5859))+((r11*x5860))+(((-1.0)*sj2*x5857)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5862=((1.0)*gconst119);
CheckValue<IkReal> x5863 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x5862))+((cj2*gconst118*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5863.valid){
continue;
}
CheckValue<IkReal> x5864=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst118*r00))+(((-1.0)*r01*x5862)))),-1);
if(!x5864.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5863.value)+(((1.5707963267949)*(x5864.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5865=IKsin(j5);
IkReal x5866=IKcos(j5);
IkReal x5867=(sj0*sj1);
IkReal x5868=((1.0)*cj0*cj1);
IkReal x5869=(gconst118*x5865);
IkReal x5870=((1.0)*x5866);
IkReal x5871=(gconst118*x5866);
IkReal x5872=((1.0)*gconst119*x5865);
evalcond[0]=(((r21*x5869))+(((-1.0)*r22*x5870))+(((-1.0)*r20*x5872)));
evalcond[1]=((((-1.0)*r12*x5870))+cj2+((r11*x5869))+(((-1.0)*r10*x5872)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x5870))+(((-1.0)*r00*x5872))+((r01*x5869)));
evalcond[3]=(((r22*x5865))+((cj1*sj0))+(((-1.0)*gconst119*r20*x5870))+((cj0*sj1))+((r21*x5871)));
evalcond[4]=((((-1.0)*gconst119*r00*x5870))+((r02*x5865))+(((-1.0)*cj2*x5868))+((cj2*x5867))+((r01*x5871)));
evalcond[5]=(((r11*x5871))+((r12*x5865))+(((-1.0)*sj2*x5868))+((sj2*x5867))+(((-1.0)*gconst119*r10*x5870)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5873=((-1.0)*r10);
IkReal x5875 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x5875)==0){
continue;
}
IkReal x5874=pow(x5875,-0.5);
CheckValue<IkReal> x5876 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x5873),IKFAST_ATAN2_MAGTHRESH);
if(!x5876.valid){
continue;
}
IkReal gconst120=((-1.0)*(x5876.value));
IkReal gconst121=(r11*x5874);
IkReal gconst122=(x5873*x5874);
CheckValue<IkReal> x5877 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5877.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x5877.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x5878=((-1.0)*r10);
IkReal x5879=x5874;
CheckValue<IkReal> x5881 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x5878),IKFAST_ATAN2_MAGTHRESH);
if(!x5881.valid){
continue;
}
IkReal x5880=((-1.0)*(x5881.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst121;
cj6=gconst122;
j6=x5880;
IkReal gconst120=x5880;
IkReal gconst121=(r11*x5879);
IkReal gconst122=(x5878*x5879);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5882=((1.0)*sj2);
IkReal x5883=((1.0)*gconst121);
CheckValue<IkReal> x5884=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst122*r21))+(((-1.0)*r20*x5883)))),-1);
if(!x5884.valid){
continue;
}
CheckValue<IkReal> x5885 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x5882))+(((-1.0)*cj2*r02)))),IkReal(((((-1.0)*gconst121*r11*x5882))+(((-1.0)*cj2*r01*x5883))+((cj2*gconst122*r00))+((gconst122*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5885.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5884.value)))+(x5885.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5886=IKsin(j5);
IkReal x5887=IKcos(j5);
IkReal x5888=(sj0*sj1);
IkReal x5889=((1.0)*cj0*cj1);
IkReal x5890=((1.0)*gconst122*r00);
IkReal x5891=(gconst121*x5886);
IkReal x5892=((1.0)*x5887);
IkReal x5893=(gconst121*x5887);
IkReal x5894=(gconst122*x5892);
IkReal x5895=((1.0)*gconst122*x5886);
evalcond[0]=(((r21*x5891))+(((-1.0)*r22*x5892))+(((-1.0)*r20*x5895)));
evalcond[1]=((((-1.0)*r12*x5892))+cj2+(((-1.0)*r10*x5895))+((r11*x5891)));
evalcond[2]=((((-1.0)*x5886*x5890))+(((-1.0)*sj2))+(((-1.0)*r02*x5892))+((r01*x5891)));
evalcond[3]=(((r21*x5893))+(((-1.0)*r20*x5894))+((cj1*sj0))+((r22*x5886))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x5889))+((r01*x5893))+((cj2*x5888))+(((-1.0)*x5887*x5890))+((r02*x5886)));
evalcond[5]=((((-1.0)*sj2*x5889))+((r12*x5886))+(((-1.0)*r10*x5894))+((sj2*x5888))+((r11*x5893)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5896=((1.0)*gconst122);
CheckValue<IkReal> x5897=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst121*r00))+(((-1.0)*r01*x5896)))),-1);
if(!x5897.valid){
continue;
}
CheckValue<IkReal> x5898 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst121*r21))+(((-1.0)*cj2*r20*x5896)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5898.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5897.value)))+(x5898.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5899=IKsin(j5);
IkReal x5900=IKcos(j5);
IkReal x5901=(sj0*sj1);
IkReal x5902=((1.0)*cj0*cj1);
IkReal x5903=((1.0)*gconst122*r00);
IkReal x5904=(gconst121*x5899);
IkReal x5905=((1.0)*x5900);
IkReal x5906=(gconst121*x5900);
IkReal x5907=(gconst122*x5905);
IkReal x5908=((1.0)*gconst122*x5899);
evalcond[0]=((((-1.0)*r20*x5908))+(((-1.0)*r22*x5905))+((r21*x5904)));
evalcond[1]=((((-1.0)*r12*x5905))+cj2+(((-1.0)*r10*x5908))+((r11*x5904)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x5905))+(((-1.0)*x5899*x5903))+((r01*x5904)));
evalcond[3]=(((r22*x5899))+((cj1*sj0))+(((-1.0)*r20*x5907))+((r21*x5906))+((cj0*sj1)));
evalcond[4]=(((cj2*x5901))+(((-1.0)*cj2*x5902))+((r02*x5899))+(((-1.0)*x5900*x5903))+((r01*x5906)));
evalcond[5]=((((-1.0)*sj2*x5902))+((sj2*x5901))+((r12*x5899))+(((-1.0)*r10*x5907))+((r11*x5906)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x5909=((-1.0)*r11);
IkReal x5911 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x5911)==0){
continue;
}
IkReal x5910=pow(x5911,-0.5);
CheckValue<IkReal> x5912 = IKatan2WithCheck(IkReal(x5909),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5912.valid){
continue;
}
IkReal gconst123=((3.14159265358979)+(((-1.0)*(x5912.value))));
IkReal gconst124=(x5909*x5910);
IkReal gconst125=((1.0)*r10*x5910);
CheckValue<IkReal> x5913 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5913.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x5913.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x5914=((-1.0)*r11);
CheckValue<IkReal> x5917 = IKatan2WithCheck(IkReal(x5914),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5917.valid){
continue;
}
IkReal x5915=((1.0)*(x5917.value));
IkReal x5916=x5910;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst124;
cj6=gconst125;
j6=((3.14159265)+(((-1.0)*x5915)));
IkReal gconst123=((3.14159265358979)+(((-1.0)*x5915)));
IkReal gconst124=(x5914*x5916);
IkReal gconst125=((1.0)*r10*x5916);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x5918=((-1.0)*r11);
CheckValue<IkReal> x5921 = IKatan2WithCheck(IkReal(x5918),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5921.valid){
continue;
}
IkReal x5919=((1.0)*(x5921.value));
IkReal x5920=x5910;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst124;
cj6=gconst125;
j6=((3.14159265)+(((-1.0)*x5919)));
IkReal gconst123=((3.14159265358979)+(((-1.0)*x5919)));
IkReal gconst124=(x5918*x5920);
IkReal gconst125=((1.0)*r10*x5920);
IkReal x5922=r12*r12;
IkReal x5923=((1.0)*sj2);
IkReal x5924=(cj2*r02);
IkReal x5925=x5910;
j5eval[0]=((IKabs(((((-1.0)*x5924))+(((-1.0)*r12*x5923)))))+(IKabs((((sj2*x5922*x5925))+(((-1.0)*x5923*x5925))+((r12*x5924*x5925))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x5926=((-1.0)*r11);
CheckValue<IkReal> x5929 = IKatan2WithCheck(IkReal(x5926),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x5929.valid){
continue;
}
IkReal x5927=((1.0)*(x5929.value));
IkReal x5928=x5910;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst124;
cj6=gconst125;
j6=((3.14159265)+(((-1.0)*x5927)));
IkReal gconst123=((3.14159265358979)+(((-1.0)*x5927)));
IkReal gconst124=(x5926*x5928);
IkReal gconst125=((1.0)*r10*x5928);
IkReal x5930=r12*r12;
IkReal x5931=((1.0)+(((-1.0)*x5930)));
IkReal x5932=(cj0*r22*sj1);
IkReal x5933=(cj1*r22*sj0);
CheckValue<IkReal> x5940=IKPowWithIntegerCheck(x5931,-1);
if(!x5940.valid){
continue;
}
IkReal x5934=x5940.value;
CheckValue<IkReal> x5941=IKPowWithIntegerCheck(((-1.0)+x5930),-1);
if(!x5941.valid){
continue;
}
IkReal x5935=x5941.value;
IkReal x5936=((1.0)*x5934);
if((x5931) < -0.00001)
continue;
IkReal x5937=IKsqrt(x5931);
IkReal x5938=((1.0)*r12*x5935*x5937);
IkReal x5939=((((-1.0)*x5936*(r10*r10)*(r20*r20)))+(((-1.0)*(r22*r22)))+(((-2.0)*r10*r11*r20*r21*x5934))+(((-1.0)*x5936*(r11*r11)*(r21*r21))));
j5eval[0]=x5939;
j5eval[1]=IKsign(x5939);
j5eval[2]=((IKabs(((((-1.0)*x5932*x5938))+(((-1.0)*x5933*x5938)))))+(IKabs((x5933+x5932))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5942=(gconst124*r21);
IkReal x5943=(cj0*sj1);
IkReal x5944=(cj1*sj0);
IkReal x5945=(gconst125*r20);
CheckValue<IkReal> x5946=IKPowWithIntegerCheck(IKsign(((((2.0)*x5942*x5945))+(((-1.0)*(x5942*x5942)))+(((-1.0)*(r22*r22)))+(((-1.0)*(x5945*x5945))))),-1);
if(!x5946.valid){
continue;
}
CheckValue<IkReal> x5947 = IKatan2WithCheck(IkReal((((r22*x5944))+((r22*x5943)))),IkReal((((x5942*x5944))+((x5942*x5943))+(((-1.0)*x5944*x5945))+(((-1.0)*x5943*x5945)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5947.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5946.value)))+(x5947.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5948=IKsin(j5);
IkReal x5949=IKcos(j5);
IkReal x5950=(sj0*sj1);
IkReal x5951=((1.0)*gconst125);
IkReal x5952=((1.0)*cj0*cj1);
IkReal x5953=(gconst124*x5948);
IkReal x5954=(r10*x5951);
IkReal x5955=(gconst124*x5949);
IkReal x5956=((1.0)*x5949);
evalcond[0]=(((r21*x5953))+(((-1.0)*r20*x5948*x5951))+(((-1.0)*r22*x5956)));
evalcond[1]=(cj2+((r11*x5953))+(((-1.0)*x5948*x5954))+(((-1.0)*r12*x5956)));
evalcond[2]=((((-1.0)*r00*x5948*x5951))+(((-1.0)*sj2))+(((-1.0)*r02*x5956))+((r01*x5953)));
evalcond[3]=(((r21*x5955))+((cj1*sj0))+((r22*x5948))+(((-1.0)*r20*x5949*x5951))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x5952))+((cj2*x5950))+((r02*x5948))+((r01*x5955))+(((-1.0)*r00*x5949*x5951)));
evalcond[5]=((((-1.0)*sj2*x5952))+((r11*x5955))+((sj2*x5950))+(((-1.0)*x5949*x5954))+((r12*x5948)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5957=((1.0)*sj2);
IkReal x5958=((1.0)*gconst124);
CheckValue<IkReal> x5959 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x5957))+(((-1.0)*cj2*r02)))),IkReal((((cj2*gconst125*r00))+(((-1.0)*gconst124*r11*x5957))+((gconst125*r10*sj2))+(((-1.0)*cj2*r01*x5958)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5959.valid){
continue;
}
CheckValue<IkReal> x5960=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst125*r21))+(((-1.0)*r20*x5958)))),-1);
if(!x5960.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x5959.value)+(((1.5707963267949)*(x5960.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5961=IKsin(j5);
IkReal x5962=IKcos(j5);
IkReal x5963=(sj0*sj1);
IkReal x5964=((1.0)*gconst125);
IkReal x5965=((1.0)*cj0*cj1);
IkReal x5966=(gconst124*x5961);
IkReal x5967=(r10*x5964);
IkReal x5968=(gconst124*x5962);
IkReal x5969=((1.0)*x5962);
evalcond[0]=((((-1.0)*r20*x5961*x5964))+(((-1.0)*r22*x5969))+((r21*x5966)));
evalcond[1]=(cj2+(((-1.0)*x5961*x5967))+(((-1.0)*r12*x5969))+((r11*x5966)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x5961*x5964))+((r01*x5966))+(((-1.0)*r02*x5969)));
evalcond[3]=((((-1.0)*r20*x5962*x5964))+((cj1*sj0))+((r22*x5961))+((r21*x5968))+((cj0*sj1)));
evalcond[4]=(((r02*x5961))+(((-1.0)*cj2*x5965))+((r01*x5968))+(((-1.0)*r00*x5962*x5964))+((cj2*x5963)));
evalcond[5]=(((sj2*x5963))+(((-1.0)*sj2*x5965))+((r12*x5961))+((r11*x5968))+(((-1.0)*x5962*x5967)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5970=((1.0)*gconst125);
CheckValue<IkReal> x5971=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst124*r00))+(((-1.0)*r01*x5970)))),-1);
if(!x5971.valid){
continue;
}
CheckValue<IkReal> x5972 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst124*r21))+(((-1.0)*cj2*r20*x5970)))),IKFAST_ATAN2_MAGTHRESH);
if(!x5972.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5971.value)))+(x5972.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5973=IKsin(j5);
IkReal x5974=IKcos(j5);
IkReal x5975=(sj0*sj1);
IkReal x5976=((1.0)*gconst125);
IkReal x5977=((1.0)*cj0*cj1);
IkReal x5978=(gconst124*x5973);
IkReal x5979=(r10*x5976);
IkReal x5980=(gconst124*x5974);
IkReal x5981=((1.0)*x5974);
evalcond[0]=((((-1.0)*r20*x5973*x5976))+((r21*x5978))+(((-1.0)*r22*x5981)));
evalcond[1]=((((-1.0)*r12*x5981))+cj2+((r11*x5978))+(((-1.0)*x5973*x5979)));
evalcond[2]=((((-1.0)*sj2))+((r01*x5978))+(((-1.0)*r02*x5981))+(((-1.0)*r00*x5973*x5976)));
evalcond[3]=(((r21*x5980))+((cj1*sj0))+((r22*x5973))+(((-1.0)*r20*x5974*x5976))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x5977))+(((-1.0)*r00*x5974*x5976))+((cj2*x5975))+((r02*x5973))+((r01*x5980)));
evalcond[5]=(((sj2*x5975))+((r11*x5980))+(((-1.0)*sj2*x5977))+(((-1.0)*x5974*x5979))+((r12*x5973)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal x5982=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x5982;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x5982);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal x5983=((1.0)*cj6);
IkReal x5984=((((-1.0)*r00*sj6))+(((-1.0)*r01*x5983)));
j5eval[0]=x5984;
j5eval[1]=IKsign(x5984);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x5983)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal x5985=cj6*cj6;
IkReal x5986=r11*r11;
IkReal x5987=(r11*sj6);
IkReal x5988=(cj6*r10);
IkReal x5989=(((x5985*x5986))+(((-1.0)*x5986))+(((-1.0)*(r12*r12)))+(((2.0)*x5987*x5988))+(((-1.0)*x5985*(r10*r10))));
j5eval[0]=x5989;
j5eval[1]=((IKabs(((((-1.0)*x5988))+x5987)))+(IKabs(r12)));
j5eval[2]=IKsign(x5989);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x5990=cj6*cj6;
IkReal x5991=r11*r11;
IkReal x5992=(r11*sj6);
IkReal x5993=(cj6*r10);
CheckValue<IkReal> x5994=IKPowWithIntegerCheck(IKsign(((((-1.0)*x5991))+(((-1.0)*x5990*(r10*r10)))+(((-1.0)*(r12*r12)))+((x5990*x5991))+(((2.0)*x5992*x5993)))),-1);
if(!x5994.valid){
continue;
}
CheckValue<IkReal> x5995 = IKatan2WithCheck(IkReal(((((-1.0)*x5993))+x5992)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x5995.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x5994.value)))+(x5995.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x5996=IKcos(j5);
IkReal x5997=IKsin(j5);
IkReal x5998=(sj6*x5997);
IkReal x5999=((1.0)*x5996);
IkReal x6000=(sj6*x5996);
IkReal x6001=((1.0)*cj6*x5997);
evalcond[0]=(((r12*x5997))+((r11*x6000))+(((-1.0)*cj6*r10*x5999)));
evalcond[1]=(((r21*x5998))+(((-1.0)*r22*x5999))+(((-1.0)*r20*x6001)));
evalcond[2]=((((-1.0)*r02*x5999))+(((-1.0)*r00*x6001))+((r01*x5998)));
evalcond[3]=((1.0)+(((-1.0)*r12*x5999))+((r11*x5998))+(((-1.0)*r10*x6001)));
evalcond[4]=(((r21*x6000))+((cj1*sj0))+(((-1.0)*cj6*r20*x5999))+((r22*x5997))+((cj0*sj1)));
evalcond[5]=(((r02*x5997))+((sj0*sj1))+(((-1.0)*cj6*r00*x5999))+((r01*x6000))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6002=((1.0)*cj6);
CheckValue<IkReal> x6003 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x6002)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6003.valid){
continue;
}
CheckValue<IkReal> x6004=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6002)))),-1);
if(!x6004.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6003.value)+(((1.5707963267949)*(x6004.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6005=IKcos(j5);
IkReal x6006=IKsin(j5);
IkReal x6007=(sj6*x6006);
IkReal x6008=((1.0)*x6005);
IkReal x6009=(sj6*x6005);
IkReal x6010=((1.0)*cj6*x6006);
evalcond[0]=(((r12*x6006))+(((-1.0)*cj6*r10*x6008))+((r11*x6009)));
evalcond[1]=(((r21*x6007))+(((-1.0)*r22*x6008))+(((-1.0)*r20*x6010)));
evalcond[2]=((((-1.0)*r00*x6010))+((r01*x6007))+(((-1.0)*r02*x6008)));
evalcond[3]=((1.0)+((r11*x6007))+(((-1.0)*r12*x6008))+(((-1.0)*r10*x6010)));
evalcond[4]=(((r21*x6009))+((r22*x6006))+((cj1*sj0))+((cj0*sj1))+(((-1.0)*cj6*r20*x6008)));
evalcond[5]=((((-1.0)*cj6*r00*x6008))+((sj0*sj1))+((r02*x6006))+((r01*x6009))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x6011=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x6011.valid){
continue;
}
CheckValue<IkReal> x6012 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6012.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6011.value)))+(x6012.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6013=IKcos(j5);
IkReal x6014=IKsin(j5);
IkReal x6015=(sj6*x6014);
IkReal x6016=((1.0)*x6013);
IkReal x6017=(sj6*x6013);
IkReal x6018=((1.0)*cj6*x6014);
evalcond[0]=((((-1.0)*cj6*r10*x6016))+((r11*x6017))+((r12*x6014)));
evalcond[1]=(((r21*x6015))+(((-1.0)*r22*x6016))+(((-1.0)*r20*x6018)));
evalcond[2]=(((r01*x6015))+(((-1.0)*r02*x6016))+(((-1.0)*r00*x6018)));
evalcond[3]=((1.0)+((r11*x6015))+(((-1.0)*r12*x6016))+(((-1.0)*r10*x6018)));
evalcond[4]=((((-1.0)*cj6*r20*x6016))+((r21*x6017))+((cj1*sj0))+((r22*x6014))+((cj0*sj1)));
evalcond[5]=(((r01*x6017))+(((-1.0)*cj6*r00*x6016))+((r02*x6014))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x6019=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x6019;
j5eval[1]=IKsign(x6019);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x6020=((1.0)*cj6);
IkReal x6021=((((-1.0)*r21*x6020))+(((-1.0)*r20*sj6)));
j5eval[0]=x6021;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*r00*x6020))+((r01*sj6))))));
j5eval[2]=IKsign(x6021);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x6022=cj6*cj6;
IkReal x6023=r11*r11;
IkReal x6024=(r11*sj6);
IkReal x6025=(cj6*r10);
IkReal x6026=((r12*r12)+x6023+(((-2.0)*x6024*x6025))+((x6022*(r10*r10)))+(((-1.0)*x6022*x6023)));
j5eval[0]=x6026;
j5eval[1]=IKsign(x6026);
j5eval[2]=((IKabs(r12))+(IKabs((x6024+(((-1.0)*x6025))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6027=cj6*cj6;
IkReal x6028=r11*r11;
IkReal x6029=(r11*sj6);
IkReal x6030=(cj6*r10);
CheckValue<IkReal> x6031=IKPowWithIntegerCheck(IKsign(((r12*r12)+((x6027*(r10*r10)))+(((-2.0)*x6029*x6030))+x6028+(((-1.0)*x6027*x6028)))),-1);
if(!x6031.valid){
continue;
}
CheckValue<IkReal> x6032 = IKatan2WithCheck(IkReal((x6029+(((-1.0)*x6030)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x6032.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6031.value)))+(x6032.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6033=IKcos(j5);
IkReal x6034=IKsin(j5);
IkReal x6035=(sj6*x6034);
IkReal x6036=((1.0)*x6033);
IkReal x6037=(sj6*x6033);
IkReal x6038=((1.0)*cj6*x6034);
evalcond[0]=(((r12*x6034))+((r11*x6037))+(((-1.0)*cj6*r10*x6036)));
evalcond[1]=(((r21*x6035))+(((-1.0)*r22*x6036))+(((-1.0)*r20*x6038)));
evalcond[2]=((((-1.0)*r00*x6038))+((r01*x6035))+(((-1.0)*r02*x6036)));
evalcond[3]=((-1.0)+((r11*x6035))+(((-1.0)*r12*x6036))+(((-1.0)*r10*x6038)));
evalcond[4]=((((-1.0)*cj6*r20*x6036))+((r22*x6034))+((r21*x6037))+((cj1*sj0))+((cj0*sj1)));
evalcond[5]=(((cj0*cj1))+(((-1.0)*cj6*r00*x6036))+((r02*x6034))+(((-1.0)*sj0*sj1))+((r01*x6037)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6039=((1.0)*cj6);
CheckValue<IkReal> x6040 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*r00*x6039)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6040.valid){
continue;
}
CheckValue<IkReal> x6041=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x6039))+(((-1.0)*r20*sj6)))),-1);
if(!x6041.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6040.value)+(((1.5707963267949)*(x6041.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6042=IKcos(j5);
IkReal x6043=IKsin(j5);
IkReal x6044=(sj6*x6043);
IkReal x6045=((1.0)*x6042);
IkReal x6046=(sj6*x6042);
IkReal x6047=((1.0)*cj6*x6043);
evalcond[0]=(((r11*x6046))+((r12*x6043))+(((-1.0)*cj6*r10*x6045)));
evalcond[1]=((((-1.0)*r20*x6047))+(((-1.0)*r22*x6045))+((r21*x6044)));
evalcond[2]=((((-1.0)*r02*x6045))+(((-1.0)*r00*x6047))+((r01*x6044)));
evalcond[3]=((-1.0)+((r11*x6044))+(((-1.0)*r10*x6047))+(((-1.0)*r12*x6045)));
evalcond[4]=((((-1.0)*cj6*r20*x6045))+((cj1*sj0))+((r22*x6043))+((r21*x6046))+((cj0*sj1)));
evalcond[5]=((((-1.0)*cj6*r00*x6045))+((cj0*cj1))+(((-1.0)*sj0*sj1))+((r02*x6043))+((r01*x6046)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x6048=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x6048.valid){
continue;
}
CheckValue<IkReal> x6049 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6049.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6048.value)))+(x6049.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6050=IKcos(j5);
IkReal x6051=IKsin(j5);
IkReal x6052=(sj6*x6051);
IkReal x6053=((1.0)*x6050);
IkReal x6054=(sj6*x6050);
IkReal x6055=((1.0)*cj6*x6051);
evalcond[0]=(((r12*x6051))+(((-1.0)*cj6*r10*x6053))+((r11*x6054)));
evalcond[1]=((((-1.0)*r20*x6055))+(((-1.0)*r22*x6053))+((r21*x6052)));
evalcond[2]=(((r01*x6052))+(((-1.0)*r00*x6055))+(((-1.0)*r02*x6053)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x6055))+(((-1.0)*r12*x6053))+((r11*x6052)));
evalcond[4]=(((r22*x6051))+(((-1.0)*cj6*r20*x6053))+((cj1*sj0))+((cj0*sj1))+((r21*x6054)));
evalcond[5]=((((-1.0)*cj6*r00*x6053))+((r01*x6054))+((cj0*cj1))+((r02*x6051))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6056=((-1.0)*r00);
IkReal x6058 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x6058)==0){
continue;
}
IkReal x6057=pow(x6058,-0.5);
CheckValue<IkReal> x6059 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x6056),IKFAST_ATAN2_MAGTHRESH);
if(!x6059.valid){
continue;
}
IkReal gconst126=((-1.0)*(x6059.value));
IkReal gconst127=(r01*x6057);
IkReal gconst128=(x6056*x6057);
CheckValue<IkReal> x6060 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x6060.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x6060.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x6061=((-1.0)*r00);
IkReal x6062=x6057;
CheckValue<IkReal> x6064 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x6061),IKFAST_ATAN2_MAGTHRESH);
if(!x6064.valid){
continue;
}
IkReal x6063=((-1.0)*(x6064.value));
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst127;
cj6=gconst128;
j6=x6063;
IkReal gconst126=x6063;
IkReal gconst127=(r01*x6062);
IkReal gconst128=(x6061*x6062);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6065=((1.0)*sj2);
IkReal x6066=((1.0)*gconst127);
CheckValue<IkReal> x6067=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst128*r21))+(((-1.0)*r20*x6066)))),-1);
if(!x6067.valid){
continue;
}
CheckValue<IkReal> x6068 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*x6065)))),IkReal((((cj2*gconst128*r00))+((gconst128*r10*sj2))+(((-1.0)*gconst127*r11*x6065))+(((-1.0)*cj2*r01*x6066)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6068.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6067.value)))+(x6068.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6069=IKsin(j5);
IkReal x6070=IKcos(j5);
IkReal x6071=(gconst127*r01);
IkReal x6072=(sj0*sj1);
IkReal x6073=(gconst128*r10);
IkReal x6074=(gconst128*r20);
IkReal x6075=((1.0)*gconst128*r00);
IkReal x6076=((1.0)*cj0*cj1);
IkReal x6077=((1.0)*x6070);
IkReal x6078=((1.0)*x6069);
IkReal x6079=(gconst127*x6070);
IkReal x6080=(gconst127*x6069);
evalcond[0]=((((-1.0)*x6074*x6078))+((r21*x6080))+(((-1.0)*r22*x6077)));
evalcond[1]=(cj2+(((-1.0)*x6073*x6078))+(((-1.0)*r12*x6077))+((r11*x6080)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x6077))+((x6069*x6071))+(((-1.0)*x6069*x6075)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*x6074*x6077))+((r22*x6069))+((r21*x6079))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x6076))+((x6070*x6071))+((cj2*x6072))+((r02*x6069))+(((-1.0)*x6070*x6075)));
evalcond[5]=(((r11*x6079))+((sj2*x6072))+(((-1.0)*x6073*x6077))+((r12*x6069))+(((-1.0)*sj2*x6076)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6081=((1.0)*gconst128);
CheckValue<IkReal> x6082 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x6081))+((gconst127*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6082.valid){
continue;
}
CheckValue<IkReal> x6083=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst127*r10))+(((-1.0)*r11*x6081)))),-1);
if(!x6083.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6082.value)+(((1.5707963267949)*(x6083.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6084=IKsin(j5);
IkReal x6085=IKcos(j5);
IkReal x6086=(gconst127*r01);
IkReal x6087=(sj0*sj1);
IkReal x6088=(gconst128*r10);
IkReal x6089=(gconst128*r20);
IkReal x6090=((1.0)*gconst128*r00);
IkReal x6091=((1.0)*cj0*cj1);
IkReal x6092=((1.0)*x6085);
IkReal x6093=((1.0)*x6084);
IkReal x6094=(gconst127*x6085);
IkReal x6095=(gconst127*x6084);
evalcond[0]=((((-1.0)*x6089*x6093))+(((-1.0)*r22*x6092))+((r21*x6095)));
evalcond[1]=(cj2+((r11*x6095))+(((-1.0)*r12*x6092))+(((-1.0)*x6088*x6093)));
evalcond[2]=((((-1.0)*sj2))+((x6084*x6086))+(((-1.0)*r02*x6092))+(((-1.0)*x6084*x6090)));
evalcond[3]=((((-1.0)*x6089*x6092))+((cj1*sj0))+((r21*x6094))+((r22*x6084))+((cj0*sj1)));
evalcond[4]=(((cj2*x6087))+((x6085*x6086))+(((-1.0)*cj2*x6091))+(((-1.0)*x6085*x6090))+((r02*x6084)));
evalcond[5]=(((sj2*x6087))+((r12*x6084))+((r11*x6094))+(((-1.0)*sj2*x6091))+(((-1.0)*x6088*x6092)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6096=((-1.0)*r01);
IkReal x6098 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x6098)==0){
continue;
}
IkReal x6097=pow(x6098,-0.5);
CheckValue<IkReal> x6099 = IKatan2WithCheck(IkReal(x6096),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x6099.valid){
continue;
}
IkReal gconst129=((3.14159265358979)+(((-1.0)*(x6099.value))));
IkReal gconst130=(x6096*x6097);
IkReal gconst131=((1.0)*r00*x6097);
CheckValue<IkReal> x6100 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x6100.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x6100.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x6101=((-1.0)*r01);
CheckValue<IkReal> x6104 = IKatan2WithCheck(IkReal(x6101),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x6104.valid){
continue;
}
IkReal x6102=((1.0)*(x6104.value));
IkReal x6103=x6097;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst130;
cj6=gconst131;
j6=((3.14159265)+(((-1.0)*x6102)));
IkReal gconst129=((3.14159265358979)+(((-1.0)*x6102)));
IkReal gconst130=(x6101*x6103);
IkReal gconst131=((1.0)*r00*x6103);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=cj2;
j5eval[3]=r22;
j5eval[4]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x6105=((-1.0)*r01);
CheckValue<IkReal> x6108 = IKatan2WithCheck(IkReal(x6105),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x6108.valid){
continue;
}
IkReal x6106=((1.0)*(x6108.value));
IkReal x6107=x6097;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst130;
cj6=gconst131;
j6=((3.14159265)+(((-1.0)*x6106)));
IkReal gconst129=((3.14159265358979)+(((-1.0)*x6106)));
IkReal gconst130=(x6105*x6107);
IkReal gconst131=((1.0)*r00*x6107);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x6109=((-1.0)*r01);
CheckValue<IkReal> x6112 = IKatan2WithCheck(IkReal(x6109),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x6112.valid){
continue;
}
IkReal x6110=((1.0)*(x6112.value));
IkReal x6111=x6097;
sj4=0;
cj4=1.0;
j4=0;
sj6=gconst130;
cj6=gconst131;
j6=((3.14159265)+(((-1.0)*x6110)));
IkReal gconst129=((3.14159265358979)+(((-1.0)*x6110)));
IkReal gconst130=(x6109*x6111);
IkReal gconst131=((1.0)*r00*x6111);
IkReal x6113=r02*r02;
IkReal x6114=(r12*sj2);
IkReal x6115=((1.0)*cj2);
IkReal x6116=x6097;
j5eval[0]=((IKabs((((r02*x6114*x6116))+(((-1.0)*x6115*x6116))+((cj2*x6113*x6116)))))+(IKabs(((((-1.0)*x6114))+(((-1.0)*r02*x6115))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6117=((1.0)*sj2);
IkReal x6118=((1.0)*cj2);
CheckValue<IkReal> x6119 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x6117))+(((-1.0)*r02*x6118)))),IkReal(((((-1.0)*gconst130*r11*x6117))+(((-1.0)*gconst130*r01*x6118))+((gconst131*r10*sj2))+((cj2*gconst131*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6119.valid){
continue;
}
CheckValue<IkReal> x6120=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst131*r21))+(((-1.0)*gconst130*r20)))),-1);
if(!x6120.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6119.value)+(((1.5707963267949)*(x6120.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6121=IKsin(j5);
IkReal x6122=IKcos(j5);
IkReal x6123=(sj0*sj1);
IkReal x6124=((1.0)*cj0*cj1);
IkReal x6125=(gconst130*x6121);
IkReal x6126=(gconst130*x6122);
IkReal x6127=((1.0)*x6122);
IkReal x6128=((1.0)*gconst131*x6121);
evalcond[0]=(((r21*x6125))+(((-1.0)*r22*x6127))+(((-1.0)*r20*x6128)));
evalcond[1]=(cj2+(((-1.0)*r12*x6127))+(((-1.0)*r10*x6128))+((r11*x6125)));
evalcond[2]=(((r01*x6125))+(((-1.0)*sj2))+(((-1.0)*r02*x6127))+(((-1.0)*r00*x6128)));
evalcond[3]=(((r21*x6126))+((cj1*sj0))+(((-1.0)*gconst131*r20*x6127))+((cj0*sj1))+((r22*x6121)));
evalcond[4]=(((r01*x6126))+(((-1.0)*cj2*x6124))+((r02*x6121))+(((-1.0)*gconst131*r00*x6127))+((cj2*x6123)));
evalcond[5]=((((-1.0)*sj2*x6124))+((r12*x6121))+((sj2*x6123))+(((-1.0)*gconst131*r10*x6127))+((r11*x6126)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6129=((1.0)*gconst131);
CheckValue<IkReal> x6130 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst130*r21*sj2))+(((-1.0)*r20*sj2*x6129)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6130.valid){
continue;
}
CheckValue<IkReal> x6131=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x6129))+(((-1.0)*gconst130*r10)))),-1);
if(!x6131.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6130.value)+(((1.5707963267949)*(x6131.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6132=IKsin(j5);
IkReal x6133=IKcos(j5);
IkReal x6134=(sj0*sj1);
IkReal x6135=((1.0)*cj0*cj1);
IkReal x6136=(gconst130*x6132);
IkReal x6137=(gconst130*x6133);
IkReal x6138=((1.0)*x6133);
IkReal x6139=((1.0)*gconst131*x6132);
evalcond[0]=(((r21*x6136))+(((-1.0)*r22*x6138))+(((-1.0)*r20*x6139)));
evalcond[1]=(((r11*x6136))+cj2+(((-1.0)*r10*x6139))+(((-1.0)*r12*x6138)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x6139))+((r01*x6136))+(((-1.0)*r02*x6138)));
evalcond[3]=(((r21*x6137))+(((-1.0)*gconst131*r20*x6138))+((r22*x6132))+((cj1*sj0))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x6135))+((r02*x6132))+(((-1.0)*gconst131*r00*x6138))+((r01*x6137))+((cj2*x6134)));
evalcond[5]=(((r11*x6137))+(((-1.0)*sj2*x6135))+((sj2*x6134))+(((-1.0)*gconst131*r10*x6138))+((r12*x6132)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6140=((1.0)*gconst131);
CheckValue<IkReal> x6141 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst130*r21))+(((-1.0)*cj2*r20*x6140)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6141.valid){
continue;
}
CheckValue<IkReal> x6142=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x6140))+(((-1.0)*gconst130*r00)))),-1);
if(!x6142.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6141.value)+(((1.5707963267949)*(x6142.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6143=IKsin(j5);
IkReal x6144=IKcos(j5);
IkReal x6145=(sj0*sj1);
IkReal x6146=((1.0)*cj0*cj1);
IkReal x6147=(gconst130*x6143);
IkReal x6148=(gconst130*x6144);
IkReal x6149=((1.0)*x6144);
IkReal x6150=((1.0)*gconst131*x6143);
evalcond[0]=(((r21*x6147))+(((-1.0)*r22*x6149))+(((-1.0)*r20*x6150)));
evalcond[1]=(cj2+((r11*x6147))+(((-1.0)*r10*x6150))+(((-1.0)*r12*x6149)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x6149))+((r01*x6147))+(((-1.0)*r00*x6150)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*gconst131*r20*x6149))+((r22*x6143))+((r21*x6148))+((cj0*sj1)));
evalcond[4]=((((-1.0)*gconst131*r00*x6149))+((cj2*x6145))+(((-1.0)*cj2*x6146))+((r01*x6148))+((r02*x6143)));
evalcond[5]=((((-1.0)*gconst131*r10*x6149))+((r11*x6148))+((r12*x6143))+((sj2*x6145))+(((-1.0)*sj2*x6146)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x6151=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x6151;
j5eval[1]=IKsign(x6151);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x6152=((1.0)*cj6);
IkReal x6153=((((-1.0)*r10*sj6))+(((-1.0)*r11*x6152)));
j5eval[0]=x6153;
j5eval[1]=IKsign(x6153);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x6152))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x6154=cj6*cj6;
IkReal x6155=r01*r01;
IkReal x6156=(r01*sj6);
IkReal x6157=(cj6*r00);
IkReal x6158=(((x6154*(r00*r00)))+x6155+(((-1.0)*x6154*x6155))+(((-2.0)*x6156*x6157))+(r02*r02));
j5eval[0]=x6158;
j5eval[1]=((IKabs(r02))+(IKabs((x6156+(((-1.0)*x6157))))));
j5eval[2]=IKsign(x6158);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6159=cj6*cj6;
IkReal x6160=r01*r01;
IkReal x6161=(r01*sj6);
IkReal x6162=(cj6*r00);
CheckValue<IkReal> x6163 = IKatan2WithCheck(IkReal((x6161+(((-1.0)*x6162)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x6163.valid){
continue;
}
CheckValue<IkReal> x6164=IKPowWithIntegerCheck(IKsign(((((-1.0)*x6159*x6160))+x6160+((x6159*(r00*r00)))+(r02*r02)+(((-2.0)*x6161*x6162)))),-1);
if(!x6164.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6163.value)+(((1.5707963267949)*(x6164.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6165=IKcos(j5);
IkReal x6166=IKsin(j5);
IkReal x6167=(sj6*x6166);
IkReal x6168=((1.0)*x6165);
IkReal x6169=(sj6*x6165);
IkReal x6170=((1.0)*cj6*x6166);
evalcond[0]=(((r02*x6166))+(((-1.0)*cj6*r00*x6168))+((r01*x6169)));
evalcond[1]=((((-1.0)*r20*x6170))+((r21*x6167))+(((-1.0)*r22*x6168)));
evalcond[2]=((((-1.0)*r12*x6168))+((r11*x6167))+(((-1.0)*r10*x6170)));
evalcond[3]=((-1.0)+((r01*x6167))+(((-1.0)*r02*x6168))+(((-1.0)*r00*x6170)));
evalcond[4]=(((cj1*sj0))+((r21*x6169))+(((-1.0)*cj6*r20*x6168))+((cj0*sj1))+((r22*x6166)));
evalcond[5]=(((r12*x6166))+(((-1.0)*cj6*r10*x6168))+((r11*x6169))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6171=((1.0)*cj6);
CheckValue<IkReal> x6172=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x6171)))),-1);
if(!x6172.valid){
continue;
}
CheckValue<IkReal> x6173 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x6171)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6173.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6172.value)))+(x6173.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6174=IKcos(j5);
IkReal x6175=IKsin(j5);
IkReal x6176=(sj6*x6175);
IkReal x6177=((1.0)*x6174);
IkReal x6178=(sj6*x6174);
IkReal x6179=((1.0)*cj6*x6175);
evalcond[0]=((((-1.0)*cj6*r00*x6177))+((r02*x6175))+((r01*x6178)));
evalcond[1]=((((-1.0)*r20*x6179))+((r21*x6176))+(((-1.0)*r22*x6177)));
evalcond[2]=(((r11*x6176))+(((-1.0)*r12*x6177))+(((-1.0)*r10*x6179)));
evalcond[3]=((-1.0)+((r01*x6176))+(((-1.0)*r00*x6179))+(((-1.0)*r02*x6177)));
evalcond[4]=(((cj1*sj0))+((r21*x6178))+(((-1.0)*cj6*r20*x6177))+((r22*x6175))+((cj0*sj1)));
evalcond[5]=(((r12*x6175))+((r11*x6178))+(((-1.0)*cj6*r10*x6177))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x6180=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x6180.valid){
continue;
}
CheckValue<IkReal> x6181 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6181.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6180.value)))+(x6181.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6182=IKcos(j5);
IkReal x6183=IKsin(j5);
IkReal x6184=(sj6*x6183);
IkReal x6185=((1.0)*x6182);
IkReal x6186=(sj6*x6182);
IkReal x6187=((1.0)*cj6*x6183);
evalcond[0]=(((r01*x6186))+((r02*x6183))+(((-1.0)*cj6*r00*x6185)));
evalcond[1]=((((-1.0)*r22*x6185))+((r21*x6184))+(((-1.0)*r20*x6187)));
evalcond[2]=((((-1.0)*r12*x6185))+(((-1.0)*r10*x6187))+((r11*x6184)));
evalcond[3]=((-1.0)+(((-1.0)*r00*x6187))+(((-1.0)*r02*x6185))+((r01*x6184)));
evalcond[4]=(((r21*x6186))+((r22*x6183))+(((-1.0)*cj6*r20*x6185))+((cj1*sj0))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+((r11*x6186))+(((-1.0)*cj0*cj1))+(((-1.0)*cj6*r10*x6185))+((r12*x6183)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x6188=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x6188;
j5eval[1]=IKsign(x6188);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x6189=((1.0)*cj6);
IkReal x6190=((((-1.0)*r21*x6189))+(((-1.0)*r20*sj6)));
j5eval[0]=x6190;
j5eval[1]=((IKabs((((r11*sj6))+(((-1.0)*r10*x6189)))))+(IKabs(r12)));
j5eval[2]=IKsign(x6190);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=1.0;
j4=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x6191=(cj0*sj1);
IkReal x6192=(cj1*sj0);
IkReal x6193=(r01*sj6);
IkReal x6194=((1.0)*r02);
IkReal x6195=((1.0)*cj6*r00);
IkReal x6196=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x6196;
j5eval[1]=IKsign(x6196);
j5eval[2]=((IKabs(((((-1.0)*x6192*x6194))+(((-1.0)*x6191*x6194)))))+(IKabs((((x6191*x6193))+(((-1.0)*x6192*x6195))+(((-1.0)*x6191*x6195))+((x6192*x6193))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6197=(cj0*sj1);
IkReal x6198=(cj1*sj0);
IkReal x6199=(r01*sj6);
IkReal x6200=((1.0)*r02);
IkReal x6201=((1.0)*cj6*r00);
CheckValue<IkReal> x6202 = IKatan2WithCheck(IkReal(((((-1.0)*x6197*x6201))+((x6198*x6199))+(((-1.0)*x6198*x6201))+((x6197*x6199)))),IkReal(((((-1.0)*x6197*x6200))+(((-1.0)*x6198*x6200)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6202.valid){
continue;
}
CheckValue<IkReal> x6203=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x6203.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6202.value)+(((1.5707963267949)*(x6203.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6204=IKcos(j5);
IkReal x6205=IKsin(j5);
IkReal x6206=(sj6*x6205);
IkReal x6207=((1.0)*x6204);
IkReal x6208=(sj6*x6204);
IkReal x6209=((1.0)*cj6*x6205);
evalcond[0]=(((r01*x6208))+((r02*x6205))+(((-1.0)*cj6*r00*x6207)));
evalcond[1]=((((-1.0)*r20*x6209))+((r21*x6206))+(((-1.0)*r22*x6207)));
evalcond[2]=((((-1.0)*r12*x6207))+((r11*x6206))+(((-1.0)*r10*x6209)));
evalcond[3]=((1.0)+(((-1.0)*r00*x6209))+((r01*x6206))+(((-1.0)*r02*x6207)));
evalcond[4]=(((r22*x6205))+((cj1*sj0))+((r21*x6208))+(((-1.0)*cj6*r20*x6207))+((cj0*sj1)));
evalcond[5]=(((cj0*cj1))+(((-1.0)*sj0*sj1))+((r11*x6208))+((r12*x6205))+(((-1.0)*cj6*r10*x6207)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6210=((1.0)*cj6);
CheckValue<IkReal> x6211=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x6210))+(((-1.0)*r20*sj6)))),-1);
if(!x6211.valid){
continue;
}
CheckValue<IkReal> x6212 = IKatan2WithCheck(IkReal(r12),IkReal((((r11*sj6))+(((-1.0)*r10*x6210)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6212.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6211.value)))+(x6212.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6213=IKcos(j5);
IkReal x6214=IKsin(j5);
IkReal x6215=(sj6*x6214);
IkReal x6216=((1.0)*x6213);
IkReal x6217=(sj6*x6213);
IkReal x6218=((1.0)*cj6*x6214);
evalcond[0]=(((r02*x6214))+((r01*x6217))+(((-1.0)*cj6*r00*x6216)));
evalcond[1]=(((r21*x6215))+(((-1.0)*r20*x6218))+(((-1.0)*r22*x6216)));
evalcond[2]=(((r11*x6215))+(((-1.0)*r12*x6216))+(((-1.0)*r10*x6218)));
evalcond[3]=((1.0)+(((-1.0)*r00*x6218))+((r01*x6215))+(((-1.0)*r02*x6216)));
evalcond[4]=(((cj1*sj0))+((r21*x6217))+(((-1.0)*cj6*r20*x6216))+((r22*x6214))+((cj0*sj1)));
evalcond[5]=(((r12*x6214))+((r11*x6217))+((cj0*cj1))+(((-1.0)*cj6*r10*x6216))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x6219 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6219.valid){
continue;
}
CheckValue<IkReal> x6220=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x6220.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6219.value)+(((1.5707963267949)*(x6220.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6221=IKcos(j5);
IkReal x6222=IKsin(j5);
IkReal x6223=(sj6*x6222);
IkReal x6224=((1.0)*x6221);
IkReal x6225=(sj6*x6221);
IkReal x6226=((1.0)*cj6*x6222);
evalcond[0]=(((r02*x6222))+((r01*x6225))+(((-1.0)*cj6*r00*x6224)));
evalcond[1]=(((r21*x6223))+(((-1.0)*r20*x6226))+(((-1.0)*r22*x6224)));
evalcond[2]=(((r11*x6223))+(((-1.0)*r12*x6224))+(((-1.0)*r10*x6226)));
evalcond[3]=((1.0)+(((-1.0)*r00*x6226))+((r01*x6223))+(((-1.0)*r02*x6224)));
evalcond[4]=(((cj1*sj0))+((r21*x6225))+(((-1.0)*cj6*r20*x6224))+((r22*x6222))+((cj0*sj1)));
evalcond[5]=(((r11*x6225))+(((-1.0)*cj6*r10*x6224))+((cj0*cj1))+(((-1.0)*sj0*sj1))+((r12*x6222)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x6227=((-1.0)*px);
sj4=0;
cj4=1.0;
j4=0;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x6227);
rxp1_1=(px*r21);
rxp1_2=(r11*x6227);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=((((-1.0)*cj6*r20))+((r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x6230=IKPowWithIntegerCheck(((((-1.0)*cj6*r20))+((r21*sj6))),-1);
if(!x6230.valid){
continue;
}
IkReal x6228=x6230.value;
IkReal x6229=((1.0)*x6228);
cj5array[0]=((((-1.0)*cj1*sj0*x6229))+(((-1.0)*cj0*sj1*x6229)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x6231=IKsin(j5);
IkReal x6232=(sj6*x6231);
IkReal x6233=((1.0)*cj6*x6231);
evalcond[0]=(r02*x6231);
evalcond[1]=(((r21*x6232))+(((-1.0)*r20*x6233)));
evalcond[2]=((((-1.0)*r10*x6233))+((r11*x6232)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6234=((1.0)*sj6);
CheckValue<IkReal> x6235 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj6*r10*sj2))+(((-1.0)*r11*sj2*x6234))+(((-1.0)*cj2*r01*x6234))+((cj2*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6235.valid){
continue;
}
CheckValue<IkReal> x6236=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r21))+(((-1.0)*r20*x6234)))),-1);
if(!x6236.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6235.value)+(((1.5707963267949)*(x6236.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6237=IKsin(j5);
IkReal x6238=IKcos(j5);
IkReal x6239=(sj0*sj1);
IkReal x6240=((1.0)*sj2);
IkReal x6241=(cj0*cj1);
IkReal x6242=(sj6*x6237);
IkReal x6243=((1.0)*x6238);
IkReal x6244=(sj6*x6238);
IkReal x6245=((1.0)*cj6*x6237);
evalcond[0]=(((r21*x6242))+(((-1.0)*r20*x6245))+(((-1.0)*r22*x6243)));
evalcond[1]=(cj2+((r11*x6242))+(((-1.0)*r10*x6245))+(((-1.0)*r12*x6243)));
evalcond[2]=((((-1.0)*r02*x6243))+(((-1.0)*x6240))+(((-1.0)*r00*x6245))+((r01*x6242)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*cj6*r20*x6243))+((r22*x6237))+((r21*x6244))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj6*r00*x6243))+((cj2*x6239))+((r02*x6237))+(((-1.0)*cj2*x6241))+((r01*x6244)));
evalcond[5]=(((r12*x6237))+((r11*x6244))+(((-1.0)*cj6*r10*x6243))+(((-1.0)*x6240*x6241))+((sj2*x6239)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6246=((1.0)*cj6);
CheckValue<IkReal> x6247=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x6246)))),-1);
if(!x6247.valid){
continue;
}
CheckValue<IkReal> x6248 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x6246))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6248.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6247.value)))+(x6248.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6249=IKsin(j5);
IkReal x6250=IKcos(j5);
IkReal x6251=(sj0*sj1);
IkReal x6252=((1.0)*sj2);
IkReal x6253=(cj0*cj1);
IkReal x6254=(sj6*x6249);
IkReal x6255=((1.0)*x6250);
IkReal x6256=(sj6*x6250);
IkReal x6257=((1.0)*cj6*x6249);
evalcond[0]=(((r21*x6254))+(((-1.0)*r22*x6255))+(((-1.0)*r20*x6257)));
evalcond[1]=(cj2+(((-1.0)*r12*x6255))+(((-1.0)*r10*x6257))+((r11*x6254)));
evalcond[2]=(((r01*x6254))+(((-1.0)*r02*x6255))+(((-1.0)*x6252))+(((-1.0)*r00*x6257)));
evalcond[3]=(((cj1*sj0))+((r21*x6256))+(((-1.0)*cj6*r20*x6255))+((r22*x6249))+((cj0*sj1)));
evalcond[4]=(((r01*x6256))+((r02*x6249))+((cj2*x6251))+(((-1.0)*cj2*x6253))+(((-1.0)*cj6*r00*x6255)));
evalcond[5]=((((-1.0)*x6252*x6253))+(((-1.0)*cj6*r10*x6255))+((r12*x6249))+((sj2*x6251))+((r11*x6256)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6258=((1.0)*cj6);
CheckValue<IkReal> x6259 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6258))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6259.valid){
continue;
}
CheckValue<IkReal> x6260=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6258)))),-1);
if(!x6260.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6259.value)+(((1.5707963267949)*(x6260.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6261=IKsin(j5);
IkReal x6262=IKcos(j5);
IkReal x6263=(sj0*sj1);
IkReal x6264=((1.0)*sj2);
IkReal x6265=(cj0*cj1);
IkReal x6266=(sj6*x6261);
IkReal x6267=((1.0)*x6262);
IkReal x6268=(sj6*x6262);
IkReal x6269=((1.0)*cj6*x6261);
evalcond[0]=(((r21*x6266))+(((-1.0)*r22*x6267))+(((-1.0)*r20*x6269)));
evalcond[1]=(cj2+(((-1.0)*r10*x6269))+(((-1.0)*r12*x6267))+((r11*x6266)));
evalcond[2]=(((r01*x6266))+(((-1.0)*r02*x6267))+(((-1.0)*x6264))+(((-1.0)*r00*x6269)));
evalcond[3]=(((r22*x6261))+((cj1*sj0))+((r21*x6268))+(((-1.0)*cj6*r20*x6267))+((cj0*sj1)));
evalcond[4]=(((r01*x6268))+((cj2*x6263))+((r02*x6261))+(((-1.0)*cj2*x6265))+(((-1.0)*cj6*r00*x6267)));
evalcond[5]=((((-1.0)*cj6*r10*x6267))+((sj2*x6263))+((r12*x6261))+(((-1.0)*x6264*x6265))+((r11*x6268)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x6270=((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1)));
j2eval[0]=x6270;
j2eval[1]=IKsign(x6270);
j2eval[2]=((IKabs((((r10*sj6))+((cj6*r11)))))+(IKabs((((r00*sj6))+((cj6*r01))))));
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  || IKabs(j2eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x6271=cj6*cj6;
IkReal x6272=r21*r21;
IkReal x6273=(cj0*sj1);
IkReal x6274=(r21*sj6);
IkReal x6275=(cj1*sj0);
IkReal x6276=((1.0)*cj6*r20);
IkReal x6277=(x6272+(r22*r22)+(((-2.0)*cj6*r20*x6274))+((x6271*(r20*r20)))+(((-1.0)*x6271*x6272)));
j5eval[0]=x6277;
j5eval[1]=IKsign(x6277);
j5eval[2]=((IKabs(((((-1.0)*x6275*x6276))+(((-1.0)*x6273*x6276))+((x6273*x6274))+((x6274*x6275)))))+(IKabs((((r22*x6273))+((r22*x6275))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x6278=cj1*cj1;
IkReal x6279=(cj0*sj0);
IkReal x6280=(cj1*sj1);
j2eval[0]=(x6279+x6280+(((-2.0)*x6278*x6279))+(((-2.0)*x6280*(cj0*cj0)))+(((-1.08349267049076)*sj0*x6278))+(((-1.08349267049076)*cj0*x6280)));
j2eval[1]=((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1)));
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-0.160559264620033)*px))+(((1.20217186450501)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.160559264620033)*py))+(((1.20217186450501)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.160559264620033)*px))+(((1.20217186450501)*py))))+IKsqr(((((0.160559264620033)*py))+(((1.20217186450501)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-0.160559264620033)*px))+(((1.20217186450501)*py))), ((((0.160559264620033)*py))+(((1.20217186450501)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x6281=IKsin(j2);
IkReal x6282=IKcos(j2);
evalcond[0]=((((-1.0)*px))+(((-0.10915)*x6281))+(((0.81725)*x6282)));
evalcond[1]=((((-1.0)*py))+(((0.10915)*x6282))+(((0.81725)*x6281)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=0;
sj1=0;
cj1=1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6283=((1.0)*cj6);
IkReal x6284=((((-1.0)*r00*sj6))+(((-1.0)*r01*x6283)));
j5eval[0]=x6284;
j5eval[1]=IKsign(x6284);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x6283))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=0;
sj1=0;
cj1=1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6285=((1.0)*cj6);
IkReal x6286=((((-1.0)*r10*sj6))+(((-1.0)*r11*x6285)));
j5eval[0]=x6286;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x6285))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x6286);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=0;
sj1=0;
cj1=1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6287=cj6*cj6;
IkReal x6288=((1.0)*r21);
IkReal x6289=(cj6*sj6);
IkReal x6290=((((-1.0)*r11*r20*x6289))+((r10*r20*x6287))+((r11*r21))+((r12*r22))+(((-1.0)*r10*x6288*x6289))+(((-1.0)*r11*x6287*x6288)));
j5eval[0]=x6290;
j5eval[1]=((IKabs((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x6288)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x6290);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6291=cj6*cj6;
IkReal x6292=((1.0)*r21);
IkReal x6293=(cj6*sj6);
CheckValue<IkReal> x6294 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*sj6*x6292))+((cj2*cj6*r20)))),IkReal((cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x6294.valid){
continue;
}
CheckValue<IkReal> x6295=IKPowWithIntegerCheck(IKsign((((r10*r20*x6291))+((r11*r21))+((r12*r22))+(((-1.0)*r11*x6291*x6292))+(((-1.0)*r10*x6292*x6293))+(((-1.0)*r11*r20*x6293)))),-1);
if(!x6295.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6294.value)+(((1.5707963267949)*(x6295.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6296=IKsin(j5);
IkReal x6297=IKcos(j5);
IkReal x6298=((1.0)*sj2);
IkReal x6299=(r01*sj6);
IkReal x6300=(r21*sj6);
IkReal x6301=(r11*sj6);
IkReal x6302=((1.0)*x6296);
IkReal x6303=((1.0)*x6297);
IkReal x6304=(cj6*x6297);
evalcond[0]=((((-1.0)*cj6*r20*x6302))+((x6296*x6300))+(((-1.0)*r22*x6303)));
evalcond[1]=((((-1.0)*x6300*x6303))+(((-1.0)*r22*x6302))+((r20*x6304)));
evalcond[2]=(cj2+(((-1.0)*cj6*r10*x6302))+(((-1.0)*r12*x6303))+((x6296*x6301)));
evalcond[3]=((((-1.0)*r02*x6303))+(((-1.0)*cj6*r00*x6302))+(((-1.0)*x6298))+((x6296*x6299)));
evalcond[4]=((((-1.0)*r02*x6302))+((r00*x6304))+(((-1.0)*x6299*x6303))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*r12*x6302))+(((-1.0)*x6298))+((r10*x6304))+(((-1.0)*x6301*x6303)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6305=((1.0)*cj6);
CheckValue<IkReal> x6306=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x6305)))),-1);
if(!x6306.valid){
continue;
}
CheckValue<IkReal> x6307 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x6305))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6307.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6306.value)))+(x6307.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6308=IKsin(j5);
IkReal x6309=IKcos(j5);
IkReal x6310=((1.0)*sj2);
IkReal x6311=(r01*sj6);
IkReal x6312=(r21*sj6);
IkReal x6313=(r11*sj6);
IkReal x6314=((1.0)*x6308);
IkReal x6315=((1.0)*x6309);
IkReal x6316=(cj6*x6309);
evalcond[0]=((((-1.0)*r22*x6315))+((x6308*x6312))+(((-1.0)*cj6*r20*x6314)));
evalcond[1]=((((-1.0)*r22*x6314))+((r20*x6316))+(((-1.0)*x6312*x6315)));
evalcond[2]=(((x6308*x6313))+cj2+(((-1.0)*r12*x6315))+(((-1.0)*cj6*r10*x6314)));
evalcond[3]=(((x6308*x6311))+(((-1.0)*r02*x6315))+(((-1.0)*x6310))+(((-1.0)*cj6*r00*x6314)));
evalcond[4]=((((-1.0)*x6311*x6315))+((r00*x6316))+(((-1.0)*r02*x6314))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*r12*x6314))+(((-1.0)*x6310))+((r10*x6316))+(((-1.0)*x6313*x6315)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6317=((1.0)*cj6);
CheckValue<IkReal> x6318 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6317))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6318.valid){
continue;
}
CheckValue<IkReal> x6319=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6317)))),-1);
if(!x6319.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6318.value)+(((1.5707963267949)*(x6319.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6320=IKsin(j5);
IkReal x6321=IKcos(j5);
IkReal x6322=((1.0)*sj2);
IkReal x6323=(r01*sj6);
IkReal x6324=(r21*sj6);
IkReal x6325=(r11*sj6);
IkReal x6326=((1.0)*x6320);
IkReal x6327=((1.0)*x6321);
IkReal x6328=(cj6*x6321);
evalcond[0]=((((-1.0)*r22*x6327))+((x6320*x6324))+(((-1.0)*cj6*r20*x6326)));
evalcond[1]=(((r20*x6328))+(((-1.0)*r22*x6326))+(((-1.0)*x6324*x6327)));
evalcond[2]=(cj2+(((-1.0)*cj6*r10*x6326))+((x6320*x6325))+(((-1.0)*r12*x6327)));
evalcond[3]=(((x6320*x6323))+(((-1.0)*x6322))+(((-1.0)*r02*x6327))+(((-1.0)*cj6*r00*x6326)));
evalcond[4]=(((r00*x6328))+(((-1.0)*r02*x6326))+(((-1.0)*x6323*x6327))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x6325*x6327))+((r10*x6328))+(((-1.0)*x6322))+(((-1.0)*r12*x6326)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.52189136462044)*py))+(((-8.4050211434602)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((8.4050211434602)*py))+(((2.52189136462044)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.52189136462044)*py))+(((-8.4050211434602)*px))))+IKsqr(((((8.4050211434602)*py))+(((2.52189136462044)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.52189136462044)*py))+(((-8.4050211434602)*px))), ((((8.4050211434602)*py))+(((2.52189136462044)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x6329=IKcos(j2);
IkReal x6330=IKsin(j2);
evalcond[0]=((((-1.0)*px))+(((-0.10915)*x6330))+(((0.03275)*x6329)));
evalcond[1]=((((0.03275)*x6330))+(((0.10915)*x6329))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=0;
sj1=0;
cj1=1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6331=((1.0)*cj6);
IkReal x6332=((((-1.0)*r00*sj6))+(((-1.0)*r01*x6331)));
j5eval[0]=x6332;
j5eval[1]=IKsign(x6332);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*r20*x6331))+((cj2*r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=0;
sj1=0;
cj1=1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6333=cj6*cj6;
IkReal x6334=(r21*sj6);
IkReal x6335=((1.0)*cj6);
IkReal x6336=(r01*r21);
IkReal x6337=(((r00*r20*x6333))+(((-1.0)*r00*x6334*x6335))+(((-1.0)*x6333*x6336))+x6336+(((-1.0)*r01*r20*sj6*x6335))+((r02*r22)));
j5eval[0]=x6337;
j5eval[1]=IKsign(x6337);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs((((cj2*x6334))+(((-1.0)*cj2*r20*x6335))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=0;
sj1=0;
cj1=1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6338=cj6*cj6;
IkReal x6339=((1.0)*r11);
IkReal x6340=(cj6*r20);
IkReal x6341=(r21*sj6);
IkReal x6342=(((r11*r21))+((r10*r20*x6338))+(((-1.0)*sj6*x6339*x6340))+((r12*r22))+(((-1.0)*cj6*r10*x6341))+(((-1.0)*r21*x6338*x6339)));
j5eval[0]=x6342;
j5eval[1]=((IKabs((((sj2*x6341))+(((-1.0)*sj2*x6340)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x6342);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6343=cj6*cj6;
IkReal x6344=((1.0)*r11);
IkReal x6345=(cj6*r20);
IkReal x6346=(r21*sj6);
CheckValue<IkReal> x6347=IKPowWithIntegerCheck(IKsign((((r11*r21))+((r12*r22))+(((-1.0)*r21*x6343*x6344))+((r10*r20*x6343))+(((-1.0)*cj6*r10*x6346))+(((-1.0)*sj6*x6344*x6345)))),-1);
if(!x6347.valid){
continue;
}
CheckValue<IkReal> x6348 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((sj2*x6346))+(((-1.0)*sj2*x6345)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6348.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6347.value)))+(x6348.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6349=IKsin(j5);
IkReal x6350=IKcos(j5);
IkReal x6351=(r01*sj6);
IkReal x6352=(r21*sj6);
IkReal x6353=(r11*sj6);
IkReal x6354=((1.0)*x6349);
IkReal x6355=((1.0)*x6350);
IkReal x6356=(cj6*x6350);
evalcond[0]=(((x6349*x6352))+(((-1.0)*r22*x6355))+(((-1.0)*cj6*r20*x6354)));
evalcond[1]=(((r20*x6356))+(((-1.0)*r22*x6354))+(((-1.0)*x6352*x6355)));
evalcond[2]=(cj2+((x6349*x6353))+(((-1.0)*r12*x6355))+(((-1.0)*cj6*r10*x6354)));
evalcond[3]=(cj2+(((-1.0)*x6351*x6355))+((r00*x6356))+(((-1.0)*r02*x6354)));
evalcond[4]=(((r10*x6356))+sj2+(((-1.0)*x6353*x6355))+(((-1.0)*r12*x6354)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*cj6*r00*x6354))+((x6349*x6351))+(((-1.0)*r02*x6355)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6357=cj6*cj6;
IkReal x6358=(r21*sj6);
IkReal x6359=((1.0)*cj6);
IkReal x6360=(r01*r21);
CheckValue<IkReal> x6361 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6359))+((cj2*x6358)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6361.valid){
continue;
}
CheckValue<IkReal> x6362=IKPowWithIntegerCheck(IKsign((x6360+(((-1.0)*x6357*x6360))+((r02*r22))+((r00*r20*x6357))+(((-1.0)*r00*x6358*x6359))+(((-1.0)*r01*r20*sj6*x6359)))),-1);
if(!x6362.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6361.value)+(((1.5707963267949)*(x6362.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6363=IKsin(j5);
IkReal x6364=IKcos(j5);
IkReal x6365=(r01*sj6);
IkReal x6366=(r21*sj6);
IkReal x6367=(r11*sj6);
IkReal x6368=((1.0)*x6363);
IkReal x6369=((1.0)*x6364);
IkReal x6370=(cj6*x6364);
evalcond[0]=((((-1.0)*cj6*r20*x6368))+((x6363*x6366))+(((-1.0)*r22*x6369)));
evalcond[1]=((((-1.0)*x6366*x6369))+((r20*x6370))+(((-1.0)*r22*x6368)));
evalcond[2]=((((-1.0)*cj6*r10*x6368))+cj2+((x6363*x6367))+(((-1.0)*r12*x6369)));
evalcond[3]=((((-1.0)*x6365*x6369))+cj2+(((-1.0)*r02*x6368))+((r00*x6370)));
evalcond[4]=(sj2+(((-1.0)*x6367*x6369))+(((-1.0)*r12*x6368))+((r10*x6370)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x6369))+(((-1.0)*cj6*r00*x6368))+((x6363*x6365)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6371=((1.0)*cj6);
CheckValue<IkReal> x6372=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x6371))+(((-1.0)*r00*sj6)))),-1);
if(!x6372.valid){
continue;
}
CheckValue<IkReal> x6373 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6371))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6373.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6372.value)))+(x6373.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6374=IKsin(j5);
IkReal x6375=IKcos(j5);
IkReal x6376=(r01*sj6);
IkReal x6377=(r21*sj6);
IkReal x6378=(r11*sj6);
IkReal x6379=((1.0)*x6374);
IkReal x6380=((1.0)*x6375);
IkReal x6381=(cj6*x6375);
evalcond[0]=((((-1.0)*r22*x6380))+((x6374*x6377))+(((-1.0)*cj6*r20*x6379)));
evalcond[1]=((((-1.0)*x6377*x6380))+(((-1.0)*r22*x6379))+((r20*x6381)));
evalcond[2]=((((-1.0)*cj6*r10*x6379))+cj2+(((-1.0)*r12*x6380))+((x6374*x6378)));
evalcond[3]=(cj2+(((-1.0)*x6376*x6380))+(((-1.0)*r02*x6379))+((r00*x6381)));
evalcond[4]=(sj2+(((-1.0)*x6378*x6380))+((r10*x6381))+(((-1.0)*r12*x6379)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*cj6*r00*x6379))+((x6374*x6376))+(((-1.0)*r02*x6380)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x6382=((1.0)*sj6);
IkReal x6383=((1.0)*cj6);
if( IKabs(((((-1.0)*r10*x6382))+(((-1.0)*r11*x6383)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r00*x6382))+(((-1.0)*r01*x6383)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*x6382))+(((-1.0)*r11*x6383))))+IKsqr(((((-1.0)*r00*x6382))+(((-1.0)*r01*x6383))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r10*x6382))+(((-1.0)*r11*x6383))), ((((-1.0)*r00*x6382))+(((-1.0)*r01*x6383))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x6384=IKsin(j2);
IkReal x6385=IKcos(j2);
IkReal x6386=((0.09465)*sj6);
IkReal x6387=(cj6*r11);
IkReal x6388=((1.0)*sj6);
IkReal x6389=(cj6*r01);
evalcond[0]=((((-1.0)*x6389))+(((-1.0)*x6385))+(((-1.0)*r00*x6388)));
evalcond[1]=((((-1.0)*x6387))+(((-1.0)*x6384))+(((-1.0)*r10*x6388)));
evalcond[2]=((((-0.10915)*x6384))+(((-0.09465)*x6389))+(((-1.0)*px))+(((-1.0)*r00*x6386)));
evalcond[3]=((((-1.0)*r10*x6386))+(((-0.09465)*x6387))+(((0.10915)*x6385))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6390=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x6390;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*r01*sj6))+((cj6*r00))))));
j5eval[2]=IKsign(x6390);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6391=((1.0)*cj6);
IkReal x6392=((((-1.0)*r00*sj6))+(((-1.0)*r01*x6391)));
j5eval[0]=x6392;
j5eval[1]=IKsign(x6392);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x6391))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6393=cj6*cj6;
IkReal x6394=r21*r21;
IkReal x6395=(r21*sj6);
IkReal x6396=(cj6*r20);
IkReal x6397=(((x6393*(r20*r20)))+x6394+(r22*r22)+(((-2.0)*x6395*x6396))+(((-1.0)*x6393*x6394)));
j5eval[0]=x6397;
j5eval[1]=IKsign(x6397);
j5eval[2]=((IKabs(r22))+(IKabs(((((-1.0)*x6396))+x6395))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6398=cj6*cj6;
IkReal x6399=r21*r21;
IkReal x6400=(r21*sj6);
IkReal x6401=(cj6*r20);
CheckValue<IkReal> x6402=IKPowWithIntegerCheck(IKsign((x6399+(r22*r22)+((x6398*(r20*r20)))+(((-2.0)*x6400*x6401))+(((-1.0)*x6398*x6399)))),-1);
if(!x6402.valid){
continue;
}
CheckValue<IkReal> x6403 = IKatan2WithCheck(IkReal(r22),IkReal((x6400+(((-1.0)*x6401)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6403.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6402.value)))+(x6403.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6404=IKsin(j5);
IkReal x6405=IKcos(j5);
IkReal x6406=(r21*sj6);
IkReal x6407=(r01*sj6);
IkReal x6408=(r11*sj6);
IkReal x6409=((1.0)*x6405);
IkReal x6410=(cj6*x6405);
IkReal x6411=((1.0)*x6404);
evalcond[0]=(((x6404*x6406))+(((-1.0)*cj6*r20*x6411))+(((-1.0)*r22*x6409)));
evalcond[1]=(((r00*x6410))+(((-1.0)*x6407*x6409))+(((-1.0)*r02*x6411)));
evalcond[2]=(((r10*x6410))+(((-1.0)*x6408*x6409))+(((-1.0)*r12*x6411)));
evalcond[3]=(cj2+((x6404*x6408))+(((-1.0)*r12*x6409))+(((-1.0)*cj6*r10*x6411)));
evalcond[4]=((1.0)+((r20*x6410))+(((-1.0)*x6406*x6409))+(((-1.0)*r22*x6411)));
evalcond[5]=((((-1.0)*sj2))+((x6404*x6407))+(((-1.0)*r02*x6409))+(((-1.0)*cj6*r00*x6411)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6412=((1.0)*cj6);
CheckValue<IkReal> x6413 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6412))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6413.valid){
continue;
}
CheckValue<IkReal> x6414=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6412)))),-1);
if(!x6414.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6413.value)+(((1.5707963267949)*(x6414.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6415=IKsin(j5);
IkReal x6416=IKcos(j5);
IkReal x6417=(r21*sj6);
IkReal x6418=(r01*sj6);
IkReal x6419=(r11*sj6);
IkReal x6420=((1.0)*x6416);
IkReal x6421=(cj6*x6416);
IkReal x6422=((1.0)*x6415);
evalcond[0]=((((-1.0)*cj6*r20*x6422))+(((-1.0)*r22*x6420))+((x6415*x6417)));
evalcond[1]=((((-1.0)*x6418*x6420))+((r00*x6421))+(((-1.0)*r02*x6422)));
evalcond[2]=((((-1.0)*x6419*x6420))+((r10*x6421))+(((-1.0)*r12*x6422)));
evalcond[3]=(cj2+(((-1.0)*cj6*r10*x6422))+((x6415*x6419))+(((-1.0)*r12*x6420)));
evalcond[4]=((1.0)+(((-1.0)*x6417*x6420))+((r20*x6421))+(((-1.0)*r22*x6422)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*cj6*r00*x6422))+((x6415*x6418))+(((-1.0)*r02*x6420)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x6423 = IKatan2WithCheck(IkReal(((((-1.0)*r01*sj6))+((cj6*r00)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x6423.valid){
continue;
}
CheckValue<IkReal> x6424=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x6424.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6423.value)+(((1.5707963267949)*(x6424.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6425=IKsin(j5);
IkReal x6426=IKcos(j5);
IkReal x6427=(r21*sj6);
IkReal x6428=(r01*sj6);
IkReal x6429=(r11*sj6);
IkReal x6430=((1.0)*x6426);
IkReal x6431=(cj6*x6426);
IkReal x6432=((1.0)*x6425);
evalcond[0]=((((-1.0)*cj6*r20*x6432))+((x6425*x6427))+(((-1.0)*r22*x6430)));
evalcond[1]=((((-1.0)*r02*x6432))+(((-1.0)*x6428*x6430))+((r00*x6431)));
evalcond[2]=((((-1.0)*r12*x6432))+(((-1.0)*x6429*x6430))+((r10*x6431)));
evalcond[3]=(((x6425*x6429))+cj2+(((-1.0)*r12*x6430))+(((-1.0)*cj6*r10*x6432)));
evalcond[4]=((1.0)+(((-1.0)*r22*x6432))+(((-1.0)*x6427*x6430))+((r20*x6431)));
evalcond[5]=((((-1.0)*cj6*r00*x6432))+(((-1.0)*sj2))+((x6425*x6428))+(((-1.0)*r02*x6430)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-0.658427386453172)*px))+(((-2.36617629259053)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.658427386453172)*py))+(((-2.36617629259053)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.658427386453172)*px))+(((-2.36617629259053)*py))))+IKsqr(((((0.658427386453172)*py))+(((-2.36617629259053)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-0.658427386453172)*px))+(((-2.36617629259053)*py))), ((((0.658427386453172)*py))+(((-2.36617629259053)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x6433=IKcos(j2);
IkReal x6434=IKsin(j2);
evalcond[0]=((((-0.10915)*x6434))+(((-1.0)*px))+(((-0.39225)*x6433)));
evalcond[1]=((((-1.0)*py))+(((-0.39225)*x6434))+(((0.10915)*x6433)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x6435=((1.0)*cj6);
IkReal x6436=((((-1.0)*r01*x6435))+(((-1.0)*r00*sj6)));
j5eval[0]=x6436;
j5eval[1]=IKsign(x6436);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*r20*x6435))+((cj2*r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x6437=cj6*cj6;
IkReal x6438=(r21*sj6);
IkReal x6439=((1.0)*cj6);
IkReal x6440=(r01*r21);
IkReal x6441=((((-1.0)*x6437*x6440))+(((-1.0)*r00*x6438*x6439))+x6440+(((-1.0)*r01*r20*sj6*x6439))+((r00*r20*x6437))+((r02*r22)));
j5eval[0]=x6441;
j5eval[1]=IKsign(x6441);
j5eval[2]=((IKabs((((cj2*x6438))+(((-1.0)*cj2*r20*x6439)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x6442=cj6*cj6;
IkReal x6443=((1.0)*r11);
IkReal x6444=(cj6*r20);
IkReal x6445=(r21*sj6);
IkReal x6446=((((-1.0)*cj6*r10*x6445))+((r10*r20*x6442))+((r11*r21))+((r12*r22))+(((-1.0)*sj6*x6443*x6444))+(((-1.0)*r21*x6442*x6443)));
j5eval[0]=x6446;
j5eval[1]=((IKabs(((((-1.0)*sj2*x6444))+((sj2*x6445)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x6446);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6447=cj6*cj6;
IkReal x6448=((1.0)*r11);
IkReal x6449=(cj6*r20);
IkReal x6450=(r21*sj6);
CheckValue<IkReal> x6451 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*sj2*x6449))+((sj2*x6450)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6451.valid){
continue;
}
CheckValue<IkReal> x6452=IKPowWithIntegerCheck(IKsign((((r10*r20*x6447))+(((-1.0)*sj6*x6448*x6449))+((r11*r21))+(((-1.0)*r21*x6447*x6448))+((r12*r22))+(((-1.0)*cj6*r10*x6450)))),-1);
if(!x6452.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6451.value)+(((1.5707963267949)*(x6452.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6453=IKsin(j5);
IkReal x6454=IKcos(j5);
IkReal x6455=(r01*sj6);
IkReal x6456=(r21*sj6);
IkReal x6457=(r11*sj6);
IkReal x6458=((1.0)*x6453);
IkReal x6459=((1.0)*x6454);
IkReal x6460=(cj6*x6454);
evalcond[0]=(((x6453*x6456))+(((-1.0)*cj6*r20*x6458))+(((-1.0)*r22*x6459)));
evalcond[1]=((((-1.0)*x6456*x6459))+(((-1.0)*r22*x6458))+((r20*x6460)));
evalcond[2]=((((-1.0)*cj6*r10*x6458))+cj2+((x6453*x6457))+(((-1.0)*r12*x6459)));
evalcond[3]=(cj2+(((-1.0)*r02*x6458))+((r00*x6460))+(((-1.0)*x6455*x6459)));
evalcond[4]=(sj2+((r10*x6460))+(((-1.0)*r12*x6458))+(((-1.0)*x6457*x6459)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x6459))+((x6453*x6455))+(((-1.0)*cj6*r00*x6458)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6461=cj6*cj6;
IkReal x6462=(r21*sj6);
IkReal x6463=((1.0)*cj6);
IkReal x6464=(r01*r21);
CheckValue<IkReal> x6465 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6463))+((cj2*x6462)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6465.valid){
continue;
}
CheckValue<IkReal> x6466=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*x6462*x6463))+x6464+((r00*r20*x6461))+((r02*r22))+(((-1.0)*x6461*x6464))+(((-1.0)*r01*r20*sj6*x6463)))),-1);
if(!x6466.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6465.value)+(((1.5707963267949)*(x6466.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6467=IKsin(j5);
IkReal x6468=IKcos(j5);
IkReal x6469=(r01*sj6);
IkReal x6470=(r21*sj6);
IkReal x6471=(r11*sj6);
IkReal x6472=((1.0)*x6467);
IkReal x6473=((1.0)*x6468);
IkReal x6474=(cj6*x6468);
evalcond[0]=((((-1.0)*cj6*r20*x6472))+((x6467*x6470))+(((-1.0)*r22*x6473)));
evalcond[1]=(((r20*x6474))+(((-1.0)*r22*x6472))+(((-1.0)*x6470*x6473)));
evalcond[2]=((((-1.0)*r12*x6473))+((x6467*x6471))+cj2+(((-1.0)*cj6*r10*x6472)));
evalcond[3]=(cj2+((r00*x6474))+(((-1.0)*x6469*x6473))+(((-1.0)*r02*x6472)));
evalcond[4]=((((-1.0)*r12*x6472))+sj2+((r10*x6474))+(((-1.0)*x6471*x6473)));
evalcond[5]=(((x6467*x6469))+(((-1.0)*sj2))+(((-1.0)*cj6*r00*x6472))+(((-1.0)*r02*x6473)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6475=((1.0)*cj6);
CheckValue<IkReal> x6476=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6475)))),-1);
if(!x6476.valid){
continue;
}
CheckValue<IkReal> x6477 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6475))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6477.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6476.value)))+(x6477.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6478=IKsin(j5);
IkReal x6479=IKcos(j5);
IkReal x6480=(r01*sj6);
IkReal x6481=(r21*sj6);
IkReal x6482=(r11*sj6);
IkReal x6483=((1.0)*x6478);
IkReal x6484=((1.0)*x6479);
IkReal x6485=(cj6*x6479);
evalcond[0]=((((-1.0)*cj6*r20*x6483))+(((-1.0)*r22*x6484))+((x6478*x6481)));
evalcond[1]=((((-1.0)*r22*x6483))+(((-1.0)*x6481*x6484))+((r20*x6485)));
evalcond[2]=(cj2+(((-1.0)*r12*x6484))+(((-1.0)*cj6*r10*x6483))+((x6478*x6482)));
evalcond[3]=(((r00*x6485))+cj2+(((-1.0)*r02*x6483))+(((-1.0)*x6480*x6484)));
evalcond[4]=(sj2+(((-1.0)*r12*x6483))+(((-1.0)*x6482*x6484))+((r10*x6485)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x6484))+(((-1.0)*cj6*r00*x6483))+((x6478*x6480)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs((((r10*sj6))+((cj6*r11)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*sj6))+((cj6*r01)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*sj6))+((cj6*r11))))+IKsqr((((r00*sj6))+((cj6*r01))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r10*sj6))+((cj6*r11))), (((r00*sj6))+((cj6*r01))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x6486=IKsin(j2);
IkReal x6487=IKcos(j2);
IkReal x6488=((0.09465)*sj6);
IkReal x6489=(cj6*r11);
IkReal x6490=((1.0)*sj6);
IkReal x6491=(cj6*r01);
evalcond[0]=((((-1.0)*x6491))+(((-1.0)*r00*x6490))+x6487);
evalcond[1]=((((-1.0)*x6489))+(((-1.0)*r10*x6490))+x6486);
evalcond[2]=((((-1.0)*r00*x6488))+(((-0.10915)*x6486))+(((-1.0)*px))+(((-0.09465)*x6491)));
evalcond[3]=((((0.10915)*x6487))+(((-1.0)*r10*x6488))+(((-1.0)*py))+(((-0.09465)*x6489)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6492=((1.0)*sj6);
IkReal x6493=((((-1.0)*r10*x6492))+(((-1.0)*cj6*r11)));
j5eval[0]=x6493;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*r01*x6492))+((cj6*r00))))));
j5eval[2]=IKsign(x6493);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6494=((1.0)*cj6);
IkReal x6495=((((-1.0)*r01*x6494))+(((-1.0)*r00*sj6)));
j5eval[0]=x6495;
j5eval[1]=IKsign(x6495);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x6494))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6496=r21*r21;
IkReal x6497=cj6*cj6;
IkReal x6498=(r21*sj6);
IkReal x6499=(cj6*r20);
IkReal x6500=(((x6496*x6497))+(((-1.0)*x6496))+(((-1.0)*(r22*r22)))+(((2.0)*x6498*x6499))+(((-1.0)*x6497*(r20*r20))));
j5eval[0]=x6500;
j5eval[1]=IKsign(x6500);
j5eval[2]=((IKabs(r22))+(IKabs(((((-1.0)*x6499))+x6498))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6501=r21*r21;
IkReal x6502=cj6*cj6;
IkReal x6503=(r21*sj6);
IkReal x6504=(cj6*r20);
CheckValue<IkReal> x6505 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*x6504))+x6503)),IKFAST_ATAN2_MAGTHRESH);
if(!x6505.valid){
continue;
}
CheckValue<IkReal> x6506=IKPowWithIntegerCheck(IKsign(((((2.0)*x6503*x6504))+(((-1.0)*x6501))+(((-1.0)*(r22*r22)))+(((-1.0)*x6502*(r20*r20)))+((x6501*x6502)))),-1);
if(!x6506.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6505.value)+(((1.5707963267949)*(x6506.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6507=IKsin(j5);
IkReal x6508=IKcos(j5);
IkReal x6509=(r21*sj6);
IkReal x6510=(r01*sj6);
IkReal x6511=(r11*sj6);
IkReal x6512=((1.0)*x6508);
IkReal x6513=(cj6*x6508);
IkReal x6514=((1.0)*x6507);
evalcond[0]=(((x6507*x6509))+(((-1.0)*r22*x6512))+(((-1.0)*cj6*r20*x6514)));
evalcond[1]=((((-1.0)*r02*x6514))+((r00*x6513))+(((-1.0)*x6510*x6512)));
evalcond[2]=((((-1.0)*r12*x6514))+((r10*x6513))+(((-1.0)*x6511*x6512)));
evalcond[3]=((((-1.0)*cj6*r10*x6514))+cj2+((x6507*x6511))+(((-1.0)*r12*x6512)));
evalcond[4]=((-1.0)+(((-1.0)*r22*x6514))+((r20*x6513))+(((-1.0)*x6509*x6512)));
evalcond[5]=((((-1.0)*r02*x6512))+(((-1.0)*sj2))+(((-1.0)*cj6*r00*x6514))+((x6507*x6510)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6515=((1.0)*cj6);
CheckValue<IkReal> x6516=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6515)))),-1);
if(!x6516.valid){
continue;
}
CheckValue<IkReal> x6517 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6515))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6517.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6516.value)))+(x6517.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6518=IKsin(j5);
IkReal x6519=IKcos(j5);
IkReal x6520=(r21*sj6);
IkReal x6521=(r01*sj6);
IkReal x6522=(r11*sj6);
IkReal x6523=((1.0)*x6519);
IkReal x6524=(cj6*x6519);
IkReal x6525=((1.0)*x6518);
evalcond[0]=((((-1.0)*r22*x6523))+(((-1.0)*cj6*r20*x6525))+((x6518*x6520)));
evalcond[1]=((((-1.0)*x6521*x6523))+(((-1.0)*r02*x6525))+((r00*x6524)));
evalcond[2]=((((-1.0)*x6522*x6523))+((r10*x6524))+(((-1.0)*r12*x6525)));
evalcond[3]=(cj2+(((-1.0)*cj6*r10*x6525))+(((-1.0)*r12*x6523))+((x6518*x6522)));
evalcond[4]=((-1.0)+((r20*x6524))+(((-1.0)*r22*x6525))+(((-1.0)*x6520*x6523)));
evalcond[5]=((((-1.0)*cj6*r00*x6525))+(((-1.0)*sj2))+(((-1.0)*r02*x6523))+((x6518*x6521)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6526=((1.0)*sj6);
CheckValue<IkReal> x6527 = IKatan2WithCheck(IkReal((((cj6*r00))+(((-1.0)*r01*x6526)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x6527.valid){
continue;
}
CheckValue<IkReal> x6528=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r11))+(((-1.0)*r10*x6526)))),-1);
if(!x6528.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6527.value)+(((1.5707963267949)*(x6528.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6529=IKsin(j5);
IkReal x6530=IKcos(j5);
IkReal x6531=(r21*sj6);
IkReal x6532=(r01*sj6);
IkReal x6533=(r11*sj6);
IkReal x6534=((1.0)*x6530);
IkReal x6535=(cj6*x6530);
IkReal x6536=((1.0)*x6529);
evalcond[0]=((((-1.0)*cj6*r20*x6536))+(((-1.0)*r22*x6534))+((x6529*x6531)));
evalcond[1]=((((-1.0)*r02*x6536))+(((-1.0)*x6532*x6534))+((r00*x6535)));
evalcond[2]=((((-1.0)*r12*x6536))+((r10*x6535))+(((-1.0)*x6533*x6534)));
evalcond[3]=(cj2+(((-1.0)*r12*x6534))+(((-1.0)*cj6*r10*x6536))+((x6529*x6533)));
evalcond[4]=((-1.0)+(((-1.0)*r22*x6536))+((r20*x6535))+(((-1.0)*x6531*x6534)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*cj6*r00*x6536))+(((-1.0)*r02*x6534))+((x6529*x6532)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.36617629259053)*py))+(((-0.658427386453172)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.658427386453172)*py))+(((2.36617629259053)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.36617629259053)*py))+(((-0.658427386453172)*px))))+IKsqr(((((0.658427386453172)*py))+(((2.36617629259053)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.36617629259053)*py))+(((-0.658427386453172)*px))), ((((0.658427386453172)*py))+(((2.36617629259053)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x6537=IKcos(j2);
IkReal x6538=IKsin(j2);
evalcond[0]=((((-0.10915)*x6538))+(((0.39225)*x6537))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*x6537))+(((0.39225)*x6538))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x6539=((1.0)*cj6);
IkReal x6540=((((-1.0)*r01*x6539))+(((-1.0)*r00*sj6)));
j5eval[0]=x6540;
j5eval[1]=IKsign(x6540);
j5eval[2]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x6539)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x6541=((1.0)*cj6);
IkReal x6542=((((-1.0)*r10*sj6))+(((-1.0)*r11*x6541)));
j5eval[0]=x6542;
j5eval[1]=((IKabs((r22*sj2)))+(IKabs(((((-1.0)*r20*sj2*x6541))+((r21*sj2*sj6))))));
j5eval[2]=IKsign(x6542);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x6543=cj6*cj6;
IkReal x6544=((1.0)*r21);
IkReal x6545=(cj6*sj6);
IkReal x6546=((((-1.0)*r10*x6544*x6545))+((r11*r21))+((r12*r22))+((r10*r20*x6543))+(((-1.0)*r11*x6543*x6544))+(((-1.0)*r11*r20*x6545)));
j5eval[0]=x6546;
j5eval[1]=((IKabs(((((-1.0)*cj2*sj6*x6544))+((cj2*cj6*r20)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x6546);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6547=cj6*cj6;
IkReal x6548=((1.0)*r21);
IkReal x6549=(cj6*sj6);
CheckValue<IkReal> x6550=IKPowWithIntegerCheck(IKsign((((r11*r21))+((r12*r22))+((r10*r20*x6547))+(((-1.0)*r11*x6547*x6548))+(((-1.0)*r11*r20*x6549))+(((-1.0)*r10*x6548*x6549)))),-1);
if(!x6550.valid){
continue;
}
CheckValue<IkReal> x6551 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*sj6*x6548))+((cj2*cj6*r20)))),IkReal((cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x6551.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6550.value)))+(x6551.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6552=IKsin(j5);
IkReal x6553=IKcos(j5);
IkReal x6554=((1.0)*sj2);
IkReal x6555=(r01*sj6);
IkReal x6556=(r21*sj6);
IkReal x6557=(r11*sj6);
IkReal x6558=((1.0)*x6552);
IkReal x6559=((1.0)*x6553);
IkReal x6560=(cj6*x6553);
evalcond[0]=(((x6552*x6556))+(((-1.0)*r22*x6559))+(((-1.0)*cj6*r20*x6558)));
evalcond[1]=((((-1.0)*r22*x6558))+((r20*x6560))+(((-1.0)*x6556*x6559)));
evalcond[2]=(((x6552*x6557))+cj2+(((-1.0)*cj6*r10*x6558))+(((-1.0)*r12*x6559)));
evalcond[3]=(((x6552*x6555))+(((-1.0)*x6554))+(((-1.0)*r02*x6559))+(((-1.0)*cj6*r00*x6558)));
evalcond[4]=(((r00*x6560))+(((-1.0)*x6555*x6559))+(((-1.0)*r02*x6558))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x6554))+(((-1.0)*r12*x6558))+((r10*x6560))+(((-1.0)*x6557*x6559)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6561=((1.0)*cj6);
CheckValue<IkReal> x6562 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x6561))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6562.valid){
continue;
}
CheckValue<IkReal> x6563=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x6561)))),-1);
if(!x6563.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6562.value)+(((1.5707963267949)*(x6563.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6564=IKsin(j5);
IkReal x6565=IKcos(j5);
IkReal x6566=((1.0)*sj2);
IkReal x6567=(r01*sj6);
IkReal x6568=(r21*sj6);
IkReal x6569=(r11*sj6);
IkReal x6570=((1.0)*x6564);
IkReal x6571=((1.0)*x6565);
IkReal x6572=(cj6*x6565);
evalcond[0]=(((x6564*x6568))+(((-1.0)*r22*x6571))+(((-1.0)*cj6*r20*x6570)));
evalcond[1]=((((-1.0)*r22*x6570))+((r20*x6572))+(((-1.0)*x6568*x6571)));
evalcond[2]=(cj2+((x6564*x6569))+(((-1.0)*cj6*r10*x6570))+(((-1.0)*r12*x6571)));
evalcond[3]=(((x6564*x6567))+(((-1.0)*x6566))+(((-1.0)*cj6*r00*x6570))+(((-1.0)*r02*x6571)));
evalcond[4]=((((-1.0)*x6567*x6571))+(((-1.0)*r02*x6570))+((r00*x6572))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x6569*x6571))+(((-1.0)*x6566))+((r10*x6572))+(((-1.0)*r12*x6570)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6573=((1.0)*cj6);
CheckValue<IkReal> x6574 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6573))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6574.valid){
continue;
}
CheckValue<IkReal> x6575=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6573)))),-1);
if(!x6575.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6574.value)+(((1.5707963267949)*(x6575.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6576=IKsin(j5);
IkReal x6577=IKcos(j5);
IkReal x6578=((1.0)*sj2);
IkReal x6579=(r01*sj6);
IkReal x6580=(r21*sj6);
IkReal x6581=(r11*sj6);
IkReal x6582=((1.0)*x6576);
IkReal x6583=((1.0)*x6577);
IkReal x6584=(cj6*x6577);
evalcond[0]=(((x6576*x6580))+(((-1.0)*r22*x6583))+(((-1.0)*cj6*r20*x6582)));
evalcond[1]=((((-1.0)*r22*x6582))+((r20*x6584))+(((-1.0)*x6580*x6583)));
evalcond[2]=(cj2+(((-1.0)*r12*x6583))+((x6576*x6581))+(((-1.0)*cj6*r10*x6582)));
evalcond[3]=((((-1.0)*cj6*r00*x6582))+(((-1.0)*r02*x6583))+(((-1.0)*x6578))+((x6576*x6579)));
evalcond[4]=((((-1.0)*r02*x6582))+((r00*x6584))+(((-1.0)*x6579*x6583))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x6581*x6583))+(((-1.0)*r12*x6582))+(((-1.0)*x6578))+((r10*x6584)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-0.160559264620033)*px))+(((-1.20217186450501)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.160559264620033)*py))+(((-1.20217186450501)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.160559264620033)*px))+(((-1.20217186450501)*py))))+IKsqr(((((0.160559264620033)*py))+(((-1.20217186450501)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-0.160559264620033)*px))+(((-1.20217186450501)*py))), ((((0.160559264620033)*py))+(((-1.20217186450501)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x6585=IKcos(j2);
IkReal x6586=IKsin(j2);
evalcond[0]=((((-1.0)*px))+(((-0.10915)*x6586))+(((-0.81725)*x6585)));
evalcond[1]=((((-1.0)*py))+(((-0.81725)*x6586))+(((0.10915)*x6585)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6587=((1.0)*cj6);
IkReal x6588=((((-1.0)*r01*x6587))+(((-1.0)*r00*sj6)));
j5eval[0]=x6588;
j5eval[1]=IKsign(x6588);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*r20*x6587))+((cj2*r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6589=cj6*cj6;
IkReal x6590=(r21*sj6);
IkReal x6591=((1.0)*cj6);
IkReal x6592=(r01*r21);
IkReal x6593=((((-1.0)*r01*r20*sj6*x6591))+x6592+((r00*r20*x6589))+(((-1.0)*x6589*x6592))+((r02*r22))+(((-1.0)*r00*x6590*x6591)));
j5eval[0]=x6593;
j5eval[1]=IKsign(x6593);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs((((cj2*x6590))+(((-1.0)*cj2*r20*x6591))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6594=cj6*cj6;
IkReal x6595=((1.0)*r11);
IkReal x6596=(cj6*r20);
IkReal x6597=(r21*sj6);
IkReal x6598=((((-1.0)*r21*x6594*x6595))+((r11*r21))+(((-1.0)*cj6*r10*x6597))+((r12*r22))+(((-1.0)*sj6*x6595*x6596))+((r10*r20*x6594)));
j5eval[0]=x6598;
j5eval[1]=((IKabs((r22*sj2)))+(IKabs((((sj2*x6597))+(((-1.0)*sj2*x6596))))));
j5eval[2]=IKsign(x6598);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6599=cj6*cj6;
IkReal x6600=((1.0)*r11);
IkReal x6601=(cj6*r20);
IkReal x6602=(r21*sj6);
CheckValue<IkReal> x6603=IKPowWithIntegerCheck(IKsign((((r11*r21))+(((-1.0)*sj6*x6600*x6601))+((r12*r22))+(((-1.0)*cj6*r10*x6602))+(((-1.0)*r21*x6599*x6600))+((r10*r20*x6599)))),-1);
if(!x6603.valid){
continue;
}
CheckValue<IkReal> x6604 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((sj2*x6602))+(((-1.0)*sj2*x6601)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6604.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6603.value)))+(x6604.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6605=IKsin(j5);
IkReal x6606=IKcos(j5);
IkReal x6607=(r01*sj6);
IkReal x6608=(r21*sj6);
IkReal x6609=(r11*sj6);
IkReal x6610=((1.0)*x6605);
IkReal x6611=((1.0)*x6606);
IkReal x6612=(cj6*x6606);
evalcond[0]=(((x6605*x6608))+(((-1.0)*r22*x6611))+(((-1.0)*cj6*r20*x6610)));
evalcond[1]=((((-1.0)*x6608*x6611))+(((-1.0)*r22*x6610))+((r20*x6612)));
evalcond[2]=(((x6605*x6609))+(((-1.0)*r12*x6611))+cj2+(((-1.0)*cj6*r10*x6610)));
evalcond[3]=((((-1.0)*x6607*x6611))+((r00*x6612))+cj2+(((-1.0)*r02*x6610)));
evalcond[4]=((((-1.0)*r12*x6610))+sj2+((r10*x6612))+(((-1.0)*x6609*x6611)));
evalcond[5]=(((x6605*x6607))+(((-1.0)*sj2))+(((-1.0)*r02*x6611))+(((-1.0)*cj6*r00*x6610)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6613=cj6*cj6;
IkReal x6614=(r21*sj6);
IkReal x6615=((1.0)*cj6);
IkReal x6616=(r01*r21);
CheckValue<IkReal> x6617 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*x6614))+(((-1.0)*cj2*r20*x6615)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6617.valid){
continue;
}
CheckValue<IkReal> x6618=IKPowWithIntegerCheck(IKsign((((r00*r20*x6613))+x6616+(((-1.0)*x6613*x6616))+(((-1.0)*r01*r20*sj6*x6615))+(((-1.0)*r00*x6614*x6615))+((r02*r22)))),-1);
if(!x6618.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6617.value)+(((1.5707963267949)*(x6618.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6619=IKsin(j5);
IkReal x6620=IKcos(j5);
IkReal x6621=(r01*sj6);
IkReal x6622=(r21*sj6);
IkReal x6623=(r11*sj6);
IkReal x6624=((1.0)*x6619);
IkReal x6625=((1.0)*x6620);
IkReal x6626=(cj6*x6620);
evalcond[0]=((((-1.0)*r22*x6625))+(((-1.0)*cj6*r20*x6624))+((x6619*x6622)));
evalcond[1]=((((-1.0)*r22*x6624))+(((-1.0)*x6622*x6625))+((r20*x6626)));
evalcond[2]=((((-1.0)*cj6*r10*x6624))+(((-1.0)*r12*x6625))+cj2+((x6619*x6623)));
evalcond[3]=(cj2+((r00*x6626))+(((-1.0)*r02*x6624))+(((-1.0)*x6621*x6625)));
evalcond[4]=(sj2+(((-1.0)*r12*x6624))+((r10*x6626))+(((-1.0)*x6623*x6625)));
evalcond[5]=((((-1.0)*sj2))+((x6619*x6621))+(((-1.0)*r02*x6625))+(((-1.0)*cj6*r00*x6624)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6627=((1.0)*cj6);
CheckValue<IkReal> x6628 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x6627)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6628.valid){
continue;
}
CheckValue<IkReal> x6629=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6627)))),-1);
if(!x6629.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6628.value)+(((1.5707963267949)*(x6629.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6630=IKsin(j5);
IkReal x6631=IKcos(j5);
IkReal x6632=(r01*sj6);
IkReal x6633=(r21*sj6);
IkReal x6634=(r11*sj6);
IkReal x6635=((1.0)*x6630);
IkReal x6636=((1.0)*x6631);
IkReal x6637=(cj6*x6631);
evalcond[0]=((((-1.0)*r22*x6636))+(((-1.0)*cj6*r20*x6635))+((x6630*x6633)));
evalcond[1]=((((-1.0)*r22*x6635))+(((-1.0)*x6633*x6636))+((r20*x6637)));
evalcond[2]=((((-1.0)*cj6*r10*x6635))+cj2+((x6630*x6634))+(((-1.0)*r12*x6636)));
evalcond[3]=(cj2+((r00*x6637))+(((-1.0)*r02*x6635))+(((-1.0)*x6632*x6636)));
evalcond[4]=(sj2+((r10*x6637))+(((-1.0)*x6634*x6636))+(((-1.0)*r12*x6635)));
evalcond[5]=((((-1.0)*sj2))+((x6630*x6632))+(((-1.0)*r02*x6636))+(((-1.0)*cj6*r00*x6635)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-2.52189136462044)*py))+(((-8.4050211434602)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((8.4050211434602)*py))+(((-2.52189136462044)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.52189136462044)*py))+(((-8.4050211434602)*px))))+IKsqr(((((8.4050211434602)*py))+(((-2.52189136462044)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-2.52189136462044)*py))+(((-8.4050211434602)*px))), ((((8.4050211434602)*py))+(((-2.52189136462044)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x6638=IKcos(j2);
IkReal x6639=IKsin(j2);
evalcond[0]=((((-1.0)*px))+(((-0.10915)*x6639))+(((-0.03275)*x6638)));
evalcond[1]=((((-1.0)*py))+(((0.10915)*x6638))+(((-0.03275)*x6639)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6640=((1.0)*cj6);
IkReal x6641=((((-1.0)*r00*sj6))+(((-1.0)*r01*x6640)));
j5eval[0]=x6641;
j5eval[1]=IKsign(x6641);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x6640))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6642=((1.0)*cj6);
IkReal x6643=((((-1.0)*r11*x6642))+(((-1.0)*r10*sj6)));
j5eval[0]=x6643;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x6642))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x6643);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6644=cj6*cj6;
IkReal x6645=((1.0)*r21);
IkReal x6646=(cj6*sj6);
IkReal x6647=((((-1.0)*r11*r20*x6646))+(((-1.0)*r10*x6645*x6646))+((r11*r21))+((r12*r22))+(((-1.0)*r11*x6644*x6645))+((r10*r20*x6644)));
j5eval[0]=x6647;
j5eval[1]=((IKabs((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x6645)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x6647);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6648=cj6*cj6;
IkReal x6649=((1.0)*r21);
IkReal x6650=(cj6*sj6);
CheckValue<IkReal> x6651 = IKatan2WithCheck(IkReal((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x6649)))),IkReal((cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x6651.valid){
continue;
}
CheckValue<IkReal> x6652=IKPowWithIntegerCheck(IKsign((((r11*r21))+((r12*r22))+(((-1.0)*r10*x6649*x6650))+(((-1.0)*r11*r20*x6650))+((r10*r20*x6648))+(((-1.0)*r11*x6648*x6649)))),-1);
if(!x6652.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6651.value)+(((1.5707963267949)*(x6652.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6653=IKsin(j5);
IkReal x6654=IKcos(j5);
IkReal x6655=((1.0)*sj2);
IkReal x6656=(r01*sj6);
IkReal x6657=(r21*sj6);
IkReal x6658=(r11*sj6);
IkReal x6659=((1.0)*x6653);
IkReal x6660=((1.0)*x6654);
IkReal x6661=(cj6*x6654);
evalcond[0]=(((x6653*x6657))+(((-1.0)*cj6*r20*x6659))+(((-1.0)*r22*x6660)));
evalcond[1]=((((-1.0)*r22*x6659))+((r20*x6661))+(((-1.0)*x6657*x6660)));
evalcond[2]=(cj2+((x6653*x6658))+(((-1.0)*r12*x6660))+(((-1.0)*cj6*r10*x6659)));
evalcond[3]=((((-1.0)*x6655))+((x6653*x6656))+(((-1.0)*cj6*r00*x6659))+(((-1.0)*r02*x6660)));
evalcond[4]=(((r00*x6661))+(((-1.0)*r02*x6659))+(((-1.0)*x6656*x6660))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x6658*x6660))+(((-1.0)*x6655))+(((-1.0)*r12*x6659))+((r10*x6661)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6662=((1.0)*cj6);
CheckValue<IkReal> x6663=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x6662)))),-1);
if(!x6663.valid){
continue;
}
CheckValue<IkReal> x6664 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x6662))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6664.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6663.value)))+(x6664.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6665=IKsin(j5);
IkReal x6666=IKcos(j5);
IkReal x6667=((1.0)*sj2);
IkReal x6668=(r01*sj6);
IkReal x6669=(r21*sj6);
IkReal x6670=(r11*sj6);
IkReal x6671=((1.0)*x6665);
IkReal x6672=((1.0)*x6666);
IkReal x6673=(cj6*x6666);
evalcond[0]=(((x6665*x6669))+(((-1.0)*r22*x6672))+(((-1.0)*cj6*r20*x6671)));
evalcond[1]=(((r20*x6673))+(((-1.0)*x6669*x6672))+(((-1.0)*r22*x6671)));
evalcond[2]=(cj2+(((-1.0)*r12*x6672))+((x6665*x6670))+(((-1.0)*cj6*r10*x6671)));
evalcond[3]=((((-1.0)*r02*x6672))+(((-1.0)*x6667))+(((-1.0)*cj6*r00*x6671))+((x6665*x6668)));
evalcond[4]=((((-1.0)*r02*x6671))+(((-1.0)*x6668*x6672))+((r00*x6673))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x6670*x6672))+(((-1.0)*r12*x6671))+(((-1.0)*x6667))+((r10*x6673)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6674=((1.0)*cj6);
CheckValue<IkReal> x6675=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6674)))),-1);
if(!x6675.valid){
continue;
}
CheckValue<IkReal> x6676 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6674))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6676.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6675.value)))+(x6676.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6677=IKsin(j5);
IkReal x6678=IKcos(j5);
IkReal x6679=((1.0)*sj2);
IkReal x6680=(r01*sj6);
IkReal x6681=(r21*sj6);
IkReal x6682=(r11*sj6);
IkReal x6683=((1.0)*x6677);
IkReal x6684=((1.0)*x6678);
IkReal x6685=(cj6*x6678);
evalcond[0]=(((x6677*x6681))+(((-1.0)*cj6*r20*x6683))+(((-1.0)*r22*x6684)));
evalcond[1]=((((-1.0)*x6681*x6684))+((r20*x6685))+(((-1.0)*r22*x6683)));
evalcond[2]=(((x6677*x6682))+cj2+(((-1.0)*cj6*r10*x6683))+(((-1.0)*r12*x6684)));
evalcond[3]=(((x6677*x6680))+(((-1.0)*r02*x6684))+(((-1.0)*x6679))+(((-1.0)*cj6*r00*x6683)));
evalcond[4]=((((-1.0)*r02*x6683))+(((-1.0)*x6680*x6684))+((r00*x6685))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x6679))+((r10*x6685))+(((-1.0)*x6682*x6684))+(((-1.0)*r12*x6683)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs((((r10*sj6))+((cj6*r11)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*sj6))+((cj6*r01)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*sj6))+((cj6*r11))))+IKsqr((((r00*sj6))+((cj6*r01))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r10*sj6))+((cj6*r11))), (((r00*sj6))+((cj6*r01))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x6686=IKsin(j2);
IkReal x6687=IKcos(j2);
IkReal x6688=((0.09465)*sj6);
IkReal x6689=(cj6*r11);
IkReal x6690=((1.0)*sj6);
IkReal x6691=(cj6*r01);
evalcond[0]=((((-1.0)*x6691))+(((-1.0)*r00*x6690))+x6687);
evalcond[1]=((((-1.0)*r10*x6690))+x6686+(((-1.0)*x6689)));
evalcond[2]=((((-1.0)*r00*x6688))+(((-0.10915)*x6686))+(((-1.0)*px))+(((-0.09465)*x6691)));
evalcond[3]=((((-1.0)*py))+(((0.10915)*x6687))+(((-1.0)*r10*x6688))+(((-0.09465)*x6689)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6692=((1.0)*sj6);
IkReal x6693=((((-1.0)*r10*x6692))+(((-1.0)*cj6*r11)));
j5eval[0]=x6693;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*r01*x6692))+((cj6*r00))))));
j5eval[2]=IKsign(x6693);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6694=((1.0)*cj6);
IkReal x6695=((((-1.0)*r01*x6694))+(((-1.0)*r00*sj6)));
j5eval[0]=x6695;
j5eval[1]=IKsign(x6695);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x6694))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x6696=r21*r21;
IkReal x6697=cj6*cj6;
IkReal x6698=(r21*sj6);
IkReal x6699=(cj6*r20);
IkReal x6700=(((x6696*x6697))+(((-1.0)*x6696))+(((2.0)*x6698*x6699))+(((-1.0)*(r22*r22)))+(((-1.0)*x6697*(r20*r20))));
j5eval[0]=x6700;
j5eval[1]=IKsign(x6700);
j5eval[2]=((IKabs(r22))+(IKabs(((((-1.0)*x6699))+x6698))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6701=r21*r21;
IkReal x6702=cj6*cj6;
IkReal x6703=(r21*sj6);
IkReal x6704=(cj6*r20);
CheckValue<IkReal> x6705=IKPowWithIntegerCheck(IKsign(((((2.0)*x6703*x6704))+(((-1.0)*x6702*(r20*r20)))+(((-1.0)*(r22*r22)))+((x6701*x6702))+(((-1.0)*x6701)))),-1);
if(!x6705.valid){
continue;
}
CheckValue<IkReal> x6706 = IKatan2WithCheck(IkReal(r22),IkReal((x6703+(((-1.0)*x6704)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6706.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6705.value)))+(x6706.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6707=IKsin(j5);
IkReal x6708=IKcos(j5);
IkReal x6709=(r21*sj6);
IkReal x6710=(r01*sj6);
IkReal x6711=(r11*sj6);
IkReal x6712=((1.0)*x6708);
IkReal x6713=(cj6*x6708);
IkReal x6714=((1.0)*x6707);
evalcond[0]=(((x6707*x6709))+(((-1.0)*r22*x6712))+(((-1.0)*cj6*r20*x6714)));
evalcond[1]=((((-1.0)*x6710*x6712))+(((-1.0)*r02*x6714))+((r00*x6713)));
evalcond[2]=((((-1.0)*x6711*x6712))+(((-1.0)*r12*x6714))+((r10*x6713)));
evalcond[3]=(cj2+((x6707*x6711))+(((-1.0)*cj6*r10*x6714))+(((-1.0)*r12*x6712)));
evalcond[4]=((-1.0)+((r20*x6713))+(((-1.0)*x6709*x6712))+(((-1.0)*r22*x6714)));
evalcond[5]=((((-1.0)*sj2))+((x6707*x6710))+(((-1.0)*r02*x6712))+(((-1.0)*cj6*r00*x6714)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6715=((1.0)*cj6);
CheckValue<IkReal> x6716=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6715)))),-1);
if(!x6716.valid){
continue;
}
CheckValue<IkReal> x6717 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6715))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6717.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6716.value)))+(x6717.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6718=IKsin(j5);
IkReal x6719=IKcos(j5);
IkReal x6720=(r21*sj6);
IkReal x6721=(r01*sj6);
IkReal x6722=(r11*sj6);
IkReal x6723=((1.0)*x6719);
IkReal x6724=(cj6*x6719);
IkReal x6725=((1.0)*x6718);
evalcond[0]=((((-1.0)*r22*x6723))+(((-1.0)*cj6*r20*x6725))+((x6718*x6720)));
evalcond[1]=((((-1.0)*r02*x6725))+(((-1.0)*x6721*x6723))+((r00*x6724)));
evalcond[2]=((((-1.0)*x6722*x6723))+(((-1.0)*r12*x6725))+((r10*x6724)));
evalcond[3]=(cj2+((x6718*x6722))+(((-1.0)*r12*x6723))+(((-1.0)*cj6*r10*x6725)));
evalcond[4]=((-1.0)+(((-1.0)*r22*x6725))+((r20*x6724))+(((-1.0)*x6720*x6723)));
evalcond[5]=((((-1.0)*sj2))+((x6718*x6721))+(((-1.0)*r02*x6723))+(((-1.0)*cj6*r00*x6725)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6726=((1.0)*sj6);
CheckValue<IkReal> x6727=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r11))+(((-1.0)*r10*x6726)))),-1);
if(!x6727.valid){
continue;
}
CheckValue<IkReal> x6728 = IKatan2WithCheck(IkReal((((cj6*r00))+(((-1.0)*r01*x6726)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x6728.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6727.value)))+(x6728.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6729=IKsin(j5);
IkReal x6730=IKcos(j5);
IkReal x6731=(r21*sj6);
IkReal x6732=(r01*sj6);
IkReal x6733=(r11*sj6);
IkReal x6734=((1.0)*x6730);
IkReal x6735=(cj6*x6730);
IkReal x6736=((1.0)*x6729);
evalcond[0]=((((-1.0)*r22*x6734))+((x6729*x6731))+(((-1.0)*cj6*r20*x6736)));
evalcond[1]=((((-1.0)*r02*x6736))+(((-1.0)*x6732*x6734))+((r00*x6735)));
evalcond[2]=((((-1.0)*r12*x6736))+(((-1.0)*x6733*x6734))+((r10*x6735)));
evalcond[3]=(((x6729*x6733))+cj2+(((-1.0)*r12*x6734))+(((-1.0)*cj6*r10*x6736)));
evalcond[4]=((-1.0)+(((-1.0)*r22*x6736))+((r20*x6735))+(((-1.0)*x6731*x6734)));
evalcond[5]=((((-1.0)*sj2))+((x6729*x6732))+(((-1.0)*r02*x6734))+(((-1.0)*cj6*r00*x6736)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((2.36617629259053)*py))+(((-0.658427386453172)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.658427386453172)*py))+(((2.36617629259053)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((2.36617629259053)*py))+(((-0.658427386453172)*px))))+IKsqr(((((0.658427386453172)*py))+(((2.36617629259053)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((2.36617629259053)*py))+(((-0.658427386453172)*px))), ((((0.658427386453172)*py))+(((2.36617629259053)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x6737=IKcos(j2);
IkReal x6738=IKsin(j2);
evalcond[0]=((((0.39225)*x6737))+(((-0.10915)*x6738))+(((-1.0)*px)));
evalcond[1]=((((0.10915)*x6737))+(((0.39225)*x6738))+(((-1.0)*py)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x6739=((1.0)*cj6);
IkReal x6740=((((-1.0)*r01*x6739))+(((-1.0)*r00*sj6)));
j5eval[0]=x6740;
j5eval[1]=IKsign(x6740);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x6739))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x6741=((1.0)*cj6);
IkReal x6742=((((-1.0)*r11*x6741))+(((-1.0)*r10*sj6)));
j5eval[0]=x6742;
j5eval[1]=((IKabs((r22*sj2)))+(IKabs(((((-1.0)*r20*sj2*x6741))+((r21*sj2*sj6))))));
j5eval[2]=IKsign(x6742);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x6743=cj6*cj6;
IkReal x6744=((1.0)*r21);
IkReal x6745=(cj6*sj6);
IkReal x6746=((((-1.0)*r10*x6744*x6745))+((r11*r21))+((r12*r22))+(((-1.0)*r11*x6743*x6744))+(((-1.0)*r11*r20*x6745))+((r10*r20*x6743)));
j5eval[0]=x6746;
j5eval[1]=((IKabs((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x6744)))))+(IKabs((cj2*r22))));
j5eval[2]=IKsign(x6746);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6747=cj6*cj6;
IkReal x6748=((1.0)*r21);
IkReal x6749=(cj6*sj6);
CheckValue<IkReal> x6750 = IKatan2WithCheck(IkReal((((cj2*cj6*r20))+(((-1.0)*cj2*sj6*x6748)))),IkReal((cj2*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x6750.valid){
continue;
}
CheckValue<IkReal> x6751=IKPowWithIntegerCheck(IKsign((((r11*r21))+((r12*r22))+(((-1.0)*r11*r20*x6749))+(((-1.0)*r11*x6747*x6748))+(((-1.0)*r10*x6748*x6749))+((r10*r20*x6747)))),-1);
if(!x6751.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6750.value)+(((1.5707963267949)*(x6751.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6752=IKsin(j5);
IkReal x6753=IKcos(j5);
IkReal x6754=((1.0)*sj2);
IkReal x6755=(r01*sj6);
IkReal x6756=(r21*sj6);
IkReal x6757=(r11*sj6);
IkReal x6758=((1.0)*x6752);
IkReal x6759=((1.0)*x6753);
IkReal x6760=(cj6*x6753);
evalcond[0]=((((-1.0)*cj6*r20*x6758))+(((-1.0)*r22*x6759))+((x6752*x6756)));
evalcond[1]=(((r20*x6760))+(((-1.0)*r22*x6758))+(((-1.0)*x6756*x6759)));
evalcond[2]=((((-1.0)*cj6*r10*x6758))+cj2+((x6752*x6757))+(((-1.0)*r12*x6759)));
evalcond[3]=((((-1.0)*x6754))+(((-1.0)*r02*x6759))+((x6752*x6755))+(((-1.0)*cj6*r00*x6758)));
evalcond[4]=((((-1.0)*x6755*x6759))+((r00*x6760))+(((-1.0)*r02*x6758))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x6754))+((r10*x6760))+(((-1.0)*r12*x6758))+(((-1.0)*x6757*x6759)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6761=((1.0)*cj6);
CheckValue<IkReal> x6762=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x6761)))),-1);
if(!x6762.valid){
continue;
}
CheckValue<IkReal> x6763 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x6761))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6763.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6762.value)))+(x6763.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6764=IKsin(j5);
IkReal x6765=IKcos(j5);
IkReal x6766=((1.0)*sj2);
IkReal x6767=(r01*sj6);
IkReal x6768=(r21*sj6);
IkReal x6769=(r11*sj6);
IkReal x6770=((1.0)*x6764);
IkReal x6771=((1.0)*x6765);
IkReal x6772=(cj6*x6765);
evalcond[0]=((((-1.0)*r22*x6771))+(((-1.0)*cj6*r20*x6770))+((x6764*x6768)));
evalcond[1]=((((-1.0)*x6768*x6771))+(((-1.0)*r22*x6770))+((r20*x6772)));
evalcond[2]=(cj2+(((-1.0)*r12*x6771))+(((-1.0)*cj6*r10*x6770))+((x6764*x6769)));
evalcond[3]=((((-1.0)*x6766))+(((-1.0)*r02*x6771))+((x6764*x6767))+(((-1.0)*cj6*r00*x6770)));
evalcond[4]=((((-1.0)*r02*x6770))+(((-1.0)*cj2))+(((-1.0)*x6767*x6771))+((r00*x6772)));
evalcond[5]=((((-1.0)*x6769*x6771))+(((-1.0)*r12*x6770))+(((-1.0)*x6766))+((r10*x6772)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6773=((1.0)*cj6);
CheckValue<IkReal> x6774 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6773))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6774.valid){
continue;
}
CheckValue<IkReal> x6775=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x6773))+(((-1.0)*r00*sj6)))),-1);
if(!x6775.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6774.value)+(((1.5707963267949)*(x6775.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6776=IKsin(j5);
IkReal x6777=IKcos(j5);
IkReal x6778=((1.0)*sj2);
IkReal x6779=(r01*sj6);
IkReal x6780=(r21*sj6);
IkReal x6781=(r11*sj6);
IkReal x6782=((1.0)*x6776);
IkReal x6783=((1.0)*x6777);
IkReal x6784=(cj6*x6777);
evalcond[0]=(((x6776*x6780))+(((-1.0)*cj6*r20*x6782))+(((-1.0)*r22*x6783)));
evalcond[1]=(((r20*x6784))+(((-1.0)*r22*x6782))+(((-1.0)*x6780*x6783)));
evalcond[2]=(((x6776*x6781))+cj2+(((-1.0)*cj6*r10*x6782))+(((-1.0)*r12*x6783)));
evalcond[3]=((((-1.0)*x6778))+(((-1.0)*cj6*r00*x6782))+((x6776*x6779))+(((-1.0)*r02*x6783)));
evalcond[4]=((((-1.0)*x6779*x6783))+(((-1.0)*r02*x6782))+((r00*x6784))+(((-1.0)*cj2)));
evalcond[5]=((((-1.0)*x6778))+(((-1.0)*r12*x6782))+((r10*x6784))+(((-1.0)*x6781*x6783)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x6785=((1.0)*sj6);
IkReal x6786=((1.0)*cj6);
if( IKabs(((((-1.0)*r11*x6786))+(((-1.0)*r10*x6785)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r00*x6785))+(((-1.0)*r01*x6786)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x6786))+(((-1.0)*r10*x6785))))+IKsqr(((((-1.0)*r00*x6785))+(((-1.0)*r01*x6786))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r11*x6786))+(((-1.0)*r10*x6785))), ((((-1.0)*r00*x6785))+(((-1.0)*r01*x6786))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x6787=IKsin(j2);
IkReal x6788=IKcos(j2);
IkReal x6789=((0.09465)*sj6);
IkReal x6790=(cj6*r11);
IkReal x6791=((1.0)*sj6);
IkReal x6792=(cj6*r01);
evalcond[0]=((((-1.0)*x6788))+(((-1.0)*r00*x6791))+(((-1.0)*x6792)));
evalcond[1]=((((-1.0)*r10*x6791))+(((-1.0)*x6787))+(((-1.0)*x6790)));
evalcond[2]=((((-0.10915)*x6787))+(((-1.0)*px))+(((-1.0)*r00*x6789))+(((-0.09465)*x6792)));
evalcond[3]=((((0.10915)*x6788))+(((-1.0)*py))+(((-1.0)*r10*x6789))+(((-0.09465)*x6790)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6793=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x6793;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*r01*sj6))+((cj6*r00))))));
j5eval[2]=IKsign(x6793);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6794=((1.0)*cj6);
IkReal x6795=((((-1.0)*r00*sj6))+(((-1.0)*r01*x6794)));
j5eval[0]=x6795;
j5eval[1]=IKsign(x6795);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x6794))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x6796=cj6*cj6;
IkReal x6797=r21*r21;
IkReal x6798=(r21*sj6);
IkReal x6799=(cj6*r20);
IkReal x6800=((r22*r22)+x6797+(((-2.0)*x6798*x6799))+(((-1.0)*x6796*x6797))+((x6796*(r20*r20))));
j5eval[0]=x6800;
j5eval[1]=IKsign(x6800);
j5eval[2]=((IKabs((x6798+(((-1.0)*x6799)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6801=cj6*cj6;
IkReal x6802=r21*r21;
IkReal x6803=(r21*sj6);
IkReal x6804=(cj6*r20);
CheckValue<IkReal> x6805 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*x6804))+x6803)),IKFAST_ATAN2_MAGTHRESH);
if(!x6805.valid){
continue;
}
CheckValue<IkReal> x6806=IKPowWithIntegerCheck(IKsign(((((-1.0)*x6801*x6802))+(r22*r22)+(((-2.0)*x6803*x6804))+x6802+((x6801*(r20*r20))))),-1);
if(!x6806.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6805.value)+(((1.5707963267949)*(x6806.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6807=IKsin(j5);
IkReal x6808=IKcos(j5);
IkReal x6809=(r21*sj6);
IkReal x6810=(r01*sj6);
IkReal x6811=(r11*sj6);
IkReal x6812=((1.0)*x6808);
IkReal x6813=(cj6*x6808);
IkReal x6814=((1.0)*x6807);
evalcond[0]=((((-1.0)*cj6*r20*x6814))+((x6807*x6809))+(((-1.0)*r22*x6812)));
evalcond[1]=((((-1.0)*x6810*x6812))+(((-1.0)*r02*x6814))+((r00*x6813)));
evalcond[2]=(((r10*x6813))+(((-1.0)*x6811*x6812))+(((-1.0)*r12*x6814)));
evalcond[3]=(((x6807*x6811))+cj2+(((-1.0)*r12*x6812))+(((-1.0)*cj6*r10*x6814)));
evalcond[4]=((1.0)+(((-1.0)*x6809*x6812))+(((-1.0)*r22*x6814))+((r20*x6813)));
evalcond[5]=((((-1.0)*sj2))+((x6807*x6810))+(((-1.0)*cj6*r00*x6814))+(((-1.0)*r02*x6812)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6815=((1.0)*cj6);
CheckValue<IkReal> x6816=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x6815)))),-1);
if(!x6816.valid){
continue;
}
CheckValue<IkReal> x6817 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6815))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6817.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6816.value)))+(x6817.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6818=IKsin(j5);
IkReal x6819=IKcos(j5);
IkReal x6820=(r21*sj6);
IkReal x6821=(r01*sj6);
IkReal x6822=(r11*sj6);
IkReal x6823=((1.0)*x6819);
IkReal x6824=(cj6*x6819);
IkReal x6825=((1.0)*x6818);
evalcond[0]=(((x6818*x6820))+(((-1.0)*r22*x6823))+(((-1.0)*cj6*r20*x6825)));
evalcond[1]=(((r00*x6824))+(((-1.0)*r02*x6825))+(((-1.0)*x6821*x6823)));
evalcond[2]=(((r10*x6824))+(((-1.0)*r12*x6825))+(((-1.0)*x6822*x6823)));
evalcond[3]=(cj2+(((-1.0)*r12*x6823))+(((-1.0)*cj6*r10*x6825))+((x6818*x6822)));
evalcond[4]=((1.0)+((r20*x6824))+(((-1.0)*r22*x6825))+(((-1.0)*x6820*x6823)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x6823))+(((-1.0)*cj6*r00*x6825))+((x6818*x6821)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x6826 = IKatan2WithCheck(IkReal(((((-1.0)*r01*sj6))+((cj6*r00)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x6826.valid){
continue;
}
CheckValue<IkReal> x6827=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x6827.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6826.value)+(((1.5707963267949)*(x6827.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6828=IKsin(j5);
IkReal x6829=IKcos(j5);
IkReal x6830=(r21*sj6);
IkReal x6831=(r01*sj6);
IkReal x6832=(r11*sj6);
IkReal x6833=((1.0)*x6829);
IkReal x6834=(cj6*x6829);
IkReal x6835=((1.0)*x6828);
evalcond[0]=(((x6828*x6830))+(((-1.0)*r22*x6833))+(((-1.0)*cj6*r20*x6835)));
evalcond[1]=((((-1.0)*r02*x6835))+((r00*x6834))+(((-1.0)*x6831*x6833)));
evalcond[2]=((((-1.0)*r12*x6835))+((r10*x6834))+(((-1.0)*x6832*x6833)));
evalcond[3]=(cj2+(((-1.0)*r12*x6833))+(((-1.0)*cj6*r10*x6835))+((x6828*x6832)));
evalcond[4]=((1.0)+((r20*x6834))+(((-1.0)*r22*x6835))+(((-1.0)*x6830*x6833)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*cj6*r00*x6835))+(((-1.0)*r02*x6833))+((x6828*x6831)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
if( IKabs(((((-0.658427386453172)*px))+(((-2.36617629259053)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.658427386453172)*py))+(((-2.36617629259053)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.658427386453172)*px))+(((-2.36617629259053)*py))))+IKsqr(((((0.658427386453172)*py))+(((-2.36617629259053)*px))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-0.658427386453172)*px))+(((-2.36617629259053)*py))), ((((0.658427386453172)*py))+(((-2.36617629259053)*px))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x6836=IKcos(j2);
IkReal x6837=IKsin(j2);
evalcond[0]=((((-0.10915)*x6837))+(((-1.0)*px))+(((-0.39225)*x6836)));
evalcond[1]=((((0.10915)*x6836))+(((-1.0)*py))+(((-0.39225)*x6837)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x6838=((1.0)*cj6);
IkReal x6839=((((-1.0)*r00*sj6))+(((-1.0)*r01*x6838)));
j5eval[0]=x6839;
j5eval[1]=IKsign(x6839);
j5eval[2]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*cj2*r20*x6838))+((cj2*r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x6840=cj6*cj6;
IkReal x6841=(r21*sj6);
IkReal x6842=((1.0)*cj6);
IkReal x6843=(r01*r21);
IkReal x6844=(((r00*r20*x6840))+(((-1.0)*x6840*x6843))+(((-1.0)*r00*x6841*x6842))+x6843+((r02*r22))+(((-1.0)*r01*r20*sj6*x6842)));
j5eval[0]=x6844;
j5eval[1]=IKsign(x6844);
j5eval[2]=((IKabs((((cj2*x6841))+(((-1.0)*cj2*r20*x6842)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x6845=cj6*cj6;
IkReal x6846=((1.0)*r11);
IkReal x6847=(cj6*r20);
IkReal x6848=(r21*sj6);
IkReal x6849=((((-1.0)*cj6*r10*x6848))+((r11*r21))+((r12*r22))+(((-1.0)*sj6*x6846*x6847))+(((-1.0)*r21*x6845*x6846))+((r10*r20*x6845)));
j5eval[0]=x6849;
j5eval[1]=((IKabs((((sj2*x6848))+(((-1.0)*sj2*x6847)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x6849);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6850=cj6*cj6;
IkReal x6851=((1.0)*r11);
IkReal x6852=(cj6*r20);
IkReal x6853=(r21*sj6);
CheckValue<IkReal> x6854=IKPowWithIntegerCheck(IKsign(((((-1.0)*sj6*x6851*x6852))+((r11*r21))+(((-1.0)*cj6*r10*x6853))+((r12*r22))+(((-1.0)*r21*x6850*x6851))+((r10*r20*x6850)))),-1);
if(!x6854.valid){
continue;
}
CheckValue<IkReal> x6855 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((sj2*x6853))+(((-1.0)*sj2*x6852)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6855.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6854.value)))+(x6855.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6856=IKsin(j5);
IkReal x6857=IKcos(j5);
IkReal x6858=(r01*sj6);
IkReal x6859=(r21*sj6);
IkReal x6860=(r11*sj6);
IkReal x6861=((1.0)*x6856);
IkReal x6862=((1.0)*x6857);
IkReal x6863=(cj6*x6857);
evalcond[0]=((((-1.0)*cj6*r20*x6861))+((x6856*x6859))+(((-1.0)*r22*x6862)));
evalcond[1]=((((-1.0)*r22*x6861))+((r20*x6863))+(((-1.0)*x6859*x6862)));
evalcond[2]=(cj2+(((-1.0)*r12*x6862))+(((-1.0)*cj6*r10*x6861))+((x6856*x6860)));
evalcond[3]=(cj2+(((-1.0)*r02*x6861))+((r00*x6863))+(((-1.0)*x6858*x6862)));
evalcond[4]=(sj2+(((-1.0)*x6860*x6862))+(((-1.0)*r12*x6861))+((r10*x6863)));
evalcond[5]=(((x6856*x6858))+(((-1.0)*sj2))+(((-1.0)*r02*x6862))+(((-1.0)*cj6*r00*x6861)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6864=cj6*cj6;
IkReal x6865=(r21*sj6);
IkReal x6866=((1.0)*cj6);
IkReal x6867=(r01*r21);
CheckValue<IkReal> x6868=IKPowWithIntegerCheck(IKsign(((((-1.0)*x6864*x6867))+((r00*r20*x6864))+(((-1.0)*r00*x6865*x6866))+x6867+((r02*r22))+(((-1.0)*r01*r20*sj6*x6866)))),-1);
if(!x6868.valid){
continue;
}
CheckValue<IkReal> x6869 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*x6865))+(((-1.0)*cj2*r20*x6866)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6869.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6868.value)))+(x6869.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6870=IKsin(j5);
IkReal x6871=IKcos(j5);
IkReal x6872=(r01*sj6);
IkReal x6873=(r21*sj6);
IkReal x6874=(r11*sj6);
IkReal x6875=((1.0)*x6870);
IkReal x6876=((1.0)*x6871);
IkReal x6877=(cj6*x6871);
evalcond[0]=((((-1.0)*cj6*r20*x6875))+((x6870*x6873))+(((-1.0)*r22*x6876)));
evalcond[1]=((((-1.0)*r22*x6875))+(((-1.0)*x6873*x6876))+((r20*x6877)));
evalcond[2]=(((x6870*x6874))+cj2+(((-1.0)*r12*x6876))+(((-1.0)*cj6*r10*x6875)));
evalcond[3]=(cj2+(((-1.0)*x6872*x6876))+(((-1.0)*r02*x6875))+((r00*x6877)));
evalcond[4]=(sj2+(((-1.0)*x6874*x6876))+(((-1.0)*r12*x6875))+((r10*x6877)));
evalcond[5]=((((-1.0)*sj2))+((x6870*x6872))+(((-1.0)*r02*x6876))+(((-1.0)*cj6*r00*x6875)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6878=((1.0)*cj6);
CheckValue<IkReal> x6879=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x6878))+(((-1.0)*r00*sj6)))),-1);
if(!x6879.valid){
continue;
}
CheckValue<IkReal> x6880 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x6878))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6880.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6879.value)))+(x6880.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6881=IKsin(j5);
IkReal x6882=IKcos(j5);
IkReal x6883=(r01*sj6);
IkReal x6884=(r21*sj6);
IkReal x6885=(r11*sj6);
IkReal x6886=((1.0)*x6881);
IkReal x6887=((1.0)*x6882);
IkReal x6888=(cj6*x6882);
evalcond[0]=((((-1.0)*cj6*r20*x6886))+((x6881*x6884))+(((-1.0)*r22*x6887)));
evalcond[1]=(((r20*x6888))+(((-1.0)*x6884*x6887))+(((-1.0)*r22*x6886)));
evalcond[2]=((((-1.0)*cj6*r10*x6886))+cj2+(((-1.0)*r12*x6887))+((x6881*x6885)));
evalcond[3]=(cj2+(((-1.0)*r02*x6886))+(((-1.0)*x6883*x6887))+((r00*x6888)));
evalcond[4]=(sj2+(((-1.0)*x6885*x6887))+(((-1.0)*r12*x6886))+((r10*x6888)));
evalcond[5]=((((-1.0)*sj2))+(((-1.0)*r02*x6887))+(((-1.0)*cj6*r00*x6886))+((x6881*x6883)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2, j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x6889=cj1*cj1;
IkReal x6890=(cj0*sj1);
IkReal x6891=((20000.0)*py);
IkReal x6892=(cj1*sj0);
IkReal x6893=(cj1*sj1);
IkReal x6894=(cj6*r01);
IkReal x6895=(r00*sj6);
IkReal x6896=((1893.0)*cj6*r11);
IkReal x6897=(sj0*x6889);
IkReal x6898=((1893.0)*r10*sj6);
CheckValue<IkReal> x6899=IKPowWithIntegerCheck(((((7845.0)*x6893))+(((-15690.0)*cj0*x6897))+(((7845.0)*cj0*sj0))+(((-15690.0)*cj0*cj1*x6890))+(((-8500.0)*x6897))+(((-8500.0)*cj1*x6890))),-1);
if(!x6899.valid){
continue;
}
CheckValue<IkReal> x6900=IKPowWithIntegerCheck(((((-1.0)*x6892))+(((-1.0)*x6890))),-1);
if(!x6900.valid){
continue;
}
if( IKabs(((x6899.value)*(((((-2183.0)*x6894))+(((-2183.0)*x6895))+(((-1.0)*x6890*x6898))+(((-1.0)*x6890*x6896))+(((-1.0)*x6890*x6891))+(((-1.0)*x6892*x6896))+(((-1.0)*x6892*x6898))+(((-1.0)*x6891*x6892)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6900.value)*((x6895+x6894)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6899.value)*(((((-2183.0)*x6894))+(((-2183.0)*x6895))+(((-1.0)*x6890*x6898))+(((-1.0)*x6890*x6896))+(((-1.0)*x6890*x6891))+(((-1.0)*x6892*x6896))+(((-1.0)*x6892*x6898))+(((-1.0)*x6891*x6892))))))+IKsqr(((x6900.value)*((x6895+x6894))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((x6899.value)*(((((-2183.0)*x6894))+(((-2183.0)*x6895))+(((-1.0)*x6890*x6898))+(((-1.0)*x6890*x6896))+(((-1.0)*x6890*x6891))+(((-1.0)*x6892*x6896))+(((-1.0)*x6892*x6898))+(((-1.0)*x6891*x6892))))), ((x6900.value)*((x6895+x6894))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x6901=IKcos(j2);
IkReal x6902=IKsin(j2);
IkReal x6903=(r00*sj6);
IkReal x6904=(r10*sj6);
IkReal x6905=(sj0*sj1);
IkReal x6906=((1.0)*sj0);
IkReal x6907=((1.0)*cj6);
IkReal x6908=((0.09465)*cj6);
IkReal x6909=(cj1*x6902);
IkReal x6910=((0.39225)*x6901);
IkReal x6911=((1.0)*cj0*sj1);
IkReal x6912=(cj1*x6901);
evalcond[0]=((((-1.0)*x6906*x6912))+(((-1.0)*x6903))+(((-1.0)*r01*x6907))+(((-1.0)*x6901*x6911)));
evalcond[1]=((((-1.0)*x6902*x6911))+(((-1.0)*r11*x6907))+(((-1.0)*x6906*x6909))+(((-1.0)*x6904)));
evalcond[2]=((((-0.10915)*x6902))+((cj0*cj1*x6910))+(((-1.0)*px))+(((-1.0)*x6905*x6910))+(((0.425)*x6912))+(((-1.0)*r01*x6908))+(((-0.09465)*x6903)));
evalcond[3]=((((-1.0)*r11*x6908))+(((-1.0)*py))+(((-0.39225)*x6902*x6905))+(((0.39225)*cj0*x6909))+(((0.425)*x6909))+(((0.10915)*x6901))+(((-0.09465)*x6904)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x6913=((1.0)*cj6);
IkReal x6914=((((-1.0)*r00*sj6))+(((-1.0)*r01*x6913)));
j5eval[0]=x6914;
j5eval[1]=IKsign(x6914);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x6913))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x6915=((1.0)*cj6);
IkReal x6916=((((-1.0)*r10*sj6))+(((-1.0)*r11*x6915)));
j5eval[0]=x6916;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x6915))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x6916);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x6917=((1.0)*sj2);
IkReal x6918=((1.0)*sj6);
IkReal x6919=((((-1.0)*cj6*r21))+(((-1.0)*r20*x6918)));
j5eval[0]=x6919;
j5eval[1]=IKsign(x6919);
j5eval[2]=((IKabs(((((-1.0)*r12*x6917))+(((-1.0)*cj2*r02)))))+(IKabs(((((-1.0)*r11*sj6*x6917))+((cj6*r10*sj2))+((cj2*cj6*r00))+(((-1.0)*cj2*r01*x6918))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
IkReal x6920=((-1.0)*r20);
IkReal x6922 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x6922)==0){
continue;
}
IkReal x6921=pow(x6922,-0.5);
CheckValue<IkReal> x6923 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x6920),IKFAST_ATAN2_MAGTHRESH);
if(!x6923.valid){
continue;
}
IkReal gconst132=((-1.0)*(x6923.value));
IkReal gconst133=(r21*x6921);
IkReal gconst134=(x6920*x6921);
CheckValue<IkReal> x6924 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x6924.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x6924.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x6925=((-1.0)*r20);
IkReal x6926=x6921;
CheckValue<IkReal> x6928 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x6925),IKFAST_ATAN2_MAGTHRESH);
if(!x6928.valid){
continue;
}
IkReal x6927=((-1.0)*(x6928.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst133;
cj6=gconst134;
j6=x6927;
IkReal gconst132=x6927;
IkReal gconst133=(r21*x6926);
IkReal gconst134=(x6925*x6926);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x6929=((-1.0)*r20);
IkReal x6930=x6921;
CheckValue<IkReal> x6932 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x6929),IKFAST_ATAN2_MAGTHRESH);
if(!x6932.valid){
continue;
}
IkReal x6931=((-1.0)*(x6932.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst133;
cj6=gconst134;
j6=x6931;
IkReal gconst132=x6931;
IkReal gconst133=(r21*x6930);
IkReal gconst134=(x6929*x6930);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x6933=((-1.0)*r20);
IkReal x6934=x6921;
CheckValue<IkReal> x6936 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x6933),IKFAST_ATAN2_MAGTHRESH);
if(!x6936.valid){
continue;
}
IkReal x6935=((-1.0)*(x6936.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst133;
cj6=gconst134;
j6=x6935;
IkReal gconst132=x6935;
IkReal gconst133=(r21*x6934);
IkReal gconst134=(x6933*x6934);
IkReal x6937=r22*r22;
CheckValue<IkReal> x6940=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x6937))),-1);
if(!x6940.valid){
continue;
}
IkReal x6938=x6940.value;
IkReal x6939=((((2.0)*x6938*(r20*r20)*(r21*r21)))+((x6938*(r21*r21*r21*r21)))+x6937+((x6938*(r20*r20*r20*r20))));
j5eval[0]=x6939;
j5eval[1]=IKsign(x6939);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6941=(gconst134*r20);
IkReal x6942=(cj1*sj0);
IkReal x6943=(cj0*sj1);
IkReal x6944=(gconst133*r21);
CheckValue<IkReal> x6945=IKPowWithIntegerCheck(IKsign(((r22*r22)+(x6944*x6944)+(((-2.0)*x6941*x6944))+(x6941*x6941))),-1);
if(!x6945.valid){
continue;
}
CheckValue<IkReal> x6946 = IKatan2WithCheck(IkReal((((r22*x6943))+((r22*x6942)))),IkReal((((x6942*x6944))+((x6943*x6944))+(((-1.0)*x6941*x6943))+(((-1.0)*x6941*x6942)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6946.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6945.value)))+(x6946.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6947=IKsin(j5);
IkReal x6948=IKcos(j5);
IkReal x6949=(sj0*sj1);
IkReal x6950=(gconst133*x6947);
IkReal x6951=((1.0)*cj0*cj1);
IkReal x6952=(gconst134*x6948);
IkReal x6953=((1.0)*x6947);
IkReal x6954=((1.0)*x6948);
IkReal x6955=(gconst133*x6954);
evalcond[0]=((((-1.0)*gconst134*r20*x6953))+(((-1.0)*r22*x6954))+((r21*x6950)));
evalcond[1]=(cj2+(((-1.0)*r12*x6954))+(((-1.0)*gconst134*r10*x6953))+((r11*x6950)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x6954))+((r01*x6950))+(((-1.0)*gconst134*r00*x6953)));
evalcond[3]=((((-1.0)*r21*x6955))+((cj1*sj0))+((r20*x6952))+(((-1.0)*r22*x6953))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x6951))+(((-1.0)*r02*x6953))+((r00*x6952))+((cj2*x6949))+(((-1.0)*r01*x6955)));
evalcond[5]=((((-1.0)*r11*x6955))+((r10*x6952))+(((-1.0)*r12*x6953))+((sj2*x6949))+(((-1.0)*sj2*x6951)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6956=((1.0)*gconst134);
CheckValue<IkReal> x6957 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x6956))+((gconst133*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6957.valid){
continue;
}
CheckValue<IkReal> x6958=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst133*r10))+(((-1.0)*r11*x6956)))),-1);
if(!x6958.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x6957.value)+(((1.5707963267949)*(x6958.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6959=IKsin(j5);
IkReal x6960=IKcos(j5);
IkReal x6961=(sj0*sj1);
IkReal x6962=(gconst133*x6959);
IkReal x6963=((1.0)*cj0*cj1);
IkReal x6964=(gconst134*x6960);
IkReal x6965=((1.0)*x6959);
IkReal x6966=((1.0)*x6960);
IkReal x6967=(gconst133*x6966);
evalcond[0]=(((r21*x6962))+(((-1.0)*gconst134*r20*x6965))+(((-1.0)*r22*x6966)));
evalcond[1]=((((-1.0)*gconst134*r10*x6965))+cj2+(((-1.0)*r12*x6966))+((r11*x6962)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x6966))+((r01*x6962))+(((-1.0)*gconst134*r00*x6965)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r21*x6967))+(((-1.0)*r22*x6965))+((r20*x6964))+((cj0*sj1)));
evalcond[4]=((((-1.0)*r02*x6965))+((r00*x6964))+(((-1.0)*cj2*x6963))+((cj2*x6961))+(((-1.0)*r01*x6967)));
evalcond[5]=(((sj2*x6961))+((r10*x6964))+(((-1.0)*r11*x6967))+(((-1.0)*r12*x6965))+(((-1.0)*sj2*x6963)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x6968=((1.0)*gconst134);
CheckValue<IkReal> x6969=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst133*r00))+(((-1.0)*r01*x6968)))),-1);
if(!x6969.valid){
continue;
}
CheckValue<IkReal> x6970 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst133*r21))+(((-1.0)*cj2*r20*x6968)))),IKFAST_ATAN2_MAGTHRESH);
if(!x6970.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x6969.value)))+(x6970.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x6971=IKsin(j5);
IkReal x6972=IKcos(j5);
IkReal x6973=(sj0*sj1);
IkReal x6974=(gconst133*x6971);
IkReal x6975=((1.0)*cj0*cj1);
IkReal x6976=(gconst134*x6972);
IkReal x6977=((1.0)*x6971);
IkReal x6978=((1.0)*x6972);
IkReal x6979=(gconst133*x6978);
evalcond[0]=((((-1.0)*gconst134*r20*x6977))+((r21*x6974))+(((-1.0)*r22*x6978)));
evalcond[1]=(cj2+(((-1.0)*gconst134*r10*x6977))+(((-1.0)*r12*x6978))+((r11*x6974)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x6978))+((r01*x6974))+(((-1.0)*gconst134*r00*x6977)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r21*x6979))+(((-1.0)*r22*x6977))+((r20*x6976))+((cj0*sj1)));
evalcond[4]=((((-1.0)*r02*x6977))+((r00*x6976))+(((-1.0)*cj2*x6975))+((cj2*x6973))+(((-1.0)*r01*x6979)));
evalcond[5]=(((sj2*x6973))+(((-1.0)*r12*x6977))+(((-1.0)*sj2*x6975))+(((-1.0)*r11*x6979))+((r10*x6976)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x6980=((-1.0)*r21);
IkReal x6982 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x6982)==0){
continue;
}
IkReal x6981=pow(x6982,-0.5);
CheckValue<IkReal> x6983 = IKatan2WithCheck(IkReal(x6980),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x6983.valid){
continue;
}
IkReal gconst135=((3.14159265358979)+(((-1.0)*(x6983.value))));
IkReal gconst136=(x6980*x6981);
IkReal gconst137=((1.0)*r20*x6981);
CheckValue<IkReal> x6984 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x6984.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x6984.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x6985=((-1.0)*r21);
CheckValue<IkReal> x6988 = IKatan2WithCheck(IkReal(x6985),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x6988.valid){
continue;
}
IkReal x6986=((1.0)*(x6988.value));
IkReal x6987=x6981;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst136;
cj6=gconst137;
j6=((3.14159265)+(((-1.0)*x6986)));
IkReal gconst135=((3.14159265358979)+(((-1.0)*x6986)));
IkReal gconst136=(x6985*x6987);
IkReal gconst137=((1.0)*r20*x6987);
IkReal x6989=r22*r22;
IkReal x6990=((1.0)*x6989);
CheckValue<IkReal> x6994=IKPowWithIntegerCheck(((-1.0)+x6989),-1);
if(!x6994.valid){
continue;
}
IkReal x6991=x6994.value;
if((((1.0)+(((-1.0)*x6990)))) < -0.00001)
continue;
IkReal x6992=IKsqrt(((1.0)+(((-1.0)*x6990))));
IkReal x6993=(cj2*x6991*x6992);
j5eval[0]=((IKabs((cj2*r22)))+(IKabs((x6993+(((-1.0)*x6990*x6993))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x6995=((-1.0)*r21);
CheckValue<IkReal> x6998 = IKatan2WithCheck(IkReal(x6995),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x6998.valid){
continue;
}
IkReal x6996=((1.0)*(x6998.value));
IkReal x6997=x6981;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst136;
cj6=gconst137;
j6=((3.14159265)+(((-1.0)*x6996)));
IkReal gconst135=((3.14159265358979)+(((-1.0)*x6996)));
IkReal gconst136=(x6995*x6997);
IkReal gconst137=((1.0)*r20*x6997);
IkReal x6999=r22*r22;
IkReal x7000=((1.0)*x6999);
CheckValue<IkReal> x7004=IKPowWithIntegerCheck(((-1.0)+x6999),-1);
if(!x7004.valid){
continue;
}
IkReal x7001=x7004.value;
if((((1.0)+(((-1.0)*x7000)))) < -0.00001)
continue;
IkReal x7002=IKsqrt(((1.0)+(((-1.0)*x7000))));
IkReal x7003=(sj2*x7001*x7002);
j5eval[0]=((IKabs((x7003+(((-1.0)*x7000*x7003)))))+(IKabs((r22*sj2))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x7005=((-1.0)*r21);
CheckValue<IkReal> x7008 = IKatan2WithCheck(IkReal(x7005),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x7008.valid){
continue;
}
IkReal x7006=((1.0)*(x7008.value));
IkReal x7007=x6981;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst136;
cj6=gconst137;
j6=((3.14159265)+(((-1.0)*x7006)));
IkReal gconst135=((3.14159265358979)+(((-1.0)*x7006)));
IkReal gconst136=(x7005*x7007);
IkReal gconst137=((1.0)*r20*x7007);
IkReal x7009=r22*r22;
IkReal x7010=(r12*sj2);
IkReal x7011=(cj2*r02);
CheckValue<IkReal> x7015=IKPowWithIntegerCheck(((-1.0)+x7009),-1);
if(!x7015.valid){
continue;
}
IkReal x7012=x7015.value;
if((((1.0)+(((-1.0)*x7009)))) < -0.00001)
continue;
IkReal x7013=IKsqrt(((1.0)+(((-1.0)*x7009))));
IkReal x7014=(r22*x7012*x7013);
j5eval[0]=0;
j5eval[1]=((IKabs(((((-1.0)*x7010))+(((-1.0)*x7011)))))+(IKabs((((x7010*x7014))+((x7011*x7014))))));
j5eval[2]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7016=((1.0)*sj2);
IkReal x7017=((1.0)*gconst136);
CheckValue<IkReal> x7018=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x7017))+(((-1.0)*gconst137*r21)))),-1);
if(!x7018.valid){
continue;
}
CheckValue<IkReal> x7019 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7016))+(((-1.0)*cj2*r02)))),IkReal((((gconst137*r10*sj2))+(((-1.0)*gconst136*r11*x7016))+(((-1.0)*cj2*r01*x7017))+((cj2*gconst137*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7019.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7018.value)))+(x7019.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7020=IKsin(j5);
IkReal x7021=IKcos(j5);
IkReal x7022=(sj0*sj1);
IkReal x7023=(gconst136*r21);
IkReal x7024=(gconst136*r11);
IkReal x7025=(gconst136*r01);
IkReal x7026=((1.0)*cj0*cj1);
IkReal x7027=((1.0)*x7021);
IkReal x7028=(gconst137*x7021);
IkReal x7029=((1.0)*x7020);
IkReal x7030=(gconst137*x7029);
evalcond[0]=((((-1.0)*r22*x7027))+((x7020*x7023))+(((-1.0)*r20*x7030)));
evalcond[1]=((((-1.0)*r12*x7027))+((x7020*x7024))+cj2+(((-1.0)*r10*x7030)));
evalcond[2]=((((-1.0)*sj2))+((x7020*x7025))+(((-1.0)*r02*x7027))+(((-1.0)*r00*x7030)));
evalcond[3]=((((-1.0)*r22*x7029))+((cj1*sj0))+((r20*x7028))+((cj0*sj1))+(((-1.0)*x7023*x7027)));
evalcond[4]=((((-1.0)*x7025*x7027))+((cj2*x7022))+(((-1.0)*cj2*x7026))+((r00*x7028))+(((-1.0)*r02*x7029)));
evalcond[5]=((((-1.0)*r12*x7029))+(((-1.0)*x7024*x7027))+(((-1.0)*sj2*x7026))+((r10*x7028))+((sj2*x7022)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7031=((1.0)*gconst137);
CheckValue<IkReal> x7032=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x7031))+(((-1.0)*gconst136*r10)))),-1);
if(!x7032.valid){
continue;
}
CheckValue<IkReal> x7033 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x7031))+((gconst136*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7033.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7032.value)))+(x7033.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7034=IKsin(j5);
IkReal x7035=IKcos(j5);
IkReal x7036=(sj0*sj1);
IkReal x7037=(gconst136*r21);
IkReal x7038=(gconst136*r11);
IkReal x7039=(gconst136*r01);
IkReal x7040=((1.0)*cj0*cj1);
IkReal x7041=((1.0)*x7035);
IkReal x7042=(gconst137*x7035);
IkReal x7043=((1.0)*x7034);
IkReal x7044=(gconst137*x7043);
evalcond[0]=((((-1.0)*r22*x7041))+((x7034*x7037))+(((-1.0)*r20*x7044)));
evalcond[1]=(cj2+(((-1.0)*r12*x7041))+((x7034*x7038))+(((-1.0)*r10*x7044)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x7041))+(((-1.0)*r00*x7044))+((x7034*x7039)));
evalcond[3]=((((-1.0)*r22*x7043))+((cj1*sj0))+(((-1.0)*x7037*x7041))+((r20*x7042))+((cj0*sj1)));
evalcond[4]=(((r00*x7042))+((cj2*x7036))+(((-1.0)*r02*x7043))+(((-1.0)*cj2*x7040))+(((-1.0)*x7039*x7041)));
evalcond[5]=((((-1.0)*r12*x7043))+((r10*x7042))+(((-1.0)*sj2*x7040))+(((-1.0)*x7038*x7041))+((sj2*x7036)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7045=((1.0)*gconst137);
CheckValue<IkReal> x7046 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst136*r21))+(((-1.0)*cj2*r20*x7045)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7046.valid){
continue;
}
CheckValue<IkReal> x7047=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst136*r00))+(((-1.0)*r01*x7045)))),-1);
if(!x7047.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7046.value)+(((1.5707963267949)*(x7047.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7048=IKsin(j5);
IkReal x7049=IKcos(j5);
IkReal x7050=(sj0*sj1);
IkReal x7051=(gconst136*r21);
IkReal x7052=(gconst136*r11);
IkReal x7053=(gconst136*r01);
IkReal x7054=((1.0)*cj0*cj1);
IkReal x7055=((1.0)*x7049);
IkReal x7056=(gconst137*x7049);
IkReal x7057=((1.0)*x7048);
IkReal x7058=(gconst137*x7057);
evalcond[0]=((((-1.0)*r22*x7055))+(((-1.0)*r20*x7058))+((x7048*x7051)));
evalcond[1]=(cj2+(((-1.0)*r12*x7055))+((x7048*x7052))+(((-1.0)*r10*x7058)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x7058))+((x7048*x7053))+(((-1.0)*r02*x7055)));
evalcond[3]=(((r20*x7056))+(((-1.0)*r22*x7057))+((cj1*sj0))+(((-1.0)*x7051*x7055))+((cj0*sj1)));
evalcond[4]=(((cj2*x7050))+(((-1.0)*cj2*x7054))+(((-1.0)*x7053*x7055))+((r00*x7056))+(((-1.0)*r02*x7057)));
evalcond[5]=(((r10*x7056))+(((-1.0)*sj2*x7054))+(((-1.0)*x7052*x7055))+((sj2*x7050))+(((-1.0)*r12*x7057)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7059=((-1.0)*r10);
IkReal x7061 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x7061)==0){
continue;
}
IkReal x7060=pow(x7061,-0.5);
CheckValue<IkReal> x7062 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x7059),IKFAST_ATAN2_MAGTHRESH);
if(!x7062.valid){
continue;
}
IkReal gconst138=((-1.0)*(x7062.value));
IkReal gconst139=(r11*x7060);
IkReal gconst140=(x7059*x7060);
CheckValue<IkReal> x7063 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7063.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x7063.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x7064=((-1.0)*r10);
IkReal x7065=x7060;
CheckValue<IkReal> x7067 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x7064),IKFAST_ATAN2_MAGTHRESH);
if(!x7067.valid){
continue;
}
IkReal x7066=((-1.0)*(x7067.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst139;
cj6=gconst140;
j6=x7066;
IkReal gconst138=x7066;
IkReal gconst139=(r11*x7065);
IkReal gconst140=(x7064*x7065);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7068=((1.0)*sj2);
IkReal x7069=((1.0)*gconst139);
CheckValue<IkReal> x7070 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7068))+(((-1.0)*cj2*r02)))),IkReal(((((-1.0)*cj2*r01*x7069))+((gconst140*r10*sj2))+((cj2*gconst140*r00))+(((-1.0)*gconst139*r11*x7068)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7070.valid){
continue;
}
CheckValue<IkReal> x7071=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst140*r21))+(((-1.0)*r20*x7069)))),-1);
if(!x7071.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7070.value)+(((1.5707963267949)*(x7071.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7072=IKsin(j5);
IkReal x7073=IKcos(j5);
IkReal x7074=(sj0*sj1);
IkReal x7075=(gconst140*r00);
IkReal x7076=((1.0)*cj0*cj1);
IkReal x7077=((1.0)*x7072);
IkReal x7078=(gconst139*x7072);
IkReal x7079=((1.0)*x7073);
IkReal x7080=(gconst140*x7073);
evalcond[0]=(((r21*x7078))+(((-1.0)*r22*x7079))+(((-1.0)*gconst140*r20*x7077)));
evalcond[1]=(((r11*x7078))+cj2+(((-1.0)*gconst140*r10*x7077))+(((-1.0)*r12*x7079)));
evalcond[2]=((((-1.0)*sj2))+((r01*x7078))+(((-1.0)*r02*x7079))+(((-1.0)*x7075*x7077)));
evalcond[3]=((((-1.0)*gconst139*r21*x7079))+((cj1*sj0))+((r20*x7080))+(((-1.0)*r22*x7077))+((cj0*sj1)));
evalcond[4]=((((-1.0)*gconst139*r01*x7079))+(((-1.0)*r02*x7077))+((x7073*x7075))+((cj2*x7074))+(((-1.0)*cj2*x7076)));
evalcond[5]=(((sj2*x7074))+(((-1.0)*r12*x7077))+(((-1.0)*sj2*x7076))+((r10*x7080))+(((-1.0)*gconst139*r11*x7079)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7081=((1.0)*gconst140);
CheckValue<IkReal> x7082=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x7081))+(((-1.0)*gconst139*r00)))),-1);
if(!x7082.valid){
continue;
}
CheckValue<IkReal> x7083 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x7081))+((cj2*gconst139*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7083.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7082.value)))+(x7083.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7084=IKsin(j5);
IkReal x7085=IKcos(j5);
IkReal x7086=(sj0*sj1);
IkReal x7087=(gconst140*r00);
IkReal x7088=((1.0)*cj0*cj1);
IkReal x7089=((1.0)*x7084);
IkReal x7090=(gconst139*x7084);
IkReal x7091=((1.0)*x7085);
IkReal x7092=(gconst140*x7085);
evalcond[0]=((((-1.0)*gconst140*r20*x7089))+((r21*x7090))+(((-1.0)*r22*x7091)));
evalcond[1]=(((r11*x7090))+cj2+(((-1.0)*gconst140*r10*x7089))+(((-1.0)*r12*x7091)));
evalcond[2]=((((-1.0)*sj2))+((r01*x7090))+(((-1.0)*x7087*x7089))+(((-1.0)*r02*x7091)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r22*x7089))+(((-1.0)*gconst139*r21*x7091))+((r20*x7092))+((cj0*sj1)));
evalcond[4]=(((x7085*x7087))+(((-1.0)*gconst139*r01*x7091))+(((-1.0)*r02*x7089))+(((-1.0)*cj2*x7088))+((cj2*x7086)));
evalcond[5]=((((-1.0)*gconst139*r11*x7091))+((sj2*x7086))+(((-1.0)*sj2*x7088))+(((-1.0)*r12*x7089))+((r10*x7092)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7093=((-1.0)*r11);
IkReal x7095 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x7095)==0){
continue;
}
IkReal x7094=pow(x7095,-0.5);
CheckValue<IkReal> x7096 = IKatan2WithCheck(IkReal(x7093),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7096.valid){
continue;
}
IkReal gconst141=((3.14159265358979)+(((-1.0)*(x7096.value))));
IkReal gconst142=(x7093*x7094);
IkReal gconst143=((1.0)*r10*x7094);
CheckValue<IkReal> x7097 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7097.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x7097.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x7098=((-1.0)*r11);
CheckValue<IkReal> x7101 = IKatan2WithCheck(IkReal(x7098),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7101.valid){
continue;
}
IkReal x7099=((1.0)*(x7101.value));
IkReal x7100=x7094;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst142;
cj6=gconst143;
j6=((3.14159265)+(((-1.0)*x7099)));
IkReal gconst141=((3.14159265358979)+(((-1.0)*x7099)));
IkReal gconst142=(x7098*x7100);
IkReal gconst143=((1.0)*r10*x7100);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x7102=((-1.0)*r11);
CheckValue<IkReal> x7105 = IKatan2WithCheck(IkReal(x7102),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7105.valid){
continue;
}
IkReal x7103=((1.0)*(x7105.value));
IkReal x7104=x7094;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst142;
cj6=gconst143;
j6=((3.14159265)+(((-1.0)*x7103)));
IkReal gconst141=((3.14159265358979)+(((-1.0)*x7103)));
IkReal gconst142=(x7102*x7104);
IkReal gconst143=((1.0)*r10*x7104);
IkReal x7106=r12*r12;
IkReal x7107=((1.0)*sj2);
IkReal x7108=(cj2*r02);
IkReal x7109=x7094;
j5eval[0]=((IKabs(((((-1.0)*x7108))+(((-1.0)*r12*x7107)))))+(IKabs((((r12*x7108*x7109))+((sj2*x7106*x7109))+(((-1.0)*x7107*x7109))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x7110=((-1.0)*r11);
CheckValue<IkReal> x7113 = IKatan2WithCheck(IkReal(x7110),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7113.valid){
continue;
}
IkReal x7111=((1.0)*(x7113.value));
IkReal x7112=x7094;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst142;
cj6=gconst143;
j6=((3.14159265)+(((-1.0)*x7111)));
IkReal gconst141=((3.14159265358979)+(((-1.0)*x7111)));
IkReal gconst142=(x7110*x7112);
IkReal gconst143=((1.0)*r10*x7112);
IkReal x7114=r12*r12;
IkReal x7115=(cj1*r22*sj0);
IkReal x7116=(cj0*r22*sj1);
CheckValue<IkReal> x7120=IKPowWithIntegerCheck(((-1.0)+x7114),-1);
if(!x7120.valid){
continue;
}
IkReal x7117=x7120.value;
if((((1.0)+(((-1.0)*x7114)))) < -0.00001)
continue;
IkReal x7118=IKsqrt(((1.0)+(((-1.0)*x7114))));
IkReal x7119=((1.0)*r12*x7117*x7118);
j5eval[0]=((IKabs((x7116+x7115)))+(IKabs(((((-1.0)*x7115*x7119))+(((-1.0)*x7116*x7119))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7121=(gconst142*r21);
IkReal x7122=(cj0*sj1);
IkReal x7123=(cj1*sj0);
IkReal x7124=(gconst143*r20);
CheckValue<IkReal> x7125 = IKatan2WithCheck(IkReal((((r22*x7122))+((r22*x7123)))),IkReal((((x7121*x7122))+((x7121*x7123))+(((-1.0)*x7123*x7124))+(((-1.0)*x7122*x7124)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7125.valid){
continue;
}
CheckValue<IkReal> x7126=IKPowWithIntegerCheck(IKsign(((((-2.0)*x7121*x7124))+(r22*r22)+(x7124*x7124)+(x7121*x7121))),-1);
if(!x7126.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7125.value)+(((1.5707963267949)*(x7126.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7127=IKsin(j5);
IkReal x7128=IKcos(j5);
IkReal x7129=(sj0*sj1);
IkReal x7130=(gconst142*r11);
IkReal x7131=(gconst142*r01);
IkReal x7132=(gconst142*r21);
IkReal x7133=((1.0)*cj0*cj1);
IkReal x7134=(gconst143*x7128);
IkReal x7135=((1.0)*x7128);
IkReal x7136=((1.0)*x7127);
evalcond[0]=(((x7127*x7132))+(((-1.0)*gconst143*r20*x7136))+(((-1.0)*r22*x7135)));
evalcond[1]=((((-1.0)*r12*x7135))+cj2+((x7127*x7130))+(((-1.0)*gconst143*r10*x7136)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*gconst143*r00*x7136))+((x7127*x7131))+(((-1.0)*r02*x7135)));
evalcond[3]=((((-1.0)*x7132*x7135))+((cj1*sj0))+(((-1.0)*r22*x7136))+((r20*x7134))+((cj0*sj1)));
evalcond[4]=(((cj2*x7129))+(((-1.0)*cj2*x7133))+((r00*x7134))+(((-1.0)*x7131*x7135))+(((-1.0)*r02*x7136)));
evalcond[5]=((((-1.0)*x7130*x7135))+(((-1.0)*r12*x7136))+((sj2*x7129))+((r10*x7134))+(((-1.0)*sj2*x7133)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7137=((1.0)*sj2);
IkReal x7138=((1.0)*gconst142);
CheckValue<IkReal> x7139=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x7138))+(((-1.0)*gconst143*r21)))),-1);
if(!x7139.valid){
continue;
}
CheckValue<IkReal> x7140 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7137))+(((-1.0)*cj2*r02)))),IkReal(((((-1.0)*gconst142*r11*x7137))+(((-1.0)*cj2*r01*x7138))+((gconst143*r10*sj2))+((cj2*gconst143*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7140.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7139.value)))+(x7140.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7141=IKsin(j5);
IkReal x7142=IKcos(j5);
IkReal x7143=(sj0*sj1);
IkReal x7144=(gconst142*r11);
IkReal x7145=(gconst142*r01);
IkReal x7146=(gconst142*r21);
IkReal x7147=((1.0)*cj0*cj1);
IkReal x7148=(gconst143*x7142);
IkReal x7149=((1.0)*x7142);
IkReal x7150=((1.0)*x7141);
evalcond[0]=(((x7141*x7146))+(((-1.0)*r22*x7149))+(((-1.0)*gconst143*r20*x7150)));
evalcond[1]=(((x7141*x7144))+cj2+(((-1.0)*gconst143*r10*x7150))+(((-1.0)*r12*x7149)));
evalcond[2]=(((x7141*x7145))+(((-1.0)*sj2))+(((-1.0)*gconst143*r00*x7150))+(((-1.0)*r02*x7149)));
evalcond[3]=(((r20*x7148))+(((-1.0)*r22*x7150))+((cj1*sj0))+(((-1.0)*x7146*x7149))+((cj0*sj1)));
evalcond[4]=(((r00*x7148))+(((-1.0)*x7145*x7149))+(((-1.0)*r02*x7150))+(((-1.0)*cj2*x7147))+((cj2*x7143)));
evalcond[5]=((((-1.0)*r12*x7150))+((sj2*x7143))+(((-1.0)*x7144*x7149))+(((-1.0)*sj2*x7147))+((r10*x7148)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7151=((1.0)*gconst143);
CheckValue<IkReal> x7152=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x7151))+(((-1.0)*gconst142*r00)))),-1);
if(!x7152.valid){
continue;
}
CheckValue<IkReal> x7153 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x7151))+((cj2*gconst142*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7153.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7152.value)))+(x7153.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7154=IKsin(j5);
IkReal x7155=IKcos(j5);
IkReal x7156=(sj0*sj1);
IkReal x7157=(gconst142*r11);
IkReal x7158=(gconst142*r01);
IkReal x7159=(gconst142*r21);
IkReal x7160=((1.0)*cj0*cj1);
IkReal x7161=(gconst143*x7155);
IkReal x7162=((1.0)*x7155);
IkReal x7163=((1.0)*x7154);
evalcond[0]=((((-1.0)*r22*x7162))+(((-1.0)*gconst143*r20*x7163))+((x7154*x7159)));
evalcond[1]=(cj2+(((-1.0)*gconst143*r10*x7163))+((x7154*x7157))+(((-1.0)*r12*x7162)));
evalcond[2]=((((-1.0)*r02*x7162))+(((-1.0)*sj2))+((x7154*x7158))+(((-1.0)*gconst143*r00*x7163)));
evalcond[3]=((((-1.0)*x7159*x7162))+(((-1.0)*r22*x7163))+((cj1*sj0))+((r20*x7161))+((cj0*sj1)));
evalcond[4]=((((-1.0)*r02*x7163))+(((-1.0)*x7158*x7162))+((r00*x7161))+((cj2*x7156))+(((-1.0)*cj2*x7160)));
evalcond[5]=((((-1.0)*x7157*x7162))+((sj2*x7156))+(((-1.0)*r12*x7163))+(((-1.0)*sj2*x7160))+((r10*x7161)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal x7164=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x7164;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x7164);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal x7165=((1.0)*cj6);
IkReal x7166=((((-1.0)*r00*sj6))+(((-1.0)*r01*x7165)));
j5eval[0]=x7166;
j5eval[1]=IKsign(x7166);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x7165))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal x7167=cj6*cj6;
IkReal x7168=r11*r11;
IkReal x7169=(cj6*r10);
IkReal x7170=(r11*sj6);
IkReal x7171=(x7168+(r12*r12)+(((-1.0)*x7167*x7168))+((x7167*(r10*r10)))+(((-2.0)*x7169*x7170)));
j5eval[0]=x7171;
j5eval[1]=IKsign(x7171);
j5eval[2]=((IKabs(r12))+(IKabs((x7169+(((-1.0)*x7170))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7172=cj6*cj6;
IkReal x7173=r11*r11;
IkReal x7174=(cj6*r10);
IkReal x7175=(r11*sj6);
CheckValue<IkReal> x7176=IKPowWithIntegerCheck(IKsign((x7173+(r12*r12)+(((-1.0)*x7172*x7173))+(((-2.0)*x7174*x7175))+((x7172*(r10*r10))))),-1);
if(!x7176.valid){
continue;
}
CheckValue<IkReal> x7177 = IKatan2WithCheck(IkReal((x7174+(((-1.0)*x7175)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x7177.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7176.value)))+(x7177.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7178=IKsin(j5);
IkReal x7179=IKcos(j5);
IkReal x7180=(sj6*x7178);
IkReal x7181=((1.0)*x7178);
IkReal x7182=((1.0)*x7179);
IkReal x7183=(cj6*x7179);
IkReal x7184=(sj6*x7182);
IkReal x7185=(cj6*x7181);
evalcond[0]=(((r21*x7180))+(((-1.0)*r20*x7185))+(((-1.0)*r22*x7182)));
evalcond[1]=(((r01*x7180))+(((-1.0)*r00*x7185))+(((-1.0)*r02*x7182)));
evalcond[2]=(((r10*x7183))+(((-1.0)*r11*x7184))+(((-1.0)*r12*x7181)));
evalcond[3]=((1.0)+((r11*x7180))+(((-1.0)*r10*x7185))+(((-1.0)*r12*x7182)));
evalcond[4]=(((r20*x7183))+((cj1*sj0))+(((-1.0)*r21*x7184))+(((-1.0)*r22*x7181))+((cj0*sj1)));
evalcond[5]=(((r00*x7183))+(((-1.0)*r01*x7184))+((sj0*sj1))+(((-1.0)*r02*x7181))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7186=((1.0)*cj6);
CheckValue<IkReal> x7187=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x7186)))),-1);
if(!x7187.valid){
continue;
}
CheckValue<IkReal> x7188 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x7186)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7188.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7187.value)))+(x7188.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7189=IKsin(j5);
IkReal x7190=IKcos(j5);
IkReal x7191=(sj6*x7189);
IkReal x7192=((1.0)*x7189);
IkReal x7193=((1.0)*x7190);
IkReal x7194=(cj6*x7190);
IkReal x7195=(sj6*x7193);
IkReal x7196=(cj6*x7192);
evalcond[0]=(((r21*x7191))+(((-1.0)*r20*x7196))+(((-1.0)*r22*x7193)));
evalcond[1]=(((r01*x7191))+(((-1.0)*r00*x7196))+(((-1.0)*r02*x7193)));
evalcond[2]=(((r10*x7194))+(((-1.0)*r11*x7195))+(((-1.0)*r12*x7192)));
evalcond[3]=((1.0)+((r11*x7191))+(((-1.0)*r10*x7196))+(((-1.0)*r12*x7193)));
evalcond[4]=(((r20*x7194))+((cj1*sj0))+(((-1.0)*r21*x7195))+(((-1.0)*r22*x7192))+((cj0*sj1)));
evalcond[5]=(((r00*x7194))+((sj0*sj1))+(((-1.0)*r01*x7195))+(((-1.0)*cj0*cj1))+(((-1.0)*r02*x7192)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x7197=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x7197.valid){
continue;
}
CheckValue<IkReal> x7198 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7198.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7197.value)))+(x7198.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7199=IKsin(j5);
IkReal x7200=IKcos(j5);
IkReal x7201=(sj6*x7199);
IkReal x7202=((1.0)*x7199);
IkReal x7203=((1.0)*x7200);
IkReal x7204=(cj6*x7200);
IkReal x7205=(sj6*x7203);
IkReal x7206=(cj6*x7202);
evalcond[0]=(((r21*x7201))+(((-1.0)*r20*x7206))+(((-1.0)*r22*x7203)));
evalcond[1]=(((r01*x7201))+(((-1.0)*r00*x7206))+(((-1.0)*r02*x7203)));
evalcond[2]=(((r10*x7204))+(((-1.0)*r12*x7202))+(((-1.0)*r11*x7205)));
evalcond[3]=((1.0)+(((-1.0)*r10*x7206))+((r11*x7201))+(((-1.0)*r12*x7203)));
evalcond[4]=((((-1.0)*r21*x7205))+((cj1*sj0))+((r20*x7204))+((cj0*sj1))+(((-1.0)*r22*x7202)));
evalcond[5]=(((r00*x7204))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*r01*x7205))+(((-1.0)*r02*x7202)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x7207=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x7207;
j5eval[1]=IKsign(x7207);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x7208=((1.0)*cj6);
IkReal x7209=((((-1.0)*r21*x7208))+(((-1.0)*r20*sj6)));
j5eval[0]=x7209;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x7208))))));
j5eval[2]=IKsign(x7209);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x7210=cj6*cj6;
IkReal x7211=r11*r11;
IkReal x7212=(cj6*r10);
IkReal x7213=(r11*sj6);
IkReal x7214=((((-1.0)*x7210*(r10*r10)))+((x7210*x7211))+(((2.0)*x7212*x7213))+(((-1.0)*(r12*r12)))+(((-1.0)*x7211)));
j5eval[0]=x7214;
j5eval[1]=((IKabs(r12))+(IKabs((x7212+(((-1.0)*x7213))))));
j5eval[2]=IKsign(x7214);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7215=cj6*cj6;
IkReal x7216=r11*r11;
IkReal x7217=(cj6*r10);
IkReal x7218=(r11*sj6);
CheckValue<IkReal> x7219 = IKatan2WithCheck(IkReal((x7217+(((-1.0)*x7218)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x7219.valid){
continue;
}
CheckValue<IkReal> x7220=IKPowWithIntegerCheck(IKsign(((((2.0)*x7217*x7218))+(((-1.0)*x7215*(r10*r10)))+(((-1.0)*(r12*r12)))+(((-1.0)*x7216))+((x7215*x7216)))),-1);
if(!x7220.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7219.value)+(((1.5707963267949)*(x7220.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7221=IKsin(j5);
IkReal x7222=IKcos(j5);
IkReal x7223=(sj6*x7221);
IkReal x7224=((1.0)*x7221);
IkReal x7225=((1.0)*x7222);
IkReal x7226=(cj6*x7222);
IkReal x7227=(sj6*x7225);
IkReal x7228=(cj6*x7224);
evalcond[0]=(((r21*x7223))+(((-1.0)*r20*x7228))+(((-1.0)*r22*x7225)));
evalcond[1]=((((-1.0)*r00*x7228))+(((-1.0)*r02*x7225))+((r01*x7223)));
evalcond[2]=(((r10*x7226))+(((-1.0)*r12*x7224))+(((-1.0)*r11*x7227)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x7228))+(((-1.0)*r12*x7225))+((r11*x7223)));
evalcond[4]=((((-1.0)*r21*x7227))+((r20*x7226))+((cj1*sj0))+(((-1.0)*r22*x7224))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r02*x7224))+(((-1.0)*r01*x7227))+((r00*x7226))+((cj0*cj1))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7229=((1.0)*cj6);
CheckValue<IkReal> x7230 = IKatan2WithCheck(IkReal(r02),IkReal(((((-1.0)*r00*x7229))+((r01*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7230.valid){
continue;
}
CheckValue<IkReal> x7231=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x7229))+(((-1.0)*r20*sj6)))),-1);
if(!x7231.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7230.value)+(((1.5707963267949)*(x7231.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7232=IKsin(j5);
IkReal x7233=IKcos(j5);
IkReal x7234=(sj6*x7232);
IkReal x7235=((1.0)*x7232);
IkReal x7236=((1.0)*x7233);
IkReal x7237=(cj6*x7233);
IkReal x7238=(sj6*x7236);
IkReal x7239=(cj6*x7235);
evalcond[0]=((((-1.0)*r20*x7239))+(((-1.0)*r22*x7236))+((r21*x7234)));
evalcond[1]=(((r01*x7234))+(((-1.0)*r02*x7236))+(((-1.0)*r00*x7239)));
evalcond[2]=(((r10*x7237))+(((-1.0)*r11*x7238))+(((-1.0)*r12*x7235)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x7239))+(((-1.0)*r12*x7236))+((r11*x7234)));
evalcond[4]=(((cj1*sj0))+((r20*x7237))+(((-1.0)*r22*x7235))+((cj0*sj1))+(((-1.0)*r21*x7238)));
evalcond[5]=(((r00*x7237))+((cj0*cj1))+(((-1.0)*sj0*sj1))+(((-1.0)*r02*x7235))+(((-1.0)*r01*x7238)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x7240=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x7240.valid){
continue;
}
CheckValue<IkReal> x7241 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7241.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7240.value)))+(x7241.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7242=IKsin(j5);
IkReal x7243=IKcos(j5);
IkReal x7244=(sj6*x7242);
IkReal x7245=((1.0)*x7242);
IkReal x7246=((1.0)*x7243);
IkReal x7247=(cj6*x7243);
IkReal x7248=(sj6*x7246);
IkReal x7249=(cj6*x7245);
evalcond[0]=((((-1.0)*r20*x7249))+(((-1.0)*r22*x7246))+((r21*x7244)));
evalcond[1]=((((-1.0)*r02*x7246))+(((-1.0)*r00*x7249))+((r01*x7244)));
evalcond[2]=((((-1.0)*r12*x7245))+(((-1.0)*r11*x7248))+((r10*x7247)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x7246))+(((-1.0)*r10*x7249))+((r11*x7244)));
evalcond[4]=((((-1.0)*r21*x7248))+((cj1*sj0))+(((-1.0)*r22*x7245))+((r20*x7247))+((cj0*sj1)));
evalcond[5]=(((cj0*cj1))+((r00*x7247))+(((-1.0)*r02*x7245))+(((-1.0)*r01*x7248))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7250=((-1.0)*r00);
IkReal x7252 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x7252)==0){
continue;
}
IkReal x7251=pow(x7252,-0.5);
CheckValue<IkReal> x7253 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x7250),IKFAST_ATAN2_MAGTHRESH);
if(!x7253.valid){
continue;
}
IkReal gconst144=((-1.0)*(x7253.value));
IkReal gconst145=(r01*x7251);
IkReal gconst146=(x7250*x7251);
CheckValue<IkReal> x7254 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7254.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x7254.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x7255=((-1.0)*r00);
IkReal x7256=x7251;
CheckValue<IkReal> x7258 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x7255),IKFAST_ATAN2_MAGTHRESH);
if(!x7258.valid){
continue;
}
IkReal x7257=((-1.0)*(x7258.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst145;
cj6=gconst146;
j6=x7257;
IkReal gconst144=x7257;
IkReal gconst145=(r01*x7256);
IkReal gconst146=(x7255*x7256);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7259=((1.0)*sj2);
IkReal x7260=((1.0)*gconst145);
CheckValue<IkReal> x7261=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x7260))+(((-1.0)*gconst146*r21)))),-1);
if(!x7261.valid){
continue;
}
CheckValue<IkReal> x7262 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7259))+(((-1.0)*cj2*r02)))),IkReal(((((-1.0)*cj2*r01*x7260))+((gconst146*r10*sj2))+(((-1.0)*gconst145*r11*x7259))+((cj2*gconst146*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7262.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7261.value)))+(x7262.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7263=IKsin(j5);
IkReal x7264=IKcos(j5);
IkReal x7265=(gconst146*r20);
IkReal x7266=(sj0*sj1);
IkReal x7267=((1.0)*sj2);
IkReal x7268=(cj0*cj1);
IkReal x7269=((1.0)*x7263);
IkReal x7270=(gconst145*x7263);
IkReal x7271=(gconst146*x7264);
IkReal x7272=((1.0)*x7264);
IkReal x7273=(gconst145*x7272);
evalcond[0]=((((-1.0)*r22*x7272))+((r21*x7270))+(((-1.0)*x7265*x7269)));
evalcond[1]=(cj2+(((-1.0)*r12*x7272))+((r11*x7270))+(((-1.0)*gconst146*r10*x7269)));
evalcond[2]=((((-1.0)*x7267))+(((-1.0)*r02*x7272))+((r01*x7270))+(((-1.0)*gconst146*r00*x7269)));
evalcond[3]=((((-1.0)*r21*x7273))+(((-1.0)*r22*x7269))+((cj1*sj0))+((x7264*x7265))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x7268))+(((-1.0)*r01*x7273))+((r00*x7271))+(((-1.0)*r02*x7269))+((cj2*x7266)));
evalcond[5]=((((-1.0)*r11*x7273))+(((-1.0)*x7267*x7268))+((r10*x7271))+(((-1.0)*r12*x7269))+((sj2*x7266)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7274=((1.0)*gconst146);
CheckValue<IkReal> x7275=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x7274))+(((-1.0)*gconst145*r10)))),-1);
if(!x7275.valid){
continue;
}
CheckValue<IkReal> x7276 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst145*r21*sj2))+(((-1.0)*r20*sj2*x7274)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7276.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7275.value)))+(x7276.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7277=IKsin(j5);
IkReal x7278=IKcos(j5);
IkReal x7279=(gconst146*r20);
IkReal x7280=(sj0*sj1);
IkReal x7281=((1.0)*sj2);
IkReal x7282=(cj0*cj1);
IkReal x7283=((1.0)*x7277);
IkReal x7284=(gconst145*x7277);
IkReal x7285=(gconst146*x7278);
IkReal x7286=((1.0)*x7278);
IkReal x7287=(gconst145*x7286);
evalcond[0]=(((r21*x7284))+(((-1.0)*x7279*x7283))+(((-1.0)*r22*x7286)));
evalcond[1]=(((r11*x7284))+cj2+(((-1.0)*r12*x7286))+(((-1.0)*gconst146*r10*x7283)));
evalcond[2]=((((-1.0)*x7281))+(((-1.0)*gconst146*r00*x7283))+((r01*x7284))+(((-1.0)*r02*x7286)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r21*x7287))+((x7278*x7279))+((cj0*sj1))+(((-1.0)*r22*x7283)));
evalcond[4]=((((-1.0)*r01*x7287))+((cj2*x7280))+((r00*x7285))+(((-1.0)*r02*x7283))+(((-1.0)*cj2*x7282)));
evalcond[5]=((((-1.0)*r12*x7283))+(((-1.0)*r11*x7287))+((sj2*x7280))+((r10*x7285))+(((-1.0)*x7281*x7282)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7288=((-1.0)*r01);
IkReal x7290 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x7290)==0){
continue;
}
IkReal x7289=pow(x7290,-0.5);
CheckValue<IkReal> x7291 = IKatan2WithCheck(IkReal(x7288),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7291.valid){
continue;
}
IkReal gconst147=((3.14159265358979)+(((-1.0)*(x7291.value))));
IkReal gconst148=(x7288*x7289);
IkReal gconst149=((1.0)*r00*x7289);
CheckValue<IkReal> x7292 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7292.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x7292.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x7293=((-1.0)*r01);
CheckValue<IkReal> x7296 = IKatan2WithCheck(IkReal(x7293),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7296.valid){
continue;
}
IkReal x7294=((1.0)*(x7296.value));
IkReal x7295=x7289;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst148;
cj6=gconst149;
j6=((3.14159265)+(((-1.0)*x7294)));
IkReal gconst147=((3.14159265358979)+(((-1.0)*x7294)));
IkReal gconst148=(x7293*x7295);
IkReal gconst149=((1.0)*r00*x7295);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=cj2;
j5eval[3]=r22;
j5eval[4]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x7297=((-1.0)*r01);
CheckValue<IkReal> x7300 = IKatan2WithCheck(IkReal(x7297),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7300.valid){
continue;
}
IkReal x7298=((1.0)*(x7300.value));
IkReal x7299=x7289;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst148;
cj6=gconst149;
j6=((3.14159265)+(((-1.0)*x7298)));
IkReal gconst147=((3.14159265358979)+(((-1.0)*x7298)));
IkReal gconst148=(x7297*x7299);
IkReal gconst149=((1.0)*r00*x7299);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x7301=((-1.0)*r01);
CheckValue<IkReal> x7304 = IKatan2WithCheck(IkReal(x7301),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7304.valid){
continue;
}
IkReal x7302=((1.0)*(x7304.value));
IkReal x7303=x7289;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst148;
cj6=gconst149;
j6=((3.14159265)+(((-1.0)*x7302)));
IkReal gconst147=((3.14159265358979)+(((-1.0)*x7302)));
IkReal gconst148=(x7301*x7303);
IkReal gconst149=((1.0)*r00*x7303);
IkReal x7305=r02*r02;
IkReal x7306=(r12*sj2);
IkReal x7307=((1.0)*cj2);
IkReal x7308=x7289;
j5eval[0]=((IKabs(((((-1.0)*r02*x7307))+(((-1.0)*x7306)))))+(IKabs((((r02*x7306*x7308))+(((-1.0)*x7307*x7308))+((cj2*x7305*x7308))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7309=((1.0)*sj2);
IkReal x7310=((1.0)*gconst148);
CheckValue<IkReal> x7311 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7309))+(((-1.0)*cj2*r02)))),IkReal((((cj2*gconst149*r00))+(((-1.0)*cj2*r01*x7310))+((gconst149*r10*sj2))+(((-1.0)*gconst148*r11*x7309)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7311.valid){
continue;
}
CheckValue<IkReal> x7312=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x7310))+(((-1.0)*gconst149*r21)))),-1);
if(!x7312.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7311.value)+(((1.5707963267949)*(x7312.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7313=IKsin(j5);
IkReal x7314=IKcos(j5);
IkReal x7315=(sj0*sj1);
IkReal x7316=((1.0)*cj0*cj1);
IkReal x7317=(gconst149*x7314);
IkReal x7318=((1.0)*x7313);
IkReal x7319=(gconst148*x7313);
IkReal x7320=((1.0)*x7314);
IkReal x7321=(gconst148*x7320);
IkReal x7322=(gconst149*x7318);
evalcond[0]=((((-1.0)*r22*x7320))+((r21*x7319))+(((-1.0)*r20*x7322)));
evalcond[1]=(cj2+(((-1.0)*r12*x7320))+(((-1.0)*r10*x7322))+((r11*x7319)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x7322))+((r01*x7319))+(((-1.0)*r02*x7320)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r21*x7321))+((r20*x7317))+(((-1.0)*r22*x7318))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x7316))+(((-1.0)*r01*x7321))+((cj2*x7315))+((r00*x7317))+(((-1.0)*r02*x7318)));
evalcond[5]=((((-1.0)*sj2*x7316))+((r10*x7317))+((sj2*x7315))+(((-1.0)*r12*x7318))+(((-1.0)*r11*x7321)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7323=((1.0)*gconst149);
CheckValue<IkReal> x7324=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x7323))+(((-1.0)*gconst148*r10)))),-1);
if(!x7324.valid){
continue;
}
CheckValue<IkReal> x7325 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x7323))+((gconst148*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7325.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7324.value)))+(x7325.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7326=IKsin(j5);
IkReal x7327=IKcos(j5);
IkReal x7328=(sj0*sj1);
IkReal x7329=((1.0)*cj0*cj1);
IkReal x7330=(gconst149*x7327);
IkReal x7331=((1.0)*x7326);
IkReal x7332=(gconst148*x7326);
IkReal x7333=((1.0)*x7327);
IkReal x7334=(gconst148*x7333);
IkReal x7335=(gconst149*x7331);
evalcond[0]=((((-1.0)*r20*x7335))+((r21*x7332))+(((-1.0)*r22*x7333)));
evalcond[1]=(cj2+(((-1.0)*r12*x7333))+(((-1.0)*r10*x7335))+((r11*x7332)));
evalcond[2]=((((-1.0)*r02*x7333))+(((-1.0)*sj2))+(((-1.0)*r00*x7335))+((r01*x7332)));
evalcond[3]=((((-1.0)*r21*x7334))+((cj1*sj0))+((r20*x7330))+(((-1.0)*r22*x7331))+((cj0*sj1)));
evalcond[4]=((((-1.0)*r02*x7331))+(((-1.0)*cj2*x7329))+((cj2*x7328))+((r00*x7330))+(((-1.0)*r01*x7334)));
evalcond[5]=((((-1.0)*sj2*x7329))+((r10*x7330))+((sj2*x7328))+(((-1.0)*r12*x7331))+(((-1.0)*r11*x7334)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7336=((1.0)*gconst149);
CheckValue<IkReal> x7337=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst148*r00))+(((-1.0)*r01*x7336)))),-1);
if(!x7337.valid){
continue;
}
CheckValue<IkReal> x7338 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst148*r21))+(((-1.0)*cj2*r20*x7336)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7338.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7337.value)))+(x7338.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7339=IKsin(j5);
IkReal x7340=IKcos(j5);
IkReal x7341=(sj0*sj1);
IkReal x7342=((1.0)*cj0*cj1);
IkReal x7343=(gconst149*x7340);
IkReal x7344=((1.0)*x7339);
IkReal x7345=(gconst148*x7339);
IkReal x7346=((1.0)*x7340);
IkReal x7347=(gconst148*x7346);
IkReal x7348=(gconst149*x7344);
evalcond[0]=((((-1.0)*r22*x7346))+((r21*x7345))+(((-1.0)*r20*x7348)));
evalcond[1]=((((-1.0)*r10*x7348))+cj2+(((-1.0)*r12*x7346))+((r11*x7345)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x7348))+((r01*x7345))+(((-1.0)*r02*x7346)));
evalcond[3]=((((-1.0)*r22*x7344))+((cj1*sj0))+((r20*x7343))+((cj0*sj1))+(((-1.0)*r21*x7347)));
evalcond[4]=((((-1.0)*r01*x7347))+(((-1.0)*cj2*x7342))+((r00*x7343))+(((-1.0)*r02*x7344))+((cj2*x7341)));
evalcond[5]=((((-1.0)*r12*x7344))+((sj2*x7341))+(((-1.0)*r11*x7347))+(((-1.0)*sj2*x7342))+((r10*x7343)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x7349=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x7349;
j5eval[1]=IKsign(x7349);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x7350=((1.0)*cj6);
IkReal x7351=((((-1.0)*r10*sj6))+(((-1.0)*r11*x7350)));
j5eval[0]=x7351;
j5eval[1]=IKsign(x7351);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x7350))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x7352=r01*r01;
IkReal x7353=cj6*cj6;
IkReal x7354=(cj6*r00);
IkReal x7355=(r01*sj6);
IkReal x7356=(((x7352*x7353))+(((-1.0)*x7353*(r00*r00)))+(((-1.0)*(r02*r02)))+(((2.0)*x7354*x7355))+(((-1.0)*x7352)));
j5eval[0]=x7356;
j5eval[1]=((IKabs(r02))+(IKabs((x7354+(((-1.0)*x7355))))));
j5eval[2]=IKsign(x7356);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7357=r01*r01;
IkReal x7358=cj6*cj6;
IkReal x7359=(cj6*r00);
IkReal x7360=(r01*sj6);
CheckValue<IkReal> x7361 = IKatan2WithCheck(IkReal((x7359+(((-1.0)*x7360)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x7361.valid){
continue;
}
CheckValue<IkReal> x7362=IKPowWithIntegerCheck(IKsign(((((-1.0)*(r02*r02)))+(((2.0)*x7359*x7360))+(((-1.0)*x7358*(r00*r00)))+(((-1.0)*x7357))+((x7357*x7358)))),-1);
if(!x7362.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7361.value)+(((1.5707963267949)*(x7362.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7363=IKsin(j5);
IkReal x7364=IKcos(j5);
IkReal x7365=(r01*sj6);
IkReal x7366=(r21*sj6);
IkReal x7367=(r11*sj6);
IkReal x7368=((1.0)*x7364);
IkReal x7369=((1.0)*x7363);
IkReal x7370=(cj6*x7364);
IkReal x7371=(cj6*x7369);
evalcond[0]=(((x7363*x7366))+(((-1.0)*r22*x7368))+(((-1.0)*r20*x7371)));
evalcond[1]=(((x7363*x7367))+(((-1.0)*r12*x7368))+(((-1.0)*r10*x7371)));
evalcond[2]=(((r00*x7370))+(((-1.0)*x7365*x7368))+(((-1.0)*r02*x7369)));
evalcond[3]=((-1.0)+((x7363*x7365))+(((-1.0)*r02*x7368))+(((-1.0)*r00*x7371)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*x7366*x7368))+((r20*x7370))+(((-1.0)*r22*x7369))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r12*x7369))+(((-1.0)*x7367*x7368))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r10*x7370)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7372=((1.0)*cj6);
CheckValue<IkReal> x7373=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x7372)))),-1);
if(!x7373.valid){
continue;
}
CheckValue<IkReal> x7374 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x7372)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7374.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7373.value)))+(x7374.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7375=IKsin(j5);
IkReal x7376=IKcos(j5);
IkReal x7377=(r01*sj6);
IkReal x7378=(r21*sj6);
IkReal x7379=(r11*sj6);
IkReal x7380=((1.0)*x7376);
IkReal x7381=((1.0)*x7375);
IkReal x7382=(cj6*x7376);
IkReal x7383=(cj6*x7381);
evalcond[0]=((((-1.0)*r22*x7380))+((x7375*x7378))+(((-1.0)*r20*x7383)));
evalcond[1]=(((x7375*x7379))+(((-1.0)*r12*x7380))+(((-1.0)*r10*x7383)));
evalcond[2]=((((-1.0)*r02*x7381))+(((-1.0)*x7377*x7380))+((r00*x7382)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x7380))+((x7375*x7377))+(((-1.0)*r00*x7383)));
evalcond[4]=((((-1.0)*r22*x7381))+(((-1.0)*x7378*x7380))+((cj1*sj0))+((r20*x7382))+((cj0*sj1)));
evalcond[5]=((((-1.0)*x7379*x7380))+((r10*x7382))+((sj0*sj1))+(((-1.0)*r12*x7381))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x7384=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x7384.valid){
continue;
}
CheckValue<IkReal> x7385 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7385.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7384.value)))+(x7385.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7386=IKsin(j5);
IkReal x7387=IKcos(j5);
IkReal x7388=(r01*sj6);
IkReal x7389=(r21*sj6);
IkReal x7390=(r11*sj6);
IkReal x7391=((1.0)*x7387);
IkReal x7392=((1.0)*x7386);
IkReal x7393=(cj6*x7387);
IkReal x7394=(cj6*x7392);
evalcond[0]=((((-1.0)*r22*x7391))+((x7386*x7389))+(((-1.0)*r20*x7394)));
evalcond[1]=((((-1.0)*r12*x7391))+((x7386*x7390))+(((-1.0)*r10*x7394)));
evalcond[2]=((((-1.0)*r02*x7392))+((r00*x7393))+(((-1.0)*x7388*x7391)));
evalcond[3]=((-1.0)+((x7386*x7388))+(((-1.0)*r00*x7394))+(((-1.0)*r02*x7391)));
evalcond[4]=((((-1.0)*r22*x7392))+((cj1*sj0))+(((-1.0)*x7389*x7391))+((r20*x7393))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r12*x7392))+(((-1.0)*x7390*x7391))+((r10*x7393))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x7395=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x7395;
j5eval[1]=IKsign(x7395);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x7396=((1.0)*cj6);
IkReal x7397=((((-1.0)*r21*x7396))+(((-1.0)*r20*sj6)));
j5eval[0]=x7397;
j5eval[1]=((IKabs(r12))+(IKabs((((r11*sj6))+(((-1.0)*r10*x7396))))));
j5eval[2]=IKsign(x7397);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x7398=cj6*cj6;
IkReal x7399=r01*r01;
IkReal x7400=(cj6*r00);
IkReal x7401=(r01*sj6);
IkReal x7402=(x7399+(((-2.0)*x7400*x7401))+((x7398*(r00*r00)))+(((-1.0)*x7398*x7399))+(r02*r02));
j5eval[0]=x7402;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*x7401))+x7400))));
j5eval[2]=IKsign(x7402);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7403=cj6*cj6;
IkReal x7404=r01*r01;
IkReal x7405=(cj6*r00);
IkReal x7406=(r01*sj6);
CheckValue<IkReal> x7407=IKPowWithIntegerCheck(IKsign(((((-2.0)*x7405*x7406))+((x7403*(r00*r00)))+(r02*r02)+x7404+(((-1.0)*x7403*x7404)))),-1);
if(!x7407.valid){
continue;
}
CheckValue<IkReal> x7408 = IKatan2WithCheck(IkReal(((((-1.0)*x7406))+x7405)),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x7408.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7407.value)))+(x7408.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7409=IKsin(j5);
IkReal x7410=IKcos(j5);
IkReal x7411=(r01*sj6);
IkReal x7412=(r21*sj6);
IkReal x7413=(r11*sj6);
IkReal x7414=((1.0)*x7410);
IkReal x7415=((1.0)*x7409);
IkReal x7416=(cj6*x7410);
IkReal x7417=(cj6*x7415);
evalcond[0]=((((-1.0)*r20*x7417))+((x7409*x7412))+(((-1.0)*r22*x7414)));
evalcond[1]=((((-1.0)*r12*x7414))+((x7409*x7413))+(((-1.0)*r10*x7417)));
evalcond[2]=((((-1.0)*x7411*x7414))+((r00*x7416))+(((-1.0)*r02*x7415)));
evalcond[3]=((1.0)+(((-1.0)*r00*x7417))+((x7409*x7411))+(((-1.0)*r02*x7414)));
evalcond[4]=(((r20*x7416))+((cj1*sj0))+(((-1.0)*r22*x7415))+(((-1.0)*x7412*x7414))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r12*x7415))+((cj0*cj1))+(((-1.0)*sj0*sj1))+(((-1.0)*x7413*x7414))+((r10*x7416)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7418=((1.0)*cj6);
CheckValue<IkReal> x7419 = IKatan2WithCheck(IkReal(r12),IkReal((((r11*sj6))+(((-1.0)*r10*x7418)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7419.valid){
continue;
}
CheckValue<IkReal> x7420=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x7418))+(((-1.0)*r20*sj6)))),-1);
if(!x7420.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7419.value)+(((1.5707963267949)*(x7420.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7421=IKsin(j5);
IkReal x7422=IKcos(j5);
IkReal x7423=(r01*sj6);
IkReal x7424=(r21*sj6);
IkReal x7425=(r11*sj6);
IkReal x7426=((1.0)*x7422);
IkReal x7427=((1.0)*x7421);
IkReal x7428=(cj6*x7422);
IkReal x7429=(cj6*x7427);
evalcond[0]=((((-1.0)*r22*x7426))+((x7421*x7424))+(((-1.0)*r20*x7429)));
evalcond[1]=((((-1.0)*r12*x7426))+(((-1.0)*r10*x7429))+((x7421*x7425)));
evalcond[2]=(((r00*x7428))+(((-1.0)*r02*x7427))+(((-1.0)*x7423*x7426)));
evalcond[3]=((1.0)+(((-1.0)*r00*x7429))+(((-1.0)*r02*x7426))+((x7421*x7423)));
evalcond[4]=((((-1.0)*r22*x7427))+((cj1*sj0))+((r20*x7428))+(((-1.0)*x7424*x7426))+((cj0*sj1)));
evalcond[5]=(((cj0*cj1))+(((-1.0)*r12*x7427))+((r10*x7428))+(((-1.0)*sj0*sj1))+(((-1.0)*x7425*x7426)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x7430 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7430.valid){
continue;
}
CheckValue<IkReal> x7431=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x7431.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7430.value)+(((1.5707963267949)*(x7431.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7432=IKsin(j5);
IkReal x7433=IKcos(j5);
IkReal x7434=(r01*sj6);
IkReal x7435=(r21*sj6);
IkReal x7436=(r11*sj6);
IkReal x7437=((1.0)*x7433);
IkReal x7438=((1.0)*x7432);
IkReal x7439=(cj6*x7433);
IkReal x7440=(cj6*x7438);
evalcond[0]=((((-1.0)*r22*x7437))+((x7432*x7435))+(((-1.0)*r20*x7440)));
evalcond[1]=((((-1.0)*r10*x7440))+(((-1.0)*r12*x7437))+((x7432*x7436)));
evalcond[2]=(((r00*x7439))+(((-1.0)*r02*x7438))+(((-1.0)*x7434*x7437)));
evalcond[3]=((1.0)+(((-1.0)*r02*x7437))+(((-1.0)*r00*x7440))+((x7432*x7434)));
evalcond[4]=((((-1.0)*r22*x7438))+((cj1*sj0))+((r20*x7439))+(((-1.0)*x7435*x7437))+((cj0*sj1)));
evalcond[5]=(((r10*x7439))+(((-1.0)*r12*x7438))+((cj0*cj1))+(((-1.0)*x7436*x7437))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x7441=((-1.0)*px);
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x7441);
rxp1_1=(px*r21);
rxp1_2=(r11*x7441);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=(((cj6*r20))+(((-1.0)*r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x7444=IKPowWithIntegerCheck((((cj6*r20))+(((-1.0)*r21*sj6))),-1);
if(!x7444.valid){
continue;
}
IkReal x7442=x7444.value;
IkReal x7443=((1.0)*x7442);
cj5array[0]=((((-1.0)*cj0*sj1*x7443))+(((-1.0)*cj1*sj0*x7443)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x7445=IKsin(j5);
IkReal x7446=(sj6*x7445);
IkReal x7447=((1.0)*cj6*x7445);
evalcond[0]=((-1.0)*r02*x7445);
evalcond[1]=(((r21*x7446))+(((-1.0)*r20*x7447)));
evalcond[2]=((((-1.0)*r10*x7447))+((r11*x7446)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7448=((1.0)*sj6);
CheckValue<IkReal> x7449 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj6*r10*sj2))+(((-1.0)*r11*sj2*x7448))+((cj2*cj6*r00))+(((-1.0)*cj2*r01*x7448)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7449.valid){
continue;
}
CheckValue<IkReal> x7450=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r21))+(((-1.0)*r20*x7448)))),-1);
if(!x7450.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7449.value)+(((1.5707963267949)*(x7450.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7451=IKsin(j5);
IkReal x7452=IKcos(j5);
IkReal x7453=(r01*sj6);
IkReal x7454=(r21*sj6);
IkReal x7455=(sj0*sj1);
IkReal x7456=((1.0)*sj2);
IkReal x7457=(cj0*cj1);
IkReal x7458=(r11*sj6);
IkReal x7459=((1.0)*x7452);
IkReal x7460=((1.0)*x7451);
IkReal x7461=(cj6*x7452);
IkReal x7462=(cj6*x7460);
evalcond[0]=((((-1.0)*r20*x7462))+(((-1.0)*r22*x7459))+((x7451*x7454)));
evalcond[1]=(cj2+(((-1.0)*r10*x7462))+(((-1.0)*r12*x7459))+((x7451*x7458)));
evalcond[2]=((((-1.0)*x7456))+(((-1.0)*r02*x7459))+(((-1.0)*r00*x7462))+((x7451*x7453)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r22*x7460))+(((-1.0)*x7454*x7459))+((r20*x7461))+((cj0*sj1)));
evalcond[4]=((((-1.0)*r02*x7460))+(((-1.0)*x7453*x7459))+(((-1.0)*cj2*x7457))+((cj2*x7455))+((r00*x7461)));
evalcond[5]=((((-1.0)*x7456*x7457))+((r10*x7461))+(((-1.0)*r12*x7460))+((sj2*x7455))+(((-1.0)*x7458*x7459)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7463=((1.0)*cj6);
CheckValue<IkReal> x7464 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x7463))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7464.valid){
continue;
}
CheckValue<IkReal> x7465=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x7463)))),-1);
if(!x7465.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7464.value)+(((1.5707963267949)*(x7465.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7466=IKsin(j5);
IkReal x7467=IKcos(j5);
IkReal x7468=(r01*sj6);
IkReal x7469=(r21*sj6);
IkReal x7470=(sj0*sj1);
IkReal x7471=((1.0)*sj2);
IkReal x7472=(cj0*cj1);
IkReal x7473=(r11*sj6);
IkReal x7474=((1.0)*x7467);
IkReal x7475=((1.0)*x7466);
IkReal x7476=(cj6*x7467);
IkReal x7477=(cj6*x7475);
evalcond[0]=((((-1.0)*r20*x7477))+(((-1.0)*r22*x7474))+((x7466*x7469)));
evalcond[1]=(cj2+((x7466*x7473))+(((-1.0)*r10*x7477))+(((-1.0)*r12*x7474)));
evalcond[2]=((((-1.0)*r02*x7474))+(((-1.0)*r00*x7477))+(((-1.0)*x7471))+((x7466*x7468)));
evalcond[3]=(((r20*x7476))+((cj1*sj0))+(((-1.0)*r22*x7475))+(((-1.0)*x7469*x7474))+((cj0*sj1)));
evalcond[4]=((((-1.0)*r02*x7475))+((cj2*x7470))+((r00*x7476))+(((-1.0)*cj2*x7472))+(((-1.0)*x7468*x7474)));
evalcond[5]=(((r10*x7476))+(((-1.0)*x7473*x7474))+(((-1.0)*x7471*x7472))+((sj2*x7470))+(((-1.0)*r12*x7475)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7478=((1.0)*cj6);
CheckValue<IkReal> x7479 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x7478)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7479.valid){
continue;
}
CheckValue<IkReal> x7480=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x7478))+(((-1.0)*r00*sj6)))),-1);
if(!x7480.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7479.value)+(((1.5707963267949)*(x7480.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7481=IKsin(j5);
IkReal x7482=IKcos(j5);
IkReal x7483=(r01*sj6);
IkReal x7484=(r21*sj6);
IkReal x7485=(sj0*sj1);
IkReal x7486=((1.0)*sj2);
IkReal x7487=(cj0*cj1);
IkReal x7488=(r11*sj6);
IkReal x7489=((1.0)*x7482);
IkReal x7490=((1.0)*x7481);
IkReal x7491=(cj6*x7482);
IkReal x7492=(cj6*x7490);
evalcond[0]=((((-1.0)*r20*x7492))+(((-1.0)*r22*x7489))+((x7481*x7484)));
evalcond[1]=(cj2+(((-1.0)*r10*x7492))+(((-1.0)*r12*x7489))+((x7481*x7488)));
evalcond[2]=((((-1.0)*r00*x7492))+(((-1.0)*x7486))+(((-1.0)*r02*x7489))+((x7481*x7483)));
evalcond[3]=(((cj1*sj0))+((r20*x7491))+(((-1.0)*r22*x7490))+(((-1.0)*x7484*x7489))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x7487))+((r00*x7491))+((cj2*x7485))+(((-1.0)*r02*x7490))+(((-1.0)*x7483*x7489)));
evalcond[5]=(((sj2*x7485))+(((-1.0)*x7486*x7487))+((r10*x7491))+(((-1.0)*x7488*x7489))+(((-1.0)*r12*x7490)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7493=cj6*cj6;
IkReal x7494=r21*r21;
IkReal x7495=(cj0*sj1);
IkReal x7496=(r21*sj6);
IkReal x7497=(cj1*sj0);
IkReal x7498=((1.0)*cj6*r20);
CheckValue<IkReal> x7499=IKPowWithIntegerCheck(IKsign(((((-1.0)*x7493*x7494))+(r22*r22)+(((-2.0)*cj6*r20*x7496))+((x7493*(r20*r20)))+x7494)),-1);
if(!x7499.valid){
continue;
}
CheckValue<IkReal> x7500 = IKatan2WithCheck(IkReal((((r22*x7497))+((r22*x7495)))),IkReal((((x7496*x7497))+(((-1.0)*x7495*x7498))+(((-1.0)*x7497*x7498))+((x7495*x7496)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7500.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7499.value)))+(x7500.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x7501=IKsin(j5);
IkReal x7502=IKcos(j5);
IkReal x7503=((1.0)*r22);
IkReal x7504=(r21*sj6);
IkReal x7505=(cj6*r20);
evalcond[0]=((((-1.0)*x7502*x7503))+(((-1.0)*x7501*x7505))+((x7501*x7504)));
evalcond[1]=((((-1.0)*x7501*x7503))+((cj1*sj0))+(((-1.0)*x7502*x7504))+((x7502*x7505))+((cj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x7506=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x7506))+(((-1.0)*cj5*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x7506)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x7506))+(((-1.0)*cj5*r02))))+IKsqr((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x7506))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x7506))+(((-1.0)*cj5*r02))), (((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x7506))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x7507=IKcos(j2);
IkReal x7508=IKsin(j2);
IkReal x7509=(r00*sj6);
IkReal x7510=(r10*sj6);
IkReal x7511=((1.0)*cj0);
IkReal x7512=(sj5*sj6);
IkReal x7513=(cj5*cj6);
IkReal x7514=((1.0)*sj0);
IkReal x7515=((1.0)*r01);
IkReal x7516=(cj5*sj6);
IkReal x7517=((1.0)*r11);
IkReal x7518=((0.39225)*sj0);
IkReal x7519=((1.0)*cj5);
IkReal x7520=((1.0)*sj5);
IkReal x7521=((0.09465)*cj6);
IkReal x7522=(cj6*x7520);
IkReal x7523=(cj1*x7508);
IkReal x7524=(sj1*x7508);
IkReal x7525=(cj1*x7507);
IkReal x7526=(sj1*x7507);
IkReal x7527=(cj0*x7525);
evalcond[0]=((((-1.0)*r10*x7522))+((r11*x7512))+x7507+(((-1.0)*r12*x7519)));
evalcond[1]=(((r01*x7512))+(((-1.0)*r00*x7522))+(((-1.0)*r02*x7519))+(((-1.0)*x7508)));
evalcond[2]=((((-1.0)*cj6*x7515))+(((-1.0)*x7511*x7526))+(((-1.0)*x7509))+(((-1.0)*x7514*x7525)));
evalcond[3]=((((-1.0)*cj6*x7517))+(((-1.0)*x7511*x7524))+(((-1.0)*x7510))+(((-1.0)*x7514*x7523)));
evalcond[4]=((((-1.0)*x7515*x7516))+((r00*x7513))+((sj0*x7526))+(((-1.0)*r02*x7520))+(((-1.0)*x7511*x7525)));
evalcond[5]=((((-1.0)*x7516*x7517))+((sj0*x7524))+(((-1.0)*x7511*x7523))+((r10*x7513))+(((-1.0)*r12*x7520)));
evalcond[6]=((((-0.09465)*x7509))+(((0.425)*x7525))+(((-1.0)*r01*x7521))+(((-0.10915)*x7508))+(((0.39225)*x7527))+(((-1.0)*px))+(((-1.0)*x7518*x7526)));
evalcond[7]=((((0.10915)*x7507))+(((-0.09465)*x7510))+(((0.425)*x7523))+(((-1.0)*py))+(((-1.0)*x7518*x7524))+(((-1.0)*r11*x7521))+(((0.39225)*cj0*x7523)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
CheckValue<IkReal> x7528=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1)))),-1);
if(!x7528.valid){
continue;
}
CheckValue<IkReal> x7529 = IKatan2WithCheck(IkReal((((r10*sj6))+((cj6*r11)))),IkReal((((r00*sj6))+((cj6*r01)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7529.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7528.value)))+(x7529.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[4];
IkReal x7530=IKcos(j2);
IkReal x7531=IKsin(j2);
IkReal x7532=(r00*sj6);
IkReal x7533=(r10*sj6);
IkReal x7534=(sj0*sj1);
IkReal x7535=((1.0)*sj0);
IkReal x7536=((1.0)*cj6);
IkReal x7537=((0.09465)*cj6);
IkReal x7538=(cj1*x7531);
IkReal x7539=((0.39225)*x7530);
IkReal x7540=((1.0)*cj0*sj1);
IkReal x7541=(cj1*x7530);
evalcond[0]=((((-1.0)*x7535*x7541))+(((-1.0)*x7532))+(((-1.0)*r01*x7536))+(((-1.0)*x7530*x7540)));
evalcond[1]=((((-1.0)*r11*x7536))+(((-1.0)*x7533))+(((-1.0)*x7535*x7538))+(((-1.0)*x7531*x7540)));
evalcond[2]=((((0.425)*x7541))+((cj0*cj1*x7539))+(((-1.0)*px))+(((-1.0)*x7534*x7539))+(((-1.0)*r01*x7537))+(((-0.09465)*x7532))+(((-0.10915)*x7531)));
evalcond[3]=((((-1.0)*r11*x7537))+(((0.39225)*cj0*x7538))+(((-0.39225)*x7531*x7534))+(((-1.0)*py))+(((0.425)*x7538))+(((-0.09465)*x7533))+(((0.10915)*x7530)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x7542=((1.0)*cj6);
IkReal x7543=((((-1.0)*r00*sj6))+(((-1.0)*r01*x7542)));
j5eval[0]=x7543;
j5eval[1]=IKsign(x7543);
j5eval[2]=((IKabs((((cj2*r21*sj6))+(((-1.0)*cj2*r20*x7542)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x7544=((1.0)*cj6);
IkReal x7545=((((-1.0)*r10*sj6))+(((-1.0)*r11*x7544)));
j5eval[0]=x7545;
j5eval[1]=((IKabs((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x7544)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x7545);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x7546=((1.0)*sj2);
IkReal x7547=((1.0)*sj6);
IkReal x7548=((((-1.0)*cj6*r21))+(((-1.0)*r20*x7547)));
j5eval[0]=x7548;
j5eval[1]=IKsign(x7548);
j5eval[2]=((IKabs(((((-1.0)*r12*x7546))+(((-1.0)*cj2*r02)))))+(IKabs((((cj6*r10*sj2))+(((-1.0)*cj2*r01*x7547))+((cj2*cj6*r00))+(((-1.0)*r11*sj6*x7546))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
IkReal x7549=((-1.0)*r20);
IkReal x7551 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x7551)==0){
continue;
}
IkReal x7550=pow(x7551,-0.5);
CheckValue<IkReal> x7552 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x7549),IKFAST_ATAN2_MAGTHRESH);
if(!x7552.valid){
continue;
}
IkReal gconst132=((-1.0)*(x7552.value));
IkReal gconst133=(r21*x7550);
IkReal gconst134=(x7549*x7550);
CheckValue<IkReal> x7553 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x7553.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x7553.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x7554=((-1.0)*r20);
IkReal x7555=x7550;
CheckValue<IkReal> x7557 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x7554),IKFAST_ATAN2_MAGTHRESH);
if(!x7557.valid){
continue;
}
IkReal x7556=((-1.0)*(x7557.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst133;
cj6=gconst134;
j6=x7556;
IkReal gconst132=x7556;
IkReal gconst133=(r21*x7555);
IkReal gconst134=(x7554*x7555);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x7558=((-1.0)*r20);
IkReal x7559=x7550;
CheckValue<IkReal> x7561 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x7558),IKFAST_ATAN2_MAGTHRESH);
if(!x7561.valid){
continue;
}
IkReal x7560=((-1.0)*(x7561.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst133;
cj6=gconst134;
j6=x7560;
IkReal gconst132=x7560;
IkReal gconst133=(r21*x7559);
IkReal gconst134=(x7558*x7559);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x7562=((-1.0)*r20);
IkReal x7563=x7550;
CheckValue<IkReal> x7565 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x7562),IKFAST_ATAN2_MAGTHRESH);
if(!x7565.valid){
continue;
}
IkReal x7564=((-1.0)*(x7565.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst133;
cj6=gconst134;
j6=x7564;
IkReal gconst132=x7564;
IkReal gconst133=(r21*x7563);
IkReal gconst134=(x7562*x7563);
IkReal x7566=r22*r22;
CheckValue<IkReal> x7569=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x7566))),-1);
if(!x7569.valid){
continue;
}
IkReal x7567=x7569.value;
IkReal x7568=(((x7567*(r20*r20*r20*r20)))+((x7567*(r21*r21*r21*r21)))+x7566+(((2.0)*x7567*(r20*r20)*(r21*r21))));
j5eval[0]=x7568;
j5eval[1]=IKsign(x7568);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7570=(gconst134*r20);
IkReal x7571=(cj1*sj0);
IkReal x7572=(cj0*sj1);
IkReal x7573=(gconst133*r21);
CheckValue<IkReal> x7574 = IKatan2WithCheck(IkReal((((r22*x7571))+((r22*x7572)))),IkReal(((((-1.0)*x7570*x7571))+(((-1.0)*x7570*x7572))+((x7571*x7573))+((x7572*x7573)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7574.valid){
continue;
}
CheckValue<IkReal> x7575=IKPowWithIntegerCheck(IKsign(((r22*r22)+(((-2.0)*x7570*x7573))+(x7570*x7570)+(x7573*x7573))),-1);
if(!x7575.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7574.value)+(((1.5707963267949)*(x7575.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7576=IKsin(j5);
IkReal x7577=IKcos(j5);
IkReal x7578=(sj0*sj1);
IkReal x7579=(gconst133*x7576);
IkReal x7580=((1.0)*cj0*cj1);
IkReal x7581=(gconst134*x7577);
IkReal x7582=((1.0)*x7576);
IkReal x7583=((1.0)*x7577);
IkReal x7584=(gconst133*x7583);
evalcond[0]=((((-1.0)*gconst134*r20*x7582))+(((-1.0)*r22*x7583))+((r21*x7579)));
evalcond[1]=(cj2+(((-1.0)*gconst134*r10*x7582))+(((-1.0)*r12*x7583))+((r11*x7579)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*gconst134*r00*x7582))+((r01*x7579))+(((-1.0)*r02*x7583)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r22*x7582))+(((-1.0)*r21*x7584))+((cj0*sj1))+((r20*x7581)));
evalcond[4]=((((-1.0)*r01*x7584))+((cj2*x7578))+(((-1.0)*cj2*x7580))+(((-1.0)*r02*x7582))+((r00*x7581)));
evalcond[5]=((((-1.0)*sj2*x7580))+((r10*x7581))+((sj2*x7578))+(((-1.0)*r12*x7582))+(((-1.0)*r11*x7584)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7585=((1.0)*gconst134);
CheckValue<IkReal> x7586=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst133*r10))+(((-1.0)*r11*x7585)))),-1);
if(!x7586.valid){
continue;
}
CheckValue<IkReal> x7587 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x7585))+((gconst133*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7587.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7586.value)))+(x7587.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7588=IKsin(j5);
IkReal x7589=IKcos(j5);
IkReal x7590=(sj0*sj1);
IkReal x7591=(gconst133*x7588);
IkReal x7592=((1.0)*cj0*cj1);
IkReal x7593=(gconst134*x7589);
IkReal x7594=((1.0)*x7588);
IkReal x7595=((1.0)*x7589);
IkReal x7596=(gconst133*x7595);
evalcond[0]=((((-1.0)*gconst134*r20*x7594))+(((-1.0)*r22*x7595))+((r21*x7591)));
evalcond[1]=(cj2+(((-1.0)*r12*x7595))+(((-1.0)*gconst134*r10*x7594))+((r11*x7591)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*gconst134*r00*x7594))+(((-1.0)*r02*x7595))+((r01*x7591)));
evalcond[3]=(((cj1*sj0))+((r20*x7593))+(((-1.0)*r22*x7594))+(((-1.0)*r21*x7596))+((cj0*sj1)));
evalcond[4]=(((cj2*x7590))+(((-1.0)*cj2*x7592))+(((-1.0)*r02*x7594))+((r00*x7593))+(((-1.0)*r01*x7596)));
evalcond[5]=((((-1.0)*r12*x7594))+(((-1.0)*r11*x7596))+((sj2*x7590))+(((-1.0)*sj2*x7592))+((r10*x7593)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7597=((1.0)*gconst134);
CheckValue<IkReal> x7598=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst133*r00))+(((-1.0)*r01*x7597)))),-1);
if(!x7598.valid){
continue;
}
CheckValue<IkReal> x7599 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst133*r21))+(((-1.0)*cj2*r20*x7597)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7599.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7598.value)))+(x7599.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7600=IKsin(j5);
IkReal x7601=IKcos(j5);
IkReal x7602=(sj0*sj1);
IkReal x7603=(gconst133*x7600);
IkReal x7604=((1.0)*cj0*cj1);
IkReal x7605=(gconst134*x7601);
IkReal x7606=((1.0)*x7600);
IkReal x7607=((1.0)*x7601);
IkReal x7608=(gconst133*x7607);
evalcond[0]=((((-1.0)*r22*x7607))+((r21*x7603))+(((-1.0)*gconst134*r20*x7606)));
evalcond[1]=(((r11*x7603))+cj2+(((-1.0)*gconst134*r10*x7606))+(((-1.0)*r12*x7607)));
evalcond[2]=((((-1.0)*sj2))+((r01*x7603))+(((-1.0)*r02*x7607))+(((-1.0)*gconst134*r00*x7606)));
evalcond[3]=(((r20*x7605))+(((-1.0)*r22*x7606))+((cj1*sj0))+((cj0*sj1))+(((-1.0)*r21*x7608)));
evalcond[4]=(((r00*x7605))+(((-1.0)*cj2*x7604))+(((-1.0)*r01*x7608))+(((-1.0)*r02*x7606))+((cj2*x7602)));
evalcond[5]=((((-1.0)*r11*x7608))+(((-1.0)*sj2*x7604))+((sj2*x7602))+((r10*x7605))+(((-1.0)*r12*x7606)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7609=((-1.0)*r21);
IkReal x7611 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x7611)==0){
continue;
}
IkReal x7610=pow(x7611,-0.5);
CheckValue<IkReal> x7612 = IKatan2WithCheck(IkReal(x7609),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x7612.valid){
continue;
}
IkReal gconst135=((3.14159265358979)+(((-1.0)*(x7612.value))));
IkReal gconst136=(x7609*x7610);
IkReal gconst137=((1.0)*r20*x7610);
CheckValue<IkReal> x7613 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x7613.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x7613.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x7614=((-1.0)*r21);
CheckValue<IkReal> x7617 = IKatan2WithCheck(IkReal(x7614),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x7617.valid){
continue;
}
IkReal x7615=((1.0)*(x7617.value));
IkReal x7616=x7610;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst136;
cj6=gconst137;
j6=((3.14159265)+(((-1.0)*x7615)));
IkReal gconst135=((3.14159265358979)+(((-1.0)*x7615)));
IkReal gconst136=(x7614*x7616);
IkReal gconst137=((1.0)*r20*x7616);
IkReal x7618=r22*r22;
IkReal x7619=((1.0)*x7618);
CheckValue<IkReal> x7623=IKPowWithIntegerCheck(((-1.0)+x7618),-1);
if(!x7623.valid){
continue;
}
IkReal x7620=x7623.value;
if((((1.0)+(((-1.0)*x7619)))) < -0.00001)
continue;
IkReal x7621=IKsqrt(((1.0)+(((-1.0)*x7619))));
IkReal x7622=(cj2*x7620*x7621);
j5eval[0]=((IKabs((cj2*r22)))+(IKabs(((((-1.0)*x7619*x7622))+x7622))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x7624=((-1.0)*r21);
CheckValue<IkReal> x7627 = IKatan2WithCheck(IkReal(x7624),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x7627.valid){
continue;
}
IkReal x7625=((1.0)*(x7627.value));
IkReal x7626=x7610;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst136;
cj6=gconst137;
j6=((3.14159265)+(((-1.0)*x7625)));
IkReal gconst135=((3.14159265358979)+(((-1.0)*x7625)));
IkReal gconst136=(x7624*x7626);
IkReal gconst137=((1.0)*r20*x7626);
IkReal x7628=r22*r22;
IkReal x7629=((1.0)*x7628);
CheckValue<IkReal> x7633=IKPowWithIntegerCheck(((-1.0)+x7628),-1);
if(!x7633.valid){
continue;
}
IkReal x7630=x7633.value;
if((((1.0)+(((-1.0)*x7629)))) < -0.00001)
continue;
IkReal x7631=IKsqrt(((1.0)+(((-1.0)*x7629))));
IkReal x7632=(sj2*x7630*x7631);
j5eval[0]=((IKabs(((((-1.0)*x7629*x7632))+x7632)))+(IKabs((r22*sj2))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x7634=((-1.0)*r21);
CheckValue<IkReal> x7637 = IKatan2WithCheck(IkReal(x7634),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x7637.valid){
continue;
}
IkReal x7635=((1.0)*(x7637.value));
IkReal x7636=x7610;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst136;
cj6=gconst137;
j6=((3.14159265)+(((-1.0)*x7635)));
IkReal gconst135=((3.14159265358979)+(((-1.0)*x7635)));
IkReal gconst136=(x7634*x7636);
IkReal gconst137=((1.0)*r20*x7636);
IkReal x7638=r22*r22;
IkReal x7639=(r12*sj2);
IkReal x7640=(cj2*r02);
CheckValue<IkReal> x7644=IKPowWithIntegerCheck(((-1.0)+x7638),-1);
if(!x7644.valid){
continue;
}
IkReal x7641=x7644.value;
if((((1.0)+(((-1.0)*x7638)))) < -0.00001)
continue;
IkReal x7642=IKsqrt(((1.0)+(((-1.0)*x7638))));
IkReal x7643=(r22*x7641*x7642);
j5eval[0]=0;
j5eval[1]=((IKabs((((x7640*x7643))+((x7639*x7643)))))+(IKabs(((((-1.0)*x7640))+(((-1.0)*x7639))))));
j5eval[2]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7645=((1.0)*sj2);
IkReal x7646=((1.0)*gconst136);
CheckValue<IkReal> x7647=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x7646))+(((-1.0)*gconst137*r21)))),-1);
if(!x7647.valid){
continue;
}
CheckValue<IkReal> x7648 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7645))+(((-1.0)*cj2*r02)))),IkReal(((((-1.0)*gconst136*r11*x7645))+((gconst137*r10*sj2))+(((-1.0)*cj2*r01*x7646))+((cj2*gconst137*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7648.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7647.value)))+(x7648.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7649=IKsin(j5);
IkReal x7650=IKcos(j5);
IkReal x7651=(sj0*sj1);
IkReal x7652=(gconst136*r21);
IkReal x7653=(gconst136*r11);
IkReal x7654=(gconst136*r01);
IkReal x7655=((1.0)*cj0*cj1);
IkReal x7656=((1.0)*x7650);
IkReal x7657=(gconst137*x7650);
IkReal x7658=((1.0)*x7649);
IkReal x7659=(gconst137*x7658);
evalcond[0]=((((-1.0)*r22*x7656))+(((-1.0)*r20*x7659))+((x7649*x7652)));
evalcond[1]=(cj2+((x7649*x7653))+(((-1.0)*r10*x7659))+(((-1.0)*r12*x7656)));
evalcond[2]=((((-1.0)*r00*x7659))+(((-1.0)*sj2))+(((-1.0)*r02*x7656))+((x7649*x7654)));
evalcond[3]=((((-1.0)*r22*x7658))+((cj1*sj0))+((r20*x7657))+(((-1.0)*x7652*x7656))+((cj0*sj1)));
evalcond[4]=((((-1.0)*r02*x7658))+(((-1.0)*cj2*x7655))+((cj2*x7651))+(((-1.0)*x7654*x7656))+((r00*x7657)));
evalcond[5]=(((sj2*x7651))+(((-1.0)*x7653*x7656))+((r10*x7657))+(((-1.0)*r12*x7658))+(((-1.0)*sj2*x7655)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7660=((1.0)*gconst137);
CheckValue<IkReal> x7661=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x7660))+(((-1.0)*gconst136*r10)))),-1);
if(!x7661.valid){
continue;
}
CheckValue<IkReal> x7662 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst136*r21*sj2))+(((-1.0)*r20*sj2*x7660)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7662.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7661.value)))+(x7662.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7663=IKsin(j5);
IkReal x7664=IKcos(j5);
IkReal x7665=(sj0*sj1);
IkReal x7666=(gconst136*r21);
IkReal x7667=(gconst136*r11);
IkReal x7668=(gconst136*r01);
IkReal x7669=((1.0)*cj0*cj1);
IkReal x7670=((1.0)*x7664);
IkReal x7671=(gconst137*x7664);
IkReal x7672=((1.0)*x7663);
IkReal x7673=(gconst137*x7672);
evalcond[0]=((((-1.0)*r20*x7673))+((x7663*x7666))+(((-1.0)*r22*x7670)));
evalcond[1]=(cj2+((x7663*x7667))+(((-1.0)*r12*x7670))+(((-1.0)*r10*x7673)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x7673))+(((-1.0)*r02*x7670))+((x7663*x7668)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*x7666*x7670))+((r20*x7671))+((cj0*sj1))+(((-1.0)*r22*x7672)));
evalcond[4]=(((cj2*x7665))+(((-1.0)*r02*x7672))+(((-1.0)*cj2*x7669))+((r00*x7671))+(((-1.0)*x7668*x7670)));
evalcond[5]=((((-1.0)*r12*x7672))+(((-1.0)*sj2*x7669))+((sj2*x7665))+((r10*x7671))+(((-1.0)*x7667*x7670)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7674=((1.0)*gconst137);
CheckValue<IkReal> x7675=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x7674))+(((-1.0)*gconst136*r00)))),-1);
if(!x7675.valid){
continue;
}
CheckValue<IkReal> x7676 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x7674))+((cj2*gconst136*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7676.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7675.value)))+(x7676.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7677=IKsin(j5);
IkReal x7678=IKcos(j5);
IkReal x7679=(sj0*sj1);
IkReal x7680=(gconst136*r21);
IkReal x7681=(gconst136*r11);
IkReal x7682=(gconst136*r01);
IkReal x7683=((1.0)*cj0*cj1);
IkReal x7684=((1.0)*x7678);
IkReal x7685=(gconst137*x7678);
IkReal x7686=((1.0)*x7677);
IkReal x7687=(gconst137*x7686);
evalcond[0]=((((-1.0)*r20*x7687))+((x7677*x7680))+(((-1.0)*r22*x7684)));
evalcond[1]=((((-1.0)*r10*x7687))+((x7677*x7681))+cj2+(((-1.0)*r12*x7684)));
evalcond[2]=((((-1.0)*sj2))+((x7677*x7682))+(((-1.0)*r00*x7687))+(((-1.0)*r02*x7684)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r22*x7686))+((r20*x7685))+(((-1.0)*x7680*x7684))+((cj0*sj1)));
evalcond[4]=((((-1.0)*x7682*x7684))+((cj2*x7679))+((r00*x7685))+(((-1.0)*cj2*x7683))+(((-1.0)*r02*x7686)));
evalcond[5]=(((sj2*x7679))+((r10*x7685))+(((-1.0)*x7681*x7684))+(((-1.0)*r12*x7686))+(((-1.0)*sj2*x7683)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7688=((-1.0)*r10);
IkReal x7690 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x7690)==0){
continue;
}
IkReal x7689=pow(x7690,-0.5);
CheckValue<IkReal> x7691 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x7688),IKFAST_ATAN2_MAGTHRESH);
if(!x7691.valid){
continue;
}
IkReal gconst138=((-1.0)*(x7691.value));
IkReal gconst139=(r11*x7689);
IkReal gconst140=(x7688*x7689);
CheckValue<IkReal> x7692 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7692.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x7692.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x7693=((-1.0)*r10);
IkReal x7694=x7689;
CheckValue<IkReal> x7696 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x7693),IKFAST_ATAN2_MAGTHRESH);
if(!x7696.valid){
continue;
}
IkReal x7695=((-1.0)*(x7696.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst139;
cj6=gconst140;
j6=x7695;
IkReal gconst138=x7695;
IkReal gconst139=(r11*x7694);
IkReal gconst140=(x7693*x7694);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7697=((1.0)*sj2);
IkReal x7698=((1.0)*gconst139);
CheckValue<IkReal> x7699 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7697))+(((-1.0)*cj2*r02)))),IkReal((((gconst140*r10*sj2))+((cj2*gconst140*r00))+(((-1.0)*cj2*r01*x7698))+(((-1.0)*gconst139*r11*x7697)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7699.valid){
continue;
}
CheckValue<IkReal> x7700=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst140*r21))+(((-1.0)*r20*x7698)))),-1);
if(!x7700.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7699.value)+(((1.5707963267949)*(x7700.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7701=IKsin(j5);
IkReal x7702=IKcos(j5);
IkReal x7703=(sj0*sj1);
IkReal x7704=(gconst140*r00);
IkReal x7705=((1.0)*cj0*cj1);
IkReal x7706=((1.0)*x7701);
IkReal x7707=(gconst139*x7701);
IkReal x7708=((1.0)*x7702);
IkReal x7709=(gconst140*x7702);
evalcond[0]=(((r21*x7707))+(((-1.0)*r22*x7708))+(((-1.0)*gconst140*r20*x7706)));
evalcond[1]=(cj2+((r11*x7707))+(((-1.0)*r12*x7708))+(((-1.0)*gconst140*r10*x7706)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*x7704*x7706))+((r01*x7707))+(((-1.0)*r02*x7708)));
evalcond[3]=((((-1.0)*gconst139*r21*x7708))+(((-1.0)*r22*x7706))+((cj1*sj0))+((r20*x7709))+((cj0*sj1)));
evalcond[4]=(((cj2*x7703))+(((-1.0)*gconst139*r01*x7708))+(((-1.0)*r02*x7706))+(((-1.0)*cj2*x7705))+((x7702*x7704)));
evalcond[5]=((((-1.0)*sj2*x7705))+(((-1.0)*r12*x7706))+((r10*x7709))+((sj2*x7703))+(((-1.0)*gconst139*r11*x7708)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7710=((1.0)*gconst140);
CheckValue<IkReal> x7711 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x7710))+((cj2*gconst139*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7711.valid){
continue;
}
CheckValue<IkReal> x7712=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst139*r00))+(((-1.0)*r01*x7710)))),-1);
if(!x7712.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7711.value)+(((1.5707963267949)*(x7712.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7713=IKsin(j5);
IkReal x7714=IKcos(j5);
IkReal x7715=(sj0*sj1);
IkReal x7716=(gconst140*r00);
IkReal x7717=((1.0)*cj0*cj1);
IkReal x7718=((1.0)*x7713);
IkReal x7719=(gconst139*x7713);
IkReal x7720=((1.0)*x7714);
IkReal x7721=(gconst140*x7714);
evalcond[0]=(((r21*x7719))+(((-1.0)*gconst140*r20*x7718))+(((-1.0)*r22*x7720)));
evalcond[1]=(((r11*x7719))+cj2+(((-1.0)*gconst140*r10*x7718))+(((-1.0)*r12*x7720)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x7720))+(((-1.0)*x7716*x7718))+((r01*x7719)));
evalcond[3]=((((-1.0)*r22*x7718))+((cj1*sj0))+(((-1.0)*gconst139*r21*x7720))+((cj0*sj1))+((r20*x7721)));
evalcond[4]=((((-1.0)*gconst139*r01*x7720))+((x7714*x7716))+(((-1.0)*cj2*x7717))+(((-1.0)*r02*x7718))+((cj2*x7715)));
evalcond[5]=(((r10*x7721))+(((-1.0)*r12*x7718))+(((-1.0)*sj2*x7717))+(((-1.0)*gconst139*r11*x7720))+((sj2*x7715)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7722=((-1.0)*r11);
IkReal x7724 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x7724)==0){
continue;
}
IkReal x7723=pow(x7724,-0.5);
CheckValue<IkReal> x7725 = IKatan2WithCheck(IkReal(x7722),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7725.valid){
continue;
}
IkReal gconst141=((3.14159265358979)+(((-1.0)*(x7725.value))));
IkReal gconst142=(x7722*x7723);
IkReal gconst143=((1.0)*r10*x7723);
CheckValue<IkReal> x7726 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7726.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x7726.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x7727=((-1.0)*r11);
CheckValue<IkReal> x7730 = IKatan2WithCheck(IkReal(x7727),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7730.valid){
continue;
}
IkReal x7728=((1.0)*(x7730.value));
IkReal x7729=x7723;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst142;
cj6=gconst143;
j6=((3.14159265)+(((-1.0)*x7728)));
IkReal gconst141=((3.14159265358979)+(((-1.0)*x7728)));
IkReal gconst142=(x7727*x7729);
IkReal gconst143=((1.0)*r10*x7729);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x7731=((-1.0)*r11);
CheckValue<IkReal> x7734 = IKatan2WithCheck(IkReal(x7731),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7734.valid){
continue;
}
IkReal x7732=((1.0)*(x7734.value));
IkReal x7733=x7723;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst142;
cj6=gconst143;
j6=((3.14159265)+(((-1.0)*x7732)));
IkReal gconst141=((3.14159265358979)+(((-1.0)*x7732)));
IkReal gconst142=(x7731*x7733);
IkReal gconst143=((1.0)*r10*x7733);
IkReal x7735=r12*r12;
IkReal x7736=((1.0)*sj2);
IkReal x7737=(cj2*r02);
IkReal x7738=x7723;
j5eval[0]=((IKabs((((r12*x7737*x7738))+(((-1.0)*x7736*x7738))+((sj2*x7735*x7738)))))+(IKabs(((((-1.0)*x7737))+(((-1.0)*r12*x7736))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x7739=((-1.0)*r11);
CheckValue<IkReal> x7742 = IKatan2WithCheck(IkReal(x7739),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x7742.valid){
continue;
}
IkReal x7740=((1.0)*(x7742.value));
IkReal x7741=x7723;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst142;
cj6=gconst143;
j6=((3.14159265)+(((-1.0)*x7740)));
IkReal gconst141=((3.14159265358979)+(((-1.0)*x7740)));
IkReal gconst142=(x7739*x7741);
IkReal gconst143=((1.0)*r10*x7741);
IkReal x7743=r12*r12;
IkReal x7744=(cj1*r22*sj0);
IkReal x7745=(cj0*r22*sj1);
CheckValue<IkReal> x7749=IKPowWithIntegerCheck(((-1.0)+x7743),-1);
if(!x7749.valid){
continue;
}
IkReal x7746=x7749.value;
if((((1.0)+(((-1.0)*x7743)))) < -0.00001)
continue;
IkReal x7747=IKsqrt(((1.0)+(((-1.0)*x7743))));
IkReal x7748=((1.0)*r12*x7746*x7747);
j5eval[0]=((IKabs(((((-1.0)*x7744*x7748))+(((-1.0)*x7745*x7748)))))+(IKabs((x7744+x7745))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7750=(gconst142*r21);
IkReal x7751=(cj0*sj1);
IkReal x7752=(cj1*sj0);
IkReal x7753=(gconst143*r20);
CheckValue<IkReal> x7754=IKPowWithIntegerCheck(IKsign(((x7753*x7753)+(r22*r22)+(((-2.0)*x7750*x7753))+(x7750*x7750))),-1);
if(!x7754.valid){
continue;
}
CheckValue<IkReal> x7755 = IKatan2WithCheck(IkReal((((r22*x7751))+((r22*x7752)))),IkReal(((((-1.0)*x7752*x7753))+((x7750*x7752))+((x7750*x7751))+(((-1.0)*x7751*x7753)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7755.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7754.value)))+(x7755.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7756=IKsin(j5);
IkReal x7757=IKcos(j5);
IkReal x7758=(sj0*sj1);
IkReal x7759=(gconst142*r11);
IkReal x7760=(gconst142*r01);
IkReal x7761=(gconst142*r21);
IkReal x7762=((1.0)*cj0*cj1);
IkReal x7763=(gconst143*x7757);
IkReal x7764=((1.0)*x7757);
IkReal x7765=((1.0)*x7756);
evalcond[0]=((((-1.0)*r22*x7764))+(((-1.0)*gconst143*r20*x7765))+((x7756*x7761)));
evalcond[1]=(cj2+((x7756*x7759))+(((-1.0)*r12*x7764))+(((-1.0)*gconst143*r10*x7765)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x7764))+(((-1.0)*gconst143*r00*x7765))+((x7756*x7760)));
evalcond[3]=((((-1.0)*r22*x7765))+((cj1*sj0))+((r20*x7763))+(((-1.0)*x7761*x7764))+((cj0*sj1)));
evalcond[4]=((((-1.0)*x7760*x7764))+(((-1.0)*r02*x7765))+((cj2*x7758))+(((-1.0)*cj2*x7762))+((r00*x7763)));
evalcond[5]=((((-1.0)*sj2*x7762))+(((-1.0)*x7759*x7764))+(((-1.0)*r12*x7765))+((r10*x7763))+((sj2*x7758)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7766=((1.0)*sj2);
IkReal x7767=((1.0)*gconst142);
CheckValue<IkReal> x7768=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x7767))+(((-1.0)*gconst143*r21)))),-1);
if(!x7768.valid){
continue;
}
CheckValue<IkReal> x7769 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7766))+(((-1.0)*cj2*r02)))),IkReal(((((-1.0)*cj2*r01*x7767))+(((-1.0)*gconst142*r11*x7766))+((gconst143*r10*sj2))+((cj2*gconst143*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7769.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7768.value)))+(x7769.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7770=IKsin(j5);
IkReal x7771=IKcos(j5);
IkReal x7772=(sj0*sj1);
IkReal x7773=(gconst142*r11);
IkReal x7774=(gconst142*r01);
IkReal x7775=(gconst142*r21);
IkReal x7776=((1.0)*cj0*cj1);
IkReal x7777=(gconst143*x7771);
IkReal x7778=((1.0)*x7771);
IkReal x7779=((1.0)*x7770);
evalcond[0]=((((-1.0)*r22*x7778))+((x7770*x7775))+(((-1.0)*gconst143*r20*x7779)));
evalcond[1]=(cj2+((x7770*x7773))+(((-1.0)*r12*x7778))+(((-1.0)*gconst143*r10*x7779)));
evalcond[2]=((((-1.0)*r02*x7778))+(((-1.0)*sj2))+((x7770*x7774))+(((-1.0)*gconst143*r00*x7779)));
evalcond[3]=((((-1.0)*r22*x7779))+((cj1*sj0))+(((-1.0)*x7775*x7778))+((r20*x7777))+((cj0*sj1)));
evalcond[4]=(((r00*x7777))+(((-1.0)*r02*x7779))+(((-1.0)*cj2*x7776))+((cj2*x7772))+(((-1.0)*x7774*x7778)));
evalcond[5]=(((sj2*x7772))+(((-1.0)*sj2*x7776))+(((-1.0)*r12*x7779))+(((-1.0)*x7773*x7778))+((r10*x7777)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7780=((1.0)*gconst143);
CheckValue<IkReal> x7781=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x7780))+(((-1.0)*gconst142*r00)))),-1);
if(!x7781.valid){
continue;
}
CheckValue<IkReal> x7782 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst142*r21))+(((-1.0)*cj2*r20*x7780)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7782.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7781.value)))+(x7782.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7783=IKsin(j5);
IkReal x7784=IKcos(j5);
IkReal x7785=(sj0*sj1);
IkReal x7786=(gconst142*r11);
IkReal x7787=(gconst142*r01);
IkReal x7788=(gconst142*r21);
IkReal x7789=((1.0)*cj0*cj1);
IkReal x7790=(gconst143*x7784);
IkReal x7791=((1.0)*x7784);
IkReal x7792=((1.0)*x7783);
evalcond[0]=((((-1.0)*r22*x7791))+((x7783*x7788))+(((-1.0)*gconst143*r20*x7792)));
evalcond[1]=((((-1.0)*gconst143*r10*x7792))+cj2+(((-1.0)*r12*x7791))+((x7783*x7786)));
evalcond[2]=((((-1.0)*sj2))+((x7783*x7787))+(((-1.0)*gconst143*r00*x7792))+(((-1.0)*r02*x7791)));
evalcond[3]=((((-1.0)*r22*x7792))+((cj1*sj0))+((r20*x7790))+(((-1.0)*x7788*x7791))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x7789))+((cj2*x7785))+(((-1.0)*x7787*x7791))+((r00*x7790))+(((-1.0)*r02*x7792)));
evalcond[5]=((((-1.0)*x7786*x7791))+((r10*x7790))+((sj2*x7785))+(((-1.0)*r12*x7792))+(((-1.0)*sj2*x7789)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal x7793=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x7793;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x7793);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal x7794=((1.0)*cj6);
IkReal x7795=((((-1.0)*r00*sj6))+(((-1.0)*r01*x7794)));
j5eval[0]=x7795;
j5eval[1]=IKsign(x7795);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x7794)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal x7796=cj6*cj6;
IkReal x7797=r11*r11;
IkReal x7798=(cj6*r10);
IkReal x7799=(r11*sj6);
IkReal x7800=((((-2.0)*x7798*x7799))+(r12*r12)+((x7796*(r10*r10)))+(((-1.0)*x7796*x7797))+x7797);
j5eval[0]=x7800;
j5eval[1]=IKsign(x7800);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*x7799))+x7798))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7801=cj6*cj6;
IkReal x7802=r11*r11;
IkReal x7803=(cj6*r10);
IkReal x7804=(r11*sj6);
CheckValue<IkReal> x7805 = IKatan2WithCheck(IkReal(((((-1.0)*x7804))+x7803)),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x7805.valid){
continue;
}
CheckValue<IkReal> x7806=IKPowWithIntegerCheck(IKsign(((r12*r12)+(((-1.0)*x7801*x7802))+(((-2.0)*x7803*x7804))+x7802+((x7801*(r10*r10))))),-1);
if(!x7806.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7805.value)+(((1.5707963267949)*(x7806.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7807=IKsin(j5);
IkReal x7808=IKcos(j5);
IkReal x7809=(sj6*x7807);
IkReal x7810=((1.0)*x7807);
IkReal x7811=((1.0)*x7808);
IkReal x7812=(cj6*x7808);
IkReal x7813=(sj6*x7811);
IkReal x7814=(cj6*x7810);
evalcond[0]=((((-1.0)*r20*x7814))+((r21*x7809))+(((-1.0)*r22*x7811)));
evalcond[1]=(((r01*x7809))+(((-1.0)*r02*x7811))+(((-1.0)*r00*x7814)));
evalcond[2]=(((r10*x7812))+(((-1.0)*r12*x7810))+(((-1.0)*r11*x7813)));
evalcond[3]=((1.0)+((r11*x7809))+(((-1.0)*r12*x7811))+(((-1.0)*r10*x7814)));
evalcond[4]=(((r20*x7812))+((cj1*sj0))+(((-1.0)*r21*x7813))+(((-1.0)*r22*x7810))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r02*x7810))+((sj0*sj1))+(((-1.0)*r01*x7813))+((r00*x7812))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7815=((1.0)*cj6);
CheckValue<IkReal> x7816=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x7815)))),-1);
if(!x7816.valid){
continue;
}
CheckValue<IkReal> x7817 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x7815))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7817.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7816.value)))+(x7817.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7818=IKsin(j5);
IkReal x7819=IKcos(j5);
IkReal x7820=(sj6*x7818);
IkReal x7821=((1.0)*x7818);
IkReal x7822=((1.0)*x7819);
IkReal x7823=(cj6*x7819);
IkReal x7824=(sj6*x7822);
IkReal x7825=(cj6*x7821);
evalcond[0]=((((-1.0)*r20*x7825))+((r21*x7820))+(((-1.0)*r22*x7822)));
evalcond[1]=((((-1.0)*r00*x7825))+(((-1.0)*r02*x7822))+((r01*x7820)));
evalcond[2]=(((r10*x7823))+(((-1.0)*r12*x7821))+(((-1.0)*r11*x7824)));
evalcond[3]=((1.0)+((r11*x7820))+(((-1.0)*r10*x7825))+(((-1.0)*r12*x7822)));
evalcond[4]=((((-1.0)*r21*x7824))+((cj1*sj0))+((r20*x7823))+(((-1.0)*r22*x7821))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r02*x7821))+(((-1.0)*r01*x7824))+((sj0*sj1))+((r00*x7823))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x7826=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x7826.valid){
continue;
}
CheckValue<IkReal> x7827 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7827.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7826.value)))+(x7827.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7828=IKsin(j5);
IkReal x7829=IKcos(j5);
IkReal x7830=(sj6*x7828);
IkReal x7831=((1.0)*x7828);
IkReal x7832=((1.0)*x7829);
IkReal x7833=(cj6*x7829);
IkReal x7834=(sj6*x7832);
IkReal x7835=(cj6*x7831);
evalcond[0]=(((r21*x7830))+(((-1.0)*r22*x7832))+(((-1.0)*r20*x7835)));
evalcond[1]=((((-1.0)*r02*x7832))+(((-1.0)*r00*x7835))+((r01*x7830)));
evalcond[2]=(((r10*x7833))+(((-1.0)*r11*x7834))+(((-1.0)*r12*x7831)));
evalcond[3]=((1.0)+(((-1.0)*r12*x7832))+(((-1.0)*r10*x7835))+((r11*x7830)));
evalcond[4]=((((-1.0)*r22*x7831))+((r20*x7833))+((cj1*sj0))+(((-1.0)*r21*x7834))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r01*x7834))+((sj0*sj1))+(((-1.0)*r02*x7831))+((r00*x7833))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x7836=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x7836;
j5eval[1]=IKsign(x7836);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x7837=((1.0)*cj6);
IkReal x7838=((((-1.0)*r21*x7837))+(((-1.0)*r20*sj6)));
j5eval[0]=x7838;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x7837))))));
j5eval[2]=IKsign(x7838);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x7839=cj6*cj6;
IkReal x7840=r11*r11;
IkReal x7841=(cj6*r10);
IkReal x7842=(r11*sj6);
IkReal x7843=((((2.0)*x7841*x7842))+((x7839*x7840))+(((-1.0)*x7840))+(((-1.0)*(r12*r12)))+(((-1.0)*x7839*(r10*r10))));
j5eval[0]=x7843;
j5eval[1]=((IKabs(r12))+(IKabs(((((-1.0)*x7842))+x7841))));
j5eval[2]=IKsign(x7843);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7844=cj6*cj6;
IkReal x7845=r11*r11;
IkReal x7846=(cj6*r10);
IkReal x7847=(r11*sj6);
CheckValue<IkReal> x7848=IKPowWithIntegerCheck(IKsign((((x7844*x7845))+(((-1.0)*x7845))+(((2.0)*x7846*x7847))+(((-1.0)*x7844*(r10*r10)))+(((-1.0)*(r12*r12))))),-1);
if(!x7848.valid){
continue;
}
CheckValue<IkReal> x7849 = IKatan2WithCheck(IkReal(((((-1.0)*x7847))+x7846)),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x7849.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7848.value)))+(x7849.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7850=IKsin(j5);
IkReal x7851=IKcos(j5);
IkReal x7852=(sj6*x7850);
IkReal x7853=((1.0)*x7850);
IkReal x7854=((1.0)*x7851);
IkReal x7855=(cj6*x7851);
IkReal x7856=(sj6*x7854);
IkReal x7857=(cj6*x7853);
evalcond[0]=(((r21*x7852))+(((-1.0)*r22*x7854))+(((-1.0)*r20*x7857)));
evalcond[1]=(((r01*x7852))+(((-1.0)*r02*x7854))+(((-1.0)*r00*x7857)));
evalcond[2]=((((-1.0)*r11*x7856))+((r10*x7855))+(((-1.0)*r12*x7853)));
evalcond[3]=((-1.0)+((r11*x7852))+(((-1.0)*r10*x7857))+(((-1.0)*r12*x7854)));
evalcond[4]=((((-1.0)*r21*x7856))+((cj1*sj0))+((r20*x7855))+(((-1.0)*r22*x7853))+((cj0*sj1)));
evalcond[5]=(((cj0*cj1))+((r00*x7855))+(((-1.0)*sj0*sj1))+(((-1.0)*r02*x7853))+(((-1.0)*r01*x7856)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7858=((1.0)*cj6);
CheckValue<IkReal> x7859=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x7858))+(((-1.0)*r20*sj6)))),-1);
if(!x7859.valid){
continue;
}
CheckValue<IkReal> x7860 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*r00*x7858)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7860.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7859.value)))+(x7860.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7861=IKsin(j5);
IkReal x7862=IKcos(j5);
IkReal x7863=(sj6*x7861);
IkReal x7864=((1.0)*x7861);
IkReal x7865=((1.0)*x7862);
IkReal x7866=(cj6*x7862);
IkReal x7867=(sj6*x7865);
IkReal x7868=(cj6*x7864);
evalcond[0]=(((r21*x7863))+(((-1.0)*r20*x7868))+(((-1.0)*r22*x7865)));
evalcond[1]=((((-1.0)*r00*x7868))+((r01*x7863))+(((-1.0)*r02*x7865)));
evalcond[2]=((((-1.0)*r11*x7867))+(((-1.0)*r12*x7864))+((r10*x7866)));
evalcond[3]=((-1.0)+((r11*x7863))+(((-1.0)*r12*x7865))+(((-1.0)*r10*x7868)));
evalcond[4]=(((cj1*sj0))+((r20*x7866))+(((-1.0)*r21*x7867))+((cj0*sj1))+(((-1.0)*r22*x7864)));
evalcond[5]=((((-1.0)*r01*x7867))+((cj0*cj1))+((r00*x7866))+(((-1.0)*r02*x7864))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x7869=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x7869.valid){
continue;
}
CheckValue<IkReal> x7870 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7870.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7869.value)))+(x7870.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7871=IKsin(j5);
IkReal x7872=IKcos(j5);
IkReal x7873=(sj6*x7871);
IkReal x7874=((1.0)*x7871);
IkReal x7875=((1.0)*x7872);
IkReal x7876=(cj6*x7872);
IkReal x7877=(sj6*x7875);
IkReal x7878=(cj6*x7874);
evalcond[0]=((((-1.0)*r22*x7875))+(((-1.0)*r20*x7878))+((r21*x7873)));
evalcond[1]=((((-1.0)*r00*x7878))+((r01*x7873))+(((-1.0)*r02*x7875)));
evalcond[2]=(((r10*x7876))+(((-1.0)*r12*x7874))+(((-1.0)*r11*x7877)));
evalcond[3]=((-1.0)+((r11*x7873))+(((-1.0)*r12*x7875))+(((-1.0)*r10*x7878)));
evalcond[4]=((((-1.0)*r22*x7874))+((cj1*sj0))+((r20*x7876))+(((-1.0)*r21*x7877))+((cj0*sj1)));
evalcond[5]=(((cj0*cj1))+(((-1.0)*r01*x7877))+((r00*x7876))+(((-1.0)*r02*x7874))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7879=((-1.0)*r00);
IkReal x7881 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x7881)==0){
continue;
}
IkReal x7880=pow(x7881,-0.5);
CheckValue<IkReal> x7882 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x7879),IKFAST_ATAN2_MAGTHRESH);
if(!x7882.valid){
continue;
}
IkReal gconst144=((-1.0)*(x7882.value));
IkReal gconst145=(r01*x7880);
IkReal gconst146=(x7879*x7880);
CheckValue<IkReal> x7883 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7883.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x7883.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x7884=((-1.0)*r00);
IkReal x7885=x7880;
CheckValue<IkReal> x7887 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x7884),IKFAST_ATAN2_MAGTHRESH);
if(!x7887.valid){
continue;
}
IkReal x7886=((-1.0)*(x7887.value));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst145;
cj6=gconst146;
j6=x7886;
IkReal gconst144=x7886;
IkReal gconst145=(r01*x7885);
IkReal gconst146=(x7884*x7885);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7888=((1.0)*sj2);
IkReal x7889=((1.0)*gconst145);
CheckValue<IkReal> x7890=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x7889))+(((-1.0)*gconst146*r21)))),-1);
if(!x7890.valid){
continue;
}
CheckValue<IkReal> x7891 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7888))+(((-1.0)*cj2*r02)))),IkReal((((gconst146*r10*sj2))+(((-1.0)*gconst145*r11*x7888))+(((-1.0)*cj2*r01*x7889))+((cj2*gconst146*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7891.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7890.value)))+(x7891.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7892=IKsin(j5);
IkReal x7893=IKcos(j5);
IkReal x7894=(gconst146*r20);
IkReal x7895=(sj0*sj1);
IkReal x7896=((1.0)*sj2);
IkReal x7897=(cj0*cj1);
IkReal x7898=((1.0)*x7892);
IkReal x7899=(gconst145*x7892);
IkReal x7900=(gconst146*x7893);
IkReal x7901=((1.0)*x7893);
IkReal x7902=(gconst145*x7901);
evalcond[0]=((((-1.0)*x7894*x7898))+((r21*x7899))+(((-1.0)*r22*x7901)));
evalcond[1]=((((-1.0)*r12*x7901))+cj2+((r11*x7899))+(((-1.0)*gconst146*r10*x7898)));
evalcond[2]=((((-1.0)*gconst146*r00*x7898))+(((-1.0)*x7896))+((r01*x7899))+(((-1.0)*r02*x7901)));
evalcond[3]=(((x7893*x7894))+((cj1*sj0))+(((-1.0)*r21*x7902))+(((-1.0)*r22*x7898))+((cj0*sj1)));
evalcond[4]=((((-1.0)*r01*x7902))+((r00*x7900))+(((-1.0)*cj2*x7897))+((cj2*x7895))+(((-1.0)*r02*x7898)));
evalcond[5]=((((-1.0)*r11*x7902))+((r10*x7900))+(((-1.0)*r12*x7898))+((sj2*x7895))+(((-1.0)*x7896*x7897)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7903=((1.0)*gconst146);
CheckValue<IkReal> x7904 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst145*r21*sj2))+(((-1.0)*r20*sj2*x7903)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7904.valid){
continue;
}
CheckValue<IkReal> x7905=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x7903))+(((-1.0)*gconst145*r10)))),-1);
if(!x7905.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7904.value)+(((1.5707963267949)*(x7905.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7906=IKsin(j5);
IkReal x7907=IKcos(j5);
IkReal x7908=(gconst146*r20);
IkReal x7909=(sj0*sj1);
IkReal x7910=((1.0)*sj2);
IkReal x7911=(cj0*cj1);
IkReal x7912=((1.0)*x7906);
IkReal x7913=(gconst145*x7906);
IkReal x7914=(gconst146*x7907);
IkReal x7915=((1.0)*x7907);
IkReal x7916=(gconst145*x7915);
evalcond[0]=(((r21*x7913))+(((-1.0)*r22*x7915))+(((-1.0)*x7908*x7912)));
evalcond[1]=(cj2+((r11*x7913))+(((-1.0)*r12*x7915))+(((-1.0)*gconst146*r10*x7912)));
evalcond[2]=((((-1.0)*x7910))+(((-1.0)*r02*x7915))+(((-1.0)*gconst146*r00*x7912))+((r01*x7913)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*r22*x7912))+(((-1.0)*r21*x7916))+((cj0*sj1))+((x7907*x7908)));
evalcond[4]=((((-1.0)*r02*x7912))+(((-1.0)*cj2*x7911))+((r00*x7914))+(((-1.0)*r01*x7916))+((cj2*x7909)));
evalcond[5]=(((r10*x7914))+(((-1.0)*x7910*x7911))+(((-1.0)*r12*x7912))+(((-1.0)*r11*x7916))+((sj2*x7909)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x7917=((-1.0)*r01);
IkReal x7919 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x7919)==0){
continue;
}
IkReal x7918=pow(x7919,-0.5);
CheckValue<IkReal> x7920 = IKatan2WithCheck(IkReal(x7917),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7920.valid){
continue;
}
IkReal gconst147=((3.14159265358979)+(((-1.0)*(x7920.value))));
IkReal gconst148=(x7917*x7918);
IkReal gconst149=((1.0)*r00*x7918);
CheckValue<IkReal> x7921 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7921.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x7921.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x7922=((-1.0)*r01);
CheckValue<IkReal> x7925 = IKatan2WithCheck(IkReal(x7922),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7925.valid){
continue;
}
IkReal x7923=((1.0)*(x7925.value));
IkReal x7924=x7918;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst148;
cj6=gconst149;
j6=((3.14159265)+(((-1.0)*x7923)));
IkReal gconst147=((3.14159265358979)+(((-1.0)*x7923)));
IkReal gconst148=(x7922*x7924);
IkReal gconst149=((1.0)*r00*x7924);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=cj2;
j5eval[3]=r22;
j5eval[4]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x7926=((-1.0)*r01);
CheckValue<IkReal> x7929 = IKatan2WithCheck(IkReal(x7926),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7929.valid){
continue;
}
IkReal x7927=((1.0)*(x7929.value));
IkReal x7928=x7918;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst148;
cj6=gconst149;
j6=((3.14159265)+(((-1.0)*x7927)));
IkReal gconst147=((3.14159265358979)+(((-1.0)*x7927)));
IkReal gconst148=(x7926*x7928);
IkReal gconst149=((1.0)*r00*x7928);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x7930=((-1.0)*r01);
CheckValue<IkReal> x7933 = IKatan2WithCheck(IkReal(x7930),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x7933.valid){
continue;
}
IkReal x7931=((1.0)*(x7933.value));
IkReal x7932=x7918;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj6=gconst148;
cj6=gconst149;
j6=((3.14159265)+(((-1.0)*x7931)));
IkReal gconst147=((3.14159265358979)+(((-1.0)*x7931)));
IkReal gconst148=(x7930*x7932);
IkReal gconst149=((1.0)*r00*x7932);
IkReal x7934=r02*r02;
IkReal x7935=(r12*sj2);
IkReal x7936=((1.0)*cj2);
IkReal x7937=x7918;
j5eval[0]=((IKabs(((((-1.0)*r02*x7936))+(((-1.0)*x7935)))))+(IKabs((((cj2*x7934*x7937))+(((-1.0)*x7936*x7937))+((r02*x7935*x7937))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7938=((1.0)*sj2);
IkReal x7939=((1.0)*gconst148);
CheckValue<IkReal> x7940 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x7938))+(((-1.0)*cj2*r02)))),IkReal((((cj2*gconst149*r00))+((gconst149*r10*sj2))+(((-1.0)*gconst148*r11*x7938))+(((-1.0)*cj2*r01*x7939)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7940.valid){
continue;
}
CheckValue<IkReal> x7941=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst149*r21))+(((-1.0)*r20*x7939)))),-1);
if(!x7941.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7940.value)+(((1.5707963267949)*(x7941.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7942=IKsin(j5);
IkReal x7943=IKcos(j5);
IkReal x7944=(sj0*sj1);
IkReal x7945=((1.0)*cj0*cj1);
IkReal x7946=(gconst149*x7943);
IkReal x7947=((1.0)*x7942);
IkReal x7948=(gconst148*x7942);
IkReal x7949=((1.0)*x7943);
IkReal x7950=(gconst148*x7949);
IkReal x7951=(gconst149*x7947);
evalcond[0]=(((r21*x7948))+(((-1.0)*r22*x7949))+(((-1.0)*r20*x7951)));
evalcond[1]=(cj2+((r11*x7948))+(((-1.0)*r12*x7949))+(((-1.0)*r10*x7951)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x7949))+(((-1.0)*r00*x7951))+((r01*x7948)));
evalcond[3]=((((-1.0)*r22*x7947))+((r20*x7946))+((cj1*sj0))+(((-1.0)*r21*x7950))+((cj0*sj1)));
evalcond[4]=((((-1.0)*r02*x7947))+(((-1.0)*r01*x7950))+((cj2*x7944))+((r00*x7946))+(((-1.0)*cj2*x7945)));
evalcond[5]=(((sj2*x7944))+(((-1.0)*r12*x7947))+((r10*x7946))+(((-1.0)*sj2*x7945))+(((-1.0)*r11*x7950)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7952=((1.0)*gconst149);
CheckValue<IkReal> x7953=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst148*r10))+(((-1.0)*r11*x7952)))),-1);
if(!x7953.valid){
continue;
}
CheckValue<IkReal> x7954 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x7952))+((gconst148*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7954.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7953.value)))+(x7954.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7955=IKsin(j5);
IkReal x7956=IKcos(j5);
IkReal x7957=(sj0*sj1);
IkReal x7958=((1.0)*cj0*cj1);
IkReal x7959=(gconst149*x7956);
IkReal x7960=((1.0)*x7955);
IkReal x7961=(gconst148*x7955);
IkReal x7962=((1.0)*x7956);
IkReal x7963=(gconst148*x7962);
IkReal x7964=(gconst149*x7960);
evalcond[0]=(((r21*x7961))+(((-1.0)*r22*x7962))+(((-1.0)*r20*x7964)));
evalcond[1]=(((r11*x7961))+cj2+(((-1.0)*r12*x7962))+(((-1.0)*r10*x7964)));
evalcond[2]=((((-1.0)*sj2))+((r01*x7961))+(((-1.0)*r00*x7964))+(((-1.0)*r02*x7962)));
evalcond[3]=((((-1.0)*r22*x7960))+((cj1*sj0))+((r20*x7959))+((cj0*sj1))+(((-1.0)*r21*x7963)));
evalcond[4]=(((r00*x7959))+(((-1.0)*r01*x7963))+(((-1.0)*r02*x7960))+((cj2*x7957))+(((-1.0)*cj2*x7958)));
evalcond[5]=(((sj2*x7957))+(((-1.0)*r12*x7960))+(((-1.0)*r11*x7963))+((r10*x7959))+(((-1.0)*sj2*x7958)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7965=((1.0)*gconst149);
CheckValue<IkReal> x7966 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst148*r21))+(((-1.0)*cj2*r20*x7965)))),IKFAST_ATAN2_MAGTHRESH);
if(!x7966.valid){
continue;
}
CheckValue<IkReal> x7967=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst148*r00))+(((-1.0)*r01*x7965)))),-1);
if(!x7967.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x7966.value)+(((1.5707963267949)*(x7967.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7968=IKsin(j5);
IkReal x7969=IKcos(j5);
IkReal x7970=(sj0*sj1);
IkReal x7971=((1.0)*cj0*cj1);
IkReal x7972=(gconst149*x7969);
IkReal x7973=((1.0)*x7968);
IkReal x7974=(gconst148*x7968);
IkReal x7975=((1.0)*x7969);
IkReal x7976=(gconst148*x7975);
IkReal x7977=(gconst149*x7973);
evalcond[0]=((((-1.0)*r22*x7975))+(((-1.0)*r20*x7977))+((r21*x7974)));
evalcond[1]=(cj2+((r11*x7974))+(((-1.0)*r10*x7977))+(((-1.0)*r12*x7975)));
evalcond[2]=((((-1.0)*sj2))+((r01*x7974))+(((-1.0)*r02*x7975))+(((-1.0)*r00*x7977)));
evalcond[3]=((((-1.0)*r22*x7973))+((cj1*sj0))+((r20*x7972))+(((-1.0)*r21*x7976))+((cj0*sj1)));
evalcond[4]=(((r00*x7972))+(((-1.0)*r01*x7976))+(((-1.0)*r02*x7973))+((cj2*x7970))+(((-1.0)*cj2*x7971)));
evalcond[5]=(((sj2*x7970))+(((-1.0)*r11*x7976))+(((-1.0)*sj2*x7971))+(((-1.0)*r12*x7973))+((r10*x7972)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x7978=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x7978;
j5eval[1]=IKsign(x7978);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x7979=((1.0)*cj6);
IkReal x7980=((((-1.0)*r10*sj6))+(((-1.0)*r11*x7979)));
j5eval[0]=x7980;
j5eval[1]=IKsign(x7980);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x7979)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x7981=r01*r01;
IkReal x7982=cj6*cj6;
IkReal x7983=(cj6*r00);
IkReal x7984=(r01*sj6);
IkReal x7985=((((2.0)*x7983*x7984))+(((-1.0)*(r02*r02)))+(((-1.0)*x7982*(r00*r00)))+(((-1.0)*x7981))+((x7981*x7982)));
j5eval[0]=x7985;
j5eval[1]=((IKabs(r02))+(IKabs((x7983+(((-1.0)*x7984))))));
j5eval[2]=IKsign(x7985);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x7986=r01*r01;
IkReal x7987=cj6*cj6;
IkReal x7988=(cj6*r00);
IkReal x7989=(r01*sj6);
CheckValue<IkReal> x7990=IKPowWithIntegerCheck(IKsign((((x7986*x7987))+(((-1.0)*x7987*(r00*r00)))+(((-1.0)*(r02*r02)))+(((-1.0)*x7986))+(((2.0)*x7988*x7989)))),-1);
if(!x7990.valid){
continue;
}
CheckValue<IkReal> x7991 = IKatan2WithCheck(IkReal((x7988+(((-1.0)*x7989)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x7991.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x7990.value)))+(x7991.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x7992=IKsin(j5);
IkReal x7993=IKcos(j5);
IkReal x7994=(r01*sj6);
IkReal x7995=(r21*sj6);
IkReal x7996=(r11*sj6);
IkReal x7997=((1.0)*x7993);
IkReal x7998=((1.0)*x7992);
IkReal x7999=(cj6*x7993);
IkReal x8000=(cj6*x7998);
evalcond[0]=((((-1.0)*r20*x8000))+((x7992*x7995))+(((-1.0)*r22*x7997)));
evalcond[1]=((((-1.0)*r12*x7997))+(((-1.0)*r10*x8000))+((x7992*x7996)));
evalcond[2]=(((r00*x7999))+(((-1.0)*r02*x7998))+(((-1.0)*x7994*x7997)));
evalcond[3]=((-1.0)+(((-1.0)*r00*x8000))+(((-1.0)*r02*x7997))+((x7992*x7994)));
evalcond[4]=(((r20*x7999))+((cj1*sj0))+(((-1.0)*x7995*x7997))+((cj0*sj1))+(((-1.0)*r22*x7998)));
evalcond[5]=(((r10*x7999))+(((-1.0)*r12*x7998))+(((-1.0)*x7996*x7997))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8001=((1.0)*cj6);
CheckValue<IkReal> x8002 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x8001)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8002.valid){
continue;
}
CheckValue<IkReal> x8003=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x8001)))),-1);
if(!x8003.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8002.value)+(((1.5707963267949)*(x8003.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8004=IKsin(j5);
IkReal x8005=IKcos(j5);
IkReal x8006=(r01*sj6);
IkReal x8007=(r21*sj6);
IkReal x8008=(r11*sj6);
IkReal x8009=((1.0)*x8005);
IkReal x8010=((1.0)*x8004);
IkReal x8011=(cj6*x8005);
IkReal x8012=(cj6*x8010);
evalcond[0]=(((x8004*x8007))+(((-1.0)*r20*x8012))+(((-1.0)*r22*x8009)));
evalcond[1]=((((-1.0)*r12*x8009))+((x8004*x8008))+(((-1.0)*r10*x8012)));
evalcond[2]=((((-1.0)*r02*x8010))+((r00*x8011))+(((-1.0)*x8006*x8009)));
evalcond[3]=((-1.0)+(((-1.0)*r00*x8012))+((x8004*x8006))+(((-1.0)*r02*x8009)));
evalcond[4]=((((-1.0)*r22*x8010))+((cj1*sj0))+(((-1.0)*x8007*x8009))+((r20*x8011))+((cj0*sj1)));
evalcond[5]=((((-1.0)*x8008*x8009))+((sj0*sj1))+((r10*x8011))+(((-1.0)*cj0*cj1))+(((-1.0)*r12*x8010)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x8013=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x8013.valid){
continue;
}
CheckValue<IkReal> x8014 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8014.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8013.value)))+(x8014.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8015=IKsin(j5);
IkReal x8016=IKcos(j5);
IkReal x8017=(r01*sj6);
IkReal x8018=(r21*sj6);
IkReal x8019=(r11*sj6);
IkReal x8020=((1.0)*x8016);
IkReal x8021=((1.0)*x8015);
IkReal x8022=(cj6*x8016);
IkReal x8023=(cj6*x8021);
evalcond[0]=((((-1.0)*r20*x8023))+(((-1.0)*r22*x8020))+((x8015*x8018)));
evalcond[1]=((((-1.0)*r12*x8020))+((x8015*x8019))+(((-1.0)*r10*x8023)));
evalcond[2]=((((-1.0)*r02*x8021))+(((-1.0)*x8017*x8020))+((r00*x8022)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x8020))+(((-1.0)*r00*x8023))+((x8015*x8017)));
evalcond[4]=(((cj1*sj0))+((r20*x8022))+(((-1.0)*x8018*x8020))+(((-1.0)*r22*x8021))+((cj0*sj1)));
evalcond[5]=(((r10*x8022))+(((-1.0)*r12*x8021))+(((-1.0)*x8019*x8020))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x8024=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x8024;
j5eval[1]=IKsign(x8024);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x8025=((1.0)*cj6);
IkReal x8026=((((-1.0)*r21*x8025))+(((-1.0)*r20*sj6)));
j5eval[0]=x8026;
j5eval[1]=((IKabs((((r11*sj6))+(((-1.0)*r10*x8025)))))+(IKabs(r12)));
j5eval[2]=IKsign(x8026);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x8027=cj6*cj6;
IkReal x8028=r01*r01;
IkReal x8029=(cj6*r00);
IkReal x8030=(r01*sj6);
IkReal x8031=((((-2.0)*x8029*x8030))+(((-1.0)*x8027*x8028))+((x8027*(r00*r00)))+x8028+(r02*r02));
j5eval[0]=x8031;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*x8030))+x8029))));
j5eval[2]=IKsign(x8031);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8032=cj6*cj6;
IkReal x8033=r01*r01;
IkReal x8034=(cj6*r00);
IkReal x8035=(r01*sj6);
CheckValue<IkReal> x8036 = IKatan2WithCheck(IkReal(((((-1.0)*x8035))+x8034)),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x8036.valid){
continue;
}
CheckValue<IkReal> x8037=IKPowWithIntegerCheck(IKsign(((((-1.0)*x8032*x8033))+((x8032*(r00*r00)))+(((-2.0)*x8034*x8035))+x8033+(r02*r02))),-1);
if(!x8037.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8036.value)+(((1.5707963267949)*(x8037.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8038=IKsin(j5);
IkReal x8039=IKcos(j5);
IkReal x8040=(r01*sj6);
IkReal x8041=(r21*sj6);
IkReal x8042=(r11*sj6);
IkReal x8043=((1.0)*x8039);
IkReal x8044=((1.0)*x8038);
IkReal x8045=(cj6*x8039);
IkReal x8046=(cj6*x8044);
evalcond[0]=((((-1.0)*r20*x8046))+((x8038*x8041))+(((-1.0)*r22*x8043)));
evalcond[1]=((((-1.0)*r10*x8046))+((x8038*x8042))+(((-1.0)*r12*x8043)));
evalcond[2]=((((-1.0)*x8040*x8043))+(((-1.0)*r02*x8044))+((r00*x8045)));
evalcond[3]=((1.0)+(((-1.0)*r02*x8043))+((x8038*x8040))+(((-1.0)*r00*x8046)));
evalcond[4]=(((cj1*sj0))+((r20*x8045))+(((-1.0)*x8041*x8043))+(((-1.0)*r22*x8044))+((cj0*sj1)));
evalcond[5]=(((r10*x8045))+((cj0*cj1))+(((-1.0)*x8042*x8043))+(((-1.0)*sj0*sj1))+(((-1.0)*r12*x8044)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8047=((1.0)*cj6);
CheckValue<IkReal> x8048=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x8047))+(((-1.0)*r20*sj6)))),-1);
if(!x8048.valid){
continue;
}
CheckValue<IkReal> x8049 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*r10*x8047))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8049.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8048.value)))+(x8049.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8050=IKsin(j5);
IkReal x8051=IKcos(j5);
IkReal x8052=(r01*sj6);
IkReal x8053=(r21*sj6);
IkReal x8054=(r11*sj6);
IkReal x8055=((1.0)*x8051);
IkReal x8056=((1.0)*x8050);
IkReal x8057=(cj6*x8051);
IkReal x8058=(cj6*x8056);
evalcond[0]=(((x8050*x8053))+(((-1.0)*r20*x8058))+(((-1.0)*r22*x8055)));
evalcond[1]=((((-1.0)*r12*x8055))+((x8050*x8054))+(((-1.0)*r10*x8058)));
evalcond[2]=(((r00*x8057))+(((-1.0)*x8052*x8055))+(((-1.0)*r02*x8056)));
evalcond[3]=((1.0)+((x8050*x8052))+(((-1.0)*r02*x8055))+(((-1.0)*r00*x8058)));
evalcond[4]=(((r20*x8057))+((cj1*sj0))+(((-1.0)*r22*x8056))+(((-1.0)*x8053*x8055))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r12*x8056))+((r10*x8057))+((cj0*cj1))+(((-1.0)*sj0*sj1))+(((-1.0)*x8054*x8055)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x8059 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8059.valid){
continue;
}
CheckValue<IkReal> x8060=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x8060.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8059.value)+(((1.5707963267949)*(x8060.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8061=IKsin(j5);
IkReal x8062=IKcos(j5);
IkReal x8063=(r01*sj6);
IkReal x8064=(r21*sj6);
IkReal x8065=(r11*sj6);
IkReal x8066=((1.0)*x8062);
IkReal x8067=((1.0)*x8061);
IkReal x8068=(cj6*x8062);
IkReal x8069=(cj6*x8067);
evalcond[0]=(((x8061*x8064))+(((-1.0)*r20*x8069))+(((-1.0)*r22*x8066)));
evalcond[1]=(((x8061*x8065))+(((-1.0)*r10*x8069))+(((-1.0)*r12*x8066)));
evalcond[2]=(((r00*x8068))+(((-1.0)*x8063*x8066))+(((-1.0)*r02*x8067)));
evalcond[3]=((1.0)+((x8061*x8063))+(((-1.0)*r00*x8069))+(((-1.0)*r02*x8066)));
evalcond[4]=((((-1.0)*x8064*x8066))+((cj1*sj0))+((r20*x8068))+(((-1.0)*r22*x8067))+((cj0*sj1)));
evalcond[5]=(((r10*x8068))+((cj0*cj1))+(((-1.0)*r12*x8067))+(((-1.0)*sj0*sj1))+(((-1.0)*x8065*x8066)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8070=((-1.0)*px);
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x8070);
rxp1_1=(px*r21);
rxp1_2=(r11*x8070);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=(((cj6*r20))+(((-1.0)*r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x8073=IKPowWithIntegerCheck((((cj6*r20))+(((-1.0)*r21*sj6))),-1);
if(!x8073.valid){
continue;
}
IkReal x8071=x8073.value;
IkReal x8072=((1.0)*x8071);
cj5array[0]=((((-1.0)*cj1*sj0*x8072))+(((-1.0)*cj0*sj1*x8072)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x8074=IKsin(j5);
IkReal x8075=(sj6*x8074);
IkReal x8076=((1.0)*cj6*x8074);
evalcond[0]=((-1.0)*r02*x8074);
evalcond[1]=(((r21*x8075))+(((-1.0)*r20*x8076)));
evalcond[2]=(((r11*x8075))+(((-1.0)*r10*x8076)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8077=((1.0)*sj6);
CheckValue<IkReal> x8078 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj6*r10*sj2))+(((-1.0)*cj2*r01*x8077))+((cj2*cj6*r00))+(((-1.0)*r11*sj2*x8077)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8078.valid){
continue;
}
CheckValue<IkReal> x8079=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r21))+(((-1.0)*r20*x8077)))),-1);
if(!x8079.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8078.value)+(((1.5707963267949)*(x8079.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8080=IKsin(j5);
IkReal x8081=IKcos(j5);
IkReal x8082=(r01*sj6);
IkReal x8083=(r21*sj6);
IkReal x8084=(sj0*sj1);
IkReal x8085=((1.0)*sj2);
IkReal x8086=(cj0*cj1);
IkReal x8087=(r11*sj6);
IkReal x8088=((1.0)*x8081);
IkReal x8089=((1.0)*x8080);
IkReal x8090=(cj6*x8081);
IkReal x8091=(cj6*x8089);
evalcond[0]=((((-1.0)*r22*x8088))+((x8080*x8083))+(((-1.0)*r20*x8091)));
evalcond[1]=(cj2+((x8080*x8087))+(((-1.0)*r12*x8088))+(((-1.0)*r10*x8091)));
evalcond[2]=((((-1.0)*r02*x8088))+(((-1.0)*r00*x8091))+(((-1.0)*x8085))+((x8080*x8082)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*x8083*x8088))+(((-1.0)*r22*x8089))+((cj0*sj1))+((r20*x8090)));
evalcond[4]=((((-1.0)*r02*x8089))+(((-1.0)*x8082*x8088))+((cj2*x8084))+(((-1.0)*cj2*x8086))+((r00*x8090)));
evalcond[5]=(((r10*x8090))+(((-1.0)*x8087*x8088))+((sj2*x8084))+(((-1.0)*r12*x8089))+(((-1.0)*x8085*x8086)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8092=((1.0)*cj6);
CheckValue<IkReal> x8093=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x8092)))),-1);
if(!x8093.valid){
continue;
}
CheckValue<IkReal> x8094 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((r21*sj2*sj6))+(((-1.0)*r20*sj2*x8092)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8094.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8093.value)))+(x8094.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8095=IKsin(j5);
IkReal x8096=IKcos(j5);
IkReal x8097=(r01*sj6);
IkReal x8098=(r21*sj6);
IkReal x8099=(sj0*sj1);
IkReal x8100=((1.0)*sj2);
IkReal x8101=(cj0*cj1);
IkReal x8102=(r11*sj6);
IkReal x8103=((1.0)*x8096);
IkReal x8104=((1.0)*x8095);
IkReal x8105=(cj6*x8096);
IkReal x8106=(cj6*x8104);
evalcond[0]=(((x8095*x8098))+(((-1.0)*r20*x8106))+(((-1.0)*r22*x8103)));
evalcond[1]=(cj2+((x8095*x8102))+(((-1.0)*r10*x8106))+(((-1.0)*r12*x8103)));
evalcond[2]=(((x8095*x8097))+(((-1.0)*x8100))+(((-1.0)*r02*x8103))+(((-1.0)*r00*x8106)));
evalcond[3]=((((-1.0)*x8098*x8103))+((cj1*sj0))+((r20*x8105))+(((-1.0)*r22*x8104))+((cj0*sj1)));
evalcond[4]=(((cj2*x8099))+(((-1.0)*cj2*x8101))+((r00*x8105))+(((-1.0)*r02*x8104))+(((-1.0)*x8097*x8103)));
evalcond[5]=((((-1.0)*x8102*x8103))+((r10*x8105))+((sj2*x8099))+(((-1.0)*x8100*x8101))+(((-1.0)*r12*x8104)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8107=((1.0)*cj6);
CheckValue<IkReal> x8108 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x8107))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8108.valid){
continue;
}
CheckValue<IkReal> x8109=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x8107))+(((-1.0)*r00*sj6)))),-1);
if(!x8109.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8108.value)+(((1.5707963267949)*(x8109.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8110=IKsin(j5);
IkReal x8111=IKcos(j5);
IkReal x8112=(r01*sj6);
IkReal x8113=(r21*sj6);
IkReal x8114=(sj0*sj1);
IkReal x8115=((1.0)*sj2);
IkReal x8116=(cj0*cj1);
IkReal x8117=(r11*sj6);
IkReal x8118=((1.0)*x8111);
IkReal x8119=((1.0)*x8110);
IkReal x8120=(cj6*x8111);
IkReal x8121=(cj6*x8119);
evalcond[0]=((((-1.0)*r20*x8121))+((x8110*x8113))+(((-1.0)*r22*x8118)));
evalcond[1]=(cj2+((x8110*x8117))+(((-1.0)*r12*x8118))+(((-1.0)*r10*x8121)));
evalcond[2]=((((-1.0)*x8115))+((x8110*x8112))+(((-1.0)*r02*x8118))+(((-1.0)*r00*x8121)));
evalcond[3]=((((-1.0)*x8113*x8118))+((cj1*sj0))+((r20*x8120))+(((-1.0)*r22*x8119))+((cj0*sj1)));
evalcond[4]=((((-1.0)*x8112*x8118))+((r00*x8120))+(((-1.0)*r02*x8119))+(((-1.0)*cj2*x8116))+((cj2*x8114)));
evalcond[5]=((((-1.0)*x8115*x8116))+(((-1.0)*r12*x8119))+((r10*x8120))+(((-1.0)*x8117*x8118))+((sj2*x8114)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2, j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x8122=cj1*cj1;
IkReal x8123=cj0*cj0;
IkReal x8124=(r00*sj6);
IkReal x8125=(cj6*r01);
IkReal x8126=(cj0*cj1);
IkReal x8127=((156900000.0)*py);
IkReal x8128=(cj6*r11);
IkReal x8129=(r10*sj6);
IkReal x8130=((16090500.0)*cj1);
IkReal x8131=((170000000.0)*cj1);
IkReal x8132=((156900000.0)*px);
IkReal x8133=(sj0*sj1);
IkReal x8134=((14850585.0)*x8133);
CheckValue<IkReal> x8135=IKPowWithIntegerCheck(IKsign(((66309514.0)+(((10705975.0)*x8122))+(((-123088050.0)*x8126*x8133))+(((133365000.0)*cj0*x8122))+(((123088050.0)*x8122*x8123))+(((-133365000.0)*cj1*x8133))+(((-61544025.0)*x8123)))),-1);
if(!x8135.valid){
continue;
}
CheckValue<IkReal> x8136 = IKatan2WithCheck(IkReal(((((-4132419.0)*x8124))+(((-4132419.0)*x8125))+(((-43660000.0)*px))+(((14850585.0)*x8126*x8128))+(((14850585.0)*x8126*x8129))+((py*x8131))+((x8128*x8130))+((x8129*x8130))+(((-1.0)*x8127*x8133))+(((-1.0)*x8128*x8134))+(((-1.0)*x8129*x8134))+((x8126*x8127)))),IkReal(((((14850585.0)*x8124*x8126))+(((-1.0)*x8132*x8133))+(((-1.0)*x8124*x8134))+(((43660000.0)*py))+(((-1.0)*x8125*x8134))+(((4132419.0)*x8128))+(((4132419.0)*x8129))+((x8126*x8132))+((px*x8131))+((x8124*x8130))+((x8125*x8130))+(((14850585.0)*x8125*x8126)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8136.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8135.value)))+(x8136.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x8137=IKcos(j2);
IkReal x8138=IKsin(j2);
IkReal x8139=((0.09465)*sj6);
IkReal x8140=((0.425)*cj1);
IkReal x8141=((0.09465)*cj6);
IkReal x8142=(cj0*cj1);
IkReal x8143=(sj0*sj1);
IkReal x8144=((0.39225)*x8138);
IkReal x8145=((0.39225)*x8137);
evalcond[0]=((((-1.0)*r01*x8141))+(((-1.0)*x8143*x8145))+(((-1.0)*px))+(((-0.10915)*x8138))+((x8142*x8145))+(((-1.0)*r00*x8139))+((x8137*x8140)));
evalcond[1]=((((0.10915)*x8137))+(((-1.0)*x8143*x8144))+(((-1.0)*py))+(((-1.0)*r10*x8139))+((x8138*x8140))+((x8142*x8144))+(((-1.0)*r11*x8141)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5eval[3];
IkReal x8146=((1.0)*cj6);
IkReal x8147=((((-1.0)*r01*x8146))+(((-1.0)*r00*sj6)));
j5eval[0]=x8147;
j5eval[1]=IKsign(x8147);
j5eval[2]=((IKabs(((((-1.0)*cj2*r20*x8146))+((cj2*r21*sj6)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x8148=((1.0)*cj6);
IkReal x8149=((((-1.0)*r10*sj6))+(((-1.0)*r11*x8148)));
j5eval[0]=x8149;
j5eval[1]=((IKabs(((((-1.0)*r20*sj2*x8148))+((r21*sj2*sj6)))))+(IKabs((r22*sj2))));
j5eval[2]=IKsign(x8149);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x8150=((1.0)*sj2);
IkReal x8151=((1.0)*sj6);
IkReal x8152=((((-1.0)*cj6*r21))+(((-1.0)*r20*x8151)));
j5eval[0]=x8152;
j5eval[1]=IKsign(x8152);
j5eval[2]=((IKabs((((cj6*r10*sj2))+((cj2*cj6*r00))+(((-1.0)*r11*sj6*x8150))+(((-1.0)*cj2*r01*x8151)))))+(IKabs(((((-1.0)*cj2*r02))+(((-1.0)*r12*x8150))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
IkReal x8153=((-1.0)*r20);
IkReal x8155 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x8155)==0){
continue;
}
IkReal x8154=pow(x8155,-0.5);
CheckValue<IkReal> x8156 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8153),IKFAST_ATAN2_MAGTHRESH);
if(!x8156.valid){
continue;
}
IkReal gconst0=((-1.0)*(x8156.value));
IkReal gconst1=(r21*x8154);
IkReal gconst2=(x8153*x8154);
CheckValue<IkReal> x8157 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x8157.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x8157.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8158=((-1.0)*r20);
IkReal x8159=x8154;
CheckValue<IkReal> x8161 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8158),IKFAST_ATAN2_MAGTHRESH);
if(!x8161.valid){
continue;
}
IkReal x8160=((-1.0)*(x8161.value));
sj6=gconst1;
cj6=gconst2;
j6=x8160;
IkReal gconst0=x8160;
IkReal gconst1=(r21*x8159);
IkReal gconst2=(x8158*x8159);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8162=((-1.0)*r20);
IkReal x8163=x8154;
CheckValue<IkReal> x8165 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8162),IKFAST_ATAN2_MAGTHRESH);
if(!x8165.valid){
continue;
}
IkReal x8164=((-1.0)*(x8165.value));
sj6=gconst1;
cj6=gconst2;
j6=x8164;
IkReal gconst0=x8164;
IkReal gconst1=(r21*x8163);
IkReal gconst2=(x8162*x8163);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x8166=((-1.0)*r20);
IkReal x8167=x8154;
CheckValue<IkReal> x8169 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8166),IKFAST_ATAN2_MAGTHRESH);
if(!x8169.valid){
continue;
}
IkReal x8168=((-1.0)*(x8169.value));
sj6=gconst1;
cj6=gconst2;
j6=x8168;
IkReal gconst0=x8168;
IkReal gconst1=(r21*x8167);
IkReal gconst2=(x8166*x8167);
IkReal x8170=r22*r22;
CheckValue<IkReal> x8174=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x8170))),-1);
if(!x8174.valid){
continue;
}
IkReal x8171=x8174.value;
IkReal x8172=(sj4*x8171);
IkReal x8173=(((x8172*(r21*r21*r21*r21)))+((sj4*x8170))+((x8172*(r20*r20*r20*r20)))+(((2.0)*x8172*(r20*r20)*(r21*r21))));
j5eval[0]=x8173;
j5eval[1]=IKsign(x8173);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8175=((-1.0)*r20);
IkReal x8176=x8154;
CheckValue<IkReal> x8178 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8175),IKFAST_ATAN2_MAGTHRESH);
if(!x8178.valid){
continue;
}
IkReal x8177=((-1.0)*(x8178.value));
sj6=gconst1;
cj6=gconst2;
j6=x8177;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst0=x8177;
IkReal gconst1=(r21*x8176);
IkReal gconst2=(x8175*x8176);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8179=((-1.0)*r20);
IkReal x8180=x8154;
CheckValue<IkReal> x8182 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8179),IKFAST_ATAN2_MAGTHRESH);
if(!x8182.valid){
continue;
}
IkReal x8181=((-1.0)*(x8182.value));
sj6=gconst1;
cj6=gconst2;
j6=x8181;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst0=x8181;
IkReal gconst1=(r21*x8180);
IkReal gconst2=(x8179*x8180);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x8183=((-1.0)*r20);
IkReal x8184=x8154;
CheckValue<IkReal> x8186 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8183),IKFAST_ATAN2_MAGTHRESH);
if(!x8186.valid){
continue;
}
IkReal x8185=((-1.0)*(x8186.value));
sj6=gconst1;
cj6=gconst2;
j6=x8185;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst0=x8185;
IkReal gconst1=(r21*x8184);
IkReal gconst2=(x8183*x8184);
IkReal x8187=((1.0)*(r22*r22));
CheckValue<IkReal> x8191=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x8187))),-1);
if(!x8191.valid){
continue;
}
IkReal x8188=x8191.value;
IkReal x8189=((1.0)*x8188);
IkReal x8190=((((-2.0)*x8188*(r20*r20)*(r21*r21)))+(((-1.0)*x8189*(r20*r20*r20*r20)))+(((-1.0)*x8189*(r21*r21*r21*r21)))+(((-1.0)*x8187)));
j5eval[0]=x8190;
j5eval[1]=IKsign(x8190);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8192=((-1.0)*r20);
IkReal x8193=x8154;
CheckValue<IkReal> x8195 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8192),IKFAST_ATAN2_MAGTHRESH);
if(!x8195.valid){
continue;
}
IkReal x8194=((-1.0)*(x8195.value));
sj6=gconst1;
cj6=gconst2;
j6=x8194;
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst0=x8194;
IkReal gconst1=(r21*x8193);
IkReal gconst2=(x8192*x8193);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x8196=((-1.0)*r20);
IkReal x8197=x8154;
CheckValue<IkReal> x8199 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8196),IKFAST_ATAN2_MAGTHRESH);
if(!x8199.valid){
continue;
}
IkReal x8198=((-1.0)*(x8199.value));
sj6=gconst1;
cj6=gconst2;
j6=x8198;
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst0=x8198;
IkReal gconst1=(r21*x8197);
IkReal gconst2=(x8196*x8197);
IkReal x8200=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x8204=IKPowWithIntegerCheck(x8200,-1);
if(!x8204.valid){
continue;
}
IkReal x8201=x8204.value;
IkReal x8202=((1.0)*x8201);
IkReal x8203=((((-1.0)*x8202*(r10*r10)*(r20*r20)))+(((-1.0)*(r12*r12)))+(((-2.0)*r10*r11*r20*r21*x8201))+(((-1.0)*x8202*(r11*r11)*(r21*r21))));
j5eval[0]=x8203;
j5eval[1]=r12;
j5eval[2]=x8200;
j5eval[3]=IKsign(x8203);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8205=((-1.0)*r20);
IkReal x8206=x8154;
CheckValue<IkReal> x8208 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8205),IKFAST_ATAN2_MAGTHRESH);
if(!x8208.valid){
continue;
}
IkReal x8207=((-1.0)*(x8208.value));
sj6=gconst1;
cj6=gconst2;
j6=x8207;
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst0=x8207;
IkReal gconst1=(r21*x8206);
IkReal gconst2=(x8205*x8206);
IkReal x8209=r22*r22;
IkReal x8210=(cj0*sj1);
IkReal x8211=(cj1*sj0);
IkReal x8212=((1.0)*r12);
CheckValue<IkReal> x8216=IKPowWithIntegerCheck(((-1.0)+x8209),-1);
if(!x8216.valid){
continue;
}
IkReal x8213=x8216.value;
if((((1.0)+(((-1.0)*x8209)))) < -0.00001)
continue;
IkReal x8214=IKsqrt(((1.0)+(((-1.0)*x8209))));
IkReal x8215=(r12*r22*x8213*x8214);
j5eval[0]=((IKabs(((((-1.0)*x8210*x8212))+(((-1.0)*x8211*x8212)))))+(IKabs((((x8210*x8215))+((x8211*x8215))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8217=(cj0*sj1);
IkReal x8218=(cj1*sj0);
IkReal x8219=((1.0)*r12);
IkReal x8220=(gconst1*r11);
IkReal x8221=((1.0)*gconst2*r10);
CheckValue<IkReal> x8222 = IKatan2WithCheck(IkReal((((x8218*x8220))+((x8217*x8220))+(((-1.0)*x8218*x8221))+(((-1.0)*x8217*x8221)))),IkReal(((((-1.0)*x8218*x8219))+(((-1.0)*x8217*x8219)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8222.valid){
continue;
}
CheckValue<IkReal> x8223=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst1*r00))+(((-1.0)*gconst2*r01)))),-1);
if(!x8223.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8222.value)+(((1.5707963267949)*(x8223.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8224=IKcos(j5);
IkReal x8225=IKsin(j5);
IkReal x8226=((1.0)*gconst2);
IkReal x8227=(gconst1*x8224);
IkReal x8228=(gconst1*x8225);
IkReal x8229=((1.0)*x8224);
evalcond[0]=(((r12*x8225))+((r11*x8227))+(((-1.0)*r10*x8224*x8226)));
evalcond[1]=(((r21*x8228))+(((-1.0)*r20*x8225*x8226))+(((-1.0)*r22*x8229)));
evalcond[2]=((((-1.0)*r02*x8229))+((r01*x8228))+(((-1.0)*r00*x8225*x8226)));
evalcond[3]=((1.0)+((r11*x8228))+(((-1.0)*r10*x8225*x8226))+(((-1.0)*r12*x8229)));
evalcond[4]=(((cj1*sj0))+((r22*x8225))+(((-1.0)*r20*x8224*x8226))+((r21*x8227))+((cj0*sj1)));
evalcond[5]=(((r02*x8225))+((sj0*sj1))+((r01*x8227))+(((-1.0)*cj0*cj1))+(((-1.0)*r00*x8224*x8226)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8230=(gconst2*r10);
IkReal x8231=(gconst1*r11);
CheckValue<IkReal> x8232 = IKatan2WithCheck(IkReal(((((-1.0)*x8230))+x8231)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x8232.valid){
continue;
}
CheckValue<IkReal> x8233=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x8230*x8230)))+(((2.0)*x8230*x8231))+(((-1.0)*(r12*r12)))+(((-1.0)*(x8231*x8231))))),-1);
if(!x8233.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8232.value)+(((1.5707963267949)*(x8233.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8234=IKcos(j5);
IkReal x8235=IKsin(j5);
IkReal x8236=((1.0)*gconst2);
IkReal x8237=(gconst1*x8234);
IkReal x8238=(gconst1*x8235);
IkReal x8239=((1.0)*x8234);
evalcond[0]=((((-1.0)*r10*x8234*x8236))+((r12*x8235))+((r11*x8237)));
evalcond[1]=((((-1.0)*r20*x8235*x8236))+((r21*x8238))+(((-1.0)*r22*x8239)));
evalcond[2]=((((-1.0)*r02*x8239))+(((-1.0)*r00*x8235*x8236))+((r01*x8238)));
evalcond[3]=((1.0)+((r11*x8238))+(((-1.0)*r10*x8235*x8236))+(((-1.0)*r12*x8239)));
evalcond[4]=((((-1.0)*r20*x8234*x8236))+((cj1*sj0))+((r22*x8235))+((r21*x8237))+((cj0*sj1)));
evalcond[5]=(((r02*x8235))+(((-1.0)*r00*x8234*x8236))+((sj0*sj1))+((r01*x8237))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8240=((1.0)*gconst2);
CheckValue<IkReal> x8241 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x8240))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8241.valid){
continue;
}
CheckValue<IkReal> x8242=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst1*r00))+(((-1.0)*r01*x8240)))),-1);
if(!x8242.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8241.value)+(((1.5707963267949)*(x8242.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8243=IKcos(j5);
IkReal x8244=IKsin(j5);
IkReal x8245=((1.0)*gconst2);
IkReal x8246=(gconst1*x8243);
IkReal x8247=(gconst1*x8244);
IkReal x8248=((1.0)*x8243);
evalcond[0]=((((-1.0)*r10*x8243*x8245))+((r11*x8246))+((r12*x8244)));
evalcond[1]=((((-1.0)*r22*x8248))+((r21*x8247))+(((-1.0)*r20*x8244*x8245)));
evalcond[2]=((((-1.0)*r02*x8248))+(((-1.0)*r00*x8244*x8245))+((r01*x8247)));
evalcond[3]=((1.0)+(((-1.0)*r10*x8244*x8245))+((r11*x8247))+(((-1.0)*r12*x8248)));
evalcond[4]=(((cj1*sj0))+((r21*x8246))+((r22*x8244))+((cj0*sj1))+(((-1.0)*r20*x8243*x8245)));
evalcond[5]=(((r02*x8244))+(((-1.0)*r00*x8243*x8245))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r01*x8246)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8249=((-1.0)*r20);
IkReal x8250=x8154;
CheckValue<IkReal> x8252 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8249),IKFAST_ATAN2_MAGTHRESH);
if(!x8252.valid){
continue;
}
IkReal x8251=((-1.0)*(x8252.value));
sj6=gconst1;
cj6=gconst2;
j6=x8251;
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst0=x8251;
IkReal gconst1=(r21*x8250);
IkReal gconst2=(x8249*x8250);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x8253=((-1.0)*r20);
IkReal x8254=x8154;
CheckValue<IkReal> x8256 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8253),IKFAST_ATAN2_MAGTHRESH);
if(!x8256.valid){
continue;
}
IkReal x8255=((-1.0)*(x8256.value));
sj6=gconst1;
cj6=gconst2;
j6=x8255;
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst0=x8255;
IkReal gconst1=(r21*x8254);
IkReal gconst2=(x8253*x8254);
j5eval[0]=r12;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8257=((-1.0)*r20);
IkReal x8258=x8154;
CheckValue<IkReal> x8260 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8257),IKFAST_ATAN2_MAGTHRESH);
if(!x8260.valid){
continue;
}
IkReal x8259=((-1.0)*(x8260.value));
sj6=gconst1;
cj6=gconst2;
j6=x8259;
sj4=0;
cj4=1.0;
j4=0;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst0=x8259;
IkReal gconst1=(r21*x8258);
IkReal gconst2=(x8257*x8258);
IkReal x8261=r22*r22;
IkReal x8262=(cj0*sj1);
IkReal x8263=(cj1*sj0);
IkReal x8264=((1.0)*r12);
CheckValue<IkReal> x8268=IKPowWithIntegerCheck(((-1.0)+x8261),-1);
if(!x8268.valid){
continue;
}
IkReal x8265=x8268.value;
if((((1.0)+(((-1.0)*x8261)))) < -0.00001)
continue;
IkReal x8266=IKsqrt(((1.0)+(((-1.0)*x8261))));
IkReal x8267=(r12*r22*x8265*x8266);
j5eval[0]=((IKabs((((x8263*x8267))+((x8262*x8267)))))+(IKabs(((((-1.0)*x8263*x8264))+(((-1.0)*x8262*x8264))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8269=(cj0*sj1);
IkReal x8270=(cj1*sj0);
IkReal x8271=((1.0)*r12);
IkReal x8272=(gconst1*r11);
IkReal x8273=((1.0)*gconst2*r10);
CheckValue<IkReal> x8274=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst1*r00))+(((-1.0)*gconst2*r01)))),-1);
if(!x8274.valid){
continue;
}
CheckValue<IkReal> x8275 = IKatan2WithCheck(IkReal((((x8269*x8272))+(((-1.0)*x8269*x8273))+(((-1.0)*x8270*x8273))+((x8270*x8272)))),IkReal(((((-1.0)*x8269*x8271))+(((-1.0)*x8270*x8271)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8275.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8274.value)))+(x8275.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8276=IKcos(j5);
IkReal x8277=IKsin(j5);
IkReal x8278=((1.0)*gconst2);
IkReal x8279=(gconst1*x8276);
IkReal x8280=(gconst1*x8277);
IkReal x8281=((1.0)*x8276);
evalcond[0]=((((-1.0)*r10*x8276*x8278))+((r11*x8279))+((r12*x8277)));
evalcond[1]=(((r21*x8280))+(((-1.0)*r20*x8277*x8278))+(((-1.0)*r22*x8281)));
evalcond[2]=((((-1.0)*r02*x8281))+((r01*x8280))+(((-1.0)*r00*x8277*x8278)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x8281))+((r11*x8280))+(((-1.0)*r10*x8277*x8278)));
evalcond[4]=((((-1.0)*r20*x8276*x8278))+((cj1*sj0))+((r22*x8277))+((r21*x8279))+((cj0*sj1)));
evalcond[5]=(((r02*x8277))+((cj0*cj1))+(((-1.0)*r00*x8276*x8278))+(((-1.0)*sj0*sj1))+((r01*x8279)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8282=(gconst1*r11);
IkReal x8283=(gconst2*r10);
CheckValue<IkReal> x8284=IKPowWithIntegerCheck(IKsign(((r12*r12)+(x8283*x8283)+(x8282*x8282)+(((-2.0)*x8282*x8283)))),-1);
if(!x8284.valid){
continue;
}
CheckValue<IkReal> x8285 = IKatan2WithCheck(IkReal(((((-1.0)*x8283))+x8282)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x8285.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8284.value)))+(x8285.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8286=IKcos(j5);
IkReal x8287=IKsin(j5);
IkReal x8288=((1.0)*gconst2);
IkReal x8289=(gconst1*x8286);
IkReal x8290=(gconst1*x8287);
IkReal x8291=((1.0)*x8286);
evalcond[0]=((((-1.0)*r10*x8286*x8288))+((r11*x8289))+((r12*x8287)));
evalcond[1]=(((r21*x8290))+(((-1.0)*r22*x8291))+(((-1.0)*r20*x8287*x8288)));
evalcond[2]=(((r01*x8290))+(((-1.0)*r00*x8287*x8288))+(((-1.0)*r02*x8291)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x8291))+((r11*x8290))+(((-1.0)*r10*x8287*x8288)));
evalcond[4]=(((r21*x8289))+((cj1*sj0))+(((-1.0)*r20*x8286*x8288))+((r22*x8287))+((cj0*sj1)));
evalcond[5]=(((r01*x8289))+(((-1.0)*r00*x8286*x8288))+((cj0*cj1))+(((-1.0)*sj0*sj1))+((r02*x8287)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x8292 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*gconst2*r20))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8292.valid){
continue;
}
CheckValue<IkReal> x8293=IKPowWithIntegerCheck(IKsign((((gconst1*r00))+((gconst2*r01)))),-1);
if(!x8293.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8292.value)+(((1.5707963267949)*(x8293.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8294=IKcos(j5);
IkReal x8295=IKsin(j5);
IkReal x8296=((1.0)*gconst2);
IkReal x8297=(gconst1*x8294);
IkReal x8298=(gconst1*x8295);
IkReal x8299=((1.0)*x8294);
evalcond[0]=((((-1.0)*r10*x8294*x8296))+((r11*x8297))+((r12*x8295)));
evalcond[1]=(((r21*x8298))+(((-1.0)*r20*x8295*x8296))+(((-1.0)*r22*x8299)));
evalcond[2]=(((r01*x8298))+(((-1.0)*r00*x8295*x8296))+(((-1.0)*r02*x8299)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x8299))+(((-1.0)*r10*x8295*x8296))+((r11*x8298)));
evalcond[4]=(((r21*x8297))+((cj1*sj0))+(((-1.0)*r20*x8294*x8296))+((r22*x8295))+((cj0*sj1)));
evalcond[5]=(((r01*x8297))+((cj0*cj1))+((r02*x8295))+(((-1.0)*sj0*sj1))+(((-1.0)*r00*x8294*x8296)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8300=((-1.0)*r20);
IkReal x8301=x8154;
CheckValue<IkReal> x8303 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8300),IKFAST_ATAN2_MAGTHRESH);
if(!x8303.valid){
continue;
}
IkReal x8302=((-1.0)*(x8303.value));
sj6=gconst1;
cj6=gconst2;
j6=x8302;
sj4=0;
cj4=1.0;
j4=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst0=x8302;
IkReal gconst1=(r21*x8301);
IkReal gconst2=(x8300*x8301);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x8304=((-1.0)*r20);
IkReal x8305=x8154;
CheckValue<IkReal> x8307 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8304),IKFAST_ATAN2_MAGTHRESH);
if(!x8307.valid){
continue;
}
IkReal x8306=((-1.0)*(x8307.value));
sj6=gconst1;
cj6=gconst2;
j6=x8306;
sj4=0;
cj4=1.0;
j4=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst0=x8306;
IkReal gconst1=(r21*x8305);
IkReal gconst2=(x8304*x8305);
j5eval[0]=r02;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8308=((-1.0)*r20);
IkReal x8309=x8154;
CheckValue<IkReal> x8311 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8308),IKFAST_ATAN2_MAGTHRESH);
if(!x8311.valid){
continue;
}
IkReal x8310=((-1.0)*(x8311.value));
sj6=gconst1;
cj6=gconst2;
j6=x8310;
sj4=0;
cj4=1.0;
j4=0;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst0=x8310;
IkReal gconst1=(r21*x8309);
IkReal gconst2=(x8308*x8309);
IkReal x8312=r22*r22;
IkReal x8313=(cj0*r02*sj1);
IkReal x8314=(cj1*r02*sj0);
CheckValue<IkReal> x8318=IKPowWithIntegerCheck(((-1.0)+x8312),-1);
if(!x8318.valid){
continue;
}
IkReal x8315=x8318.value;
if((((1.0)+(((-1.0)*x8312)))) < -0.00001)
continue;
IkReal x8316=IKsqrt(((1.0)+(((-1.0)*x8312))));
IkReal x8317=(r22*x8315*x8316);
j5eval[0]=((IKabs((((x8313*x8317))+((x8314*x8317)))))+(IKabs(((((-1.0)*x8313))+(((-1.0)*x8314))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8319=(cj0*sj1);
IkReal x8320=(cj1*sj0);
IkReal x8321=(gconst1*r01);
IkReal x8322=((1.0)*r02);
IkReal x8323=((1.0)*gconst2*r00);
CheckValue<IkReal> x8324 = IKatan2WithCheck(IkReal((((x8319*x8321))+(((-1.0)*x8320*x8323))+((x8320*x8321))+(((-1.0)*x8319*x8323)))),IkReal(((((-1.0)*x8320*x8322))+(((-1.0)*x8319*x8322)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8324.valid){
continue;
}
CheckValue<IkReal> x8325=IKPowWithIntegerCheck(IKsign((((gconst1*r10))+((gconst2*r11)))),-1);
if(!x8325.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8324.value)+(((1.5707963267949)*(x8325.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8326=IKcos(j5);
IkReal x8327=IKsin(j5);
IkReal x8328=((1.0)*gconst2);
IkReal x8329=(gconst1*x8326);
IkReal x8330=(gconst1*x8327);
IkReal x8331=((1.0)*x8326);
evalcond[0]=(((r02*x8327))+((r01*x8329))+(((-1.0)*r00*x8326*x8328)));
evalcond[1]=(((r21*x8330))+(((-1.0)*r22*x8331))+(((-1.0)*r20*x8327*x8328)));
evalcond[2]=((((-1.0)*r12*x8331))+(((-1.0)*r10*x8327*x8328))+((r11*x8330)));
evalcond[3]=((-1.0)+((r01*x8330))+(((-1.0)*r02*x8331))+(((-1.0)*r00*x8327*x8328)));
evalcond[4]=(((cj1*sj0))+((r22*x8327))+((r21*x8329))+((cj0*sj1))+(((-1.0)*r20*x8326*x8328)));
evalcond[5]=(((r12*x8327))+((sj0*sj1))+((r11*x8329))+(((-1.0)*cj0*cj1))+(((-1.0)*r10*x8326*x8328)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8332=(gconst1*r01);
IkReal x8333=(gconst2*r00);
CheckValue<IkReal> x8334=IKPowWithIntegerCheck(IKsign(((x8333*x8333)+(x8332*x8332)+(((-2.0)*x8332*x8333))+(r02*r02))),-1);
if(!x8334.valid){
continue;
}
CheckValue<IkReal> x8335 = IKatan2WithCheck(IkReal((x8332+(((-1.0)*x8333)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x8335.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8334.value)))+(x8335.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8336=IKcos(j5);
IkReal x8337=IKsin(j5);
IkReal x8338=((1.0)*gconst2);
IkReal x8339=(gconst1*x8336);
IkReal x8340=(gconst1*x8337);
IkReal x8341=((1.0)*x8336);
evalcond[0]=(((r01*x8339))+(((-1.0)*r00*x8336*x8338))+((r02*x8337)));
evalcond[1]=(((r21*x8340))+(((-1.0)*r20*x8337*x8338))+(((-1.0)*r22*x8341)));
evalcond[2]=(((r11*x8340))+(((-1.0)*r10*x8337*x8338))+(((-1.0)*r12*x8341)));
evalcond[3]=((-1.0)+((r01*x8340))+(((-1.0)*r00*x8337*x8338))+(((-1.0)*r02*x8341)));
evalcond[4]=(((r21*x8339))+((r22*x8337))+(((-1.0)*r20*x8336*x8338))+((cj1*sj0))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r10*x8336*x8338))+((r12*x8337))+((sj0*sj1))+((r11*x8339))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8342=((1.0)*gconst2);
CheckValue<IkReal> x8343 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst1*r21))+(((-1.0)*r20*x8342)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8343.valid){
continue;
}
CheckValue<IkReal> x8344=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x8342))+(((-1.0)*gconst1*r10)))),-1);
if(!x8344.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8343.value)+(((1.5707963267949)*(x8344.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8345=IKcos(j5);
IkReal x8346=IKsin(j5);
IkReal x8347=((1.0)*gconst2);
IkReal x8348=(gconst1*x8345);
IkReal x8349=(gconst1*x8346);
IkReal x8350=((1.0)*x8345);
evalcond[0]=(((r01*x8348))+((r02*x8346))+(((-1.0)*r00*x8345*x8347)));
evalcond[1]=((((-1.0)*r22*x8350))+((r21*x8349))+(((-1.0)*r20*x8346*x8347)));
evalcond[2]=((((-1.0)*r10*x8346*x8347))+(((-1.0)*r12*x8350))+((r11*x8349)));
evalcond[3]=((-1.0)+((r01*x8349))+(((-1.0)*r02*x8350))+(((-1.0)*r00*x8346*x8347)));
evalcond[4]=((((-1.0)*r20*x8345*x8347))+((cj1*sj0))+((r21*x8348))+((r22*x8346))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*r10*x8345*x8347))+((r12*x8346))+((r11*x8348))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8351=((-1.0)*r20);
IkReal x8352=x8154;
CheckValue<IkReal> x8354 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8351),IKFAST_ATAN2_MAGTHRESH);
if(!x8354.valid){
continue;
}
IkReal x8353=((-1.0)*(x8354.value));
sj6=gconst1;
cj6=gconst2;
j6=x8353;
sj4=0;
cj4=1.0;
j4=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst0=x8353;
IkReal gconst1=(r21*x8352);
IkReal gconst2=(x8351*x8352);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x8355=((-1.0)*r20);
IkReal x8356=x8154;
CheckValue<IkReal> x8358 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8355),IKFAST_ATAN2_MAGTHRESH);
if(!x8358.valid){
continue;
}
IkReal x8357=((-1.0)*(x8358.value));
sj6=gconst1;
cj6=gconst2;
j6=x8357;
sj4=0;
cj4=1.0;
j4=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst0=x8357;
IkReal gconst1=(r21*x8356);
IkReal gconst2=(x8355*x8356);
IkReal x8359=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x8363=IKPowWithIntegerCheck(x8359,-1);
if(!x8363.valid){
continue;
}
IkReal x8360=x8363.value;
IkReal x8361=((1.0)*x8360);
IkReal x8362=((((-2.0)*r00*r01*r20*r21*x8360))+(((-1.0)*(r02*r02)))+(((-1.0)*x8361*(r01*r01)*(r21*r21)))+(((-1.0)*x8361*(r00*r00)*(r20*r20))));
j5eval[0]=x8362;
j5eval[1]=IKsign(x8362);
j5eval[2]=r02;
j5eval[3]=x8359;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8364=((-1.0)*r20);
IkReal x8365=x8154;
CheckValue<IkReal> x8367 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8364),IKFAST_ATAN2_MAGTHRESH);
if(!x8367.valid){
continue;
}
IkReal x8366=((-1.0)*(x8367.value));
sj6=gconst1;
cj6=gconst2;
j6=x8366;
sj4=0;
cj4=1.0;
j4=0;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst0=x8366;
IkReal gconst1=(r21*x8365);
IkReal gconst2=(x8364*x8365);
IkReal x8368=r22*r22;
IkReal x8369=(cj0*r02*sj1);
IkReal x8370=(cj1*r02*sj0);
CheckValue<IkReal> x8374=IKPowWithIntegerCheck(((-1.0)+x8368),-1);
if(!x8374.valid){
continue;
}
IkReal x8371=x8374.value;
if((((1.0)+(((-1.0)*x8368)))) < -0.00001)
continue;
IkReal x8372=IKsqrt(((1.0)+(((-1.0)*x8368))));
IkReal x8373=(r22*x8371*x8372);
j5eval[0]=((IKabs((((x8369*x8373))+((x8370*x8373)))))+(IKabs(((((-1.0)*x8369))+(((-1.0)*x8370))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8375=(cj0*sj1);
IkReal x8376=(cj1*sj0);
IkReal x8377=(gconst1*r01);
IkReal x8378=((1.0)*r02);
IkReal x8379=((1.0)*gconst2*r00);
CheckValue<IkReal> x8380 = IKatan2WithCheck(IkReal(((((-1.0)*x8376*x8379))+((x8376*x8377))+(((-1.0)*x8375*x8379))+((x8375*x8377)))),IkReal(((((-1.0)*x8376*x8378))+(((-1.0)*x8375*x8378)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8380.valid){
continue;
}
CheckValue<IkReal> x8381=IKPowWithIntegerCheck(IKsign((((gconst1*r10))+((gconst2*r11)))),-1);
if(!x8381.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8380.value)+(((1.5707963267949)*(x8381.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8382=IKcos(j5);
IkReal x8383=IKsin(j5);
IkReal x8384=((1.0)*gconst2);
IkReal x8385=(gconst1*x8382);
IkReal x8386=(gconst1*x8383);
IkReal x8387=((1.0)*x8382);
evalcond[0]=((((-1.0)*r00*x8382*x8384))+((r02*x8383))+((r01*x8385)));
evalcond[1]=((((-1.0)*r20*x8383*x8384))+((r21*x8386))+(((-1.0)*r22*x8387)));
evalcond[2]=((((-1.0)*r10*x8383*x8384))+(((-1.0)*r12*x8387))+((r11*x8386)));
evalcond[3]=((1.0)+(((-1.0)*r02*x8387))+(((-1.0)*r00*x8383*x8384))+((r01*x8386)));
evalcond[4]=(((cj1*sj0))+((r21*x8385))+((r22*x8383))+(((-1.0)*r20*x8382*x8384))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r10*x8382*x8384))+((cj0*cj1))+(((-1.0)*sj0*sj1))+((r12*x8383))+((r11*x8385)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8388=(gconst1*r01);
IkReal x8389=(gconst2*r00);
CheckValue<IkReal> x8390 = IKatan2WithCheck(IkReal((x8388+(((-1.0)*x8389)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x8390.valid){
continue;
}
CheckValue<IkReal> x8391=IKPowWithIntegerCheck(IKsign(((((-1.0)*(r02*r02)))+(((2.0)*x8388*x8389))+(((-1.0)*(x8388*x8388)))+(((-1.0)*(x8389*x8389))))),-1);
if(!x8391.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8390.value)+(((1.5707963267949)*(x8391.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8392=IKcos(j5);
IkReal x8393=IKsin(j5);
IkReal x8394=((1.0)*gconst2);
IkReal x8395=(gconst1*x8392);
IkReal x8396=(gconst1*x8393);
IkReal x8397=((1.0)*x8392);
evalcond[0]=(((r02*x8393))+((r01*x8395))+(((-1.0)*r00*x8392*x8394)));
evalcond[1]=((((-1.0)*r20*x8393*x8394))+((r21*x8396))+(((-1.0)*r22*x8397)));
evalcond[2]=((((-1.0)*r10*x8393*x8394))+(((-1.0)*r12*x8397))+((r11*x8396)));
evalcond[3]=((1.0)+(((-1.0)*r00*x8393*x8394))+(((-1.0)*r02*x8397))+((r01*x8396)));
evalcond[4]=((((-1.0)*r20*x8392*x8394))+((cj1*sj0))+((r22*x8393))+((r21*x8395))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r10*x8392*x8394))+((cj0*cj1))+(((-1.0)*sj0*sj1))+((r12*x8393))+((r11*x8395)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x8398 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*gconst2*r20))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8398.valid){
continue;
}
CheckValue<IkReal> x8399=IKPowWithIntegerCheck(IKsign((((gconst1*r10))+((gconst2*r11)))),-1);
if(!x8399.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8398.value)+(((1.5707963267949)*(x8399.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8400=IKcos(j5);
IkReal x8401=IKsin(j5);
IkReal x8402=((1.0)*gconst2);
IkReal x8403=(gconst1*x8400);
IkReal x8404=(gconst1*x8401);
IkReal x8405=((1.0)*x8400);
evalcond[0]=(((r01*x8403))+(((-1.0)*r00*x8400*x8402))+((r02*x8401)));
evalcond[1]=((((-1.0)*r20*x8401*x8402))+(((-1.0)*r22*x8405))+((r21*x8404)));
evalcond[2]=((((-1.0)*r10*x8401*x8402))+((r11*x8404))+(((-1.0)*r12*x8405)));
evalcond[3]=((1.0)+(((-1.0)*r00*x8401*x8402))+((r01*x8404))+(((-1.0)*r02*x8405)));
evalcond[4]=(((r22*x8401))+(((-1.0)*r20*x8400*x8402))+((cj1*sj0))+((r21*x8403))+((cj0*sj1)));
evalcond[5]=(((r11*x8403))+((r12*x8401))+((cj0*cj1))+(((-1.0)*sj0*sj1))+(((-1.0)*r10*x8400*x8402)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8406=((-1.0)*r20);
IkReal x8407=((-1.0)*px);
CheckValue<IkReal> x8409 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8406),IKFAST_ATAN2_MAGTHRESH);
if(!x8409.valid){
continue;
}
IkReal x8408=((-1.0)*(x8409.value));
sj6=gconst1;
cj6=gconst2;
j6=x8408;
sj4=0;
cj4=1.0;
j4=0;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x8407);
rxp1_1=(px*r21);
rxp1_2=(r11*x8407);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst0=x8408;
IkReal gconst1=r21;
IkReal gconst2=x8406;
j5eval[0]=((1.0)+(r21*r21)+(((-1.0)*(r10*r10))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x8412=IKPowWithIntegerCheck(((((-1.0)*gconst2*r20))+((gconst1*r21))),-1);
if(!x8412.valid){
continue;
}
IkReal x8410=x8412.value;
IkReal x8411=((1.0)*x8410);
cj5array[0]=((((-1.0)*cj0*sj1*x8411))+(((-1.0)*cj1*sj0*x8411)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x8413=IKsin(j5);
IkReal x8414=(gconst1*x8413);
IkReal x8415=((1.0)*gconst2*x8413);
evalcond[0]=(r02*x8413);
evalcond[1]=((((-1.0)*r20*x8415))+((r21*x8414)));
evalcond[2]=(((r11*x8414))+(((-1.0)*r10*x8415)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8416=(cj0*sj1);
IkReal x8417=(gconst1*r21);
IkReal x8418=(cj1*sj0);
IkReal x8419=(gconst2*r20);
CheckValue<IkReal> x8420 = IKatan2WithCheck(IkReal((((r22*x8418))+((r22*x8416)))),IkReal(((((-1.0)*x8416*x8419))+(((-1.0)*x8418*x8419))+((x8417*x8418))+((x8416*x8417)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8420.valid){
continue;
}
CheckValue<IkReal> x8421=IKPowWithIntegerCheck(IKsign(((((2.0)*x8417*x8419))+(((-1.0)*(x8419*x8419)))+(((-1.0)*(x8417*x8417)))+(((-1.0)*(r22*r22))))),-1);
if(!x8421.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8420.value)+(((1.5707963267949)*(x8421.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8422=IKsin(j5);
IkReal x8423=IKcos(j5);
IkReal x8424=(sj0*sj1);
IkReal x8425=((1.0)*gconst2);
IkReal x8426=((1.0)*cj0*cj1);
IkReal x8427=(gconst1*x8423);
IkReal x8428=(gconst1*x8422);
IkReal x8429=((1.0)*x8423);
evalcond[0]=(((r21*x8428))+(((-1.0)*r22*x8429))+(((-1.0)*r20*x8422*x8425)));
evalcond[1]=(cj2+((r11*x8428))+(((-1.0)*r10*x8422*x8425))+(((-1.0)*r12*x8429)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x8422*x8425))+(((-1.0)*r02*x8429))+((r01*x8428)));
evalcond[3]=(((r21*x8427))+((cj1*sj0))+(((-1.0)*r20*x8423*x8425))+((r22*x8422))+((cj0*sj1)));
evalcond[4]=(((r02*x8422))+(((-1.0)*r00*x8423*x8425))+((cj2*x8424))+((r01*x8427))+(((-1.0)*cj2*x8426)));
evalcond[5]=(((r11*x8427))+((r12*x8422))+(((-1.0)*r10*x8423*x8425))+((sj2*x8424))+(((-1.0)*sj2*x8426)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8430=((1.0)*gconst2);
CheckValue<IkReal> x8431=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst1*r10))+(((-1.0)*r11*x8430)))),-1);
if(!x8431.valid){
continue;
}
CheckValue<IkReal> x8432 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst1*r21*sj2))+(((-1.0)*r20*sj2*x8430)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8432.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8431.value)))+(x8432.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8433=IKsin(j5);
IkReal x8434=IKcos(j5);
IkReal x8435=(sj0*sj1);
IkReal x8436=((1.0)*gconst2);
IkReal x8437=((1.0)*cj0*cj1);
IkReal x8438=(gconst1*x8434);
IkReal x8439=(gconst1*x8433);
IkReal x8440=((1.0)*x8434);
evalcond[0]=(((r21*x8439))+(((-1.0)*r20*x8433*x8436))+(((-1.0)*r22*x8440)));
evalcond[1]=(cj2+(((-1.0)*r12*x8440))+(((-1.0)*r10*x8433*x8436))+((r11*x8439)));
evalcond[2]=(((r01*x8439))+(((-1.0)*sj2))+(((-1.0)*r00*x8433*x8436))+(((-1.0)*r02*x8440)));
evalcond[3]=(((r21*x8438))+((cj1*sj0))+((r22*x8433))+(((-1.0)*r20*x8434*x8436))+((cj0*sj1)));
evalcond[4]=(((r01*x8438))+(((-1.0)*cj2*x8437))+((cj2*x8435))+((r02*x8433))+(((-1.0)*r00*x8434*x8436)));
evalcond[5]=(((sj2*x8435))+((r12*x8433))+(((-1.0)*r10*x8434*x8436))+((r11*x8438))+(((-1.0)*sj2*x8437)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8441=((1.0)*gconst2);
CheckValue<IkReal> x8442=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x8441))+(((-1.0)*gconst1*r00)))),-1);
if(!x8442.valid){
continue;
}
CheckValue<IkReal> x8443 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst1*r21))+(((-1.0)*cj2*r20*x8441)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8443.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8442.value)))+(x8443.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8444=IKsin(j5);
IkReal x8445=IKcos(j5);
IkReal x8446=(sj0*sj1);
IkReal x8447=((1.0)*gconst2);
IkReal x8448=((1.0)*cj0*cj1);
IkReal x8449=(gconst1*x8445);
IkReal x8450=(gconst1*x8444);
IkReal x8451=((1.0)*x8445);
evalcond[0]=(((r21*x8450))+(((-1.0)*r22*x8451))+(((-1.0)*r20*x8444*x8447)));
evalcond[1]=(((r11*x8450))+cj2+(((-1.0)*r12*x8451))+(((-1.0)*r10*x8444*x8447)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x8444*x8447))+(((-1.0)*r02*x8451))+((r01*x8450)));
evalcond[3]=(((r22*x8444))+((r21*x8449))+((cj1*sj0))+(((-1.0)*r20*x8445*x8447))+((cj0*sj1)));
evalcond[4]=(((r02*x8444))+(((-1.0)*r00*x8445*x8447))+(((-1.0)*cj2*x8448))+((cj2*x8446))+((r01*x8449)));
evalcond[5]=(((r12*x8444))+((r11*x8449))+(((-1.0)*r10*x8445*x8447))+(((-1.0)*sj2*x8448))+((sj2*x8446)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8452=((-1.0)*r20);
IkReal x8453=x8154;
CheckValue<IkReal> x8455 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8452),IKFAST_ATAN2_MAGTHRESH);
if(!x8455.valid){
continue;
}
IkReal x8454=((-1.0)*(x8455.value));
sj6=gconst1;
cj6=gconst2;
j6=x8454;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst0=x8454;
IkReal gconst1=(r21*x8453);
IkReal gconst2=(x8452*x8453);
j5eval[0]=cj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8456=((-1.0)*r20);
IkReal x8457=x8154;
CheckValue<IkReal> x8459 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8456),IKFAST_ATAN2_MAGTHRESH);
if(!x8459.valid){
continue;
}
IkReal x8458=((-1.0)*(x8459.value));
sj6=gconst1;
cj6=gconst2;
j6=x8458;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst0=x8458;
IkReal gconst1=(r21*x8457);
IkReal gconst2=(x8456*x8457);
j5eval[0]=sj2;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x8460=((-1.0)*r20);
IkReal x8461=x8154;
CheckValue<IkReal> x8463 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8460),IKFAST_ATAN2_MAGTHRESH);
if(!x8463.valid){
continue;
}
IkReal x8462=((-1.0)*(x8463.value));
sj6=gconst1;
cj6=gconst2;
j6=x8462;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst0=x8462;
IkReal gconst1=(r21*x8461);
IkReal gconst2=(x8460*x8461);
IkReal x8464=r22*r22;
CheckValue<IkReal> x8467=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x8464))),-1);
if(!x8467.valid){
continue;
}
IkReal x8465=x8467.value;
IkReal x8466=(x8464+((x8465*(r20*r20*r20*r20)))+(((2.0)*x8465*(r20*r20)*(r21*r21)))+((x8465*(r21*r21*r21*r21))));
j5eval[0]=x8466;
j5eval[1]=IKsign(x8466);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8468=((-1.0)*r20);
IkReal x8469=x8154;
CheckValue<IkReal> x8471 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8468),IKFAST_ATAN2_MAGTHRESH);
if(!x8471.valid){
continue;
}
IkReal x8470=((-1.0)*(x8471.value));
sj6=gconst1;
cj6=gconst2;
j6=x8470;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst0=x8470;
IkReal gconst1=(r21*x8469);
IkReal gconst2=(x8468*x8469);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x8472=((-1.0)*r20);
IkReal x8473=x8154;
CheckValue<IkReal> x8475 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8472),IKFAST_ATAN2_MAGTHRESH);
if(!x8475.valid){
continue;
}
IkReal x8474=((-1.0)*(x8475.value));
sj6=gconst1;
cj6=gconst2;
j6=x8474;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst0=x8474;
IkReal gconst1=(r21*x8473);
IkReal gconst2=(x8472*x8473);
j5eval[0]=r12;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8476=((-1.0)*r20);
IkReal x8477=x8154;
CheckValue<IkReal> x8479 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8476),IKFAST_ATAN2_MAGTHRESH);
if(!x8479.valid){
continue;
}
IkReal x8478=((-1.0)*(x8479.value));
sj6=gconst1;
cj6=gconst2;
j6=x8478;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst0=x8478;
IkReal gconst1=(r21*x8477);
IkReal gconst2=(x8476*x8477);
IkReal x8480=r22*r22;
IkReal x8481=(cj1*r12*sj0);
IkReal x8482=(cj0*r12*sj1);
CheckValue<IkReal> x8486=IKPowWithIntegerCheck(((-1.0)+x8480),-1);
if(!x8486.valid){
continue;
}
IkReal x8483=x8486.value;
if((((1.0)+(((-1.0)*x8480)))) < -0.00001)
continue;
IkReal x8484=IKsqrt(((1.0)+(((-1.0)*x8480))));
IkReal x8485=((1.0)*r22*x8483*x8484);
j5eval[0]=((IKabs(((((-1.0)*x8481*x8485))+(((-1.0)*x8482*x8485)))))+(IKabs((x8481+x8482))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8487=((1.0)*gconst1);
IkReal x8488=(cj1*sj0);
IkReal x8489=(cj0*sj1);
IkReal x8490=(gconst2*r10);
CheckValue<IkReal> x8491 = IKatan2WithCheck(IkReal((((x8489*x8490))+((x8488*x8490))+(((-1.0)*r11*x8487*x8489))+(((-1.0)*r11*x8487*x8488)))),IkReal((((r12*x8488))+((r12*x8489)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8491.valid){
continue;
}
CheckValue<IkReal> x8492=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst2*r01))+(((-1.0)*r00*x8487)))),-1);
if(!x8492.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8491.value)+(((1.5707963267949)*(x8492.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8493=IKsin(j5);
IkReal x8494=IKcos(j5);
IkReal x8495=(gconst2*x8494);
IkReal x8496=(gconst1*x8493);
IkReal x8497=((1.0)*x8493);
IkReal x8498=((1.0)*x8494);
IkReal x8499=(gconst2*x8497);
evalcond[0]=((((-1.0)*r20*x8499))+(((-1.0)*r22*x8498))+((r21*x8496)));
evalcond[1]=((((-1.0)*r00*x8499))+(((-1.0)*r02*x8498))+((r01*x8496)));
evalcond[2]=(((r10*x8495))+(((-1.0)*r12*x8497))+(((-1.0)*gconst1*r11*x8498)));
evalcond[3]=((1.0)+(((-1.0)*r10*x8499))+(((-1.0)*r12*x8498))+((r11*x8496)));
evalcond[4]=((((-1.0)*gconst1*r21*x8498))+((cj1*sj0))+(((-1.0)*r22*x8497))+((r20*x8495))+((cj0*sj1)));
evalcond[5]=(((r00*x8495))+(((-1.0)*r02*x8497))+((sj0*sj1))+(((-1.0)*gconst1*r01*x8498))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8500=(gconst1*r11);
IkReal x8501=(gconst2*r10);
CheckValue<IkReal> x8502=IKPowWithIntegerCheck(IKsign(((r12*r12)+(x8500*x8500)+(x8501*x8501)+(((-2.0)*x8500*x8501)))),-1);
if(!x8502.valid){
continue;
}
CheckValue<IkReal> x8503 = IKatan2WithCheck(IkReal((x8501+(((-1.0)*x8500)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x8503.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8502.value)))+(x8503.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8504=IKsin(j5);
IkReal x8505=IKcos(j5);
IkReal x8506=(gconst2*x8505);
IkReal x8507=(gconst1*x8504);
IkReal x8508=((1.0)*x8504);
IkReal x8509=((1.0)*x8505);
IkReal x8510=(gconst2*x8508);
evalcond[0]=((((-1.0)*r20*x8510))+((r21*x8507))+(((-1.0)*r22*x8509)));
evalcond[1]=((((-1.0)*r00*x8510))+(((-1.0)*r02*x8509))+((r01*x8507)));
evalcond[2]=(((r10*x8506))+(((-1.0)*r12*x8508))+(((-1.0)*gconst1*r11*x8509)));
evalcond[3]=((1.0)+((r11*x8507))+(((-1.0)*r12*x8509))+(((-1.0)*r10*x8510)));
evalcond[4]=((((-1.0)*gconst1*r21*x8509))+((cj1*sj0))+(((-1.0)*r22*x8508))+((cj0*sj1))+((r20*x8506)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*r02*x8508))+(((-1.0)*cj0*cj1))+(((-1.0)*gconst1*r01*x8509))+((r00*x8506)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8511=((1.0)*gconst2);
CheckValue<IkReal> x8512 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x8511))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8512.valid){
continue;
}
CheckValue<IkReal> x8513=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst1*r00))+(((-1.0)*r01*x8511)))),-1);
if(!x8513.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8512.value)+(((1.5707963267949)*(x8513.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8514=IKsin(j5);
IkReal x8515=IKcos(j5);
IkReal x8516=(gconst2*x8515);
IkReal x8517=(gconst1*x8514);
IkReal x8518=((1.0)*x8514);
IkReal x8519=((1.0)*x8515);
IkReal x8520=(gconst2*x8518);
evalcond[0]=((((-1.0)*r20*x8520))+((r21*x8517))+(((-1.0)*r22*x8519)));
evalcond[1]=((((-1.0)*r00*x8520))+(((-1.0)*r02*x8519))+((r01*x8517)));
evalcond[2]=((((-1.0)*r12*x8518))+(((-1.0)*gconst1*r11*x8519))+((r10*x8516)));
evalcond[3]=((1.0)+((r11*x8517))+(((-1.0)*r10*x8520))+(((-1.0)*r12*x8519)));
evalcond[4]=((((-1.0)*gconst1*r21*x8519))+((cj1*sj0))+(((-1.0)*r22*x8518))+((cj0*sj1))+((r20*x8516)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*r02*x8518))+(((-1.0)*cj0*cj1))+((r00*x8516))+(((-1.0)*gconst1*r01*x8519)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8521=((-1.0)*r20);
IkReal x8522=x8154;
CheckValue<IkReal> x8524 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8521),IKFAST_ATAN2_MAGTHRESH);
if(!x8524.valid){
continue;
}
IkReal x8523=((-1.0)*(x8524.value));
sj6=gconst1;
cj6=gconst2;
j6=x8523;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst0=x8523;
IkReal gconst1=(r21*x8522);
IkReal gconst2=(x8521*x8522);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x8525=((-1.0)*r20);
IkReal x8526=x8154;
CheckValue<IkReal> x8528 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8525),IKFAST_ATAN2_MAGTHRESH);
if(!x8528.valid){
continue;
}
IkReal x8527=((-1.0)*(x8528.value));
sj6=gconst1;
cj6=gconst2;
j6=x8527;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst0=x8527;
IkReal gconst1=(r21*x8526);
IkReal gconst2=(x8525*x8526);
IkReal x8529=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x8533=IKPowWithIntegerCheck(x8529,-1);
if(!x8533.valid){
continue;
}
IkReal x8530=x8533.value;
IkReal x8531=((1.0)*x8530);
IkReal x8532=((((-1.0)*(r12*r12)))+(((-2.0)*r10*r11*r20*r21*x8530))+(((-1.0)*x8531*(r10*r10)*(r20*r20)))+(((-1.0)*x8531*(r11*r11)*(r21*r21))));
j5eval[0]=x8532;
j5eval[1]=r12;
j5eval[2]=x8529;
j5eval[3]=IKsign(x8532);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8534=((-1.0)*r20);
IkReal x8535=x8154;
CheckValue<IkReal> x8537 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8534),IKFAST_ATAN2_MAGTHRESH);
if(!x8537.valid){
continue;
}
IkReal x8536=((-1.0)*(x8537.value));
sj6=gconst1;
cj6=gconst2;
j6=x8536;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst0=x8536;
IkReal gconst1=(r21*x8535);
IkReal gconst2=(x8534*x8535);
IkReal x8538=r22*r22;
IkReal x8539=(cj1*r12*sj0);
IkReal x8540=(cj0*r12*sj1);
CheckValue<IkReal> x8544=IKPowWithIntegerCheck(((-1.0)+x8538),-1);
if(!x8544.valid){
continue;
}
IkReal x8541=x8544.value;
if((((1.0)+(((-1.0)*x8538)))) < -0.00001)
continue;
IkReal x8542=IKsqrt(((1.0)+(((-1.0)*x8538))));
IkReal x8543=((1.0)*r22*x8541*x8542);
j5eval[0]=((IKabs((x8540+x8539)))+(IKabs(((((-1.0)*x8539*x8543))+(((-1.0)*x8540*x8543))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8545=((1.0)*gconst1);
IkReal x8546=(cj1*sj0);
IkReal x8547=(cj0*sj1);
IkReal x8548=(gconst2*r10);
CheckValue<IkReal> x8549 = IKatan2WithCheck(IkReal((((x8547*x8548))+((x8546*x8548))+(((-1.0)*r11*x8545*x8546))+(((-1.0)*r11*x8545*x8547)))),IkReal((((r12*x8547))+((r12*x8546)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8549.valid){
continue;
}
CheckValue<IkReal> x8550=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*x8545))+(((-1.0)*gconst2*r01)))),-1);
if(!x8550.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8549.value)+(((1.5707963267949)*(x8550.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8551=IKsin(j5);
IkReal x8552=IKcos(j5);
IkReal x8553=(gconst2*x8552);
IkReal x8554=(gconst1*x8551);
IkReal x8555=((1.0)*x8551);
IkReal x8556=((1.0)*x8552);
IkReal x8557=(gconst2*x8555);
evalcond[0]=(((r21*x8554))+(((-1.0)*r22*x8556))+(((-1.0)*r20*x8557)));
evalcond[1]=(((r01*x8554))+(((-1.0)*r00*x8557))+(((-1.0)*r02*x8556)));
evalcond[2]=((((-1.0)*r12*x8555))+((r10*x8553))+(((-1.0)*gconst1*r11*x8556)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x8556))+((r11*x8554))+(((-1.0)*r10*x8557)));
evalcond[4]=(((r20*x8553))+(((-1.0)*r22*x8555))+((cj1*sj0))+(((-1.0)*gconst1*r21*x8556))+((cj0*sj1)));
evalcond[5]=((((-1.0)*gconst1*r01*x8556))+((r00*x8553))+((cj0*cj1))+(((-1.0)*sj0*sj1))+(((-1.0)*r02*x8555)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8558=(gconst1*r11);
IkReal x8559=(gconst2*r10);
CheckValue<IkReal> x8560 = IKatan2WithCheck(IkReal((x8559+(((-1.0)*x8558)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x8560.valid){
continue;
}
CheckValue<IkReal> x8561=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x8559*x8559)))+(((-1.0)*(r12*r12)))+(((-1.0)*(x8558*x8558)))+(((2.0)*x8558*x8559)))),-1);
if(!x8561.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8560.value)+(((1.5707963267949)*(x8561.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8562=IKsin(j5);
IkReal x8563=IKcos(j5);
IkReal x8564=(gconst2*x8563);
IkReal x8565=(gconst1*x8562);
IkReal x8566=((1.0)*x8562);
IkReal x8567=((1.0)*x8563);
IkReal x8568=(gconst2*x8566);
evalcond[0]=((((-1.0)*r22*x8567))+(((-1.0)*r20*x8568))+((r21*x8565)));
evalcond[1]=((((-1.0)*r00*x8568))+(((-1.0)*r02*x8567))+((r01*x8565)));
evalcond[2]=((((-1.0)*r12*x8566))+((r10*x8564))+(((-1.0)*gconst1*r11*x8567)));
evalcond[3]=((-1.0)+((r11*x8565))+(((-1.0)*r12*x8567))+(((-1.0)*r10*x8568)));
evalcond[4]=(((cj1*sj0))+((r20*x8564))+(((-1.0)*r22*x8566))+(((-1.0)*gconst1*r21*x8567))+((cj0*sj1)));
evalcond[5]=(((r00*x8564))+((cj0*cj1))+(((-1.0)*sj0*sj1))+(((-1.0)*r02*x8566))+(((-1.0)*gconst1*r01*x8567)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x8569 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*gconst2*r20))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8569.valid){
continue;
}
CheckValue<IkReal> x8570=IKPowWithIntegerCheck(IKsign((((gconst1*r00))+((gconst2*r01)))),-1);
if(!x8570.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8569.value)+(((1.5707963267949)*(x8570.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8571=IKsin(j5);
IkReal x8572=IKcos(j5);
IkReal x8573=(gconst2*x8572);
IkReal x8574=(gconst1*x8571);
IkReal x8575=((1.0)*x8571);
IkReal x8576=((1.0)*x8572);
IkReal x8577=(gconst2*x8575);
evalcond[0]=((((-1.0)*r20*x8577))+((r21*x8574))+(((-1.0)*r22*x8576)));
evalcond[1]=((((-1.0)*r02*x8576))+((r01*x8574))+(((-1.0)*r00*x8577)));
evalcond[2]=((((-1.0)*gconst1*r11*x8576))+((r10*x8573))+(((-1.0)*r12*x8575)));
evalcond[3]=((-1.0)+((r11*x8574))+(((-1.0)*r10*x8577))+(((-1.0)*r12*x8576)));
evalcond[4]=(((cj1*sj0))+((r20*x8573))+(((-1.0)*gconst1*r21*x8576))+((cj0*sj1))+(((-1.0)*r22*x8575)));
evalcond[5]=((((-1.0)*r02*x8575))+((cj0*cj1))+((r00*x8573))+(((-1.0)*gconst1*r01*x8576))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8578=((-1.0)*r20);
IkReal x8579=x8154;
CheckValue<IkReal> x8581 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8578),IKFAST_ATAN2_MAGTHRESH);
if(!x8581.valid){
continue;
}
IkReal x8580=((-1.0)*(x8581.value));
sj6=gconst1;
cj6=gconst2;
j6=x8580;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst0=x8580;
IkReal gconst1=(r21*x8579);
IkReal gconst2=(x8578*x8579);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x8582=((-1.0)*r20);
IkReal x8583=x8154;
CheckValue<IkReal> x8585 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8582),IKFAST_ATAN2_MAGTHRESH);
if(!x8585.valid){
continue;
}
IkReal x8584=((-1.0)*(x8585.value));
sj6=gconst1;
cj6=gconst2;
j6=x8584;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst0=x8584;
IkReal gconst1=(r21*x8583);
IkReal gconst2=(x8582*x8583);
IkReal x8586=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x8590=IKPowWithIntegerCheck(x8586,-1);
if(!x8590.valid){
continue;
}
IkReal x8587=x8590.value;
IkReal x8588=((1.0)*x8587);
IkReal x8589=((((-1.0)*(r02*r02)))+(((-1.0)*x8588*(r01*r01)*(r21*r21)))+(((-2.0)*r00*r01*r20*r21*x8587))+(((-1.0)*x8588*(r00*r00)*(r20*r20))));
j5eval[0]=x8589;
j5eval[1]=IKsign(x8589);
j5eval[2]=r02;
j5eval[3]=x8586;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8591=((-1.0)*r20);
IkReal x8592=x8154;
CheckValue<IkReal> x8594 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8591),IKFAST_ATAN2_MAGTHRESH);
if(!x8594.valid){
continue;
}
IkReal x8593=((-1.0)*(x8594.value));
sj6=gconst1;
cj6=gconst2;
j6=x8593;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst0=x8593;
IkReal gconst1=(r21*x8592);
IkReal gconst2=(x8591*x8592);
IkReal x8595=r22*r22;
IkReal x8596=(cj1*sj0);
IkReal x8597=(cj0*sj1);
CheckValue<IkReal> x8601=IKPowWithIntegerCheck(((-1.0)+x8595),-1);
if(!x8601.valid){
continue;
}
IkReal x8598=x8601.value;
if((((1.0)+(((-1.0)*x8595)))) < -0.00001)
continue;
IkReal x8599=IKsqrt(((1.0)+(((-1.0)*x8595))));
IkReal x8600=((1.0)*r02*r22*x8598*x8599);
j5eval[0]=((IKabs((((r02*x8596))+((r02*x8597)))))+(IKabs(((((-1.0)*x8597*x8600))+(((-1.0)*x8596*x8600))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8602=(cj0*sj1);
IkReal x8603=(cj1*sj0);
IkReal x8604=(gconst2*r00);
IkReal x8605=((1.0)*gconst1*r01);
CheckValue<IkReal> x8606 = IKatan2WithCheck(IkReal(((((-1.0)*x8602*x8605))+((x8602*x8604))+(((-1.0)*x8603*x8605))+((x8603*x8604)))),IkReal((((r02*x8602))+((r02*x8603)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8606.valid){
continue;
}
CheckValue<IkReal> x8607=IKPowWithIntegerCheck(IKsign((((gconst1*r10))+((gconst2*r11)))),-1);
if(!x8607.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8606.value)+(((1.5707963267949)*(x8607.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8608=IKsin(j5);
IkReal x8609=IKcos(j5);
IkReal x8610=(gconst2*x8609);
IkReal x8611=(gconst1*x8608);
IkReal x8612=((1.0)*x8608);
IkReal x8613=((1.0)*x8609);
IkReal x8614=(gconst2*x8612);
evalcond[0]=((((-1.0)*r22*x8613))+(((-1.0)*r20*x8614))+((r21*x8611)));
evalcond[1]=(((r11*x8611))+(((-1.0)*r12*x8613))+(((-1.0)*r10*x8614)));
evalcond[2]=((((-1.0)*r02*x8612))+((r00*x8610))+(((-1.0)*gconst1*r01*x8613)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x8613))+(((-1.0)*r00*x8614))+((r01*x8611)));
evalcond[4]=((((-1.0)*gconst1*r21*x8613))+((r20*x8610))+((cj1*sj0))+(((-1.0)*r22*x8612))+((cj0*sj1)));
evalcond[5]=((((-1.0)*gconst1*r11*x8613))+((r10*x8610))+(((-1.0)*r12*x8612))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8615=(gconst2*r00);
IkReal x8616=(gconst1*r01);
CheckValue<IkReal> x8617 = IKatan2WithCheck(IkReal((x8615+(((-1.0)*x8616)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x8617.valid){
continue;
}
CheckValue<IkReal> x8618=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x8616*x8616)))+(((-1.0)*(r02*r02)))+(((-1.0)*(x8615*x8615)))+(((2.0)*x8615*x8616)))),-1);
if(!x8618.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8617.value)+(((1.5707963267949)*(x8618.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8619=IKsin(j5);
IkReal x8620=IKcos(j5);
IkReal x8621=(gconst2*x8620);
IkReal x8622=(gconst1*x8619);
IkReal x8623=((1.0)*x8619);
IkReal x8624=((1.0)*x8620);
IkReal x8625=(gconst2*x8623);
evalcond[0]=(((r21*x8622))+(((-1.0)*r22*x8624))+(((-1.0)*r20*x8625)));
evalcond[1]=((((-1.0)*r12*x8624))+(((-1.0)*r10*x8625))+((r11*x8622)));
evalcond[2]=(((r00*x8621))+(((-1.0)*gconst1*r01*x8624))+(((-1.0)*r02*x8623)));
evalcond[3]=((-1.0)+(((-1.0)*r00*x8625))+((r01*x8622))+(((-1.0)*r02*x8624)));
evalcond[4]=(((cj1*sj0))+((r20*x8621))+(((-1.0)*r22*x8623))+((cj0*sj1))+(((-1.0)*gconst1*r21*x8624)));
evalcond[5]=((((-1.0)*r12*x8623))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r10*x8621))+(((-1.0)*gconst1*r11*x8624)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8626=((1.0)*gconst2);
CheckValue<IkReal> x8627 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst1*r21))+(((-1.0)*r20*x8626)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8627.valid){
continue;
}
CheckValue<IkReal> x8628=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x8626))+(((-1.0)*gconst1*r10)))),-1);
if(!x8628.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8627.value)+(((1.5707963267949)*(x8628.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8629=IKsin(j5);
IkReal x8630=IKcos(j5);
IkReal x8631=(gconst2*x8630);
IkReal x8632=(gconst1*x8629);
IkReal x8633=((1.0)*x8629);
IkReal x8634=((1.0)*x8630);
IkReal x8635=(gconst2*x8633);
evalcond[0]=(((r21*x8632))+(((-1.0)*r22*x8634))+(((-1.0)*r20*x8635)));
evalcond[1]=((((-1.0)*r12*x8634))+(((-1.0)*r10*x8635))+((r11*x8632)));
evalcond[2]=((((-1.0)*gconst1*r01*x8634))+((r00*x8631))+(((-1.0)*r02*x8633)));
evalcond[3]=((-1.0)+(((-1.0)*r00*x8635))+((r01*x8632))+(((-1.0)*r02*x8634)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*r22*x8633))+((r20*x8631))+(((-1.0)*gconst1*r21*x8634))+((cj0*sj1)));
evalcond[5]=((((-1.0)*gconst1*r11*x8634))+(((-1.0)*r12*x8633))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r10*x8631)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8636=((-1.0)*r20);
IkReal x8637=x8154;
CheckValue<IkReal> x8639 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8636),IKFAST_ATAN2_MAGTHRESH);
if(!x8639.valid){
continue;
}
IkReal x8638=((-1.0)*(x8639.value));
sj6=gconst1;
cj6=gconst2;
j6=x8638;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst0=x8638;
IkReal gconst1=(r21*x8637);
IkReal gconst2=(x8636*x8637);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x8640=((-1.0)*r20);
IkReal x8641=x8154;
CheckValue<IkReal> x8643 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8640),IKFAST_ATAN2_MAGTHRESH);
if(!x8643.valid){
continue;
}
IkReal x8642=((-1.0)*(x8643.value));
sj6=gconst1;
cj6=gconst2;
j6=x8642;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst0=x8642;
IkReal gconst1=(r21*x8641);
IkReal gconst2=(x8640*x8641);
j5eval[0]=r02;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8644=((-1.0)*r20);
IkReal x8645=x8154;
CheckValue<IkReal> x8647 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8644),IKFAST_ATAN2_MAGTHRESH);
if(!x8647.valid){
continue;
}
IkReal x8646=((-1.0)*(x8647.value));
sj6=gconst1;
cj6=gconst2;
j6=x8646;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst0=x8646;
IkReal gconst1=(r21*x8645);
IkReal gconst2=(x8644*x8645);
IkReal x8648=r22*r22;
IkReal x8649=(cj1*sj0);
IkReal x8650=(cj0*sj1);
CheckValue<IkReal> x8654=IKPowWithIntegerCheck(((-1.0)+x8648),-1);
if(!x8654.valid){
continue;
}
IkReal x8651=x8654.value;
if((((1.0)+(((-1.0)*x8648)))) < -0.00001)
continue;
IkReal x8652=IKsqrt(((1.0)+(((-1.0)*x8648))));
IkReal x8653=((1.0)*r02*r22*x8651*x8652);
j5eval[0]=((IKabs((((r02*x8649))+((r02*x8650)))))+(IKabs(((((-1.0)*x8650*x8653))+(((-1.0)*x8649*x8653))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8655=(cj0*sj1);
IkReal x8656=(cj1*sj0);
IkReal x8657=(gconst2*r00);
IkReal x8658=((1.0)*gconst1*r01);
CheckValue<IkReal> x8659 = IKatan2WithCheck(IkReal(((((-1.0)*x8656*x8658))+(((-1.0)*x8655*x8658))+((x8655*x8657))+((x8656*x8657)))),IkReal((((r02*x8656))+((r02*x8655)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8659.valid){
continue;
}
CheckValue<IkReal> x8660=IKPowWithIntegerCheck(IKsign((((gconst1*r10))+((gconst2*r11)))),-1);
if(!x8660.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8659.value)+(((1.5707963267949)*(x8660.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8661=IKsin(j5);
IkReal x8662=IKcos(j5);
IkReal x8663=(gconst2*x8662);
IkReal x8664=(gconst1*x8661);
IkReal x8665=((1.0)*x8661);
IkReal x8666=((1.0)*x8662);
IkReal x8667=(gconst2*x8665);
evalcond[0]=((((-1.0)*r22*x8666))+(((-1.0)*r20*x8667))+((r21*x8664)));
evalcond[1]=((((-1.0)*r12*x8666))+((r11*x8664))+(((-1.0)*r10*x8667)));
evalcond[2]=((((-1.0)*gconst1*r01*x8666))+(((-1.0)*r02*x8665))+((r00*x8663)));
evalcond[3]=((1.0)+(((-1.0)*r00*x8667))+(((-1.0)*r02*x8666))+((r01*x8664)));
evalcond[4]=(((r20*x8663))+((cj1*sj0))+(((-1.0)*r22*x8665))+((cj0*sj1))+(((-1.0)*gconst1*r21*x8666)));
evalcond[5]=((((-1.0)*r12*x8665))+((cj0*cj1))+((r10*x8663))+(((-1.0)*sj0*sj1))+(((-1.0)*gconst1*r11*x8666)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8668=(gconst1*r01);
IkReal x8669=(gconst2*r00);
CheckValue<IkReal> x8670=IKPowWithIntegerCheck(IKsign(((((-2.0)*x8668*x8669))+(x8668*x8668)+(x8669*x8669)+(r02*r02))),-1);
if(!x8670.valid){
continue;
}
CheckValue<IkReal> x8671 = IKatan2WithCheck(IkReal((x8669+(((-1.0)*x8668)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x8671.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8670.value)))+(x8671.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8672=IKsin(j5);
IkReal x8673=IKcos(j5);
IkReal x8674=(gconst2*x8673);
IkReal x8675=(gconst1*x8672);
IkReal x8676=((1.0)*x8672);
IkReal x8677=((1.0)*x8673);
IkReal x8678=(gconst2*x8676);
evalcond[0]=((((-1.0)*r22*x8677))+(((-1.0)*r20*x8678))+((r21*x8675)));
evalcond[1]=((((-1.0)*r12*x8677))+((r11*x8675))+(((-1.0)*r10*x8678)));
evalcond[2]=((((-1.0)*r02*x8676))+((r00*x8674))+(((-1.0)*gconst1*r01*x8677)));
evalcond[3]=((1.0)+(((-1.0)*r02*x8677))+(((-1.0)*r00*x8678))+((r01*x8675)));
evalcond[4]=(((r20*x8674))+(((-1.0)*r22*x8676))+((cj1*sj0))+(((-1.0)*gconst1*r21*x8677))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r12*x8676))+((cj0*cj1))+((r10*x8674))+(((-1.0)*sj0*sj1))+(((-1.0)*gconst1*r11*x8677)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x8679 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*gconst2*r20))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8679.valid){
continue;
}
CheckValue<IkReal> x8680=IKPowWithIntegerCheck(IKsign((((gconst1*r10))+((gconst2*r11)))),-1);
if(!x8680.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8679.value)+(((1.5707963267949)*(x8680.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8681=IKsin(j5);
IkReal x8682=IKcos(j5);
IkReal x8683=(gconst2*x8682);
IkReal x8684=(gconst1*x8681);
IkReal x8685=((1.0)*x8681);
IkReal x8686=((1.0)*x8682);
IkReal x8687=(gconst2*x8685);
evalcond[0]=((((-1.0)*r22*x8686))+(((-1.0)*r20*x8687))+((r21*x8684)));
evalcond[1]=((((-1.0)*r12*x8686))+((r11*x8684))+(((-1.0)*r10*x8687)));
evalcond[2]=((((-1.0)*r02*x8685))+((r00*x8683))+(((-1.0)*gconst1*r01*x8686)));
evalcond[3]=((1.0)+(((-1.0)*r00*x8687))+(((-1.0)*r02*x8686))+((r01*x8684)));
evalcond[4]=((((-1.0)*gconst1*r21*x8686))+((r20*x8683))+((cj1*sj0))+(((-1.0)*r22*x8685))+((cj0*sj1)));
evalcond[5]=(((cj0*cj1))+(((-1.0)*r12*x8685))+((r10*x8683))+(((-1.0)*sj0*sj1))+(((-1.0)*gconst1*r11*x8686)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8688=((-1.0)*r20);
IkReal x8689=((-1.0)*px);
CheckValue<IkReal> x8691 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8688),IKFAST_ATAN2_MAGTHRESH);
if(!x8691.valid){
continue;
}
IkReal x8690=((-1.0)*(x8691.value));
sj6=gconst1;
cj6=gconst2;
j6=x8690;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x8689);
rxp1_1=(px*r21);
rxp1_2=(r11*x8689);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst0=x8690;
IkReal gconst1=r21;
IkReal gconst2=x8688;
j5eval[0]=((-1.0)+(((-1.0)*(r21*r21)))+(r10*r10));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x8694=IKPowWithIntegerCheck((((gconst2*r20))+(((-1.0)*gconst1*r21))),-1);
if(!x8694.valid){
continue;
}
IkReal x8692=x8694.value;
IkReal x8693=((1.0)*x8692);
cj5array[0]=((((-1.0)*cj0*sj1*x8693))+(((-1.0)*cj1*sj0*x8693)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x8695=IKsin(j5);
IkReal x8696=(gconst1*x8695);
IkReal x8697=((1.0)*gconst2*x8695);
evalcond[0]=((-1.0)*r02*x8695);
evalcond[1]=(((r21*x8696))+(((-1.0)*r20*x8697)));
evalcond[2]=((((-1.0)*r10*x8697))+((r11*x8696)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8698=(cj0*sj1);
IkReal x8699=(gconst1*r21);
IkReal x8700=(gconst2*r20);
IkReal x8701=(cj1*sj0);
CheckValue<IkReal> x8702 = IKatan2WithCheck(IkReal((((r22*x8698))+((r22*x8701)))),IkReal(((((-1.0)*x8700*x8701))+((x8698*x8699))+(((-1.0)*x8698*x8700))+((x8699*x8701)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8702.valid){
continue;
}
CheckValue<IkReal> x8703=IKPowWithIntegerCheck(IKsign(((((-2.0)*x8699*x8700))+(x8699*x8699)+(r22*r22)+(x8700*x8700))),-1);
if(!x8703.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8702.value)+(((1.5707963267949)*(x8703.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8704=IKsin(j5);
IkReal x8705=IKcos(j5);
IkReal x8706=(sj0*sj1);
IkReal x8707=(gconst1*r11);
IkReal x8708=((1.0)*cj0*cj1);
IkReal x8709=(gconst2*x8705);
IkReal x8710=((1.0)*x8704);
IkReal x8711=((1.0)*x8705);
IkReal x8712=(gconst1*x8704);
IkReal x8713=(gconst2*x8710);
evalcond[0]=((((-1.0)*r20*x8713))+(((-1.0)*r22*x8711))+((r21*x8712)));
evalcond[1]=(((x8704*x8707))+cj2+(((-1.0)*r12*x8711))+(((-1.0)*r10*x8713)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x8711))+((r01*x8712))+(((-1.0)*r00*x8713)));
evalcond[3]=(((cj1*sj0))+(((-1.0)*gconst1*r21*x8711))+(((-1.0)*r22*x8710))+((r20*x8709))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x8708))+(((-1.0)*r02*x8710))+((cj2*x8706))+(((-1.0)*gconst1*r01*x8711))+((r00*x8709)));
evalcond[5]=((((-1.0)*x8707*x8711))+((r10*x8709))+(((-1.0)*sj2*x8708))+(((-1.0)*r12*x8710))+((sj2*x8706)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8714=((1.0)*gconst2);
CheckValue<IkReal> x8715=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst1*r10))+(((-1.0)*r11*x8714)))),-1);
if(!x8715.valid){
continue;
}
CheckValue<IkReal> x8716 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x8714))+((gconst1*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8716.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8715.value)))+(x8716.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8717=IKsin(j5);
IkReal x8718=IKcos(j5);
IkReal x8719=(sj0*sj1);
IkReal x8720=(gconst1*r11);
IkReal x8721=((1.0)*cj0*cj1);
IkReal x8722=(gconst2*x8718);
IkReal x8723=((1.0)*x8717);
IkReal x8724=((1.0)*x8718);
IkReal x8725=(gconst1*x8717);
IkReal x8726=(gconst2*x8723);
evalcond[0]=(((r21*x8725))+(((-1.0)*r20*x8726))+(((-1.0)*r22*x8724)));
evalcond[1]=(((x8717*x8720))+cj2+(((-1.0)*r10*x8726))+(((-1.0)*r12*x8724)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r02*x8724))+((r01*x8725))+(((-1.0)*r00*x8726)));
evalcond[3]=(((cj1*sj0))+((r20*x8722))+(((-1.0)*r22*x8723))+(((-1.0)*gconst1*r21*x8724))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj2*x8721))+((cj2*x8719))+(((-1.0)*gconst1*r01*x8724))+(((-1.0)*r02*x8723))+((r00*x8722)));
evalcond[5]=(((sj2*x8719))+(((-1.0)*x8720*x8724))+((r10*x8722))+(((-1.0)*sj2*x8721))+(((-1.0)*r12*x8723)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8727=((1.0)*gconst2);
CheckValue<IkReal> x8728=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst1*r00))+(((-1.0)*r01*x8727)))),-1);
if(!x8728.valid){
continue;
}
CheckValue<IkReal> x8729 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst1*r21))+(((-1.0)*cj2*r20*x8727)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8729.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8728.value)))+(x8729.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x8730=IKsin(j5);
IkReal x8731=IKcos(j5);
IkReal x8732=(sj0*sj1);
IkReal x8733=(gconst1*r11);
IkReal x8734=((1.0)*cj0*cj1);
IkReal x8735=(gconst2*x8731);
IkReal x8736=((1.0)*x8730);
IkReal x8737=((1.0)*x8731);
IkReal x8738=(gconst1*x8730);
IkReal x8739=(gconst2*x8736);
evalcond[0]=(((r21*x8738))+(((-1.0)*r20*x8739))+(((-1.0)*r22*x8737)));
evalcond[1]=(cj2+(((-1.0)*r10*x8739))+((x8730*x8733))+(((-1.0)*r12*x8737)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*r00*x8739))+(((-1.0)*r02*x8737))+((r01*x8738)));
evalcond[3]=(((cj1*sj0))+((r20*x8735))+(((-1.0)*r22*x8736))+((cj0*sj1))+(((-1.0)*gconst1*r21*x8737)));
evalcond[4]=((((-1.0)*cj2*x8734))+(((-1.0)*gconst1*r01*x8737))+((cj2*x8732))+(((-1.0)*r02*x8736))+((r00*x8735)));
evalcond[5]=(((r10*x8735))+(((-1.0)*sj2*x8734))+(((-1.0)*x8733*x8737))+((sj2*x8732))+(((-1.0)*r12*x8736)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8740=((-1.0)*r20);
IkReal x8741=x8154;
CheckValue<IkReal> x8743 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8740),IKFAST_ATAN2_MAGTHRESH);
if(!x8743.valid){
continue;
}
IkReal x8742=((-1.0)*(x8743.value));
sj6=gconst1;
cj6=gconst2;
j6=x8742;
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst0=x8742;
IkReal gconst1=(r21*x8741);
IkReal gconst2=(x8740*x8741);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8744=((-1.0)*r20);
IkReal x8745=x8154;
CheckValue<IkReal> x8747 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8744),IKFAST_ATAN2_MAGTHRESH);
if(!x8747.valid){
continue;
}
IkReal x8746=((-1.0)*(x8747.value));
sj6=gconst1;
cj6=gconst2;
j6=x8746;
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst0=x8746;
IkReal gconst1=(r21*x8745);
IkReal gconst2=(x8744*x8745);
CheckValue<IkReal> x8755=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r22*r22)))),-1);
if(!x8755.valid){
continue;
}
IkReal x8748=x8755.value;
IkReal x8749=(sj4*x8748);
IkReal x8750=(r10*x8749);
IkReal x8751=(r01*x8749);
IkReal x8752=(r00*x8749);
IkReal x8753=(r11*x8749);
IkReal x8754=(r20*r21*x8749);
j5eval[0]=IKsign((((r02*r12*sj4))+((r01*r20*r21*x8750))+((r11*r20*r21*x8752))+((r00*x8750*(r20*r20)))+((r11*x8751*(r21*r21)))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8756=gconst1*gconst1;
IkReal x8757=gconst2*gconst2;
IkReal x8758=(r11*sj4);
IkReal x8759=(r10*sj4);
IkReal x8760=(gconst1*gconst2);
IkReal x8761=(cj4*r11);
IkReal x8762=(cj4*r10);
IkReal x8763=(r01*x8756);
IkReal x8764=((1.0)*r00*x8757);
CheckValue<IkReal> x8765 = IKatan2WithCheck(IkReal((((gconst2*r02*x8758))+((gconst1*r02*x8759)))),IkReal(((((-1.0)*r00*x8759*x8760))+((x8759*x8763))+(((-1.0)*x8758*x8764))+((r01*x8758*x8760)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8765.valid){
continue;
}
CheckValue<IkReal> x8766=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj4*r02*r12))+((r01*x8760*x8762))+(((-1.0)*x8762*x8764))+(((-1.0)*x8761*x8763))+((r00*x8760*x8761)))),-1);
if(!x8766.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8765.value)+(((1.5707963267949)*(x8766.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x8767=IKsin(j5);
IkReal x8768=IKcos(j5);
IkReal x8769=(sj0*sj1);
IkReal x8770=(gconst1*r20);
IkReal x8771=((1.0)*cj0);
IkReal x8772=(gconst2*sj4);
IkReal x8773=(cj4*r21);
IkReal x8774=((1.0)*sj4);
IkReal x8775=(cj4*gconst2);
IkReal x8776=(gconst1*r10);
IkReal x8777=(cj1*sj0);
IkReal x8778=(gconst1*r00);
IkReal x8779=(cj1*x8771);
IkReal x8780=(r20*x8768);
IkReal x8781=(r22*x8767);
IkReal x8782=(gconst1*x8768);
IkReal x8783=((1.0)*x8768);
IkReal x8784=(cj4*x8767);
IkReal x8785=(gconst1*x8767);
IkReal x8786=((1.0)*gconst2*x8767);
IkReal x8787=(x8774*x8782);
evalcond[0]=(((r21*x8785))+(((-1.0)*r20*x8786))+(((-1.0)*r22*x8783)));
evalcond[1]=((((-1.0)*r02*x8783))+(((-1.0)*r00*x8786))+((r01*x8785)));
evalcond[2]=((1.0)+((r11*x8785))+(((-1.0)*r10*x8786))+(((-1.0)*r12*x8783)));
evalcond[3]=(((r12*x8784))+(((-1.0)*r10*x8775*x8783))+((cj4*r11*x8782))+((sj4*x8776))+((r11*x8772)));
evalcond[4]=((((-1.0)*r12*x8767*x8774))+((cj4*x8776))+((r11*x8775))+((r10*x8768*x8772))+(((-1.0)*r11*x8787)));
evalcond[5]=(x8777+((cj4*x8781))+(((-1.0)*x8775*x8780))+((x8773*x8782))+((sj4*x8770))+((r21*x8772))+((cj0*sj1)));
evalcond[6]=(((cj4*r01*x8782))+x8769+((r01*x8772))+((r02*x8784))+(((-1.0)*x8779))+(((-1.0)*r00*x8775*x8783))+((sj4*x8778)));
evalcond[7]=(((gconst2*x8773))+(((-1.0)*x8774*x8781))+x8769+(((-1.0)*x8779))+(((-1.0)*r21*x8787))+((cj4*x8770))+((x8772*x8780)));
evalcond[8]=((((-1.0)*r02*x8767*x8774))+((r01*x8775))+(((-1.0)*x8777))+((cj4*x8778))+((r00*x8768*x8772))+(((-1.0)*r01*x8787))+(((-1.0)*sj1*x8771)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8788=gconst1*gconst1;
IkReal x8789=gconst2*gconst2;
IkReal x8790=(cj4*r00);
IkReal x8791=(r01*sj4);
IkReal x8792=(cj4*r01);
IkReal x8793=((1.0)*r11);
IkReal x8794=(gconst1*gconst2);
IkReal x8795=(r00*sj4);
IkReal x8796=(cj4*r02);
IkReal x8797=((1.0)*r10*x8794);
CheckValue<IkReal> x8798 = IKatan2WithCheck(IkReal((((gconst2*r11*x8796))+((gconst1*r10*x8796)))),IkReal(((((-1.0)*x8789*x8790*x8793))+(((-1.0)*x8790*x8797))+((r11*x8792*x8794))+((r10*x8788*x8792)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8798.valid){
continue;
}
CheckValue<IkReal> x8799=IKPowWithIntegerCheck(IKsign((((r02*r12*sj4))+(((-1.0)*x8791*x8797))+((r11*x8788*x8791))+((r10*x8789*x8795))+(((-1.0)*x8793*x8794*x8795)))),-1);
if(!x8799.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8798.value)+(((1.5707963267949)*(x8799.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x8800=IKsin(j5);
IkReal x8801=IKcos(j5);
IkReal x8802=(sj0*sj1);
IkReal x8803=(gconst1*r20);
IkReal x8804=((1.0)*cj0);
IkReal x8805=(gconst2*sj4);
IkReal x8806=(cj4*r21);
IkReal x8807=((1.0)*sj4);
IkReal x8808=(cj4*gconst2);
IkReal x8809=(gconst1*r10);
IkReal x8810=(cj1*sj0);
IkReal x8811=(gconst1*r00);
IkReal x8812=(cj1*x8804);
IkReal x8813=(r20*x8801);
IkReal x8814=(r22*x8800);
IkReal x8815=(gconst1*x8801);
IkReal x8816=((1.0)*x8801);
IkReal x8817=(cj4*x8800);
IkReal x8818=(gconst1*x8800);
IkReal x8819=((1.0)*gconst2*x8800);
IkReal x8820=(x8807*x8815);
evalcond[0]=(((r21*x8818))+(((-1.0)*r22*x8816))+(((-1.0)*r20*x8819)));
evalcond[1]=((((-1.0)*r02*x8816))+((r01*x8818))+(((-1.0)*r00*x8819)));
evalcond[2]=((1.0)+(((-1.0)*r10*x8819))+(((-1.0)*r12*x8816))+((r11*x8818)));
evalcond[3]=(((r12*x8817))+((sj4*x8809))+(((-1.0)*r10*x8808*x8816))+((r11*x8805))+((cj4*r11*x8815)));
evalcond[4]=((((-1.0)*r11*x8820))+(((-1.0)*r12*x8800*x8807))+((r10*x8801*x8805))+((r11*x8808))+((cj4*x8809)));
evalcond[5]=(((r21*x8805))+((x8806*x8815))+x8810+((sj4*x8803))+((cj4*x8814))+(((-1.0)*x8808*x8813))+((cj0*sj1)));
evalcond[6]=(((cj4*r01*x8815))+x8802+((r02*x8817))+((sj4*x8811))+((r01*x8805))+(((-1.0)*x8812))+(((-1.0)*r00*x8808*x8816)));
evalcond[7]=((((-1.0)*x8807*x8814))+((gconst2*x8806))+(((-1.0)*r21*x8820))+x8802+((cj4*x8803))+(((-1.0)*x8812))+((x8805*x8813)));
evalcond[8]=(((r00*x8801*x8805))+(((-1.0)*x8810))+((cj4*x8811))+(((-1.0)*r01*x8820))+((r01*x8808))+(((-1.0)*r02*x8800*x8807))+(((-1.0)*sj1*x8804)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8821=((1.0)*gconst2);
CheckValue<IkReal> x8822 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x8821))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8822.valid){
continue;
}
CheckValue<IkReal> x8823=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst1*r00))+(((-1.0)*r01*x8821)))),-1);
if(!x8823.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8822.value)+(((1.5707963267949)*(x8823.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x8824=IKsin(j5);
IkReal x8825=IKcos(j5);
IkReal x8826=(sj0*sj1);
IkReal x8827=(gconst1*r20);
IkReal x8828=((1.0)*cj0);
IkReal x8829=(gconst2*sj4);
IkReal x8830=(cj4*r21);
IkReal x8831=((1.0)*sj4);
IkReal x8832=(cj4*gconst2);
IkReal x8833=(gconst1*r10);
IkReal x8834=(cj1*sj0);
IkReal x8835=(gconst1*r00);
IkReal x8836=(cj1*x8828);
IkReal x8837=(r20*x8825);
IkReal x8838=(r22*x8824);
IkReal x8839=(gconst1*x8825);
IkReal x8840=((1.0)*x8825);
IkReal x8841=(cj4*x8824);
IkReal x8842=(gconst1*x8824);
IkReal x8843=((1.0)*gconst2*x8824);
IkReal x8844=(x8831*x8839);
evalcond[0]=(((r21*x8842))+(((-1.0)*r20*x8843))+(((-1.0)*r22*x8840)));
evalcond[1]=((((-1.0)*r02*x8840))+((r01*x8842))+(((-1.0)*r00*x8843)));
evalcond[2]=((1.0)+(((-1.0)*r10*x8843))+((r11*x8842))+(((-1.0)*r12*x8840)));
evalcond[3]=(((sj4*x8833))+((r12*x8841))+((r11*x8829))+(((-1.0)*r10*x8832*x8840))+((cj4*r11*x8839)));
evalcond[4]=(((r11*x8832))+((cj4*x8833))+((r10*x8825*x8829))+(((-1.0)*r12*x8824*x8831))+(((-1.0)*r11*x8844)));
evalcond[5]=(((r21*x8829))+x8834+((x8830*x8839))+((sj4*x8827))+((cj4*x8838))+(((-1.0)*x8832*x8837))+((cj0*sj1)));
evalcond[6]=((((-1.0)*r00*x8832*x8840))+((sj4*x8835))+((r02*x8841))+x8826+((r01*x8829))+(((-1.0)*x8836))+((cj4*r01*x8839)));
evalcond[7]=(((gconst2*x8830))+x8826+(((-1.0)*r21*x8844))+((cj4*x8827))+(((-1.0)*x8836))+(((-1.0)*x8831*x8838))+((x8829*x8837)));
evalcond[8]=(((r00*x8825*x8829))+(((-1.0)*x8834))+((cj4*x8835))+(((-1.0)*r02*x8824*x8831))+(((-1.0)*r01*x8844))+(((-1.0)*sj1*x8828))+((r01*x8832)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8845=((-1.0)*r20);
IkReal x8846=x8154;
CheckValue<IkReal> x8848 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8845),IKFAST_ATAN2_MAGTHRESH);
if(!x8848.valid){
continue;
}
IkReal x8847=((-1.0)*(x8848.value));
sj6=gconst1;
cj6=gconst2;
j6=x8847;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst0=x8847;
IkReal gconst1=(r21*x8846);
IkReal gconst2=(x8845*x8846);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8849=((-1.0)*r20);
IkReal x8850=x8154;
CheckValue<IkReal> x8852 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8849),IKFAST_ATAN2_MAGTHRESH);
if(!x8852.valid){
continue;
}
IkReal x8851=((-1.0)*(x8852.value));
sj6=gconst1;
cj6=gconst2;
j6=x8851;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst0=x8851;
IkReal gconst1=(r21*x8850);
IkReal gconst2=(x8849*x8850);
CheckValue<IkReal> x8860=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r22*r22)))),-1);
if(!x8860.valid){
continue;
}
IkReal x8853=x8860.value;
IkReal x8854=(sj4*x8853);
IkReal x8855=(r10*x8854);
IkReal x8856=(r01*x8854);
IkReal x8857=(r00*x8854);
IkReal x8858=(r11*x8854);
IkReal x8859=(r20*r21*x8854);
j5eval[0]=IKsign((((r02*r12*sj4))+((r01*r20*r21*x8855))+((r00*x8855*(r20*r20)))+((r11*r20*r21*x8857))+((r11*x8856*(r21*r21)))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8861=gconst1*gconst1;
IkReal x8862=gconst2*gconst2;
IkReal x8863=(r11*sj4);
IkReal x8864=(r10*sj4);
IkReal x8865=(gconst1*gconst2);
IkReal x8866=(cj4*r11);
IkReal x8867=(cj4*r10);
IkReal x8868=(r01*x8861);
IkReal x8869=((1.0)*r00*x8862);
CheckValue<IkReal> x8870=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj4*r02*r12))+(((-1.0)*x8866*x8868))+(((-1.0)*x8867*x8869))+((r00*x8865*x8866))+((r01*x8865*x8867)))),-1);
if(!x8870.valid){
continue;
}
CheckValue<IkReal> x8871 = IKatan2WithCheck(IkReal((((gconst1*r02*x8864))+((gconst2*r02*x8863)))),IkReal(((((-1.0)*x8863*x8869))+(((-1.0)*r00*x8864*x8865))+((x8864*x8868))+((r01*x8863*x8865)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8871.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8870.value)))+(x8871.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x8872=IKsin(j5);
IkReal x8873=IKcos(j5);
IkReal x8874=(cj1*sj0);
IkReal x8875=(cj0*sj1);
IkReal x8876=(gconst1*r20);
IkReal x8877=(sj0*sj1);
IkReal x8878=(cj4*gconst2);
IkReal x8879=(gconst2*sj4);
IkReal x8880=(gconst1*r21);
IkReal x8881=((1.0)*sj4);
IkReal x8882=(gconst1*r10);
IkReal x8883=(cj0*cj1);
IkReal x8884=(gconst1*r00);
IkReal x8885=(r20*x8873);
IkReal x8886=(r22*x8872);
IkReal x8887=(cj4*x8873);
IkReal x8888=((1.0)*x8873);
IkReal x8889=(cj4*x8872);
IkReal x8890=(gconst1*x8872);
IkReal x8891=(x8875+x8874);
IkReal x8892=((1.0)*gconst2*x8872);
IkReal x8893=(gconst1*x8873*x8881);
evalcond[0]=((((-1.0)*r22*x8888))+(((-1.0)*r20*x8892))+((x8872*x8880)));
evalcond[1]=(((r01*x8890))+(((-1.0)*r00*x8892))+(((-1.0)*r02*x8888)));
evalcond[2]=((-1.0)+(((-1.0)*r12*x8888))+(((-1.0)*r10*x8892))+((r11*x8890)));
evalcond[3]=((((-1.0)*r10*x8878*x8888))+((r11*x8879))+((sj4*x8882))+((gconst1*r11*x8887))+((r12*x8889)));
evalcond[4]=(((r10*x8873*x8879))+((cj4*x8882))+((r11*x8878))+(((-1.0)*r11*x8893))+(((-1.0)*r12*x8872*x8881)));
evalcond[5]=(((cj4*x8886))+x8891+((r21*x8879))+((x8880*x8887))+(((-1.0)*x8878*x8885))+((sj4*x8876)));
evalcond[6]=((((-1.0)*x8877))+(((-1.0)*r00*x8878*x8888))+((r02*x8889))+x8883+((r01*x8879))+((sj4*x8884))+((gconst1*r01*x8887)));
evalcond[7]=((((-1.0)*r01*x8893))+((cj4*x8884))+x8891+((r01*x8878))+((r00*x8873*x8879))+(((-1.0)*r02*x8872*x8881)));
evalcond[8]=((((-1.0)*x8881*x8886))+(((-1.0)*x8883))+((x8879*x8885))+x8877+((r21*x8878))+((cj4*x8876))+(((-1.0)*x8873*x8880*x8881)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8894=gconst1*gconst1;
IkReal x8895=gconst2*gconst2;
IkReal x8896=(cj4*r00);
IkReal x8897=(r01*sj4);
IkReal x8898=(cj4*r01);
IkReal x8899=((1.0)*r11);
IkReal x8900=(gconst1*gconst2);
IkReal x8901=(r00*sj4);
IkReal x8902=(cj4*r02);
IkReal x8903=((1.0)*r10*x8900);
CheckValue<IkReal> x8904 = IKatan2WithCheck(IkReal((((gconst1*r10*x8902))+((gconst2*r11*x8902)))),IkReal((((r11*x8898*x8900))+(((-1.0)*x8896*x8903))+(((-1.0)*x8895*x8896*x8899))+((r10*x8894*x8898)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8904.valid){
continue;
}
CheckValue<IkReal> x8905=IKPowWithIntegerCheck(IKsign((((r02*r12*sj4))+(((-1.0)*x8899*x8900*x8901))+((r10*x8895*x8901))+(((-1.0)*x8897*x8903))+((r11*x8894*x8897)))),-1);
if(!x8905.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8904.value)+(((1.5707963267949)*(x8905.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x8906=IKsin(j5);
IkReal x8907=IKcos(j5);
IkReal x8908=(cj1*sj0);
IkReal x8909=(cj0*sj1);
IkReal x8910=(gconst1*r20);
IkReal x8911=(sj0*sj1);
IkReal x8912=(cj4*gconst2);
IkReal x8913=(gconst2*sj4);
IkReal x8914=(gconst1*r21);
IkReal x8915=((1.0)*sj4);
IkReal x8916=(gconst1*r10);
IkReal x8917=(cj0*cj1);
IkReal x8918=(gconst1*r00);
IkReal x8919=(r20*x8907);
IkReal x8920=(r22*x8906);
IkReal x8921=(cj4*x8907);
IkReal x8922=((1.0)*x8907);
IkReal x8923=(cj4*x8906);
IkReal x8924=(gconst1*x8906);
IkReal x8925=(x8909+x8908);
IkReal x8926=((1.0)*gconst2*x8906);
IkReal x8927=(gconst1*x8907*x8915);
evalcond[0]=((((-1.0)*r22*x8922))+(((-1.0)*r20*x8926))+((x8906*x8914)));
evalcond[1]=((((-1.0)*r02*x8922))+(((-1.0)*r00*x8926))+((r01*x8924)));
evalcond[2]=((-1.0)+(((-1.0)*r12*x8922))+((r11*x8924))+(((-1.0)*r10*x8926)));
evalcond[3]=(((sj4*x8916))+((r11*x8913))+((r12*x8923))+(((-1.0)*r10*x8912*x8922))+((gconst1*r11*x8921)));
evalcond[4]=((((-1.0)*r12*x8906*x8915))+((cj4*x8916))+((r10*x8907*x8913))+(((-1.0)*r11*x8927))+((r11*x8912)));
evalcond[5]=(((cj4*x8920))+((x8914*x8921))+x8925+((sj4*x8910))+((r21*x8913))+(((-1.0)*x8912*x8919)));
evalcond[6]=((((-1.0)*x8911))+((r01*x8913))+(((-1.0)*r00*x8912*x8922))+((gconst1*r01*x8921))+x8917+((r02*x8923))+((sj4*x8918)));
evalcond[7]=(((r01*x8912))+((cj4*x8918))+x8925+((r00*x8907*x8913))+(((-1.0)*r01*x8927))+(((-1.0)*r02*x8906*x8915)));
evalcond[8]=((((-1.0)*x8917))+((x8913*x8919))+((cj4*x8910))+x8911+(((-1.0)*x8907*x8914*x8915))+(((-1.0)*x8915*x8920))+((r21*x8912)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x8928 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*gconst2*r20))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8928.valid){
continue;
}
CheckValue<IkReal> x8929=IKPowWithIntegerCheck(IKsign((((gconst1*r00))+((gconst2*r01)))),-1);
if(!x8929.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x8928.value)+(((1.5707963267949)*(x8929.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x8930=IKsin(j5);
IkReal x8931=IKcos(j5);
IkReal x8932=(cj1*sj0);
IkReal x8933=(cj0*sj1);
IkReal x8934=(gconst1*r20);
IkReal x8935=(sj0*sj1);
IkReal x8936=(cj4*gconst2);
IkReal x8937=(gconst2*sj4);
IkReal x8938=(gconst1*r21);
IkReal x8939=((1.0)*sj4);
IkReal x8940=(gconst1*r10);
IkReal x8941=(cj0*cj1);
IkReal x8942=(gconst1*r00);
IkReal x8943=(r20*x8931);
IkReal x8944=(r22*x8930);
IkReal x8945=(cj4*x8931);
IkReal x8946=((1.0)*x8931);
IkReal x8947=(cj4*x8930);
IkReal x8948=(gconst1*x8930);
IkReal x8949=(x8932+x8933);
IkReal x8950=((1.0)*gconst2*x8930);
IkReal x8951=(gconst1*x8931*x8939);
evalcond[0]=((((-1.0)*r22*x8946))+(((-1.0)*r20*x8950))+((x8930*x8938)));
evalcond[1]=((((-1.0)*r00*x8950))+((r01*x8948))+(((-1.0)*r02*x8946)));
evalcond[2]=((-1.0)+(((-1.0)*r10*x8950))+((r11*x8948))+(((-1.0)*r12*x8946)));
evalcond[3]=(((sj4*x8940))+(((-1.0)*r10*x8936*x8946))+((gconst1*r11*x8945))+((r12*x8947))+((r11*x8937)));
evalcond[4]=((((-1.0)*r11*x8951))+(((-1.0)*r12*x8930*x8939))+((r10*x8931*x8937))+((cj4*x8940))+((r11*x8936)));
evalcond[5]=(((x8938*x8945))+((sj4*x8934))+x8949+(((-1.0)*x8936*x8943))+((cj4*x8944))+((r21*x8937)));
evalcond[6]=(((r02*x8947))+((sj4*x8942))+x8941+((gconst1*r01*x8945))+(((-1.0)*x8935))+((r01*x8937))+(((-1.0)*r00*x8936*x8946)));
evalcond[7]=((((-1.0)*r01*x8951))+x8949+((cj4*x8942))+(((-1.0)*r02*x8930*x8939))+((r01*x8936))+((r00*x8931*x8937)));
evalcond[8]=((((-1.0)*x8939*x8944))+(((-1.0)*x8931*x8938*x8939))+x8935+((cj4*x8934))+((x8937*x8943))+(((-1.0)*x8941))+((r21*x8936)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x8952=((-1.0)*r20);
IkReal x8953=x8154;
CheckValue<IkReal> x8955 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8952),IKFAST_ATAN2_MAGTHRESH);
if(!x8955.valid){
continue;
}
IkReal x8954=((-1.0)*(x8955.value));
sj6=gconst1;
cj6=gconst2;
j6=x8954;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst0=x8954;
IkReal gconst1=(r21*x8953);
IkReal gconst2=(x8952*x8953);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x8956=((-1.0)*r20);
IkReal x8957=x8154;
CheckValue<IkReal> x8959 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x8956),IKFAST_ATAN2_MAGTHRESH);
if(!x8959.valid){
continue;
}
IkReal x8958=((-1.0)*(x8959.value));
sj6=gconst1;
cj6=gconst2;
j6=x8958;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst0=x8958;
IkReal gconst1=(r21*x8957);
IkReal gconst2=(x8956*x8957);
CheckValue<IkReal> x8967=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r22*r22)))),-1);
if(!x8967.valid){
continue;
}
IkReal x8960=x8967.value;
IkReal x8961=(sj4*x8960);
IkReal x8962=(r10*x8961);
IkReal x8963=(r01*x8961);
IkReal x8964=(r00*x8961);
IkReal x8965=(r11*x8961);
IkReal x8966=(r20*r21*x8961);
j5eval[0]=IKsign((((r02*r12*sj4))+((r11*r20*r21*x8964))+((r01*r20*r21*x8962))+((r11*x8963*(r21*r21)))+((r00*x8962*(r20*r20)))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x8968=gconst1*gconst1;
IkReal x8969=gconst2*gconst2;
IkReal x8970=(r00*r11);
IkReal x8971=(gconst1*gconst2);
IkReal x8972=(r01*sj4);
IkReal x8973=(r00*sj4);
IkReal x8974=(cj4*r01);
IkReal x8975=((1.0)*r10*x8969);
CheckValue<IkReal> x8976=IKPowWithIntegerCheck(IKsign((((r10*x8971*x8974))+((cj4*x8970*x8971))+(((-1.0)*cj4*r02*r12))+(((-1.0)*cj4*r00*x8975))+(((-1.0)*r11*x8968*x8974)))),-1);
if(!x8976.valid){
continue;
}
CheckValue<IkReal> x8977 = IKatan2WithCheck(IkReal((((gconst1*r12*x8973))+((gconst2*r12*x8972)))),IkReal((((r11*x8971*x8972))+((sj4*x8968*x8970))+(((-1.0)*x8972*x8975))+(((-1.0)*r10*x8971*x8973)))),IKFAST_ATAN2_MAGTHRESH);
if(!x8977.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x8976.value)))+(x8977.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x8978=IKsin(j5);
IkReal x8979=IKcos(j5);
IkReal x8980=(sj0*sj1);
IkReal x8981=(gconst1*r20);
IkReal x8982=((1.0)*gconst1);
IkReal x8983=(cj4*gconst2);
IkReal x8984=(gconst2*r20);
IkReal x8985=(gconst2*sj4);
IkReal x8986=((1.0)*sj4);
IkReal x8987=(gconst2*r00);
IkReal x8988=(cj4*gconst1);
IkReal x8989=(gconst2*r10);
IkReal x8990=((1.0)*cj0);
IkReal x8991=(gconst1*sj4);
IkReal x8992=(cj1*sj0);
IkReal x8993=(cj1*x8990);
IkReal x8994=(sj4*x8979);
IkReal x8995=(r22*x8978);
IkReal x8996=((1.0)*x8978);
IkReal x8997=(cj4*x8978);
IkReal x8998=(gconst1*x8978);
IkReal x8999=((1.0)*x8979);
evalcond[0]=((((-1.0)*x8984*x8996))+((r21*x8998))+(((-1.0)*r22*x8999)));
evalcond[1]=((((-1.0)*r12*x8999))+((r11*x8998))+(((-1.0)*x8989*x8996)));
evalcond[2]=((-1.0)+(((-1.0)*x8987*x8996))+((r01*x8998))+(((-1.0)*r02*x8999)));
evalcond[3]=(((r01*x8985))+((r01*x8979*x8988))+((r00*x8991))+(((-1.0)*r00*x8983*x8999))+((r02*x8997)));
evalcond[4]=(((r00*x8988))+((r01*x8983))+(((-1.0)*r01*x8982*x8994))+((r00*x8979*x8985))+(((-1.0)*r02*x8978*x8986)));
evalcond[5]=(x8992+((sj4*x8981))+((cj4*x8995))+(((-1.0)*r20*x8983*x8999))+((r21*x8985))+((r21*x8979*x8988))+((cj0*sj1)));
evalcond[6]=(((r12*x8997))+x8980+((r10*x8991))+(((-1.0)*x8993))+((r11*x8985))+((r11*x8979*x8988))+(((-1.0)*r10*x8983*x8999)));
evalcond[7]=((((-1.0)*r21*x8982*x8994))+(((-1.0)*x8986*x8995))+((cj4*x8981))+x8980+(((-1.0)*x8993))+((r21*x8983))+((x8984*x8994)));
evalcond[8]=((((-1.0)*r12*x8978*x8986))+((r10*x8979*x8985))+((r11*x8983))+(((-1.0)*x8992))+(((-1.0)*sj1*x8990))+(((-1.0)*r11*x8982*x8994))+((r10*x8988)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9000=gconst1*gconst1;
IkReal x9001=gconst2*gconst2;
IkReal x9002=(r01*sj4);
IkReal x9003=(cj4*r00);
IkReal x9004=(cj4*r01);
IkReal x9005=(r00*sj4);
IkReal x9006=(r11*x9000);
IkReal x9007=(gconst1*gconst2*r11);
IkReal x9008=(r10*x9001);
IkReal x9009=((1.0)*gconst1*gconst2*r10);
CheckValue<IkReal> x9010 = IKatan2WithCheck(IkReal((((gconst2*r12*x9004))+((gconst1*r12*x9003)))),IkReal(((((-1.0)*x9003*x9009))+(((-1.0)*x9004*x9008))+((x9004*x9007))+((x9003*x9006)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9010.valid){
continue;
}
CheckValue<IkReal> x9011=IKPowWithIntegerCheck(IKsign((((r02*r12*sj4))+(((-1.0)*x9005*x9007))+((x9002*x9006))+((x9005*x9008))+(((-1.0)*x9002*x9009)))),-1);
if(!x9011.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9010.value)+(((1.5707963267949)*(x9011.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9012=IKsin(j5);
IkReal x9013=IKcos(j5);
IkReal x9014=(sj0*sj1);
IkReal x9015=(gconst1*r20);
IkReal x9016=((1.0)*gconst1);
IkReal x9017=(cj4*gconst2);
IkReal x9018=(gconst2*r20);
IkReal x9019=(gconst2*sj4);
IkReal x9020=((1.0)*sj4);
IkReal x9021=(gconst2*r00);
IkReal x9022=(cj4*gconst1);
IkReal x9023=(gconst2*r10);
IkReal x9024=((1.0)*cj0);
IkReal x9025=(gconst1*sj4);
IkReal x9026=(cj1*sj0);
IkReal x9027=(cj1*x9024);
IkReal x9028=(sj4*x9013);
IkReal x9029=(r22*x9012);
IkReal x9030=((1.0)*x9012);
IkReal x9031=(cj4*x9012);
IkReal x9032=(gconst1*x9012);
IkReal x9033=((1.0)*x9013);
evalcond[0]=((((-1.0)*x9018*x9030))+((r21*x9032))+(((-1.0)*r22*x9033)));
evalcond[1]=((((-1.0)*r12*x9033))+(((-1.0)*x9023*x9030))+((r11*x9032)));
evalcond[2]=((-1.0)+((r01*x9032))+(((-1.0)*x9021*x9030))+(((-1.0)*r02*x9033)));
evalcond[3]=((((-1.0)*r00*x9017*x9033))+((r00*x9025))+((r01*x9013*x9022))+((r02*x9031))+((r01*x9019)));
evalcond[4]=(((r00*x9022))+(((-1.0)*r02*x9012*x9020))+(((-1.0)*r01*x9016*x9028))+((r00*x9013*x9019))+((r01*x9017)));
evalcond[5]=((((-1.0)*r20*x9017*x9033))+x9026+((r21*x9013*x9022))+((sj4*x9015))+((cj0*sj1))+((r21*x9019))+((cj4*x9029)));
evalcond[6]=((((-1.0)*r10*x9017*x9033))+(((-1.0)*x9027))+((r11*x9013*x9022))+x9014+((r10*x9025))+((r12*x9031))+((r11*x9019)));
evalcond[7]=((((-1.0)*x9027))+((x9018*x9028))+(((-1.0)*x9020*x9029))+x9014+((cj4*x9015))+(((-1.0)*r21*x9016*x9028))+((r21*x9017)));
evalcond[8]=(((r10*x9013*x9019))+(((-1.0)*sj1*x9024))+(((-1.0)*r11*x9016*x9028))+((r10*x9022))+(((-1.0)*r12*x9012*x9020))+(((-1.0)*x9026))+((r11*x9017)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9034=((1.0)*gconst2);
CheckValue<IkReal> x9035=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x9034))+(((-1.0)*gconst1*r10)))),-1);
if(!x9035.valid){
continue;
}
CheckValue<IkReal> x9036 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x9034))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9036.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9035.value)))+(x9036.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9037=IKsin(j5);
IkReal x9038=IKcos(j5);
IkReal x9039=(sj0*sj1);
IkReal x9040=(gconst1*r20);
IkReal x9041=((1.0)*gconst1);
IkReal x9042=(cj4*gconst2);
IkReal x9043=(gconst2*r20);
IkReal x9044=(gconst2*sj4);
IkReal x9045=((1.0)*sj4);
IkReal x9046=(gconst2*r00);
IkReal x9047=(cj4*gconst1);
IkReal x9048=(gconst2*r10);
IkReal x9049=((1.0)*cj0);
IkReal x9050=(gconst1*sj4);
IkReal x9051=(cj1*sj0);
IkReal x9052=(cj1*x9049);
IkReal x9053=(sj4*x9038);
IkReal x9054=(r22*x9037);
IkReal x9055=((1.0)*x9037);
IkReal x9056=(cj4*x9037);
IkReal x9057=(gconst1*x9037);
IkReal x9058=((1.0)*x9038);
evalcond[0]=((((-1.0)*x9043*x9055))+(((-1.0)*r22*x9058))+((r21*x9057)));
evalcond[1]=((((-1.0)*r12*x9058))+((r11*x9057))+(((-1.0)*x9048*x9055)));
evalcond[2]=((-1.0)+(((-1.0)*r02*x9058))+(((-1.0)*x9046*x9055))+((r01*x9057)));
evalcond[3]=((((-1.0)*r00*x9042*x9058))+((r00*x9050))+((r01*x9044))+((r01*x9038*x9047))+((r02*x9056)));
evalcond[4]=((((-1.0)*r01*x9041*x9053))+((r01*x9042))+((r00*x9047))+(((-1.0)*r02*x9037*x9045))+((r00*x9038*x9044)));
evalcond[5]=(((r21*x9038*x9047))+(((-1.0)*r20*x9042*x9058))+((sj4*x9040))+x9051+((r21*x9044))+((cj0*sj1))+((cj4*x9054)));
evalcond[6]=(x9039+((r12*x9056))+(((-1.0)*r10*x9042*x9058))+((r10*x9050))+((r11*x9044))+((r11*x9038*x9047))+(((-1.0)*x9052)));
evalcond[7]=((((-1.0)*r21*x9041*x9053))+x9039+(((-1.0)*x9045*x9054))+(((-1.0)*x9052))+((x9043*x9053))+((r21*x9042))+((cj4*x9040)));
evalcond[8]=((((-1.0)*r11*x9041*x9053))+((r10*x9038*x9044))+(((-1.0)*r12*x9037*x9045))+(((-1.0)*sj1*x9049))+((r10*x9047))+((r11*x9042))+(((-1.0)*x9051)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x9059=((-1.0)*r20);
IkReal x9060=x8154;
CheckValue<IkReal> x9062 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x9059),IKFAST_ATAN2_MAGTHRESH);
if(!x9062.valid){
continue;
}
IkReal x9061=((-1.0)*(x9062.value));
sj6=gconst1;
cj6=gconst2;
j6=x9061;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst0=x9061;
IkReal gconst1=(r21*x9060);
IkReal gconst2=(x9059*x9060);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x9063=((-1.0)*r20);
IkReal x9064=x8154;
CheckValue<IkReal> x9066 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x9063),IKFAST_ATAN2_MAGTHRESH);
if(!x9066.valid){
continue;
}
IkReal x9065=((-1.0)*(x9066.value));
sj6=gconst1;
cj6=gconst2;
j6=x9065;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst0=x9065;
IkReal gconst1=(r21*x9064);
IkReal gconst2=(x9063*x9064);
CheckValue<IkReal> x9074=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r22*r22)))),-1);
if(!x9074.valid){
continue;
}
IkReal x9067=x9074.value;
IkReal x9068=(sj4*x9067);
IkReal x9069=(r10*x9068);
IkReal x9070=(r01*x9068);
IkReal x9071=(r00*x9068);
IkReal x9072=(r11*x9068);
IkReal x9073=(r20*r21*x9068);
j5eval[0]=IKsign((((r02*r12*sj4))+((r01*r20*r21*x9069))+((r00*x9069*(r20*r20)))+((r11*r20*r21*x9071))+((r11*x9070*(r21*r21)))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9075=gconst1*gconst1;
IkReal x9076=gconst2*gconst2;
IkReal x9077=(r00*r11);
IkReal x9078=(gconst1*gconst2);
IkReal x9079=(r01*sj4);
IkReal x9080=(r00*sj4);
IkReal x9081=(cj4*r01);
IkReal x9082=((1.0)*r10*x9076);
CheckValue<IkReal> x9083 = IKatan2WithCheck(IkReal((((gconst1*r12*x9080))+((gconst2*r12*x9079)))),IkReal(((((-1.0)*r10*x9078*x9080))+((sj4*x9075*x9077))+(((-1.0)*x9079*x9082))+((r11*x9078*x9079)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9083.valid){
continue;
}
CheckValue<IkReal> x9084=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x9075*x9081))+(((-1.0)*cj4*r02*r12))+((cj4*x9077*x9078))+(((-1.0)*cj4*r00*x9082))+((r10*x9078*x9081)))),-1);
if(!x9084.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9083.value)+(((1.5707963267949)*(x9084.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9085=IKsin(j5);
IkReal x9086=IKcos(j5);
IkReal x9087=(cj1*sj0);
IkReal x9088=(cj0*sj1);
IkReal x9089=(gconst1*r20);
IkReal x9090=(sj0*sj1);
IkReal x9091=((1.0)*gconst1);
IkReal x9092=(cj4*gconst2);
IkReal x9093=(gconst2*r20);
IkReal x9094=(gconst2*sj4);
IkReal x9095=((1.0)*sj4);
IkReal x9096=(gconst2*r00);
IkReal x9097=(cj4*gconst1);
IkReal x9098=(gconst2*r10);
IkReal x9099=(cj0*cj1);
IkReal x9100=(gconst1*sj4);
IkReal x9101=(sj4*x9086);
IkReal x9102=(r22*x9085);
IkReal x9103=((1.0)*x9085);
IkReal x9104=(cj4*x9085);
IkReal x9105=(gconst1*x9085);
IkReal x9106=((1.0)*x9086);
IkReal x9107=(x9088+x9087);
evalcond[0]=((((-1.0)*x9093*x9103))+(((-1.0)*r22*x9106))+((r21*x9105)));
evalcond[1]=((((-1.0)*r12*x9106))+((r11*x9105))+(((-1.0)*x9098*x9103)));
evalcond[2]=((1.0)+(((-1.0)*r02*x9106))+(((-1.0)*x9096*x9103))+((r01*x9105)));
evalcond[3]=((((-1.0)*r00*x9092*x9106))+((r01*x9094))+((r01*x9086*x9097))+((r02*x9104))+((r00*x9100)));
evalcond[4]=(((r00*x9086*x9094))+((r00*x9097))+((r01*x9092))+(((-1.0)*r01*x9091*x9101))+(((-1.0)*r02*x9085*x9095)));
evalcond[5]=(((sj4*x9089))+x9107+(((-1.0)*r20*x9092*x9106))+((r21*x9094))+((cj4*x9102))+((r21*x9086*x9097)));
evalcond[6]=(((r11*x9094))+((r10*x9100))+x9099+((r12*x9104))+((r11*x9086*x9097))+(((-1.0)*x9090))+(((-1.0)*r10*x9092*x9106)));
evalcond[7]=(((r11*x9092))+((r10*x9097))+x9107+((r10*x9086*x9094))+(((-1.0)*r12*x9085*x9095))+(((-1.0)*r11*x9091*x9101)));
evalcond[8]=((((-1.0)*r21*x9091*x9101))+(((-1.0)*x9095*x9102))+x9090+((r21*x9092))+(((-1.0)*x9099))+((x9093*x9101))+((cj4*x9089)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9108=gconst1*gconst1;
IkReal x9109=gconst2*gconst2;
IkReal x9110=(r01*sj4);
IkReal x9111=(cj4*r00);
IkReal x9112=(cj4*r01);
IkReal x9113=(r00*sj4);
IkReal x9114=(r11*x9108);
IkReal x9115=(gconst1*gconst2*r11);
IkReal x9116=(r10*x9109);
IkReal x9117=((1.0)*gconst1*gconst2*r10);
CheckValue<IkReal> x9118 = IKatan2WithCheck(IkReal((((gconst2*r12*x9112))+((gconst1*r12*x9111)))),IkReal((((x9111*x9114))+(((-1.0)*x9111*x9117))+((x9112*x9115))+(((-1.0)*x9112*x9116)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9118.valid){
continue;
}
CheckValue<IkReal> x9119=IKPowWithIntegerCheck(IKsign((((r02*r12*sj4))+(((-1.0)*x9113*x9115))+(((-1.0)*x9110*x9117))+((x9113*x9116))+((x9110*x9114)))),-1);
if(!x9119.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9118.value)+(((1.5707963267949)*(x9119.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9120=IKsin(j5);
IkReal x9121=IKcos(j5);
IkReal x9122=(cj1*sj0);
IkReal x9123=(cj0*sj1);
IkReal x9124=(gconst1*r20);
IkReal x9125=(sj0*sj1);
IkReal x9126=((1.0)*gconst1);
IkReal x9127=(cj4*gconst2);
IkReal x9128=(gconst2*r20);
IkReal x9129=(gconst2*sj4);
IkReal x9130=((1.0)*sj4);
IkReal x9131=(gconst2*r00);
IkReal x9132=(cj4*gconst1);
IkReal x9133=(gconst2*r10);
IkReal x9134=(cj0*cj1);
IkReal x9135=(gconst1*sj4);
IkReal x9136=(sj4*x9121);
IkReal x9137=(r22*x9120);
IkReal x9138=((1.0)*x9120);
IkReal x9139=(cj4*x9120);
IkReal x9140=(gconst1*x9120);
IkReal x9141=((1.0)*x9121);
IkReal x9142=(x9122+x9123);
evalcond[0]=((((-1.0)*x9128*x9138))+((r21*x9140))+(((-1.0)*r22*x9141)));
evalcond[1]=((((-1.0)*x9133*x9138))+(((-1.0)*r12*x9141))+((r11*x9140)));
evalcond[2]=((1.0)+(((-1.0)*x9131*x9138))+((r01*x9140))+(((-1.0)*r02*x9141)));
evalcond[3]=(((r02*x9139))+((r01*x9129))+((r00*x9135))+(((-1.0)*r00*x9127*x9141))+((r01*x9121*x9132)));
evalcond[4]=((((-1.0)*r02*x9120*x9130))+((r00*x9121*x9129))+(((-1.0)*r01*x9126*x9136))+((r01*x9127))+((r00*x9132)));
evalcond[5]=(x9142+(((-1.0)*r20*x9127*x9141))+((r21*x9121*x9132))+((cj4*x9137))+((sj4*x9124))+((r21*x9129)));
evalcond[6]=(((r10*x9135))+x9134+((r11*x9121*x9132))+((r12*x9139))+(((-1.0)*r10*x9127*x9141))+((r11*x9129))+(((-1.0)*x9125)));
evalcond[7]=(((r10*x9132))+x9142+(((-1.0)*r11*x9126*x9136))+((r10*x9121*x9129))+(((-1.0)*r12*x9120*x9130))+((r11*x9127)));
evalcond[8]=((((-1.0)*x9134))+((x9128*x9136))+(((-1.0)*r21*x9126*x9136))+(((-1.0)*x9130*x9137))+x9125+((cj4*x9124))+((r21*x9127)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9143 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*gconst2*r20))+((gconst1*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9143.valid){
continue;
}
CheckValue<IkReal> x9144=IKPowWithIntegerCheck(IKsign((((gconst1*r10))+((gconst2*r11)))),-1);
if(!x9144.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9143.value)+(((1.5707963267949)*(x9144.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9145=IKsin(j5);
IkReal x9146=IKcos(j5);
IkReal x9147=(cj1*sj0);
IkReal x9148=(cj0*sj1);
IkReal x9149=(gconst1*r20);
IkReal x9150=(sj0*sj1);
IkReal x9151=((1.0)*gconst1);
IkReal x9152=(cj4*gconst2);
IkReal x9153=(gconst2*r20);
IkReal x9154=(gconst2*sj4);
IkReal x9155=((1.0)*sj4);
IkReal x9156=(gconst2*r00);
IkReal x9157=(cj4*gconst1);
IkReal x9158=(gconst2*r10);
IkReal x9159=(cj0*cj1);
IkReal x9160=(gconst1*sj4);
IkReal x9161=(sj4*x9146);
IkReal x9162=(r22*x9145);
IkReal x9163=((1.0)*x9145);
IkReal x9164=(cj4*x9145);
IkReal x9165=(gconst1*x9145);
IkReal x9166=((1.0)*x9146);
IkReal x9167=(x9148+x9147);
evalcond[0]=((((-1.0)*r22*x9166))+((r21*x9165))+(((-1.0)*x9153*x9163)));
evalcond[1]=((((-1.0)*r12*x9166))+((r11*x9165))+(((-1.0)*x9158*x9163)));
evalcond[2]=((1.0)+((r01*x9165))+(((-1.0)*x9156*x9163))+(((-1.0)*r02*x9166)));
evalcond[3]=(((r00*x9160))+(((-1.0)*r00*x9152*x9166))+((r02*x9164))+((r01*x9146*x9157))+((r01*x9154)));
evalcond[4]=(((r00*x9146*x9154))+(((-1.0)*r02*x9145*x9155))+(((-1.0)*r01*x9151*x9161))+((r01*x9152))+((r00*x9157)));
evalcond[5]=((((-1.0)*r20*x9152*x9166))+x9167+((cj4*x9162))+((sj4*x9149))+((r21*x9154))+((r21*x9146*x9157)));
evalcond[6]=(((r11*x9154))+x9159+((r10*x9160))+((r12*x9164))+(((-1.0)*x9150))+((r11*x9146*x9157))+(((-1.0)*r10*x9152*x9166)));
evalcond[7]=(((r11*x9152))+x9167+(((-1.0)*r12*x9145*x9155))+(((-1.0)*r11*x9151*x9161))+((r10*x9146*x9154))+((r10*x9157)));
evalcond[8]=((((-1.0)*x9155*x9162))+((x9153*x9161))+(((-1.0)*r21*x9151*x9161))+x9150+((cj4*x9149))+((r21*x9152))+(((-1.0)*x9159)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x9168=((-1.0)*r20);
IkReal x9169=((-1.0)*px);
CheckValue<IkReal> x9171 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x9168),IKFAST_ATAN2_MAGTHRESH);
if(!x9171.valid){
continue;
}
IkReal x9170=((-1.0)*(x9171.value));
sj6=gconst1;
cj6=gconst2;
j6=x9170;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x9169);
rxp1_1=(px*r21);
rxp1_2=(r11*x9169);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst0=x9170;
IkReal gconst1=r21;
IkReal gconst2=x9168;
j5eval[0]=(((r11*r21))+((r10*r20)));
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x9172=((-1.0)*r20);
IkReal x9173=((-1.0)*px);
CheckValue<IkReal> x9175 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x9172),IKFAST_ATAN2_MAGTHRESH);
if(!x9175.valid){
continue;
}
IkReal x9174=((-1.0)*(x9175.value));
sj6=gconst1;
cj6=gconst2;
j6=x9174;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x9173);
rxp1_1=(px*r21);
rxp1_2=(r11*x9173);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst0=x9174;
IkReal gconst1=r21;
IkReal gconst2=x9172;
j5eval[0]=(((r11*r21))+((r10*r20)));
j5eval[1]=(cj4+((cj4*(r21*r21)))+(((-1.0)*cj4*(r10*r10))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x9176=((-1.0)*r20);
IkReal x9177=((-1.0)*px);
CheckValue<IkReal> x9179 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x9176),IKFAST_ATAN2_MAGTHRESH);
if(!x9179.valid){
continue;
}
IkReal x9178=((-1.0)*(x9179.value));
sj6=gconst1;
cj6=gconst2;
j6=x9178;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x9177);
rxp1_1=(px*r21);
rxp1_2=(r11*x9177);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst0=x9178;
IkReal gconst1=r21;
IkReal gconst2=x9176;
j5eval[0]=cj4;
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x9180=((-1.0)*r20);
IkReal x9181=((-1.0)*px);
CheckValue<IkReal> x9183 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x9180),IKFAST_ATAN2_MAGTHRESH);
if(!x9183.valid){
continue;
}
IkReal x9182=((-1.0)*(x9183.value));
sj6=gconst1;
cj6=gconst2;
j6=x9182;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x9181);
rxp1_1=(px*r21);
rxp1_2=(r11*x9181);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst0=x9182;
IkReal gconst1=r21;
IkReal gconst2=x9180;
j5eval[0]=((-1.0)+(((-1.0)*(r21*r21)))+(r10*r10));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x9185=IKPowWithIntegerCheck((((gconst2*r20))+(((-1.0)*gconst1*r21))),-1);
if(!x9185.valid){
continue;
}
IkReal x9184=x9185.value;
cj5array[0]=((((-1.0)*sj0*sj1*x9184))+((cj0*cj1*x9184)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x9186=IKsin(j5);
IkReal x9187=(gconst1*x9186);
IkReal x9188=((1.0)*gconst2*x9186);
evalcond[0]=((-1.0)*r02*x9186);
evalcond[1]=((((-1.0)*r20*x9188))+((r21*x9187)));
evalcond[2]=(((r11*x9187))+(((-1.0)*r10*x9188)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x9189=((-1.0)*r20);
IkReal x9190=((-1.0)*px);
CheckValue<IkReal> x9192 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(x9189),IKFAST_ATAN2_MAGTHRESH);
if(!x9192.valid){
continue;
}
IkReal x9191=((-1.0)*(x9192.value));
sj6=gconst1;
cj6=gconst2;
j6=x9191;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x9190);
rxp1_1=(px*r21);
rxp1_2=(r11*x9190);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst0=x9191;
IkReal gconst1=r21;
IkReal gconst2=x9189;
j5eval[0]=((1.0)+(r21*r21)+(((-1.0)*(r10*r10))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x9194=IKPowWithIntegerCheck(((((-1.0)*gconst2*r20))+((gconst1*r21))),-1);
if(!x9194.valid){
continue;
}
IkReal x9193=x9194.value;
cj5array[0]=((((-1.0)*sj0*sj1*x9193))+((cj0*cj1*x9193)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x9195=IKsin(j5);
IkReal x9196=(gconst1*x9195);
IkReal x9197=((1.0)*gconst2*x9195);
evalcond[0]=(r02*x9195);
evalcond[1]=((((-1.0)*r20*x9197))+((r21*x9196)));
evalcond[2]=((((-1.0)*r10*x9197))+((r11*x9196)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9199=IKPowWithIntegerCheck(r02,-1);
if(!x9199.valid){
continue;
}
IkReal x9198=x9199.value;
CheckValue<IkReal> x9200=IKPowWithIntegerCheck(cj4,-1);
if(!x9200.valid){
continue;
}
if( IKabs((x9198*(x9200.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*x9198)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x9198*(x9200.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))))+IKsqr(((-1.0)*sj2*x9198))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((x9198*(x9200.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))), ((-1.0)*sj2*x9198));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9201=IKsin(j5);
IkReal x9202=IKcos(j5);
IkReal x9203=(gconst1*sj4);
IkReal x9204=(cj2*sj1);
IkReal x9205=(gconst2*sj4);
IkReal x9206=(cj4*gconst1);
IkReal x9207=(cj4*gconst2);
IkReal x9208=((1.0)*sj2);
IkReal x9209=(cj1*sj0);
IkReal x9210=(sj0*sj1);
IkReal x9211=(cj0*sj1);
IkReal x9212=((1.0)*cj0*cj1);
IkReal x9213=(r21*x9202);
IkReal x9214=(r20*x9202);
IkReal x9215=(r02*x9201);
IkReal x9216=(r10*x9202);
IkReal x9217=((1.0)*x9202);
IkReal x9218=(gconst1*x9201);
IkReal x9219=((1.0)*gconst2*x9201);
evalcond[0]=((((-1.0)*r02*x9217))+(((-1.0)*x9208)));
evalcond[1]=(((r21*x9218))+(((-1.0)*r20*x9219)));
evalcond[2]=(cj2+(((-1.0)*r10*x9219))+((r11*x9218)));
evalcond[3]=(((cj4*x9215))+(((-1.0)*cj2*x9212))+((sj0*x9204)));
evalcond[4]=((((-1.0)*cj0*x9204))+(((-1.0)*cj2*x9209))+(((-1.0)*sj4*x9215)));
evalcond[5]=(((r20*x9203))+((x9206*x9213))+x9211+x9209+(((-1.0)*x9207*x9214))+((r21*x9205)));
evalcond[6]=(((r20*x9206))+x9210+((x9205*x9214))+((r21*x9207))+(((-1.0)*x9212))+(((-1.0)*x9203*x9213)));
evalcond[7]=(((r10*x9203))+((r11*x9202*x9206))+((r11*x9205))+((sj2*x9210))+(((-1.0)*x9207*x9216))+(((-1.0)*cj0*cj1*x9208)));
evalcond[8]=(((r10*x9206))+(((-1.0)*x9208*x9209))+(((-1.0)*x9208*x9211))+(((-1.0)*r11*x9203*x9217))+((x9205*x9216))+((r11*x9207)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9220=((1.0)*sj4);
IkReal x9221=((1.0)*gconst2);
CheckValue<IkReal> x9222=IKPowWithIntegerCheck((((gconst1*r11))+(((-1.0)*r10*x9221))),-1);
if(!x9222.valid){
continue;
}
CheckValue<IkReal> x9223=IKPowWithIntegerCheck((((cj4*gconst1*r21))+(((-1.0)*cj4*r20*x9221))),-1);
if(!x9223.valid){
continue;
}
if( IKabs(((-1.0)*cj2*(x9222.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x9223.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*gconst1*r20*x9220))+(((-1.0)*cj0*sj1))+(((-1.0)*gconst2*r21*x9220)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*cj2*(x9222.value)))+IKsqr(((x9223.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*gconst1*r20*x9220))+(((-1.0)*cj0*sj1))+(((-1.0)*gconst2*r21*x9220))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*cj2*(x9222.value)), ((x9223.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*gconst1*r20*x9220))+(((-1.0)*cj0*sj1))+(((-1.0)*gconst2*r21*x9220))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9224=IKsin(j5);
IkReal x9225=IKcos(j5);
IkReal x9226=(gconst1*sj4);
IkReal x9227=(cj2*sj1);
IkReal x9228=(gconst2*sj4);
IkReal x9229=(cj4*gconst1);
IkReal x9230=(cj4*gconst2);
IkReal x9231=((1.0)*sj2);
IkReal x9232=(cj1*sj0);
IkReal x9233=(sj0*sj1);
IkReal x9234=(cj0*sj1);
IkReal x9235=((1.0)*cj0*cj1);
IkReal x9236=(r21*x9225);
IkReal x9237=(r20*x9225);
IkReal x9238=(r02*x9224);
IkReal x9239=(r10*x9225);
IkReal x9240=((1.0)*x9225);
IkReal x9241=(gconst1*x9224);
IkReal x9242=((1.0)*gconst2*x9224);
evalcond[0]=((((-1.0)*x9231))+(((-1.0)*r02*x9240)));
evalcond[1]=((((-1.0)*r20*x9242))+((r21*x9241)));
evalcond[2]=(cj2+(((-1.0)*r10*x9242))+((r11*x9241)));
evalcond[3]=(((cj4*x9238))+((sj0*x9227))+(((-1.0)*cj2*x9235)));
evalcond[4]=((((-1.0)*cj0*x9227))+(((-1.0)*cj2*x9232))+(((-1.0)*sj4*x9238)));
evalcond[5]=(((x9229*x9236))+((r20*x9226))+x9234+x9232+((r21*x9228))+(((-1.0)*x9230*x9237)));
evalcond[6]=(((r20*x9229))+x9233+(((-1.0)*x9235))+((r21*x9230))+(((-1.0)*x9226*x9236))+((x9228*x9237)));
evalcond[7]=((((-1.0)*cj0*cj1*x9231))+((r11*x9228))+((r11*x9225*x9229))+(((-1.0)*x9230*x9239))+((sj2*x9233))+((r10*x9226)));
evalcond[8]=((((-1.0)*r11*x9226*x9240))+((r11*x9230))+(((-1.0)*x9231*x9234))+(((-1.0)*x9231*x9232))+((r10*x9229))+((x9228*x9239)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9243=IKPowWithIntegerCheck((((gconst1*r11))+(((-1.0)*gconst2*r10))),-1);
if(!x9243.valid){
continue;
}
CheckValue<IkReal> x9244=IKPowWithIntegerCheck(r02,-1);
if(!x9244.valid){
continue;
}
if( IKabs(((-1.0)*cj2*(x9243.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*(x9244.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*cj2*(x9243.value)))+IKsqr(((-1.0)*sj2*(x9244.value)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*cj2*(x9243.value)), ((-1.0)*sj2*(x9244.value)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9245=IKsin(j5);
IkReal x9246=IKcos(j5);
IkReal x9247=(gconst1*sj4);
IkReal x9248=(cj2*sj1);
IkReal x9249=(gconst2*sj4);
IkReal x9250=(cj4*gconst1);
IkReal x9251=(cj4*gconst2);
IkReal x9252=((1.0)*sj2);
IkReal x9253=(cj1*sj0);
IkReal x9254=(sj0*sj1);
IkReal x9255=(cj0*sj1);
IkReal x9256=((1.0)*cj0*cj1);
IkReal x9257=(r21*x9246);
IkReal x9258=(r20*x9246);
IkReal x9259=(r02*x9245);
IkReal x9260=(r10*x9246);
IkReal x9261=((1.0)*x9246);
IkReal x9262=(gconst1*x9245);
IkReal x9263=((1.0)*gconst2*x9245);
evalcond[0]=((((-1.0)*r02*x9261))+(((-1.0)*x9252)));
evalcond[1]=((((-1.0)*r20*x9263))+((r21*x9262)));
evalcond[2]=(cj2+(((-1.0)*r10*x9263))+((r11*x9262)));
evalcond[3]=(((cj4*x9259))+((sj0*x9248))+(((-1.0)*cj2*x9256)));
evalcond[4]=((((-1.0)*cj2*x9253))+(((-1.0)*cj0*x9248))+(((-1.0)*sj4*x9259)));
evalcond[5]=(((x9250*x9257))+x9255+x9253+((r21*x9249))+(((-1.0)*x9251*x9258))+((r20*x9247)));
evalcond[6]=(x9254+((r21*x9251))+(((-1.0)*x9256))+((r20*x9250))+((x9249*x9258))+(((-1.0)*x9247*x9257)));
evalcond[7]=(((r11*x9246*x9250))+(((-1.0)*x9251*x9260))+((sj2*x9254))+((r10*x9247))+((r11*x9249))+(((-1.0)*cj0*cj1*x9252)));
evalcond[8]=((((-1.0)*r11*x9247*x9261))+((r10*x9250))+((r11*x9251))+((x9249*x9260))+(((-1.0)*x9252*x9255))+(((-1.0)*x9252*x9253)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9264=r21*r21;
IkReal x9265=gconst1*gconst1;
IkReal x9266=gconst2*gconst2;
IkReal x9267=r20*r20;
IkReal x9268=(gconst2*r20);
IkReal x9269=(gconst1*r21);
IkReal x9270=(sj0*sj1);
IkReal x9271=(cj4*gconst1);
IkReal x9272=(cj4*r21);
IkReal x9273=((1.0)*cj0*cj1);
CheckValue<IkReal> x9274=IKPowWithIntegerCheck(IKsign((((sj4*x9264*x9265))+((sj4*(r22*r22)))+(((-2.0)*sj4*x9268*x9269))+((sj4*x9266*x9267)))),-1);
if(!x9274.valid){
continue;
}
CheckValue<IkReal> x9275 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x9273))+((gconst2*r22*x9272))+((r20*r22*x9271))+((r22*x9270)))),IkReal((((cj0*cj1*x9268))+(((-1.0)*gconst2*x9267*x9271))+(((-1.0)*r20*x9266*x9272))+((x9269*x9270))+((gconst2*x9264*x9271))+((r20*x9265*x9272))+(((-1.0)*x9269*x9273))+(((-1.0)*x9268*x9270)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9275.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9274.value)))+(x9275.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9276=IKsin(j5);
IkReal x9277=IKcos(j5);
IkReal x9278=(gconst1*sj4);
IkReal x9279=(cj2*sj1);
IkReal x9280=(gconst2*sj4);
IkReal x9281=(cj4*gconst1);
IkReal x9282=((1.0)*sj4);
IkReal x9283=(cj4*gconst2);
IkReal x9284=((1.0)*sj2);
IkReal x9285=(cj1*sj0);
IkReal x9286=(sj0*sj1);
IkReal x9287=(cj0*sj1);
IkReal x9288=((1.0)*x9277);
IkReal x9289=((1.0)*cj0*cj1);
IkReal x9290=(r22*x9276);
IkReal x9291=(cj4*x9276);
IkReal x9292=(gconst1*x9276);
IkReal x9293=((1.0)*gconst2*x9276);
evalcond[0]=((((-1.0)*r22*x9288))+((r21*x9292))+(((-1.0)*r20*x9293)));
evalcond[1]=((((-1.0)*r12*x9288))+((r11*x9292))+cj2+(((-1.0)*r10*x9293)));
evalcond[2]=((((-1.0)*x9284))+((r01*x9292))+(((-1.0)*r02*x9288))+(((-1.0)*r00*x9293)));
evalcond[3]=(((cj4*x9290))+x9285+x9287+((r20*x9278))+((r21*x9280))+(((-1.0)*r20*x9283*x9288))+((r21*x9277*x9281)));
evalcond[4]=((((-1.0)*x9282*x9290))+(((-1.0)*x9289))+x9286+((r20*x9281))+((r21*x9283))+(((-1.0)*r21*x9278*x9288))+((r20*x9277*x9280)));
evalcond[5]=((((-1.0)*cj2*x9289))+((sj0*x9279))+((r02*x9291))+((r01*x9280))+((r00*x9278))+((r01*x9277*x9281))+(((-1.0)*r00*x9283*x9288)));
evalcond[6]=(((r11*x9277*x9281))+((r11*x9280))+((r10*x9278))+(((-1.0)*cj0*cj1*x9284))+(((-1.0)*r10*x9283*x9288))+((sj2*x9286))+((r12*x9291)));
evalcond[7]=(((r00*x9277*x9280))+(((-1.0)*r01*x9278*x9288))+((r01*x9283))+((r00*x9281))+(((-1.0)*cj2*x9285))+(((-1.0)*cj0*x9279))+(((-1.0)*r02*x9276*x9282)));
evalcond[8]=(((r11*x9283))+((r10*x9277*x9280))+((r10*x9281))+(((-1.0)*r12*x9276*x9282))+(((-1.0)*x9284*x9285))+(((-1.0)*x9284*x9287))+(((-1.0)*r11*x9278*x9288)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9294=((1.0)*gconst2);
CheckValue<IkReal> x9295 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x9294))+((gconst1*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9295.valid){
continue;
}
CheckValue<IkReal> x9296=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x9294))+(((-1.0)*gconst1*r10)))),-1);
if(!x9296.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9295.value)+(((1.5707963267949)*(x9296.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9297=IKsin(j5);
IkReal x9298=IKcos(j5);
IkReal x9299=(gconst1*sj4);
IkReal x9300=(cj2*sj1);
IkReal x9301=(gconst2*sj4);
IkReal x9302=(cj4*gconst1);
IkReal x9303=((1.0)*sj4);
IkReal x9304=(cj4*gconst2);
IkReal x9305=((1.0)*sj2);
IkReal x9306=(cj1*sj0);
IkReal x9307=(sj0*sj1);
IkReal x9308=(cj0*sj1);
IkReal x9309=((1.0)*x9298);
IkReal x9310=((1.0)*cj0*cj1);
IkReal x9311=(r22*x9297);
IkReal x9312=(cj4*x9297);
IkReal x9313=(gconst1*x9297);
IkReal x9314=((1.0)*gconst2*x9297);
evalcond[0]=((((-1.0)*r20*x9314))+((r21*x9313))+(((-1.0)*r22*x9309)));
evalcond[1]=(cj2+(((-1.0)*r10*x9314))+((r11*x9313))+(((-1.0)*r12*x9309)));
evalcond[2]=((((-1.0)*r00*x9314))+((r01*x9313))+(((-1.0)*x9305))+(((-1.0)*r02*x9309)));
evalcond[3]=(x9308+x9306+((r21*x9301))+((r21*x9298*x9302))+((r20*x9299))+((cj4*x9311))+(((-1.0)*r20*x9304*x9309)));
evalcond[4]=(x9307+((r21*x9304))+(((-1.0)*r21*x9299*x9309))+(((-1.0)*x9303*x9311))+((r20*x9298*x9301))+(((-1.0)*x9310))+((r20*x9302)));
evalcond[5]=(((r02*x9312))+((r00*x9299))+(((-1.0)*r00*x9304*x9309))+(((-1.0)*cj2*x9310))+((r01*x9301))+((sj0*x9300))+((r01*x9298*x9302)));
evalcond[6]=((((-1.0)*r10*x9304*x9309))+((r11*x9298*x9302))+((r10*x9299))+(((-1.0)*cj0*cj1*x9305))+((r12*x9312))+((r11*x9301))+((sj2*x9307)));
evalcond[7]=((((-1.0)*r02*x9297*x9303))+((r00*x9298*x9301))+((r01*x9304))+((r00*x9302))+(((-1.0)*cj2*x9306))+(((-1.0)*cj0*x9300))+(((-1.0)*r01*x9299*x9309)));
evalcond[8]=((((-1.0)*r11*x9299*x9309))+(((-1.0)*x9305*x9308))+(((-1.0)*x9305*x9306))+(((-1.0)*r12*x9297*x9303))+((r10*x9298*x9301))+((r11*x9304))+((r10*x9302)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9315=((1.0)*gconst2);
CheckValue<IkReal> x9316 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst1*r21))+(((-1.0)*cj2*r20*x9315)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9316.valid){
continue;
}
CheckValue<IkReal> x9317=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst1*r00))+(((-1.0)*r01*x9315)))),-1);
if(!x9317.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9316.value)+(((1.5707963267949)*(x9317.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9318=IKsin(j5);
IkReal x9319=IKcos(j5);
IkReal x9320=(gconst1*sj4);
IkReal x9321=(cj2*sj1);
IkReal x9322=(gconst2*sj4);
IkReal x9323=(cj4*gconst1);
IkReal x9324=((1.0)*sj4);
IkReal x9325=(cj4*gconst2);
IkReal x9326=((1.0)*sj2);
IkReal x9327=(cj1*sj0);
IkReal x9328=(sj0*sj1);
IkReal x9329=(cj0*sj1);
IkReal x9330=((1.0)*x9319);
IkReal x9331=((1.0)*cj0*cj1);
IkReal x9332=(r22*x9318);
IkReal x9333=(cj4*x9318);
IkReal x9334=(gconst1*x9318);
IkReal x9335=((1.0)*gconst2*x9318);
evalcond[0]=((((-1.0)*r22*x9330))+(((-1.0)*r20*x9335))+((r21*x9334)));
evalcond[1]=((((-1.0)*r12*x9330))+cj2+((r11*x9334))+(((-1.0)*r10*x9335)));
evalcond[2]=((((-1.0)*x9326))+(((-1.0)*r02*x9330))+(((-1.0)*r00*x9335))+((r01*x9334)));
evalcond[3]=((((-1.0)*r20*x9325*x9330))+((r20*x9320))+x9329+x9327+((r21*x9319*x9323))+((cj4*x9332))+((r21*x9322)));
evalcond[4]=((((-1.0)*r21*x9320*x9330))+(((-1.0)*x9324*x9332))+((r20*x9323))+x9328+(((-1.0)*x9331))+((r21*x9325))+((r20*x9319*x9322)));
evalcond[5]=(((sj0*x9321))+((r00*x9320))+((r01*x9322))+(((-1.0)*r00*x9325*x9330))+((r02*x9333))+(((-1.0)*cj2*x9331))+((r01*x9319*x9323)));
evalcond[6]=(((r11*x9322))+((sj2*x9328))+(((-1.0)*r10*x9325*x9330))+(((-1.0)*cj0*cj1*x9326))+((r12*x9333))+((r10*x9320))+((r11*x9319*x9323)));
evalcond[7]=(((r00*x9319*x9322))+((r00*x9323))+((r01*x9325))+(((-1.0)*cj0*x9321))+(((-1.0)*r01*x9320*x9330))+(((-1.0)*r02*x9318*x9324))+(((-1.0)*cj2*x9327)));
evalcond[8]=(((r11*x9325))+(((-1.0)*r11*x9320*x9330))+((r10*x9323))+(((-1.0)*x9326*x9329))+(((-1.0)*x9326*x9327))+(((-1.0)*r12*x9318*x9324))+((r10*x9319*x9322)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x9336=((-1.0)*r21);
IkReal x9338 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x9338)==0){
continue;
}
IkReal x9337=pow(x9338,-0.5);
CheckValue<IkReal> x9339 = IKatan2WithCheck(IkReal(x9336),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9339.valid){
continue;
}
IkReal gconst3=((3.14159265358979)+(((-1.0)*(x9339.value))));
IkReal gconst4=(x9336*x9337);
IkReal gconst5=((1.0)*r20*x9337);
CheckValue<IkReal> x9340 = IKatan2WithCheck(IkReal(((-1.0)*r21)),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9340.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x9340.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x9341=((-1.0)*r21);
CheckValue<IkReal> x9344 = IKatan2WithCheck(IkReal(x9341),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9344.valid){
continue;
}
IkReal x9342=((1.0)*(x9344.value));
IkReal x9343=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9342)));
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9342)));
IkReal gconst4=(x9341*x9343);
IkReal gconst5=((1.0)*r20*x9343);
IkReal x9345=r22*r22;
IkReal x9346=((1.0)*x9345);
CheckValue<IkReal> x9350=IKPowWithIntegerCheck(((-1.0)+x9345),-1);
if(!x9350.valid){
continue;
}
IkReal x9347=x9350.value;
if((((1.0)+(((-1.0)*x9346)))) < -0.00001)
continue;
IkReal x9348=IKsqrt(((1.0)+(((-1.0)*x9346))));
IkReal x9349=(cj2*x9347*x9348);
j5eval[0]=((IKabs((x9349+(((-1.0)*x9346*x9349)))))+(IKabs((cj2*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x9351=((-1.0)*r21);
CheckValue<IkReal> x9354 = IKatan2WithCheck(IkReal(x9351),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9354.valid){
continue;
}
IkReal x9352=((1.0)*(x9354.value));
IkReal x9353=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9352)));
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9352)));
IkReal gconst4=(x9351*x9353);
IkReal gconst5=((1.0)*r20*x9353);
IkReal x9355=r22*r22;
IkReal x9356=((1.0)*x9355);
CheckValue<IkReal> x9360=IKPowWithIntegerCheck(((-1.0)+x9355),-1);
if(!x9360.valid){
continue;
}
IkReal x9357=x9360.value;
if((((1.0)+(((-1.0)*x9356)))) < -0.00001)
continue;
IkReal x9358=IKsqrt(((1.0)+(((-1.0)*x9356))));
IkReal x9359=(sj2*x9357*x9358);
j5eval[0]=((IKabs((x9359+(((-1.0)*x9356*x9359)))))+(IKabs((r22*sj2))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x9361=((-1.0)*r21);
CheckValue<IkReal> x9364 = IKatan2WithCheck(IkReal(x9361),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9364.valid){
continue;
}
IkReal x9362=((1.0)*(x9364.value));
IkReal x9363=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9362)));
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9362)));
IkReal gconst4=(x9361*x9363);
IkReal gconst5=((1.0)*r20*x9363);
IkReal x9365=r22*r22;
IkReal x9366=(r12*sj2);
IkReal x9367=(cj2*r02);
CheckValue<IkReal> x9371=IKPowWithIntegerCheck(((-1.0)+x9365),-1);
if(!x9371.valid){
continue;
}
IkReal x9368=x9371.value;
if((((1.0)+(((-1.0)*x9365)))) < -0.00001)
continue;
IkReal x9369=IKsqrt(((1.0)+(((-1.0)*x9365))));
IkReal x9370=(r22*x9368*x9369);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=((IKabs(((((-1.0)*x9366))+(((-1.0)*x9367)))))+(IKabs((((x9366*x9370))+((x9367*x9370))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x9372=((-1.0)*r21);
CheckValue<IkReal> x9375 = IKatan2WithCheck(IkReal(x9372),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9375.valid){
continue;
}
IkReal x9373=((1.0)*(x9375.value));
IkReal x9374=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9373)));
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9373)));
IkReal gconst4=(x9372*x9374);
IkReal gconst5=((1.0)*r20*x9374);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r02;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x9376=((-1.0)*r21);
CheckValue<IkReal> x9379 = IKatan2WithCheck(IkReal(x9376),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9379.valid){
continue;
}
IkReal x9377=((1.0)*(x9379.value));
IkReal x9378=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9377)));
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9377)));
IkReal gconst4=(x9376*x9378);
IkReal gconst5=((1.0)*r20*x9378);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x9380=((-1.0)*r21);
CheckValue<IkReal> x9383 = IKatan2WithCheck(IkReal(x9380),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9383.valid){
continue;
}
IkReal x9381=((1.0)*(x9383.value));
IkReal x9382=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9381)));
sj2=0;
cj2=1.0;
j2=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9381)));
IkReal gconst4=(x9380*x9382);
IkReal gconst5=((1.0)*r20*x9382);
j5eval[0]=r02;
j5eval[1]=sj4;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x9384=((-1.0)*r21);
CheckValue<IkReal> x9387 = IKatan2WithCheck(IkReal(x9384),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9387.valid){
continue;
}
IkReal x9385=((1.0)*(x9387.value));
IkReal x9386=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9385)));
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9385)));
IkReal gconst4=(x9384*x9386);
IkReal gconst5=((1.0)*r20*x9386);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r02;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x9388=((-1.0)*r21);
CheckValue<IkReal> x9391 = IKatan2WithCheck(IkReal(x9388),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9391.valid){
continue;
}
IkReal x9389=((1.0)*(x9391.value));
IkReal x9390=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9389)));
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9389)));
IkReal gconst4=(x9388*x9390);
IkReal gconst5=((1.0)*r20*x9390);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x9392=((-1.0)*r21);
CheckValue<IkReal> x9395 = IKatan2WithCheck(IkReal(x9392),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9395.valid){
continue;
}
IkReal x9393=((1.0)*(x9395.value));
IkReal x9394=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9393)));
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9393)));
IkReal gconst4=(x9392*x9394);
IkReal gconst5=((1.0)*r20*x9394);
j5eval[0]=r12;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9396=(gconst5*r10);
IkReal x9397=(gconst4*r11);
CheckValue<IkReal> x9398=IKPowWithIntegerCheck(IKsign(((((-2.0)*x9396*x9397))+(x9396*x9396)+(r12*r12)+(x9397*x9397))),-1);
if(!x9398.valid){
continue;
}
CheckValue<IkReal> x9399 = IKatan2WithCheck(IkReal((x9396+(((-1.0)*x9397)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x9399.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9398.value)))+(x9399.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9400=IKsin(j5);
IkReal x9401=IKcos(j5);
IkReal x9402=((1.0)*cj0);
IkReal x9403=(gconst5*x9401);
IkReal x9404=((1.0)*x9400);
IkReal x9405=((1.0)*x9401);
IkReal x9406=(gconst4*x9400);
IkReal x9407=(gconst4*x9405);
IkReal x9408=(gconst5*x9404);
evalcond[0]=((((-1.0)*r22*x9405))+(((-1.0)*r20*x9408))+((r21*x9406)));
evalcond[1]=(((r01*x9406))+(((-1.0)*r02*x9405))+(((-1.0)*r00*x9408)));
evalcond[2]=((((-1.0)*r12*x9404))+(((-1.0)*r11*x9407))+((r10*x9403)));
evalcond[3]=((1.0)+((r11*x9406))+(((-1.0)*r10*x9408))+(((-1.0)*r12*x9405)));
evalcond[4]=((((-1.0)*r22*x9404))+((sj0*sj1))+(((-1.0)*r21*x9407))+((r20*x9403))+(((-1.0)*cj1*x9402)));
evalcond[5]=((((-1.0)*sj1*x9402))+(((-1.0)*cj1*sj0))+(((-1.0)*r02*x9404))+(((-1.0)*r01*x9407))+((r00*x9403)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9409=((1.0)*gconst5);
CheckValue<IkReal> x9410=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst4*r00))+(((-1.0)*r01*x9409)))),-1);
if(!x9410.valid){
continue;
}
CheckValue<IkReal> x9411 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x9409))+((gconst4*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9411.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9410.value)))+(x9411.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9412=IKsin(j5);
IkReal x9413=IKcos(j5);
IkReal x9414=((1.0)*cj0);
IkReal x9415=(gconst5*x9413);
IkReal x9416=((1.0)*x9412);
IkReal x9417=((1.0)*x9413);
IkReal x9418=(gconst4*x9412);
IkReal x9419=(gconst4*x9417);
IkReal x9420=(gconst5*x9416);
evalcond[0]=(((r21*x9418))+(((-1.0)*r22*x9417))+(((-1.0)*r20*x9420)));
evalcond[1]=((((-1.0)*r02*x9417))+((r01*x9418))+(((-1.0)*r00*x9420)));
evalcond[2]=((((-1.0)*r12*x9416))+((r10*x9415))+(((-1.0)*r11*x9419)));
evalcond[3]=((1.0)+(((-1.0)*r12*x9417))+(((-1.0)*r10*x9420))+((r11*x9418)));
evalcond[4]=(((r20*x9415))+(((-1.0)*r21*x9419))+(((-1.0)*cj1*x9414))+((sj0*sj1))+(((-1.0)*r22*x9416)));
evalcond[5]=((((-1.0)*r02*x9416))+(((-1.0)*r01*x9419))+((r00*x9415))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x9414)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9421 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst4*r01))+(((-1.0)*gconst5*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9421.valid){
continue;
}
CheckValue<IkReal> x9422=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x9422.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9421.value)+(((1.5707963267949)*(x9422.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9423=IKsin(j5);
IkReal x9424=IKcos(j5);
IkReal x9425=((1.0)*cj0);
IkReal x9426=(gconst5*x9424);
IkReal x9427=((1.0)*x9423);
IkReal x9428=((1.0)*x9424);
IkReal x9429=(gconst4*x9423);
IkReal x9430=(gconst4*x9428);
IkReal x9431=(gconst5*x9427);
evalcond[0]=((((-1.0)*r20*x9431))+((r21*x9429))+(((-1.0)*r22*x9428)));
evalcond[1]=(((r01*x9429))+(((-1.0)*r02*x9428))+(((-1.0)*r00*x9431)));
evalcond[2]=((((-1.0)*r12*x9427))+(((-1.0)*r11*x9430))+((r10*x9426)));
evalcond[3]=((1.0)+(((-1.0)*r10*x9431))+(((-1.0)*r12*x9428))+((r11*x9429)));
evalcond[4]=(((r20*x9426))+(((-1.0)*r21*x9430))+((sj0*sj1))+(((-1.0)*r22*x9427))+(((-1.0)*cj1*x9425)));
evalcond[5]=((((-1.0)*sj1*x9425))+((r00*x9426))+(((-1.0)*cj1*sj0))+(((-1.0)*r01*x9430))+(((-1.0)*r02*x9427)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x9432=((-1.0)*r21);
CheckValue<IkReal> x9435 = IKatan2WithCheck(IkReal(x9432),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9435.valid){
continue;
}
IkReal x9433=((1.0)*(x9435.value));
IkReal x9434=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9433)));
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9433)));
IkReal gconst4=(x9432*x9434);
IkReal gconst5=((1.0)*r20*x9434);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r02;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x9436=((-1.0)*r21);
CheckValue<IkReal> x9439 = IKatan2WithCheck(IkReal(x9436),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9439.valid){
continue;
}
IkReal x9437=((1.0)*(x9439.value));
IkReal x9438=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9437)));
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9437)));
IkReal gconst4=(x9436*x9438);
IkReal gconst5=((1.0)*r20*x9438);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x9440=((-1.0)*r21);
CheckValue<IkReal> x9443 = IKatan2WithCheck(IkReal(x9440),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9443.valid){
continue;
}
IkReal x9441=((1.0)*(x9443.value));
IkReal x9442=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9441)));
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9441)));
IkReal gconst4=(x9440*x9442);
IkReal gconst5=((1.0)*r20*x9442);
IkReal x9444=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x9448=IKPowWithIntegerCheck(x9444,-1);
if(!x9448.valid){
continue;
}
IkReal x9445=x9448.value;
IkReal x9446=((1.0)*x9445);
IkReal x9447=((((-1.0)*x9446*(r11*r11)*(r21*r21)))+(((-1.0)*(r12*r12)))+(((-2.0)*r10*r11*r20*r21*x9445))+(((-1.0)*x9446*(r10*r10)*(r20*r20))));
j5eval[0]=x9447;
j5eval[1]=r12;
j5eval[2]=x9444;
j5eval[3]=IKsign(x9447);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9449=(gconst5*r10);
IkReal x9450=(gconst4*r11);
CheckValue<IkReal> x9451 = IKatan2WithCheck(IkReal(((((-1.0)*x9449))+x9450)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x9451.valid){
continue;
}
CheckValue<IkReal> x9452=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x9449*x9449)))+(((-1.0)*(x9450*x9450)))+(((2.0)*x9449*x9450))+(((-1.0)*(r12*r12))))),-1);
if(!x9452.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9451.value)+(((1.5707963267949)*(x9452.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9453=IKcos(j5);
IkReal x9454=IKsin(j5);
IkReal x9455=((1.0)*cj0);
IkReal x9456=(gconst5*r20);
IkReal x9457=((1.0)*gconst5*r00);
IkReal x9458=(gconst4*x9453);
IkReal x9459=((1.0)*gconst5*r10);
IkReal x9460=((1.0)*x9453);
IkReal x9461=(gconst4*x9454);
evalcond[0]=((((-1.0)*x9453*x9459))+((r12*x9454))+((r11*x9458)));
evalcond[1]=(((r21*x9461))+(((-1.0)*r22*x9460))+(((-1.0)*x9454*x9456)));
evalcond[2]=(((r01*x9461))+(((-1.0)*x9454*x9457))+(((-1.0)*r02*x9460)));
evalcond[3]=((1.0)+(((-1.0)*x9454*x9459))+((r11*x9461))+(((-1.0)*r12*x9460)));
evalcond[4]=((((-1.0)*x9456*x9460))+((r22*x9454))+((r21*x9458))+((sj0*sj1))+(((-1.0)*cj1*x9455)));
evalcond[5]=(((r01*x9458))+(((-1.0)*x9453*x9457))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x9455))+((r02*x9454)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9462=((1.0)*gconst5);
CheckValue<IkReal> x9463 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*r20*x9462)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9463.valid){
continue;
}
CheckValue<IkReal> x9464=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst4*r00))+(((-1.0)*r01*x9462)))),-1);
if(!x9464.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9463.value)+(((1.5707963267949)*(x9464.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9465=IKcos(j5);
IkReal x9466=IKsin(j5);
IkReal x9467=((1.0)*cj0);
IkReal x9468=(gconst5*r20);
IkReal x9469=((1.0)*gconst5*r00);
IkReal x9470=(gconst4*x9465);
IkReal x9471=((1.0)*gconst5*r10);
IkReal x9472=((1.0)*x9465);
IkReal x9473=(gconst4*x9466);
evalcond[0]=(((r11*x9470))+((r12*x9466))+(((-1.0)*x9465*x9471)));
evalcond[1]=(((r21*x9473))+(((-1.0)*r22*x9472))+(((-1.0)*x9466*x9468)));
evalcond[2]=((((-1.0)*r02*x9472))+((r01*x9473))+(((-1.0)*x9466*x9469)));
evalcond[3]=((1.0)+(((-1.0)*x9466*x9471))+((r11*x9473))+(((-1.0)*r12*x9472)));
evalcond[4]=((((-1.0)*cj1*x9467))+((r22*x9466))+(((-1.0)*x9468*x9472))+((sj0*sj1))+((r21*x9470)));
evalcond[5]=((((-1.0)*cj1*sj0))+(((-1.0)*sj1*x9467))+((r01*x9470))+((r02*x9466))+(((-1.0)*x9465*x9469)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9474 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst4*r01))+(((-1.0)*gconst5*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9474.valid){
continue;
}
CheckValue<IkReal> x9475=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x9475.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9474.value)+(((1.5707963267949)*(x9475.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9476=IKcos(j5);
IkReal x9477=IKsin(j5);
IkReal x9478=((1.0)*cj0);
IkReal x9479=(gconst5*r20);
IkReal x9480=((1.0)*gconst5*r00);
IkReal x9481=(gconst4*x9476);
IkReal x9482=((1.0)*gconst5*r10);
IkReal x9483=((1.0)*x9476);
IkReal x9484=(gconst4*x9477);
evalcond[0]=(((r11*x9481))+(((-1.0)*x9476*x9482))+((r12*x9477)));
evalcond[1]=(((r21*x9484))+(((-1.0)*r22*x9483))+(((-1.0)*x9477*x9479)));
evalcond[2]=(((r01*x9484))+(((-1.0)*r02*x9483))+(((-1.0)*x9477*x9480)));
evalcond[3]=((1.0)+((r11*x9484))+(((-1.0)*x9477*x9482))+(((-1.0)*r12*x9483)));
evalcond[4]=((((-1.0)*cj1*x9478))+((r22*x9477))+((r21*x9481))+(((-1.0)*x9479*x9483))+((sj0*sj1)));
evalcond[5]=(((r01*x9481))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x9478))+(((-1.0)*x9476*x9480))+((r02*x9477)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x9485=((-1.0)*r21);
CheckValue<IkReal> x9488 = IKatan2WithCheck(IkReal(x9485),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9488.valid){
continue;
}
IkReal x9486=((1.0)*(x9488.value));
IkReal x9487=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9486)));
sj2=0;
cj2=1.0;
j2=0;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9486)));
IkReal gconst4=(x9485*x9487);
IkReal gconst5=((1.0)*r20*x9487);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r02;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x9489=((-1.0)*r21);
CheckValue<IkReal> x9492 = IKatan2WithCheck(IkReal(x9489),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9492.valid){
continue;
}
IkReal x9490=((1.0)*(x9492.value));
IkReal x9491=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9490)));
sj2=0;
cj2=1.0;
j2=0;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9490)));
IkReal gconst4=(x9489*x9491);
IkReal gconst5=((1.0)*r20*x9491);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x9493=((-1.0)*r21);
CheckValue<IkReal> x9496 = IKatan2WithCheck(IkReal(x9493),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9496.valid){
continue;
}
IkReal x9494=((1.0)*(x9496.value));
IkReal x9495=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9494)));
sj2=0;
cj2=1.0;
j2=0;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9494)));
IkReal gconst4=(x9493*x9495);
IkReal gconst5=((1.0)*r20*x9495);
IkReal x9497=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x9501=IKPowWithIntegerCheck(x9497,-1);
if(!x9501.valid){
continue;
}
IkReal x9498=x9501.value;
IkReal x9499=((1.0)*x9498);
IkReal x9500=((((-2.0)*r10*r11*r20*r21*x9498))+(((-1.0)*(r12*r12)))+(((-1.0)*x9499*(r11*r11)*(r21*r21)))+(((-1.0)*x9499*(r10*r10)*(r20*r20))));
j5eval[0]=x9500;
j5eval[1]=r12;
j5eval[2]=x9497;
j5eval[3]=IKsign(x9500);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9502=(gconst5*r10);
IkReal x9503=(gconst4*r11);
CheckValue<IkReal> x9504 = IKatan2WithCheck(IkReal(((((-1.0)*x9502))+x9503)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x9504.valid){
continue;
}
CheckValue<IkReal> x9505=IKPowWithIntegerCheck(IKsign(((((2.0)*x9502*x9503))+(((-1.0)*(x9502*x9502)))+(((-1.0)*(r12*r12)))+(((-1.0)*(x9503*x9503))))),-1);
if(!x9505.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9504.value)+(((1.5707963267949)*(x9505.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9506=IKcos(j5);
IkReal x9507=IKsin(j5);
IkReal x9508=(gconst5*r20);
IkReal x9509=((1.0)*gconst5*r00);
IkReal x9510=(gconst4*x9506);
IkReal x9511=((1.0)*gconst5*r10);
IkReal x9512=((1.0)*x9506);
IkReal x9513=(gconst4*x9507);
evalcond[0]=(((r12*x9507))+((r11*x9510))+(((-1.0)*x9506*x9511)));
evalcond[1]=(((r21*x9513))+(((-1.0)*r22*x9512))+(((-1.0)*x9507*x9508)));
evalcond[2]=((((-1.0)*r02*x9512))+((r01*x9513))+(((-1.0)*x9507*x9509)));
evalcond[3]=((1.0)+(((-1.0)*x9507*x9511))+((r11*x9513))+(((-1.0)*r12*x9512)));
evalcond[4]=((((-1.0)*x9508*x9512))+((r21*x9510))+((cj1*sj0))+((r22*x9507))+((cj0*sj1)));
evalcond[5]=(((r02*x9507))+((r01*x9510))+(((-1.0)*x9506*x9509))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9514=((1.0)*gconst5);
CheckValue<IkReal> x9515=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst4*r00))+(((-1.0)*r01*x9514)))),-1);
if(!x9515.valid){
continue;
}
CheckValue<IkReal> x9516 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x9514))+((gconst4*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9516.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9515.value)))+(x9516.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9517=IKcos(j5);
IkReal x9518=IKsin(j5);
IkReal x9519=(gconst5*r20);
IkReal x9520=((1.0)*gconst5*r00);
IkReal x9521=(gconst4*x9517);
IkReal x9522=((1.0)*gconst5*r10);
IkReal x9523=((1.0)*x9517);
IkReal x9524=(gconst4*x9518);
evalcond[0]=(((r11*x9521))+((r12*x9518))+(((-1.0)*x9517*x9522)));
evalcond[1]=((((-1.0)*r22*x9523))+(((-1.0)*x9518*x9519))+((r21*x9524)));
evalcond[2]=((((-1.0)*r02*x9523))+((r01*x9524))+(((-1.0)*x9518*x9520)));
evalcond[3]=((1.0)+(((-1.0)*r12*x9523))+((r11*x9524))+(((-1.0)*x9518*x9522)));
evalcond[4]=(((cj1*sj0))+((r22*x9518))+(((-1.0)*x9519*x9523))+((r21*x9521))+((cj0*sj1)));
evalcond[5]=(((r01*x9521))+((sj0*sj1))+(((-1.0)*x9517*x9520))+(((-1.0)*cj0*cj1))+((r02*x9518)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9525 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst4*r01))+(((-1.0)*gconst5*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9525.valid){
continue;
}
CheckValue<IkReal> x9526=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x9526.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9525.value)+(((1.5707963267949)*(x9526.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9527=IKcos(j5);
IkReal x9528=IKsin(j5);
IkReal x9529=(gconst5*r20);
IkReal x9530=((1.0)*gconst5*r00);
IkReal x9531=(gconst4*x9527);
IkReal x9532=((1.0)*gconst5*r10);
IkReal x9533=((1.0)*x9527);
IkReal x9534=(gconst4*x9528);
evalcond[0]=(((r11*x9531))+((r12*x9528))+(((-1.0)*x9527*x9532)));
evalcond[1]=((((-1.0)*r22*x9533))+((r21*x9534))+(((-1.0)*x9528*x9529)));
evalcond[2]=((((-1.0)*r02*x9533))+((r01*x9534))+(((-1.0)*x9528*x9530)));
evalcond[3]=((1.0)+((r11*x9534))+(((-1.0)*r12*x9533))+(((-1.0)*x9528*x9532)));
evalcond[4]=(((cj1*sj0))+((r22*x9528))+((cj0*sj1))+(((-1.0)*x9529*x9533))+((r21*x9531)));
evalcond[5]=(((r02*x9528))+((sj0*sj1))+((r01*x9531))+(((-1.0)*x9527*x9530))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x9535=((-1.0)*r21);
CheckValue<IkReal> x9538 = IKatan2WithCheck(IkReal(x9535),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9538.valid){
continue;
}
IkReal x9536=((1.0)*(x9538.value));
IkReal x9537=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9536)));
sj2=0;
cj2=1.0;
j2=0;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9536)));
IkReal gconst4=(x9535*x9537);
IkReal gconst5=((1.0)*r20*x9537);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r02;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x9539=((-1.0)*r21);
CheckValue<IkReal> x9542 = IKatan2WithCheck(IkReal(x9539),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9542.valid){
continue;
}
IkReal x9540=((1.0)*(x9542.value));
IkReal x9541=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9540)));
sj2=0;
cj2=1.0;
j2=0;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9540)));
IkReal gconst4=(x9539*x9541);
IkReal gconst5=((1.0)*r20*x9541);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x9543=((-1.0)*r21);
CheckValue<IkReal> x9546 = IKatan2WithCheck(IkReal(x9543),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9546.valid){
continue;
}
IkReal x9544=((1.0)*(x9546.value));
IkReal x9545=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9544)));
sj2=0;
cj2=1.0;
j2=0;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9544)));
IkReal gconst4=(x9543*x9545);
IkReal gconst5=((1.0)*r20*x9545);
j5eval[0]=r12;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9547=(gconst5*r10);
IkReal x9548=(gconst4*r11);
CheckValue<IkReal> x9549 = IKatan2WithCheck(IkReal((x9547+(((-1.0)*x9548)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x9549.valid){
continue;
}
CheckValue<IkReal> x9550=IKPowWithIntegerCheck(IKsign(((x9548*x9548)+(r12*r12)+(x9547*x9547)+(((-2.0)*x9547*x9548)))),-1);
if(!x9550.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9549.value)+(((1.5707963267949)*(x9550.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9551=IKsin(j5);
IkReal x9552=IKcos(j5);
IkReal x9553=(gconst5*x9552);
IkReal x9554=((1.0)*x9551);
IkReal x9555=((1.0)*x9552);
IkReal x9556=(gconst4*x9551);
IkReal x9557=(gconst4*x9555);
IkReal x9558=(gconst5*x9554);
evalcond[0]=((((-1.0)*r20*x9558))+(((-1.0)*r22*x9555))+((r21*x9556)));
evalcond[1]=((((-1.0)*r00*x9558))+(((-1.0)*r02*x9555))+((r01*x9556)));
evalcond[2]=(((r10*x9553))+(((-1.0)*r12*x9554))+(((-1.0)*r11*x9557)));
evalcond[3]=((1.0)+((r11*x9556))+(((-1.0)*r12*x9555))+(((-1.0)*r10*x9558)));
evalcond[4]=((((-1.0)*r21*x9557))+(((-1.0)*r22*x9554))+((cj1*sj0))+((r20*x9553))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r01*x9557))+(((-1.0)*r02*x9554))+((sj0*sj1))+((r00*x9553))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9559=((1.0)*gconst5);
CheckValue<IkReal> x9560 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x9559))+((gconst4*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9560.valid){
continue;
}
CheckValue<IkReal> x9561=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst4*r00))+(((-1.0)*r01*x9559)))),-1);
if(!x9561.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9560.value)+(((1.5707963267949)*(x9561.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9562=IKsin(j5);
IkReal x9563=IKcos(j5);
IkReal x9564=(gconst5*x9563);
IkReal x9565=((1.0)*x9562);
IkReal x9566=((1.0)*x9563);
IkReal x9567=(gconst4*x9562);
IkReal x9568=(gconst4*x9566);
IkReal x9569=(gconst5*x9565);
evalcond[0]=(((r21*x9567))+(((-1.0)*r20*x9569))+(((-1.0)*r22*x9566)));
evalcond[1]=(((r01*x9567))+(((-1.0)*r00*x9569))+(((-1.0)*r02*x9566)));
evalcond[2]=((((-1.0)*r11*x9568))+(((-1.0)*r12*x9565))+((r10*x9564)));
evalcond[3]=((1.0)+(((-1.0)*r10*x9569))+((r11*x9567))+(((-1.0)*r12*x9566)));
evalcond[4]=((((-1.0)*r21*x9568))+((cj1*sj0))+(((-1.0)*r22*x9565))+((r20*x9564))+((cj0*sj1)));
evalcond[5]=(((r00*x9564))+(((-1.0)*r01*x9568))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*r02*x9565)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9570 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst4*r01))+(((-1.0)*gconst5*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9570.valid){
continue;
}
CheckValue<IkReal> x9571=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x9571.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9570.value)+(((1.5707963267949)*(x9571.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9572=IKsin(j5);
IkReal x9573=IKcos(j5);
IkReal x9574=(gconst5*x9573);
IkReal x9575=((1.0)*x9572);
IkReal x9576=((1.0)*x9573);
IkReal x9577=(gconst4*x9572);
IkReal x9578=(gconst4*x9576);
IkReal x9579=(gconst5*x9575);
evalcond[0]=(((r21*x9577))+(((-1.0)*r20*x9579))+(((-1.0)*r22*x9576)));
evalcond[1]=((((-1.0)*r02*x9576))+((r01*x9577))+(((-1.0)*r00*x9579)));
evalcond[2]=((((-1.0)*r12*x9575))+(((-1.0)*r11*x9578))+((r10*x9574)));
evalcond[3]=((1.0)+((r11*x9577))+(((-1.0)*r12*x9576))+(((-1.0)*r10*x9579)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*r21*x9578))+(((-1.0)*r22*x9575))+((r20*x9574))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r02*x9575))+((r00*x9574))+((sj0*sj1))+(((-1.0)*r01*x9578))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(r02);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
IkReal op[2+1], zeror[2];
int numroots;
op[0]=((1.0)+r12);
op[1]=((((-2.0)*gconst5*r10))+(((2.0)*gconst4*r11)));
op[2]=((1.0)+(((-1.0)*r12)));
polyroots2(op,zeror,numroots);
IkReal j5array[2], cj5array[2], sj5array[2], tempj5array[1];
int numsolutions = 0;
for(int ij5 = 0; ij5 < numroots; ++ij5)
{
IkReal htj5 = zeror[ij5];
tempj5array[0]=((2.0)*(atan(htj5)));
for(int kj5 = 0; kj5 < 1; ++kj5)
{
j5array[numsolutions] = tempj5array[kj5];
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
sj5array[numsolutions] = IKsin(j5array[numsolutions]);
cj5array[numsolutions] = IKcos(j5array[numsolutions]);
numsolutions++;
}
}
bool j5valid[2]={true,true};
_nj5 = 2;
for(int ij5 = 0; ij5 < numsolutions; ++ij5)
    {
if( !j5valid[ij5] )
{
    continue;
}
    j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
htj5 = IKtan(j5/2);

_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < numsolutions; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
    }

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9580=gconst4*gconst4;
IkReal x9581=gconst5*gconst5;
IkReal x9582=(cj4*r10);
IkReal x9583=(r11*sj4);
IkReal x9584=(r10*sj4);
IkReal x9585=(cj4*r11);
IkReal x9586=(gconst4*gconst5*r21);
IkReal x9587=(gconst4*gconst5*r20);
IkReal x9588=(r21*x9580);
IkReal x9589=((1.0)*r20*x9581);
CheckValue<IkReal> x9590 = IKatan2WithCheck(IkReal((((gconst5*r22*x9583))+((gconst4*r22*x9584)))),IkReal((((x9583*x9586))+((x9584*x9588))+(((-1.0)*x9584*x9587))+(((-1.0)*x9583*x9589)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9590.valid){
continue;
}
CheckValue<IkReal> x9591=IKPowWithIntegerCheck(IKsign((((x9582*x9586))+(((-1.0)*cj4*r12*r22))+((x9585*x9587))+(((-1.0)*x9585*x9588))+(((-1.0)*x9582*x9589)))),-1);
if(!x9591.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9590.value)+(((1.5707963267949)*(x9591.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9592=IKsin(j5);
IkReal x9593=IKcos(j5);
IkReal x9594=(sj0*sj1);
IkReal x9595=(gconst5*r00);
IkReal x9596=((1.0)*cj1);
IkReal x9597=(gconst5*sj4);
IkReal x9598=(cj4*gconst5);
IkReal x9599=(gconst4*sj4);
IkReal x9600=(cj4*gconst4);
IkReal x9601=(cj0*sj1);
IkReal x9602=(cj0*x9596);
IkReal x9603=((1.0)*x9592);
IkReal x9604=(r10*x9593);
IkReal x9605=(cj4*x9592);
IkReal x9606=(r20*x9593);
IkReal x9607=((1.0)*x9593);
IkReal x9608=(gconst4*x9592);
evalcond[0]=((((-1.0)*r22*x9607))+((r21*x9608))+(((-1.0)*gconst5*r20*x9603)));
evalcond[1]=((((-1.0)*x9595*x9603))+((r01*x9608))+(((-1.0)*r02*x9607)));
evalcond[2]=((1.0)+(((-1.0)*gconst5*r10*x9603))+((r11*x9608))+(((-1.0)*r12*x9607)));
evalcond[3]=(((r11*x9597))+((r12*x9605))+((r11*x9593*x9600))+((r10*x9599))+(((-1.0)*x9598*x9604)));
evalcond[4]=(((r11*x9598))+((r10*x9600))+((x9597*x9604))+(((-1.0)*r12*sj4*x9603))+(((-1.0)*r11*x9599*x9607)));
evalcond[5]=(((r20*x9599))+((cj1*sj0))+x9601+((r21*x9597))+((r21*x9593*x9600))+(((-1.0)*x9598*x9606))+((r22*x9605)));
evalcond[6]=((((-1.0)*cj4*x9595*x9607))+((r01*x9597))+(((-1.0)*x9602))+((r00*x9599))+((r01*x9593*x9600))+x9594+((r02*x9605)));
evalcond[7]=((((-1.0)*x9602))+(((-1.0)*r22*sj4*x9603))+((r20*x9600))+((x9597*x9606))+x9594+((r21*x9598))+(((-1.0)*r21*x9599*x9607)));
evalcond[8]=(((r01*x9598))+((sj4*x9593*x9595))+((r00*x9600))+(((-1.0)*x9601))+(((-1.0)*sj0*x9596))+(((-1.0)*r01*x9599*x9607))+(((-1.0)*r02*sj4*x9603)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9609=((1.0)*gconst5);
CheckValue<IkReal> x9610 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x9609))+((gconst4*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9610.valid){
continue;
}
CheckValue<IkReal> x9611=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst4*r00))+(((-1.0)*r01*x9609)))),-1);
if(!x9611.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9610.value)+(((1.5707963267949)*(x9611.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9612=IKsin(j5);
IkReal x9613=IKcos(j5);
IkReal x9614=(sj0*sj1);
IkReal x9615=(gconst5*r00);
IkReal x9616=((1.0)*cj1);
IkReal x9617=(gconst5*sj4);
IkReal x9618=(cj4*gconst5);
IkReal x9619=(gconst4*sj4);
IkReal x9620=(cj4*gconst4);
IkReal x9621=(cj0*sj1);
IkReal x9622=(cj0*x9616);
IkReal x9623=((1.0)*x9612);
IkReal x9624=(r10*x9613);
IkReal x9625=(cj4*x9612);
IkReal x9626=(r20*x9613);
IkReal x9627=((1.0)*x9613);
IkReal x9628=(gconst4*x9612);
evalcond[0]=((((-1.0)*r22*x9627))+((r21*x9628))+(((-1.0)*gconst5*r20*x9623)));
evalcond[1]=(((r01*x9628))+(((-1.0)*x9615*x9623))+(((-1.0)*r02*x9627)));
evalcond[2]=((1.0)+(((-1.0)*gconst5*r10*x9623))+(((-1.0)*r12*x9627))+((r11*x9628)));
evalcond[3]=(((r10*x9619))+((r11*x9613*x9620))+((r12*x9625))+((r11*x9617))+(((-1.0)*x9618*x9624)));
evalcond[4]=(((x9617*x9624))+((r10*x9620))+(((-1.0)*r12*sj4*x9623))+((r11*x9618))+(((-1.0)*r11*x9619*x9627)));
evalcond[5]=(((r20*x9619))+((cj1*sj0))+((r21*x9617))+((r22*x9625))+((r21*x9613*x9620))+x9621+(((-1.0)*x9618*x9626)));
evalcond[6]=(((r01*x9613*x9620))+((r00*x9619))+((r01*x9617))+((r02*x9625))+x9614+(((-1.0)*cj4*x9615*x9627))+(((-1.0)*x9622)));
evalcond[7]=(((r20*x9620))+((x9617*x9626))+(((-1.0)*r22*sj4*x9623))+((r21*x9618))+x9614+(((-1.0)*r21*x9619*x9627))+(((-1.0)*x9622)));
evalcond[8]=(((r00*x9620))+(((-1.0)*sj0*x9616))+((sj4*x9613*x9615))+((r01*x9618))+(((-1.0)*x9621))+(((-1.0)*r01*x9619*x9627))+(((-1.0)*r02*sj4*x9623)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9629 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst4*r01))+(((-1.0)*gconst5*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9629.valid){
continue;
}
CheckValue<IkReal> x9630=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x9630.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9629.value)+(((1.5707963267949)*(x9630.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9631=IKsin(j5);
IkReal x9632=IKcos(j5);
IkReal x9633=(sj0*sj1);
IkReal x9634=(gconst5*r00);
IkReal x9635=((1.0)*cj1);
IkReal x9636=(gconst5*sj4);
IkReal x9637=(cj4*gconst5);
IkReal x9638=(gconst4*sj4);
IkReal x9639=(cj4*gconst4);
IkReal x9640=(cj0*sj1);
IkReal x9641=(cj0*x9635);
IkReal x9642=((1.0)*x9631);
IkReal x9643=(r10*x9632);
IkReal x9644=(cj4*x9631);
IkReal x9645=(r20*x9632);
IkReal x9646=((1.0)*x9632);
IkReal x9647=(gconst4*x9631);
evalcond[0]=((((-1.0)*gconst5*r20*x9642))+((r21*x9647))+(((-1.0)*r22*x9646)));
evalcond[1]=(((r01*x9647))+(((-1.0)*x9634*x9642))+(((-1.0)*r02*x9646)));
evalcond[2]=((1.0)+(((-1.0)*gconst5*r10*x9642))+(((-1.0)*r12*x9646))+((r11*x9647)));
evalcond[3]=(((r10*x9638))+((r11*x9632*x9639))+((r11*x9636))+(((-1.0)*x9637*x9643))+((r12*x9644)));
evalcond[4]=((((-1.0)*r12*sj4*x9642))+((r10*x9639))+(((-1.0)*r11*x9638*x9646))+((x9636*x9643))+((r11*x9637)));
evalcond[5]=(((r22*x9644))+((r21*x9632*x9639))+((r20*x9638))+((cj1*sj0))+((r21*x9636))+x9640+(((-1.0)*x9637*x9645)));
evalcond[6]=((((-1.0)*cj4*x9634*x9646))+((r00*x9638))+((r01*x9636))+((r02*x9644))+(((-1.0)*x9641))+((r01*x9632*x9639))+x9633);
evalcond[7]=(((r20*x9639))+((r21*x9637))+(((-1.0)*x9641))+((x9636*x9645))+(((-1.0)*r22*sj4*x9642))+x9633+(((-1.0)*r21*x9638*x9646)));
evalcond[8]=((((-1.0)*sj0*x9635))+((r00*x9639))+((r01*x9637))+(((-1.0)*r02*sj4*x9642))+(((-1.0)*r01*x9638*x9646))+(((-1.0)*x9640))+((sj4*x9632*x9634)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x9648=((-1.0)*r21);
CheckValue<IkReal> x9651 = IKatan2WithCheck(IkReal(x9648),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9651.valid){
continue;
}
IkReal x9649=((1.0)*(x9651.value));
IkReal x9650=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9649)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9649)));
IkReal gconst4=(x9648*x9650);
IkReal gconst5=((1.0)*r20*x9650);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x9652=((-1.0)*r21);
CheckValue<IkReal> x9655 = IKatan2WithCheck(IkReal(x9652),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9655.valid){
continue;
}
IkReal x9653=((1.0)*(x9655.value));
IkReal x9654=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9653)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9653)));
IkReal gconst4=(x9652*x9654);
IkReal gconst5=((1.0)*r20*x9654);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x9656=((-1.0)*r21);
CheckValue<IkReal> x9659 = IKatan2WithCheck(IkReal(x9656),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9659.valid){
continue;
}
IkReal x9657=((1.0)*(x9659.value));
IkReal x9658=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9657)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9657)));
IkReal gconst4=(x9656*x9658);
IkReal gconst5=((1.0)*r20*x9658);
j5eval[0]=r02;
j5eval[1]=sj4;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x9660=((-1.0)*r21);
CheckValue<IkReal> x9663 = IKatan2WithCheck(IkReal(x9660),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9663.valid){
continue;
}
IkReal x9661=((1.0)*(x9663.value));
IkReal x9662=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9661)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9661)));
IkReal gconst4=(x9660*x9662);
IkReal gconst5=((1.0)*r20*x9662);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x9664=((-1.0)*r21);
CheckValue<IkReal> x9667 = IKatan2WithCheck(IkReal(x9664),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9667.valid){
continue;
}
IkReal x9665=((1.0)*(x9667.value));
IkReal x9666=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9665)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9665)));
IkReal gconst4=(x9664*x9666);
IkReal gconst5=((1.0)*r20*x9666);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x9668=((-1.0)*r21);
CheckValue<IkReal> x9671 = IKatan2WithCheck(IkReal(x9668),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9671.valid){
continue;
}
IkReal x9669=((1.0)*(x9671.value));
IkReal x9670=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9669)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9669)));
IkReal gconst4=(x9668*x9670);
IkReal gconst5=((1.0)*r20*x9670);
IkReal x9672=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x9676=IKPowWithIntegerCheck(x9672,-1);
if(!x9676.valid){
continue;
}
IkReal x9673=x9676.value;
IkReal x9674=((1.0)*x9673);
IkReal x9675=((((-1.0)*x9674*(r11*r11)*(r21*r21)))+(((-2.0)*r10*r11*r20*r21*x9673))+(((-1.0)*(r12*r12)))+(((-1.0)*x9674*(r10*r10)*(r20*r20))));
j5eval[0]=x9675;
j5eval[1]=r12;
j5eval[2]=x9672;
j5eval[3]=IKsign(x9675);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9677=(gconst5*r10);
IkReal x9678=(gconst4*r11);
CheckValue<IkReal> x9679=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x9677*x9677)))+(((-1.0)*(r12*r12)))+(((2.0)*x9677*x9678))+(((-1.0)*(x9678*x9678))))),-1);
if(!x9679.valid){
continue;
}
CheckValue<IkReal> x9680 = IKatan2WithCheck(IkReal((x9677+(((-1.0)*x9678)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x9680.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9679.value)))+(x9680.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9681=IKsin(j5);
IkReal x9682=IKcos(j5);
IkReal x9683=(gconst5*x9682);
IkReal x9684=((1.0)*x9681);
IkReal x9685=((1.0)*x9682);
IkReal x9686=(gconst4*x9681);
IkReal x9687=(gconst4*x9685);
IkReal x9688=(gconst5*x9684);
evalcond[0]=(((r21*x9686))+(((-1.0)*r22*x9685))+(((-1.0)*r20*x9688)));
evalcond[1]=((((-1.0)*r02*x9685))+(((-1.0)*r00*x9688))+((r01*x9686)));
evalcond[2]=((((-1.0)*r11*x9687))+(((-1.0)*r12*x9684))+((r10*x9683)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x9688))+(((-1.0)*r12*x9685))+((r11*x9686)));
evalcond[4]=((((-1.0)*r02*x9684))+((cj1*sj0))+(((-1.0)*r01*x9687))+((r00*x9683))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*r22*x9684))+(((-1.0)*r21*x9687))+(((-1.0)*cj0*cj1))+((r20*x9683)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9689=((1.0)*gconst5);
CheckValue<IkReal> x9690 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst4*r01))+(((-1.0)*r00*x9689)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9690.valid){
continue;
}
CheckValue<IkReal> x9691=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x9689))+(((-1.0)*gconst4*r20)))),-1);
if(!x9691.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9690.value)+(((1.5707963267949)*(x9691.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9692=IKsin(j5);
IkReal x9693=IKcos(j5);
IkReal x9694=(gconst5*x9693);
IkReal x9695=((1.0)*x9692);
IkReal x9696=((1.0)*x9693);
IkReal x9697=(gconst4*x9692);
IkReal x9698=(gconst4*x9696);
IkReal x9699=(gconst5*x9695);
evalcond[0]=(((r21*x9697))+(((-1.0)*r22*x9696))+(((-1.0)*r20*x9699)));
evalcond[1]=((((-1.0)*r02*x9696))+(((-1.0)*r00*x9699))+((r01*x9697)));
evalcond[2]=((((-1.0)*r12*x9695))+(((-1.0)*r11*x9698))+((r10*x9694)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x9696))+(((-1.0)*r10*x9699))+((r11*x9697)));
evalcond[4]=((((-1.0)*r02*x9695))+((cj1*sj0))+(((-1.0)*r01*x9698))+((r00*x9694))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*r22*x9695))+(((-1.0)*r21*x9698))+(((-1.0)*cj0*cj1))+((r20*x9694)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9700=IKPowWithIntegerCheck(IKsign((((gconst4*r00))+((gconst5*r01)))),-1);
if(!x9700.valid){
continue;
}
CheckValue<IkReal> x9701 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9701.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9700.value)))+(x9701.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9702=IKsin(j5);
IkReal x9703=IKcos(j5);
IkReal x9704=(gconst5*x9703);
IkReal x9705=((1.0)*x9702);
IkReal x9706=((1.0)*x9703);
IkReal x9707=(gconst4*x9702);
IkReal x9708=(gconst4*x9706);
IkReal x9709=(gconst5*x9705);
evalcond[0]=((((-1.0)*r22*x9706))+((r21*x9707))+(((-1.0)*r20*x9709)));
evalcond[1]=((((-1.0)*r02*x9706))+((r01*x9707))+(((-1.0)*r00*x9709)));
evalcond[2]=(((r10*x9704))+(((-1.0)*r11*x9708))+(((-1.0)*r12*x9705)));
evalcond[3]=((-1.0)+((r11*x9707))+(((-1.0)*r10*x9709))+(((-1.0)*r12*x9706)));
evalcond[4]=((((-1.0)*r02*x9705))+((cj1*sj0))+((r00*x9704))+(((-1.0)*r01*x9708))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r22*x9705))+((r20*x9704))+((sj0*sj1))+(((-1.0)*r21*x9708))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x9710=((-1.0)*r21);
CheckValue<IkReal> x9713 = IKatan2WithCheck(IkReal(x9710),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9713.valid){
continue;
}
IkReal x9711=((1.0)*(x9713.value));
IkReal x9712=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9711)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9711)));
IkReal gconst4=(x9710*x9712);
IkReal gconst5=((1.0)*r20*x9712);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x9714=((-1.0)*r21);
CheckValue<IkReal> x9717 = IKatan2WithCheck(IkReal(x9714),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9717.valid){
continue;
}
IkReal x9715=((1.0)*(x9717.value));
IkReal x9716=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9715)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9715)));
IkReal gconst4=(x9714*x9716);
IkReal gconst5=((1.0)*r20*x9716);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x9718=((-1.0)*r21);
CheckValue<IkReal> x9721 = IKatan2WithCheck(IkReal(x9718),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9721.valid){
continue;
}
IkReal x9719=((1.0)*(x9721.value));
IkReal x9720=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9719)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9719)));
IkReal gconst4=(x9718*x9720);
IkReal gconst5=((1.0)*r20*x9720);
j5eval[0]=r12;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9722=(gconst5*r10);
IkReal x9723=(gconst4*r11);
CheckValue<IkReal> x9724 = IKatan2WithCheck(IkReal((x9723+(((-1.0)*x9722)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x9724.valid){
continue;
}
CheckValue<IkReal> x9725=IKPowWithIntegerCheck(IKsign(((x9722*x9722)+(r12*r12)+(x9723*x9723)+(((-2.0)*x9722*x9723)))),-1);
if(!x9725.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9724.value)+(((1.5707963267949)*(x9725.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9726=IKcos(j5);
IkReal x9727=IKsin(j5);
IkReal x9728=(gconst5*r20);
IkReal x9729=((1.0)*gconst5*r00);
IkReal x9730=(gconst4*x9726);
IkReal x9731=((1.0)*gconst5*r10);
IkReal x9732=((1.0)*x9726);
IkReal x9733=(gconst4*x9727);
evalcond[0]=(((r11*x9730))+((r12*x9727))+(((-1.0)*x9726*x9731)));
evalcond[1]=((((-1.0)*r22*x9732))+((r21*x9733))+(((-1.0)*x9727*x9728)));
evalcond[2]=((((-1.0)*r02*x9732))+(((-1.0)*x9727*x9729))+((r01*x9733)));
evalcond[3]=((-1.0)+((r11*x9733))+(((-1.0)*r12*x9732))+(((-1.0)*x9727*x9731)));
evalcond[4]=(((cj1*sj0))+((r02*x9727))+(((-1.0)*x9726*x9729))+((cj0*sj1))+((r01*x9730)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*x9728*x9732))+(((-1.0)*cj0*cj1))+((r21*x9730))+((r22*x9727)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9734=((1.0)*gconst5);
CheckValue<IkReal> x9735 = IKatan2WithCheck(IkReal(r02),IkReal(((((-1.0)*r00*x9734))+((gconst4*r01)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9735.valid){
continue;
}
CheckValue<IkReal> x9736=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x9734))+(((-1.0)*gconst4*r20)))),-1);
if(!x9736.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9735.value)+(((1.5707963267949)*(x9736.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9737=IKcos(j5);
IkReal x9738=IKsin(j5);
IkReal x9739=(gconst5*r20);
IkReal x9740=((1.0)*gconst5*r00);
IkReal x9741=(gconst4*x9737);
IkReal x9742=((1.0)*gconst5*r10);
IkReal x9743=((1.0)*x9737);
IkReal x9744=(gconst4*x9738);
evalcond[0]=(((r11*x9741))+((r12*x9738))+(((-1.0)*x9737*x9742)));
evalcond[1]=(((r21*x9744))+(((-1.0)*r22*x9743))+(((-1.0)*x9738*x9739)));
evalcond[2]=((((-1.0)*r02*x9743))+((r01*x9744))+(((-1.0)*x9738*x9740)));
evalcond[3]=((-1.0)+((r11*x9744))+(((-1.0)*x9738*x9742))+(((-1.0)*r12*x9743)));
evalcond[4]=(((r02*x9738))+((cj1*sj0))+(((-1.0)*x9737*x9740))+((r01*x9741))+((cj0*sj1)));
evalcond[5]=((((-1.0)*x9739*x9743))+((r21*x9741))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r22*x9738)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9745=IKPowWithIntegerCheck(IKsign((((gconst4*r00))+((gconst5*r01)))),-1);
if(!x9745.valid){
continue;
}
CheckValue<IkReal> x9746 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9746.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9745.value)))+(x9746.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9747=IKcos(j5);
IkReal x9748=IKsin(j5);
IkReal x9749=(gconst5*r20);
IkReal x9750=((1.0)*gconst5*r00);
IkReal x9751=(gconst4*x9747);
IkReal x9752=((1.0)*gconst5*r10);
IkReal x9753=((1.0)*x9747);
IkReal x9754=(gconst4*x9748);
evalcond[0]=(((r11*x9751))+(((-1.0)*x9747*x9752))+((r12*x9748)));
evalcond[1]=(((r21*x9754))+(((-1.0)*r22*x9753))+(((-1.0)*x9748*x9749)));
evalcond[2]=(((r01*x9754))+(((-1.0)*r02*x9753))+(((-1.0)*x9748*x9750)));
evalcond[3]=((-1.0)+((r11*x9754))+(((-1.0)*x9748*x9752))+(((-1.0)*r12*x9753)));
evalcond[4]=(((r01*x9751))+(((-1.0)*x9747*x9750))+((cj1*sj0))+((r02*x9748))+((cj0*sj1)));
evalcond[5]=((((-1.0)*x9749*x9753))+((r22*x9748))+((r21*x9751))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x9755=((-1.0)*r21);
CheckValue<IkReal> x9758 = IKatan2WithCheck(IkReal(x9755),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9758.valid){
continue;
}
IkReal x9756=((1.0)*(x9758.value));
IkReal x9757=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9756)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9756)));
IkReal gconst4=(x9755*x9757);
IkReal gconst5=((1.0)*r20*x9757);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x9759=((-1.0)*r21);
CheckValue<IkReal> x9762 = IKatan2WithCheck(IkReal(x9759),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9762.valid){
continue;
}
IkReal x9760=((1.0)*(x9762.value));
IkReal x9761=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9760)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9760)));
IkReal gconst4=(x9759*x9761);
IkReal gconst5=((1.0)*r20*x9761);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x9763=((-1.0)*r21);
CheckValue<IkReal> x9766 = IKatan2WithCheck(IkReal(x9763),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9766.valid){
continue;
}
IkReal x9764=((1.0)*(x9766.value));
IkReal x9765=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9764)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9764)));
IkReal gconst4=(x9763*x9765);
IkReal gconst5=((1.0)*r20*x9765);
j5eval[0]=r12;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9767=(gconst5*r10);
IkReal x9768=(gconst4*r11);
CheckValue<IkReal> x9769 = IKatan2WithCheck(IkReal(((((-1.0)*x9767))+x9768)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x9769.valid){
continue;
}
CheckValue<IkReal> x9770=IKPowWithIntegerCheck(IKsign(((r12*r12)+(((-2.0)*x9767*x9768))+(x9768*x9768)+(x9767*x9767))),-1);
if(!x9770.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9769.value)+(((1.5707963267949)*(x9770.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9771=IKcos(j5);
IkReal x9772=IKsin(j5);
IkReal x9773=(gconst5*r20);
IkReal x9774=((1.0)*gconst5*r00);
IkReal x9775=(gconst4*x9771);
IkReal x9776=((1.0)*gconst5*r10);
IkReal x9777=((1.0)*x9771);
IkReal x9778=(gconst4*x9772);
evalcond[0]=(((r12*x9772))+(((-1.0)*x9771*x9776))+((r11*x9775)));
evalcond[1]=((((-1.0)*r22*x9777))+((r21*x9778))+(((-1.0)*x9772*x9773)));
evalcond[2]=(((r01*x9778))+(((-1.0)*r02*x9777))+(((-1.0)*x9772*x9774)));
evalcond[3]=((-1.0)+(((-1.0)*x9772*x9776))+(((-1.0)*r12*x9777))+((r11*x9778)));
evalcond[4]=(((r22*x9772))+((cj1*sj0))+((r21*x9775))+(((-1.0)*x9773*x9777))+((cj0*sj1)));
evalcond[5]=(((r01*x9775))+((cj0*cj1))+(((-1.0)*x9771*x9774))+((r02*x9772))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9779=((1.0)*gconst5);
CheckValue<IkReal> x9780=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x9779))+(((-1.0)*gconst4*r20)))),-1);
if(!x9780.valid){
continue;
}
CheckValue<IkReal> x9781 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst4*r01))+(((-1.0)*r00*x9779)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9781.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9780.value)))+(x9781.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9782=IKcos(j5);
IkReal x9783=IKsin(j5);
IkReal x9784=(gconst5*r20);
IkReal x9785=((1.0)*gconst5*r00);
IkReal x9786=(gconst4*x9782);
IkReal x9787=((1.0)*gconst5*r10);
IkReal x9788=((1.0)*x9782);
IkReal x9789=(gconst4*x9783);
evalcond[0]=((((-1.0)*x9782*x9787))+((r11*x9786))+((r12*x9783)));
evalcond[1]=(((r21*x9789))+(((-1.0)*r22*x9788))+(((-1.0)*x9783*x9784)));
evalcond[2]=(((r01*x9789))+(((-1.0)*x9783*x9785))+(((-1.0)*r02*x9788)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x9788))+(((-1.0)*x9783*x9787))+((r11*x9789)));
evalcond[4]=(((r21*x9786))+((cj1*sj0))+((r22*x9783))+(((-1.0)*x9784*x9788))+((cj0*sj1)));
evalcond[5]=(((r01*x9786))+((cj0*cj1))+(((-1.0)*x9782*x9785))+((r02*x9783))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9790=IKPowWithIntegerCheck(IKsign((((gconst4*r00))+((gconst5*r01)))),-1);
if(!x9790.valid){
continue;
}
CheckValue<IkReal> x9791 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9791.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9790.value)))+(x9791.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9792=IKcos(j5);
IkReal x9793=IKsin(j5);
IkReal x9794=(gconst5*r20);
IkReal x9795=((1.0)*gconst5*r00);
IkReal x9796=(gconst4*x9792);
IkReal x9797=((1.0)*gconst5*r10);
IkReal x9798=((1.0)*x9792);
IkReal x9799=(gconst4*x9793);
evalcond[0]=(((r11*x9796))+(((-1.0)*x9792*x9797))+((r12*x9793)));
evalcond[1]=((((-1.0)*x9793*x9794))+((r21*x9799))+(((-1.0)*r22*x9798)));
evalcond[2]=((((-1.0)*r02*x9798))+(((-1.0)*x9793*x9795))+((r01*x9799)));
evalcond[3]=((-1.0)+((r11*x9799))+(((-1.0)*x9793*x9797))+(((-1.0)*r12*x9798)));
evalcond[4]=(((cj1*sj0))+((r21*x9796))+((r22*x9793))+((cj0*sj1))+(((-1.0)*x9794*x9798)));
evalcond[5]=(((r02*x9793))+(((-1.0)*x9792*x9795))+((cj0*cj1))+((r01*x9796))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x9800=((-1.0)*r21);
CheckValue<IkReal> x9803 = IKatan2WithCheck(IkReal(x9800),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9803.valid){
continue;
}
IkReal x9801=((1.0)*(x9803.value));
IkReal x9802=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9801)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9801)));
IkReal gconst4=(x9800*x9802);
IkReal gconst5=((1.0)*r20*x9802);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x9804=((-1.0)*r21);
CheckValue<IkReal> x9807 = IKatan2WithCheck(IkReal(x9804),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9807.valid){
continue;
}
IkReal x9805=((1.0)*(x9807.value));
IkReal x9806=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9805)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9805)));
IkReal gconst4=(x9804*x9806);
IkReal gconst5=((1.0)*r20*x9806);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x9808=((-1.0)*r21);
CheckValue<IkReal> x9811 = IKatan2WithCheck(IkReal(x9808),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9811.valid){
continue;
}
IkReal x9809=((1.0)*(x9811.value));
IkReal x9810=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9809)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9809)));
IkReal gconst4=(x9808*x9810);
IkReal gconst5=((1.0)*r20*x9810);
IkReal x9812=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x9816=IKPowWithIntegerCheck(x9812,-1);
if(!x9816.valid){
continue;
}
IkReal x9813=x9816.value;
IkReal x9814=((1.0)*x9813);
IkReal x9815=((((-1.0)*(r12*r12)))+(((-1.0)*x9814*(r10*r10)*(r20*r20)))+(((-1.0)*x9814*(r11*r11)*(r21*r21)))+(((-2.0)*r10*r11*r20*r21*x9813)));
j5eval[0]=x9815;
j5eval[1]=r12;
j5eval[2]=x9812;
j5eval[3]=IKsign(x9815);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9817=(gconst5*r10);
IkReal x9818=(gconst4*r11);
CheckValue<IkReal> x9819 = IKatan2WithCheck(IkReal(((((-1.0)*x9818))+x9817)),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x9819.valid){
continue;
}
CheckValue<IkReal> x9820=IKPowWithIntegerCheck(IKsign(((((2.0)*x9817*x9818))+(((-1.0)*(x9817*x9817)))+(((-1.0)*(x9818*x9818)))+(((-1.0)*(r12*r12))))),-1);
if(!x9820.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9819.value)+(((1.5707963267949)*(x9820.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9821=IKsin(j5);
IkReal x9822=IKcos(j5);
IkReal x9823=(gconst5*x9822);
IkReal x9824=((1.0)*x9821);
IkReal x9825=((1.0)*x9822);
IkReal x9826=(gconst4*x9821);
IkReal x9827=(gconst4*x9825);
IkReal x9828=(gconst5*x9824);
evalcond[0]=(((r21*x9826))+(((-1.0)*r20*x9828))+(((-1.0)*r22*x9825)));
evalcond[1]=((((-1.0)*r00*x9828))+(((-1.0)*r02*x9825))+((r01*x9826)));
evalcond[2]=((((-1.0)*r12*x9824))+(((-1.0)*r11*x9827))+((r10*x9823)));
evalcond[3]=((-1.0)+((r11*x9826))+(((-1.0)*r10*x9828))+(((-1.0)*r12*x9825)));
evalcond[4]=(((r20*x9823))+((cj1*sj0))+(((-1.0)*r21*x9827))+(((-1.0)*r22*x9824))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r01*x9827))+(((-1.0)*r02*x9824))+((cj0*cj1))+((r00*x9823))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9829=((1.0)*gconst5);
CheckValue<IkReal> x9830 = IKatan2WithCheck(IkReal(r02),IkReal(((((-1.0)*r00*x9829))+((gconst4*r01)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9830.valid){
continue;
}
CheckValue<IkReal> x9831=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x9829))+(((-1.0)*gconst4*r20)))),-1);
if(!x9831.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9830.value)+(((1.5707963267949)*(x9831.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9832=IKsin(j5);
IkReal x9833=IKcos(j5);
IkReal x9834=(gconst5*x9833);
IkReal x9835=((1.0)*x9832);
IkReal x9836=((1.0)*x9833);
IkReal x9837=(gconst4*x9832);
IkReal x9838=(gconst4*x9836);
IkReal x9839=(gconst5*x9835);
evalcond[0]=((((-1.0)*r20*x9839))+((r21*x9837))+(((-1.0)*r22*x9836)));
evalcond[1]=(((r01*x9837))+(((-1.0)*r02*x9836))+(((-1.0)*r00*x9839)));
evalcond[2]=(((r10*x9834))+(((-1.0)*r12*x9835))+(((-1.0)*r11*x9838)));
evalcond[3]=((-1.0)+((r11*x9837))+(((-1.0)*r12*x9836))+(((-1.0)*r10*x9839)));
evalcond[4]=((((-1.0)*r21*x9838))+(((-1.0)*r22*x9835))+((cj1*sj0))+((r20*x9834))+((cj0*sj1)));
evalcond[5]=(((r00*x9834))+(((-1.0)*r02*x9835))+((cj0*cj1))+(((-1.0)*sj0*sj1))+(((-1.0)*r01*x9838)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9840=IKPowWithIntegerCheck(IKsign((((gconst4*r00))+((gconst5*r01)))),-1);
if(!x9840.valid){
continue;
}
CheckValue<IkReal> x9841 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9841.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9840.value)))+(x9841.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x9842=IKsin(j5);
IkReal x9843=IKcos(j5);
IkReal x9844=(gconst5*x9843);
IkReal x9845=((1.0)*x9842);
IkReal x9846=((1.0)*x9843);
IkReal x9847=(gconst4*x9842);
IkReal x9848=(gconst4*x9846);
IkReal x9849=(gconst5*x9845);
evalcond[0]=((((-1.0)*r22*x9846))+(((-1.0)*r20*x9849))+((r21*x9847)));
evalcond[1]=((((-1.0)*r02*x9846))+((r01*x9847))+(((-1.0)*r00*x9849)));
evalcond[2]=((((-1.0)*r12*x9845))+((r10*x9844))+(((-1.0)*r11*x9848)));
evalcond[3]=((-1.0)+((r11*x9847))+(((-1.0)*r12*x9846))+(((-1.0)*r10*x9849)));
evalcond[4]=(((cj1*sj0))+((r20*x9844))+(((-1.0)*r22*x9845))+(((-1.0)*r21*x9848))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r02*x9845))+((cj0*cj1))+(((-1.0)*r01*x9848))+((r00*x9844))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x9850=((-1.0)*r21);
IkReal x9851=((-1.0)*px);
CheckValue<IkReal> x9853 = IKatan2WithCheck(IkReal(x9850),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9853.valid){
continue;
}
IkReal x9852=((1.0)*(x9853.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9852)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x9851);
rxp1_1=(px*r21);
rxp1_2=(r11*x9851);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9852)));
IkReal gconst4=x9850;
IkReal gconst5=((1.0)*r20);
IkReal x9854=((1.0)*r11*r21);
IkReal x9855=((1.0)*r10*r20);
j5eval[0]=((((-1.0)*x9855))+(((-1.0)*x9854)));
j5eval[1]=((((-1.0)*cj4*x9855))+(((-1.0)*cj4*x9854)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x9856=((-1.0)*r21);
IkReal x9857=((-1.0)*px);
CheckValue<IkReal> x9859 = IKatan2WithCheck(IkReal(x9856),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9859.valid){
continue;
}
IkReal x9858=((1.0)*(x9859.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9858)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x9857);
rxp1_1=(px*r21);
rxp1_2=(r11*x9857);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9858)));
IkReal gconst4=x9856;
IkReal gconst5=((1.0)*r20);
IkReal x9860=((1.0)*r11*r21);
IkReal x9861=((1.0)*r10*r20);
j5eval[0]=((((-1.0)*x9860))+(((-1.0)*x9861)));
j5eval[1]=(((sj4*x9860))+((sj4*x9861)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x9862=((-1.0)*r21);
IkReal x9863=((-1.0)*px);
CheckValue<IkReal> x9865 = IKatan2WithCheck(IkReal(x9862),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x9865.valid){
continue;
}
IkReal x9864=((1.0)*(x9865.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x9864)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x9863);
rxp1_1=(px*r21);
rxp1_2=(r11*x9863);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst3=((3.14159265358979)+(((-1.0)*x9864)));
IkReal gconst4=x9862;
IkReal gconst5=((1.0)*r20);
IkReal x9866=((1.0)*cj4);
j5eval[0]=cj4;
j5eval[1]=r02;
j5eval[2]=((((-1.0)*r11*r21*x9866))+(((-1.0)*r10*r20*x9866)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9867=((1.0)*sj4);
CheckValue<IkReal> x9868=IKPowWithIntegerCheck(cj4,-1);
if(!x9868.valid){
continue;
}
CheckValue<IkReal> x9869=IKPowWithIntegerCheck(r02,-1);
if(!x9869.valid){
continue;
}
CheckValue<IkReal> x9870=IKPowWithIntegerCheck(((((-1.0)*cj4*gconst5*r10))+((cj4*gconst4*r11))),-1);
if(!x9870.valid){
continue;
}
if( IKabs(((x9868.value)*(x9869.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x9870.value)*(((((-1.0)*gconst4*r10*x9867))+(((-1.0)*gconst5*r11*x9867)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x9868.value)*(x9869.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))))+IKsqr(((x9870.value)*(((((-1.0)*gconst4*r10*x9867))+(((-1.0)*gconst5*r11*x9867))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x9868.value)*(x9869.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))), ((x9870.value)*(((((-1.0)*gconst4*r10*x9867))+(((-1.0)*gconst5*r11*x9867))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9871=IKsin(j5);
IkReal x9872=IKcos(j5);
IkReal x9873=(cj1*sj0);
IkReal x9874=(cj0*sj1);
IkReal x9875=(sj0*sj1);
IkReal x9876=(cj0*cj1);
IkReal x9877=(gconst5*sj4);
IkReal x9878=(cj4*gconst5);
IkReal x9879=(gconst4*sj4);
IkReal x9880=(cj4*gconst4);
IkReal x9881=(r10*x9872);
IkReal x9882=(r02*x9871);
IkReal x9883=((1.0)*x9872);
IkReal x9884=(gconst4*x9871);
IkReal x9885=(x9874+x9873);
IkReal x9886=((1.0)*gconst5*x9871);
evalcond[0]=((-1.0)*r02*x9872);
evalcond[1]=(((r21*x9884))+(((-1.0)*r20*x9886)));
evalcond[2]=((((-1.0)*x9875))+((cj4*x9882))+x9876);
evalcond[3]=((((-1.0)*sj4*x9882))+x9885);
evalcond[4]=((-1.0)+(((-1.0)*r10*x9886))+((r11*x9884)));
evalcond[5]=(((r10*x9879))+((r11*x9872*x9880))+(((-1.0)*x9878*x9881))+((r11*x9877)));
evalcond[6]=(((x9877*x9881))+((r10*x9880))+(((-1.0)*r11*x9879*x9883))+((r11*x9878)));
evalcond[7]=((((-1.0)*r20*x9878*x9883))+((r21*x9877))+((r20*x9879))+x9885+((r21*x9872*x9880)));
evalcond[8]=(((r20*x9872*x9877))+((r20*x9880))+(((-1.0)*x9876))+((r21*x9878))+(((-1.0)*r21*x9879*x9883))+x9875);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9887=(gconst5*r10);
IkReal x9888=((1.0)*cj4);
IkReal x9889=(gconst4*r11);
CheckValue<IkReal> x9890=IKPowWithIntegerCheck(((((-1.0)*x9887))+x9889),-1);
if(!x9890.valid){
continue;
}
CheckValue<IkReal> x9891=IKPowWithIntegerCheck(((((-1.0)*sj4*x9889))+((sj4*x9887))),-1);
if(!x9891.valid){
continue;
}
if( IKabs(x9890.value) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x9891.value)*(((((-1.0)*gconst4*r10*x9888))+(((-1.0)*gconst5*r11*x9888)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(x9890.value)+IKsqr(((x9891.value)*(((((-1.0)*gconst4*r10*x9888))+(((-1.0)*gconst5*r11*x9888))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(x9890.value, ((x9891.value)*(((((-1.0)*gconst4*r10*x9888))+(((-1.0)*gconst5*r11*x9888))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9892=IKsin(j5);
IkReal x9893=IKcos(j5);
IkReal x9894=(cj1*sj0);
IkReal x9895=(cj0*sj1);
IkReal x9896=(sj0*sj1);
IkReal x9897=(cj0*cj1);
IkReal x9898=(gconst5*sj4);
IkReal x9899=(cj4*gconst5);
IkReal x9900=(gconst4*sj4);
IkReal x9901=(cj4*gconst4);
IkReal x9902=(r10*x9893);
IkReal x9903=(r02*x9892);
IkReal x9904=((1.0)*x9893);
IkReal x9905=(gconst4*x9892);
IkReal x9906=(x9894+x9895);
IkReal x9907=((1.0)*gconst5*x9892);
evalcond[0]=((-1.0)*r02*x9893);
evalcond[1]=((((-1.0)*r20*x9907))+((r21*x9905)));
evalcond[2]=(((cj4*x9903))+(((-1.0)*x9896))+x9897);
evalcond[3]=((((-1.0)*sj4*x9903))+x9906);
evalcond[4]=((-1.0)+(((-1.0)*r10*x9907))+((r11*x9905)));
evalcond[5]=((((-1.0)*x9899*x9902))+((r11*x9893*x9901))+((r11*x9898))+((r10*x9900)));
evalcond[6]=(((x9898*x9902))+(((-1.0)*r11*x9900*x9904))+((r11*x9899))+((r10*x9901)));
evalcond[7]=(((r21*x9893*x9901))+((r20*x9900))+((r21*x9898))+x9906+(((-1.0)*r20*x9899*x9904)));
evalcond[8]=(((r20*x9901))+(((-1.0)*r21*x9900*x9904))+((r21*x9899))+(((-1.0)*x9897))+((r20*x9893*x9898))+x9896);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9908=((1.0)*gconst5);
IkReal x9909=(gconst4*r11);
CheckValue<IkReal> x9910=IKPowWithIntegerCheck(((((-1.0)*r10*x9908))+x9909),-1);
if(!x9910.valid){
continue;
}
CheckValue<IkReal> x9911=IKPowWithIntegerCheck((((cj4*x9909))+(((-1.0)*cj4*r10*x9908))),-1);
if(!x9911.valid){
continue;
}
if( IKabs(x9910.value) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x9911.value)*(((((-1.0)*gconst4*r10*sj4))+(((-1.0)*r11*sj4*x9908)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(x9910.value)+IKsqr(((x9911.value)*(((((-1.0)*gconst4*r10*sj4))+(((-1.0)*r11*sj4*x9908))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(x9910.value, ((x9911.value)*(((((-1.0)*gconst4*r10*sj4))+(((-1.0)*r11*sj4*x9908))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9912=IKsin(j5);
IkReal x9913=IKcos(j5);
IkReal x9914=(cj1*sj0);
IkReal x9915=(cj0*sj1);
IkReal x9916=(sj0*sj1);
IkReal x9917=(cj0*cj1);
IkReal x9918=(gconst5*sj4);
IkReal x9919=(cj4*gconst5);
IkReal x9920=(gconst4*sj4);
IkReal x9921=(cj4*gconst4);
IkReal x9922=(r10*x9913);
IkReal x9923=(r02*x9912);
IkReal x9924=((1.0)*x9913);
IkReal x9925=(gconst4*x9912);
IkReal x9926=(x9915+x9914);
IkReal x9927=((1.0)*gconst5*x9912);
evalcond[0]=((-1.0)*r02*x9913);
evalcond[1]=((((-1.0)*r20*x9927))+((r21*x9925)));
evalcond[2]=((((-1.0)*x9916))+x9917+((cj4*x9923)));
evalcond[3]=((((-1.0)*sj4*x9923))+x9926);
evalcond[4]=((-1.0)+(((-1.0)*r10*x9927))+((r11*x9925)));
evalcond[5]=(((r10*x9920))+((r11*x9913*x9921))+((r11*x9918))+(((-1.0)*x9919*x9922)));
evalcond[6]=(((r10*x9921))+((r11*x9919))+((x9918*x9922))+(((-1.0)*r11*x9920*x9924)));
evalcond[7]=(((r21*x9913*x9921))+((r20*x9920))+((r21*x9918))+x9926+(((-1.0)*r20*x9919*x9924)));
evalcond[8]=(((r20*x9913*x9918))+(((-1.0)*x9917))+((r20*x9921))+(((-1.0)*r21*x9920*x9924))+((r21*x9919))+x9916);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9928=gconst4*gconst4;
IkReal x9929=gconst5*gconst5;
IkReal x9930=(cj4*r10);
IkReal x9931=(r11*sj4);
IkReal x9932=(r10*sj4);
IkReal x9933=(cj4*r11);
IkReal x9934=(gconst4*gconst5*r21);
IkReal x9935=(gconst4*gconst5*r20);
IkReal x9936=(r21*x9928);
IkReal x9937=((1.0)*r20*x9929);
CheckValue<IkReal> x9938 = IKatan2WithCheck(IkReal((((gconst5*r22*x9931))+((gconst4*r22*x9932)))),IkReal(((((-1.0)*x9932*x9935))+((x9931*x9934))+((x9932*x9936))+(((-1.0)*x9931*x9937)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9938.valid){
continue;
}
CheckValue<IkReal> x9939=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj4*r12*r22))+(((-1.0)*x9930*x9937))+((x9933*x9935))+(((-1.0)*x9933*x9936))+((x9930*x9934)))),-1);
if(!x9939.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9938.value)+(((1.5707963267949)*(x9939.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9940=IKsin(j5);
IkReal x9941=IKcos(j5);
IkReal x9942=(cj1*sj0);
IkReal x9943=(cj0*sj1);
IkReal x9944=(gconst5*r00);
IkReal x9945=(sj0*sj1);
IkReal x9946=(gconst5*r21);
IkReal x9947=(gconst5*r10);
IkReal x9948=(cj4*gconst5);
IkReal x9949=(gconst4*sj4);
IkReal x9950=(cj4*gconst4);
IkReal x9951=(gconst5*r20);
IkReal x9952=(gconst4*r21);
IkReal x9953=(gconst5*sj4);
IkReal x9954=(cj0*cj1);
IkReal x9955=(gconst4*r01);
IkReal x9956=(gconst4*r11);
IkReal x9957=((1.0)*x9940);
IkReal x9958=(sj4*x9941);
IkReal x9959=(cj4*x9940);
IkReal x9960=((1.0)*x9941);
IkReal x9961=(x9942+x9943);
IkReal x9962=(cj4*x9960);
evalcond[0]=((((-1.0)*r22*x9960))+((x9940*x9952))+(((-1.0)*x9951*x9957)));
evalcond[1]=((((-1.0)*x9944*x9957))+(((-1.0)*r02*x9960))+((x9940*x9955)));
evalcond[2]=((-1.0)+(((-1.0)*r12*x9960))+((x9940*x9956))+(((-1.0)*x9947*x9957)));
evalcond[3]=(((r11*x9953))+(((-1.0)*x9947*x9962))+((r12*x9959))+((r11*x9941*x9950))+((r10*x9949)));
evalcond[4]=((((-1.0)*r12*sj4*x9957))+((r11*x9948))+((x9947*x9958))+((r10*x9950))+(((-1.0)*r11*x9949*x9960)));
evalcond[5]=(((r20*x9949))+((r21*x9941*x9950))+(((-1.0)*r20*x9948*x9960))+x9961+((r22*x9959))+((sj4*x9946)));
evalcond[6]=((((-1.0)*x9945))+((r02*x9959))+(((-1.0)*x9944*x9962))+((r01*x9941*x9950))+x9954+((r00*x9949))+((r01*x9953)));
evalcond[7]=((((-1.0)*r01*x9949*x9960))+(((-1.0)*r02*sj4*x9957))+((r01*x9948))+((x9944*x9958))+x9961+((r00*x9950)));
evalcond[8]=(((x9951*x9958))+(((-1.0)*r22*sj4*x9957))+((r20*x9950))+(((-1.0)*x9954))+(((-1.0)*r21*x9949*x9960))+x9945+((cj4*x9946)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x9963=((1.0)*gconst5);
CheckValue<IkReal> x9964 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst4*r01))+(((-1.0)*r00*x9963)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9964.valid){
continue;
}
CheckValue<IkReal> x9965=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x9963))+(((-1.0)*gconst4*r20)))),-1);
if(!x9965.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x9964.value)+(((1.5707963267949)*(x9965.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9966=IKsin(j5);
IkReal x9967=IKcos(j5);
IkReal x9968=(cj1*sj0);
IkReal x9969=(cj0*sj1);
IkReal x9970=(gconst5*r00);
IkReal x9971=(sj0*sj1);
IkReal x9972=(gconst5*r21);
IkReal x9973=(gconst5*r10);
IkReal x9974=(cj4*gconst5);
IkReal x9975=(gconst4*sj4);
IkReal x9976=(cj4*gconst4);
IkReal x9977=(gconst5*r20);
IkReal x9978=(gconst4*r21);
IkReal x9979=(gconst5*sj4);
IkReal x9980=(cj0*cj1);
IkReal x9981=(gconst4*r01);
IkReal x9982=(gconst4*r11);
IkReal x9983=((1.0)*x9966);
IkReal x9984=(sj4*x9967);
IkReal x9985=(cj4*x9966);
IkReal x9986=((1.0)*x9967);
IkReal x9987=(x9968+x9969);
IkReal x9988=(cj4*x9986);
evalcond[0]=((((-1.0)*r22*x9986))+(((-1.0)*x9977*x9983))+((x9966*x9978)));
evalcond[1]=((((-1.0)*r02*x9986))+((x9966*x9981))+(((-1.0)*x9970*x9983)));
evalcond[2]=((-1.0)+(((-1.0)*x9973*x9983))+(((-1.0)*r12*x9986))+((x9966*x9982)));
evalcond[3]=(((r12*x9985))+((r11*x9967*x9976))+((r11*x9979))+(((-1.0)*x9973*x9988))+((r10*x9975)));
evalcond[4]=(((r11*x9974))+(((-1.0)*r12*sj4*x9983))+((x9973*x9984))+(((-1.0)*r11*x9975*x9986))+((r10*x9976)));
evalcond[5]=(((r22*x9985))+((r20*x9975))+((r21*x9967*x9976))+x9987+((sj4*x9972))+(((-1.0)*r20*x9974*x9986)));
evalcond[6]=((((-1.0)*x9971))+((r01*x9967*x9976))+((r02*x9985))+((r00*x9975))+((r01*x9979))+x9980+(((-1.0)*x9970*x9988)));
evalcond[7]=((((-1.0)*r02*sj4*x9983))+(((-1.0)*r01*x9975*x9986))+((r00*x9976))+((r01*x9974))+((x9970*x9984))+x9987);
evalcond[8]=(((cj4*x9972))+((x9977*x9984))+((r20*x9976))+(((-1.0)*r22*sj4*x9983))+(((-1.0)*x9980))+x9971+(((-1.0)*r21*x9975*x9986)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x9989=IKPowWithIntegerCheck(IKsign((((gconst4*r00))+((gconst5*r01)))),-1);
if(!x9989.valid){
continue;
}
CheckValue<IkReal> x9990 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x9990.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x9989.value)))+(x9990.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x9991=IKsin(j5);
IkReal x9992=IKcos(j5);
IkReal x9993=(cj1*sj0);
IkReal x9994=(cj0*sj1);
IkReal x9995=(gconst5*r00);
IkReal x9996=(sj0*sj1);
IkReal x9997=(gconst5*r21);
IkReal x9998=(gconst5*r10);
IkReal x9999=(cj4*gconst5);
IkReal x10000=(gconst4*sj4);
IkReal x10001=(cj4*gconst4);
IkReal x10002=(gconst5*r20);
IkReal x10003=(gconst4*r21);
IkReal x10004=(gconst5*sj4);
IkReal x10005=(cj0*cj1);
IkReal x10006=(gconst4*r01);
IkReal x10007=(gconst4*r11);
IkReal x10008=((1.0)*x9991);
IkReal x10009=(sj4*x9992);
IkReal x10010=(cj4*x9991);
IkReal x10011=((1.0)*x9992);
IkReal x10012=(x9993+x9994);
IkReal x10013=(cj4*x10011);
evalcond[0]=((((-1.0)*x10002*x10008))+((x10003*x9991))+(((-1.0)*r22*x10011)));
evalcond[1]=((((-1.0)*x10008*x9995))+(((-1.0)*r02*x10011))+((x10006*x9991)));
evalcond[2]=((-1.0)+(((-1.0)*x10008*x9998))+(((-1.0)*r12*x10011))+((x10007*x9991)));
evalcond[3]=(((r12*x10010))+((r11*x10001*x9992))+((r10*x10000))+(((-1.0)*x10013*x9998))+((r11*x10004)));
evalcond[4]=(((x10009*x9998))+((r11*x9999))+((r10*x10001))+(((-1.0)*r12*sj4*x10008))+(((-1.0)*r11*x10000*x10011)));
evalcond[5]=(((sj4*x9997))+((r21*x10001*x9992))+((r22*x10010))+x10012+(((-1.0)*r20*x10011*x9999))+((r20*x10000)));
evalcond[6]=(((r01*x10001*x9992))+((r02*x10010))+(((-1.0)*x10013*x9995))+x10005+((r01*x10004))+((r00*x10000))+(((-1.0)*x9996)));
evalcond[7]=(((x10009*x9995))+((r01*x9999))+(((-1.0)*r02*sj4*x10008))+x10012+((r00*x10001))+(((-1.0)*r01*x10000*x10011)));
evalcond[8]=((((-1.0)*r21*x10000*x10011))+(((-1.0)*r22*sj4*x10008))+(((-1.0)*x10005))+((cj4*x9997))+((r20*x10001))+x9996+((x10002*x10009)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x10014=((-1.0)*r21);
CheckValue<IkReal> x10017 = IKatan2WithCheck(IkReal(x10014),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10017.valid){
continue;
}
IkReal x10015=((1.0)*(x10017.value));
IkReal x10016=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10015)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10015)));
IkReal gconst4=(x10014*x10016);
IkReal gconst5=((1.0)*r20*x10016);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r12;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x10018=((-1.0)*r21);
CheckValue<IkReal> x10021 = IKatan2WithCheck(IkReal(x10018),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10021.valid){
continue;
}
IkReal x10019=((1.0)*(x10021.value));
IkReal x10020=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10019)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10019)));
IkReal gconst4=(x10018*x10020);
IkReal gconst5=((1.0)*r20*x10020);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x10022=((-1.0)*r21);
CheckValue<IkReal> x10025 = IKatan2WithCheck(IkReal(x10022),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10025.valid){
continue;
}
IkReal x10023=((1.0)*(x10025.value));
IkReal x10024=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10023)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10023)));
IkReal gconst4=(x10022*x10024);
IkReal gconst5=((1.0)*r20*x10024);
j5eval[0]=r12;
j5eval[1]=sj4;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x10026=((-1.0)*r21);
CheckValue<IkReal> x10029 = IKatan2WithCheck(IkReal(x10026),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10029.valid){
continue;
}
IkReal x10027=((1.0)*(x10029.value));
IkReal x10028=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10027)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10027)));
IkReal gconst4=(x10026*x10028);
IkReal gconst5=((1.0)*r20*x10028);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r12;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x10030=((-1.0)*r21);
CheckValue<IkReal> x10033 = IKatan2WithCheck(IkReal(x10030),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10033.valid){
continue;
}
IkReal x10031=((1.0)*(x10033.value));
IkReal x10032=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10031)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10031)));
IkReal gconst4=(x10030*x10032);
IkReal gconst5=((1.0)*r20*x10032);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10034=((-1.0)*r21);
CheckValue<IkReal> x10037 = IKatan2WithCheck(IkReal(x10034),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10037.valid){
continue;
}
IkReal x10035=((1.0)*(x10037.value));
IkReal x10036=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10035)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10035)));
IkReal gconst4=(x10034*x10036);
IkReal gconst5=((1.0)*r20*x10036);
IkReal x10038=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x10042=IKPowWithIntegerCheck(x10038,-1);
if(!x10042.valid){
continue;
}
IkReal x10039=x10042.value;
IkReal x10040=((1.0)*x10039);
IkReal x10041=((((-2.0)*r00*r01*r20*r21*x10039))+(((-1.0)*(r02*r02)))+(((-1.0)*x10040*(r01*r01)*(r21*r21)))+(((-1.0)*x10040*(r00*r00)*(r20*r20))));
j5eval[0]=x10041;
j5eval[1]=r02;
j5eval[2]=x10038;
j5eval[3]=IKsign(x10041);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10043=(gconst5*r00);
IkReal x10044=(gconst4*r01);
CheckValue<IkReal> x10045 = IKatan2WithCheck(IkReal(((((-1.0)*x10044))+x10043)),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x10045.valid){
continue;
}
CheckValue<IkReal> x10046=IKPowWithIntegerCheck(IKsign(((((2.0)*x10043*x10044))+(((-1.0)*(x10044*x10044)))+(((-1.0)*(r02*r02)))+(((-1.0)*(x10043*x10043))))),-1);
if(!x10046.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10045.value)+(((1.5707963267949)*(x10046.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10047=IKsin(j5);
IkReal x10048=IKcos(j5);
IkReal x10049=((1.0)*cj0);
IkReal x10050=(gconst5*x10048);
IkReal x10051=((1.0)*x10047);
IkReal x10052=((1.0)*x10048);
IkReal x10053=(gconst4*x10047);
IkReal x10054=(gconst4*x10052);
IkReal x10055=(gconst5*x10051);
evalcond[0]=(((r21*x10053))+(((-1.0)*r20*x10055))+(((-1.0)*r22*x10052)));
evalcond[1]=((((-1.0)*r10*x10055))+(((-1.0)*r12*x10052))+((r11*x10053)));
evalcond[2]=(((r00*x10050))+(((-1.0)*r01*x10054))+(((-1.0)*r02*x10051)));
evalcond[3]=((-1.0)+((r01*x10053))+(((-1.0)*r00*x10055))+(((-1.0)*r02*x10052)));
evalcond[4]=(((r20*x10050))+((sj0*sj1))+(((-1.0)*r21*x10054))+(((-1.0)*r22*x10051))+(((-1.0)*cj1*x10049)));
evalcond[5]=((((-1.0)*sj1*x10049))+((r10*x10050))+(((-1.0)*cj1*sj0))+(((-1.0)*r11*x10054))+(((-1.0)*r12*x10051)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10056=((1.0)*gconst5);
CheckValue<IkReal> x10057=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x10056))+(((-1.0)*gconst4*r10)))),-1);
if(!x10057.valid){
continue;
}
CheckValue<IkReal> x10058 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*r20*x10056)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10058.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10057.value)))+(x10058.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10059=IKsin(j5);
IkReal x10060=IKcos(j5);
IkReal x10061=((1.0)*cj0);
IkReal x10062=(gconst5*x10060);
IkReal x10063=((1.0)*x10059);
IkReal x10064=((1.0)*x10060);
IkReal x10065=(gconst4*x10059);
IkReal x10066=(gconst4*x10064);
IkReal x10067=(gconst5*x10063);
evalcond[0]=((((-1.0)*r20*x10067))+((r21*x10065))+(((-1.0)*r22*x10064)));
evalcond[1]=((((-1.0)*r12*x10064))+(((-1.0)*r10*x10067))+((r11*x10065)));
evalcond[2]=(((r00*x10062))+(((-1.0)*r01*x10066))+(((-1.0)*r02*x10063)));
evalcond[3]=((-1.0)+((r01*x10065))+(((-1.0)*r00*x10067))+(((-1.0)*r02*x10064)));
evalcond[4]=(((r20*x10062))+((sj0*sj1))+(((-1.0)*r21*x10066))+(((-1.0)*cj1*x10061))+(((-1.0)*r22*x10063)));
evalcond[5]=(((r10*x10062))+(((-1.0)*cj1*sj0))+(((-1.0)*r12*x10063))+(((-1.0)*sj1*x10061))+(((-1.0)*r11*x10066)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10068 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst4*r11))+(((-1.0)*gconst5*r10)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10068.valid){
continue;
}
CheckValue<IkReal> x10069=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x10069.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10068.value)+(((1.5707963267949)*(x10069.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10070=IKsin(j5);
IkReal x10071=IKcos(j5);
IkReal x10072=((1.0)*cj0);
IkReal x10073=(gconst5*x10071);
IkReal x10074=((1.0)*x10070);
IkReal x10075=((1.0)*x10071);
IkReal x10076=(gconst4*x10070);
IkReal x10077=(gconst4*x10075);
IkReal x10078=(gconst5*x10074);
evalcond[0]=((((-1.0)*r20*x10078))+((r21*x10076))+(((-1.0)*r22*x10075)));
evalcond[1]=((((-1.0)*r12*x10075))+(((-1.0)*r10*x10078))+((r11*x10076)));
evalcond[2]=(((r00*x10073))+(((-1.0)*r01*x10077))+(((-1.0)*r02*x10074)));
evalcond[3]=((-1.0)+((r01*x10076))+(((-1.0)*r00*x10078))+(((-1.0)*r02*x10075)));
evalcond[4]=(((r20*x10073))+((sj0*sj1))+(((-1.0)*cj1*x10072))+(((-1.0)*r21*x10077))+(((-1.0)*r22*x10074)));
evalcond[5]=(((r10*x10073))+(((-1.0)*cj1*sj0))+(((-1.0)*r12*x10074))+(((-1.0)*sj1*x10072))+(((-1.0)*r11*x10077)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x10079=((-1.0)*r21);
CheckValue<IkReal> x10082 = IKatan2WithCheck(IkReal(x10079),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10082.valid){
continue;
}
IkReal x10080=((1.0)*(x10082.value));
IkReal x10081=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10080)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10080)));
IkReal gconst4=(x10079*x10081);
IkReal gconst5=((1.0)*r20*x10081);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r12;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x10083=((-1.0)*r21);
CheckValue<IkReal> x10086 = IKatan2WithCheck(IkReal(x10083),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10086.valid){
continue;
}
IkReal x10084=((1.0)*(x10086.value));
IkReal x10085=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10084)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10084)));
IkReal gconst4=(x10083*x10085);
IkReal gconst5=((1.0)*r20*x10085);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x10087=((-1.0)*r21);
CheckValue<IkReal> x10090 = IKatan2WithCheck(IkReal(x10087),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10090.valid){
continue;
}
IkReal x10088=((1.0)*(x10090.value));
IkReal x10089=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10088)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10088)));
IkReal gconst4=(x10087*x10089);
IkReal gconst5=((1.0)*r20*x10089);
j5eval[0]=r02;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10091=(gconst4*r01);
IkReal x10092=(gconst5*r00);
CheckValue<IkReal> x10093=IKPowWithIntegerCheck(IKsign(((x10092*x10092)+(((-2.0)*x10091*x10092))+(r02*r02)+(x10091*x10091))),-1);
if(!x10093.valid){
continue;
}
CheckValue<IkReal> x10094 = IKatan2WithCheck(IkReal((x10091+(((-1.0)*x10092)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x10094.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10093.value)))+(x10094.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10095=IKcos(j5);
IkReal x10096=IKsin(j5);
IkReal x10097=((1.0)*cj0);
IkReal x10098=(gconst5*r20);
IkReal x10099=((1.0)*gconst5*r00);
IkReal x10100=(gconst4*x10095);
IkReal x10101=((1.0)*gconst5*r10);
IkReal x10102=((1.0)*x10095);
IkReal x10103=(gconst4*x10096);
evalcond[0]=((((-1.0)*x10095*x10099))+((r01*x10100))+((r02*x10096)));
evalcond[1]=(((r21*x10103))+(((-1.0)*r22*x10102))+(((-1.0)*x10096*x10098)));
evalcond[2]=((((-1.0)*r12*x10102))+((r11*x10103))+(((-1.0)*x10096*x10101)));
evalcond[3]=((-1.0)+((r01*x10103))+(((-1.0)*x10096*x10099))+(((-1.0)*r02*x10102)));
evalcond[4]=(((r21*x10100))+(((-1.0)*cj1*x10097))+((sj0*sj1))+((r22*x10096))+(((-1.0)*x10098*x10102)));
evalcond[5]=(((r12*x10096))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x10097))+(((-1.0)*x10095*x10101))+((r11*x10100)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10104=((1.0)*gconst5);
CheckValue<IkReal> x10105 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*r20*x10104)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10105.valid){
continue;
}
CheckValue<IkReal> x10106=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x10104))+(((-1.0)*gconst4*r10)))),-1);
if(!x10106.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10105.value)+(((1.5707963267949)*(x10106.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10107=IKcos(j5);
IkReal x10108=IKsin(j5);
IkReal x10109=((1.0)*cj0);
IkReal x10110=(gconst5*r20);
IkReal x10111=((1.0)*gconst5*r00);
IkReal x10112=(gconst4*x10107);
IkReal x10113=((1.0)*gconst5*r10);
IkReal x10114=((1.0)*x10107);
IkReal x10115=(gconst4*x10108);
evalcond[0]=(((r01*x10112))+((r02*x10108))+(((-1.0)*x10107*x10111)));
evalcond[1]=(((r21*x10115))+(((-1.0)*x10108*x10110))+(((-1.0)*r22*x10114)));
evalcond[2]=((((-1.0)*x10108*x10113))+(((-1.0)*r12*x10114))+((r11*x10115)));
evalcond[3]=((-1.0)+((r01*x10115))+(((-1.0)*x10108*x10111))+(((-1.0)*r02*x10114)));
evalcond[4]=(((r21*x10112))+(((-1.0)*x10110*x10114))+((sj0*sj1))+(((-1.0)*cj1*x10109))+((r22*x10108)));
evalcond[5]=((((-1.0)*cj1*sj0))+((r11*x10112))+((r12*x10108))+(((-1.0)*sj1*x10109))+(((-1.0)*x10107*x10113)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10116 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst4*r11))+(((-1.0)*gconst5*r10)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10116.valid){
continue;
}
CheckValue<IkReal> x10117=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x10117.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10116.value)+(((1.5707963267949)*(x10117.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10118=IKcos(j5);
IkReal x10119=IKsin(j5);
IkReal x10120=((1.0)*cj0);
IkReal x10121=(gconst5*r20);
IkReal x10122=((1.0)*gconst5*r00);
IkReal x10123=(gconst4*x10118);
IkReal x10124=((1.0)*gconst5*r10);
IkReal x10125=((1.0)*x10118);
IkReal x10126=(gconst4*x10119);
evalcond[0]=(((r02*x10119))+((r01*x10123))+(((-1.0)*x10118*x10122)));
evalcond[1]=((((-1.0)*x10119*x10121))+((r21*x10126))+(((-1.0)*r22*x10125)));
evalcond[2]=((((-1.0)*r12*x10125))+(((-1.0)*x10119*x10124))+((r11*x10126)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x10125))+((r01*x10126))+(((-1.0)*x10119*x10122)));
evalcond[4]=((((-1.0)*x10121*x10125))+(((-1.0)*cj1*x10120))+((r21*x10123))+((sj0*sj1))+((r22*x10119)));
evalcond[5]=((((-1.0)*cj1*sj0))+((r12*x10119))+(((-1.0)*sj1*x10120))+((r11*x10123))+(((-1.0)*x10118*x10124)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x10127=((-1.0)*r21);
CheckValue<IkReal> x10130 = IKatan2WithCheck(IkReal(x10127),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10130.valid){
continue;
}
IkReal x10128=((1.0)*(x10130.value));
IkReal x10129=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10128)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10128)));
IkReal gconst4=(x10127*x10129);
IkReal gconst5=((1.0)*r20*x10129);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r12;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x10131=((-1.0)*r21);
CheckValue<IkReal> x10134 = IKatan2WithCheck(IkReal(x10131),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10134.valid){
continue;
}
IkReal x10132=((1.0)*(x10134.value));
IkReal x10133=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10132)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10132)));
IkReal gconst4=(x10131*x10133);
IkReal gconst5=((1.0)*r20*x10133);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x10135=((-1.0)*r21);
CheckValue<IkReal> x10138 = IKatan2WithCheck(IkReal(x10135),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10138.valid){
continue;
}
IkReal x10136=((1.0)*(x10138.value));
IkReal x10137=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10136)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10136)));
IkReal gconst4=(x10135*x10137);
IkReal gconst5=((1.0)*r20*x10137);
j5eval[0]=r02;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10139=(gconst4*r01);
IkReal x10140=(gconst5*r00);
CheckValue<IkReal> x10141=IKPowWithIntegerCheck(IKsign(((((-2.0)*x10139*x10140))+(x10139*x10139)+(x10140*x10140)+(r02*r02))),-1);
if(!x10141.valid){
continue;
}
CheckValue<IkReal> x10142 = IKatan2WithCheck(IkReal((x10139+(((-1.0)*x10140)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x10142.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10141.value)))+(x10142.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10143=IKcos(j5);
IkReal x10144=IKsin(j5);
IkReal x10145=(gconst5*r20);
IkReal x10146=((1.0)*gconst5*r00);
IkReal x10147=(gconst4*x10143);
IkReal x10148=((1.0)*gconst5*r10);
IkReal x10149=((1.0)*x10143);
IkReal x10150=(gconst4*x10144);
evalcond[0]=((((-1.0)*x10143*x10146))+((r02*x10144))+((r01*x10147)));
evalcond[1]=((((-1.0)*x10144*x10145))+((r21*x10150))+(((-1.0)*r22*x10149)));
evalcond[2]=((((-1.0)*x10144*x10148))+(((-1.0)*r12*x10149))+((r11*x10150)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x10149))+(((-1.0)*x10144*x10146))+((r01*x10150)));
evalcond[4]=(((cj1*sj0))+((r21*x10147))+(((-1.0)*x10145*x10149))+((r22*x10144))+((cj0*sj1)));
evalcond[5]=(((r12*x10144))+(((-1.0)*x10143*x10148))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r11*x10147)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10151=((1.0)*gconst5);
CheckValue<IkReal> x10152=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x10151))+(((-1.0)*gconst4*r10)))),-1);
if(!x10152.valid){
continue;
}
CheckValue<IkReal> x10153 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*r20*x10151)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10153.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10152.value)))+(x10153.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10154=IKcos(j5);
IkReal x10155=IKsin(j5);
IkReal x10156=(gconst5*r20);
IkReal x10157=((1.0)*gconst5*r00);
IkReal x10158=(gconst4*x10154);
IkReal x10159=((1.0)*gconst5*r10);
IkReal x10160=((1.0)*x10154);
IkReal x10161=(gconst4*x10155);
evalcond[0]=((((-1.0)*x10154*x10157))+((r02*x10155))+((r01*x10158)));
evalcond[1]=((((-1.0)*r22*x10160))+(((-1.0)*x10155*x10156))+((r21*x10161)));
evalcond[2]=((((-1.0)*r12*x10160))+((r11*x10161))+(((-1.0)*x10155*x10159)));
evalcond[3]=((-1.0)+((r01*x10161))+(((-1.0)*r02*x10160))+(((-1.0)*x10155*x10157)));
evalcond[4]=((((-1.0)*x10156*x10160))+((r21*x10158))+((cj1*sj0))+((r22*x10155))+((cj0*sj1)));
evalcond[5]=(((r12*x10155))+(((-1.0)*x10154*x10159))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r11*x10158)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10162 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst4*r11))+(((-1.0)*gconst5*r10)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10162.valid){
continue;
}
CheckValue<IkReal> x10163=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x10163.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10162.value)+(((1.5707963267949)*(x10163.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10164=IKcos(j5);
IkReal x10165=IKsin(j5);
IkReal x10166=(gconst5*r20);
IkReal x10167=((1.0)*gconst5*r00);
IkReal x10168=(gconst4*x10164);
IkReal x10169=((1.0)*gconst5*r10);
IkReal x10170=((1.0)*x10164);
IkReal x10171=(gconst4*x10165);
evalcond[0]=((((-1.0)*x10164*x10167))+((r01*x10168))+((r02*x10165)));
evalcond[1]=((((-1.0)*r22*x10170))+((r21*x10171))+(((-1.0)*x10165*x10166)));
evalcond[2]=(((r11*x10171))+(((-1.0)*r12*x10170))+(((-1.0)*x10165*x10169)));
evalcond[3]=((-1.0)+((r01*x10171))+(((-1.0)*x10165*x10167))+(((-1.0)*r02*x10170)));
evalcond[4]=(((r22*x10165))+((cj1*sj0))+(((-1.0)*x10166*x10170))+((r21*x10168))+((cj0*sj1)));
evalcond[5]=((((-1.0)*x10164*x10169))+((r11*x10168))+((sj0*sj1))+((r12*x10165))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x10172=((-1.0)*r21);
CheckValue<IkReal> x10175 = IKatan2WithCheck(IkReal(x10172),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10175.valid){
continue;
}
IkReal x10173=((1.0)*(x10175.value));
IkReal x10174=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10173)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10173)));
IkReal gconst4=(x10172*x10174);
IkReal gconst5=((1.0)*r20*x10174);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r12;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x10176=((-1.0)*r21);
CheckValue<IkReal> x10179 = IKatan2WithCheck(IkReal(x10176),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10179.valid){
continue;
}
IkReal x10177=((1.0)*(x10179.value));
IkReal x10178=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10177)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10177)));
IkReal gconst4=(x10176*x10178);
IkReal gconst5=((1.0)*r20*x10178);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10180=((-1.0)*r21);
CheckValue<IkReal> x10183 = IKatan2WithCheck(IkReal(x10180),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10183.valid){
continue;
}
IkReal x10181=((1.0)*(x10183.value));
IkReal x10182=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10181)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10181)));
IkReal gconst4=(x10180*x10182);
IkReal gconst5=((1.0)*r20*x10182);
IkReal x10184=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x10188=IKPowWithIntegerCheck(x10184,-1);
if(!x10188.valid){
continue;
}
IkReal x10185=x10188.value;
IkReal x10186=((1.0)*x10185);
IkReal x10187=((((-1.0)*(r02*r02)))+(((-1.0)*x10186*(r01*r01)*(r21*r21)))+(((-1.0)*x10186*(r00*r00)*(r20*r20)))+(((-2.0)*r00*r01*r20*r21*x10185)));
j5eval[0]=x10187;
j5eval[1]=r02;
j5eval[2]=x10184;
j5eval[3]=IKsign(x10187);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10189=(gconst5*r00);
IkReal x10190=(gconst4*r01);
CheckValue<IkReal> x10191 = IKatan2WithCheck(IkReal((x10189+(((-1.0)*x10190)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x10191.valid){
continue;
}
CheckValue<IkReal> x10192=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x10189*x10189)))+(((-1.0)*(r02*r02)))+(((-1.0)*(x10190*x10190)))+(((2.0)*x10189*x10190)))),-1);
if(!x10192.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10191.value)+(((1.5707963267949)*(x10192.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10193=IKsin(j5);
IkReal x10194=IKcos(j5);
IkReal x10195=(gconst5*x10194);
IkReal x10196=((1.0)*x10193);
IkReal x10197=((1.0)*x10194);
IkReal x10198=(gconst4*x10193);
IkReal x10199=(gconst4*x10197);
IkReal x10200=(gconst5*x10196);
evalcond[0]=((((-1.0)*r20*x10200))+((r21*x10198))+(((-1.0)*r22*x10197)));
evalcond[1]=((((-1.0)*r10*x10200))+((r11*x10198))+(((-1.0)*r12*x10197)));
evalcond[2]=((((-1.0)*r02*x10196))+((r00*x10195))+(((-1.0)*r01*x10199)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x10197))+((r01*x10198))+(((-1.0)*r00*x10200)));
evalcond[4]=((((-1.0)*r21*x10199))+((cj1*sj0))+((r20*x10195))+(((-1.0)*r22*x10196))+((cj0*sj1)));
evalcond[5]=(((r10*x10195))+(((-1.0)*r11*x10199))+(((-1.0)*r12*x10196))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10201=((1.0)*gconst5);
CheckValue<IkReal> x10202 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x10201))+((gconst4*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10202.valid){
continue;
}
CheckValue<IkReal> x10203=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x10201))+(((-1.0)*gconst4*r10)))),-1);
if(!x10203.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10202.value)+(((1.5707963267949)*(x10203.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10204=IKsin(j5);
IkReal x10205=IKcos(j5);
IkReal x10206=(gconst5*x10205);
IkReal x10207=((1.0)*x10204);
IkReal x10208=((1.0)*x10205);
IkReal x10209=(gconst4*x10204);
IkReal x10210=(gconst4*x10208);
IkReal x10211=(gconst5*x10207);
evalcond[0]=((((-1.0)*r22*x10208))+(((-1.0)*r20*x10211))+((r21*x10209)));
evalcond[1]=((((-1.0)*r10*x10211))+((r11*x10209))+(((-1.0)*r12*x10208)));
evalcond[2]=((((-1.0)*r02*x10207))+(((-1.0)*r01*x10210))+((r00*x10206)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x10208))+(((-1.0)*r00*x10211))+((r01*x10209)));
evalcond[4]=((((-1.0)*r21*x10210))+(((-1.0)*r22*x10207))+((cj1*sj0))+((r20*x10206))+((cj0*sj1)));
evalcond[5]=(((r10*x10206))+(((-1.0)*r11*x10210))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*r12*x10207)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10212 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst4*r11))+(((-1.0)*gconst5*r10)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10212.valid){
continue;
}
CheckValue<IkReal> x10213=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x10213.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10212.value)+(((1.5707963267949)*(x10213.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10214=IKsin(j5);
IkReal x10215=IKcos(j5);
IkReal x10216=(gconst5*x10215);
IkReal x10217=((1.0)*x10214);
IkReal x10218=((1.0)*x10215);
IkReal x10219=(gconst4*x10214);
IkReal x10220=(gconst4*x10218);
IkReal x10221=(gconst5*x10217);
evalcond[0]=((((-1.0)*r20*x10221))+(((-1.0)*r22*x10218))+((r21*x10219)));
evalcond[1]=((((-1.0)*r10*x10221))+((r11*x10219))+(((-1.0)*r12*x10218)));
evalcond[2]=(((r00*x10216))+(((-1.0)*r01*x10220))+(((-1.0)*r02*x10217)));
evalcond[3]=((-1.0)+((r01*x10219))+(((-1.0)*r00*x10221))+(((-1.0)*r02*x10218)));
evalcond[4]=((((-1.0)*r21*x10220))+((r20*x10216))+(((-1.0)*r22*x10217))+((cj1*sj0))+((cj0*sj1)));
evalcond[5]=(((r10*x10216))+((sj0*sj1))+(((-1.0)*r12*x10217))+(((-1.0)*cj0*cj1))+(((-1.0)*r11*x10220)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(r12);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
j5array[0]=0;
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10222=gconst4*gconst4;
IkReal x10223=gconst5*gconst5;
IkReal x10224=(r01*sj4);
IkReal x10225=(cj4*r00);
IkReal x10226=(r00*sj4);
IkReal x10227=(cj4*r01);
IkReal x10228=(gconst4*gconst5*r21);
IkReal x10229=(r21*x10222);
IkReal x10230=(gconst4*gconst5*r20);
IkReal x10231=((1.0)*r20*x10223);
CheckValue<IkReal> x10232=IKPowWithIntegerCheck(IKsign((((x10225*x10228))+(((-1.0)*x10225*x10231))+(((-1.0)*cj4*r02*r22))+(((-1.0)*x10227*x10229))+((x10227*x10230)))),-1);
if(!x10232.valid){
continue;
}
CheckValue<IkReal> x10233 = IKatan2WithCheck(IkReal((((gconst4*r22*x10226))+((gconst5*r22*x10224)))),IkReal(((((-1.0)*x10224*x10231))+(((-1.0)*x10226*x10230))+((x10224*x10228))+((x10226*x10229)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10233.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10232.value)))+(x10233.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10234=IKsin(j5);
IkReal x10235=IKcos(j5);
IkReal x10236=(sj0*sj1);
IkReal x10237=(gconst5*r00);
IkReal x10238=(gconst5*sj4);
IkReal x10239=((1.0)*cj1);
IkReal x10240=(cj4*r11);
IkReal x10241=(gconst4*sj4);
IkReal x10242=(cj4*gconst5);
IkReal x10243=(cj4*gconst4);
IkReal x10244=(gconst5*r20);
IkReal x10245=(cj0*sj1);
IkReal x10246=((1.0)*gconst4);
IkReal x10247=(gconst5*r10);
IkReal x10248=(cj0*x10239);
IkReal x10249=((1.0)*x10234);
IkReal x10250=(sj4*x10235);
IkReal x10251=(gconst4*x10235);
IkReal x10252=(cj4*x10234);
IkReal x10253=((1.0)*x10235);
IkReal x10254=(gconst4*x10234);
evalcond[0]=(((r21*x10254))+(((-1.0)*r22*x10253))+(((-1.0)*x10244*x10249)));
evalcond[1]=((((-1.0)*x10247*x10249))+(((-1.0)*r12*x10253))+((r11*x10254)));
evalcond[2]=((-1.0)+(((-1.0)*x10237*x10249))+(((-1.0)*r02*x10253))+((r01*x10254)));
evalcond[3]=(((r02*x10252))+((r01*x10235*x10243))+(((-1.0)*cj4*x10237*x10253))+((r01*x10238))+((r00*x10241)));
evalcond[4]=(((x10237*x10250))+(((-1.0)*r02*sj4*x10249))+(((-1.0)*r01*x10241*x10253))+((r01*x10242))+((r00*x10243)));
evalcond[5]=(((r22*x10252))+((cj1*sj0))+(((-1.0)*r20*x10242*x10253))+((r21*x10238))+x10245+((r20*x10241))+((r21*x10235*x10243)));
evalcond[6]=(((r12*x10252))+((r10*x10241))+((x10240*x10251))+(((-1.0)*x10248))+x10236+(((-1.0)*r10*x10242*x10253))+((r11*x10238)));
evalcond[7]=(((r20*x10235*x10238))+(((-1.0)*r22*sj4*x10249))+(((-1.0)*x10248))+((r21*x10242))+(((-1.0)*r21*x10241*x10253))+x10236+((r20*x10243)));
evalcond[8]=((((-1.0)*r12*sj4*x10249))+((r10*x10243))+((r10*x10235*x10238))+(((-1.0)*sj0*x10239))+((gconst5*x10240))+(((-1.0)*x10245))+(((-1.0)*r11*x10241*x10253)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10255=((1.0)*gconst5);
CheckValue<IkReal> x10256=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x10255))+(((-1.0)*gconst4*r10)))),-1);
if(!x10256.valid){
continue;
}
CheckValue<IkReal> x10257 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x10255))+((gconst4*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10257.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10256.value)))+(x10257.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10258=IKsin(j5);
IkReal x10259=IKcos(j5);
IkReal x10260=(sj0*sj1);
IkReal x10261=(gconst5*r00);
IkReal x10262=(gconst5*sj4);
IkReal x10263=((1.0)*cj1);
IkReal x10264=(cj4*r11);
IkReal x10265=(gconst4*sj4);
IkReal x10266=(cj4*gconst5);
IkReal x10267=(cj4*gconst4);
IkReal x10268=(gconst5*r20);
IkReal x10269=(cj0*sj1);
IkReal x10270=((1.0)*gconst4);
IkReal x10271=(gconst5*r10);
IkReal x10272=(cj0*x10263);
IkReal x10273=((1.0)*x10258);
IkReal x10274=(sj4*x10259);
IkReal x10275=(gconst4*x10259);
IkReal x10276=(cj4*x10258);
IkReal x10277=((1.0)*x10259);
IkReal x10278=(gconst4*x10258);
evalcond[0]=((((-1.0)*x10268*x10273))+(((-1.0)*r22*x10277))+((r21*x10278)));
evalcond[1]=(((r11*x10278))+(((-1.0)*r12*x10277))+(((-1.0)*x10271*x10273)));
evalcond[2]=((-1.0)+((r01*x10278))+(((-1.0)*x10261*x10273))+(((-1.0)*r02*x10277)));
evalcond[3]=(((r00*x10265))+((r01*x10262))+((r01*x10259*x10267))+((r02*x10276))+(((-1.0)*cj4*x10261*x10277)));
evalcond[4]=((((-1.0)*r02*sj4*x10273))+(((-1.0)*r01*x10265*x10277))+((r00*x10267))+((r01*x10266))+((x10261*x10274)));
evalcond[5]=(((cj1*sj0))+((r21*x10259*x10267))+((r20*x10265))+x10269+(((-1.0)*r20*x10266*x10277))+((r21*x10262))+((r22*x10276)));
evalcond[6]=(((r12*x10276))+((r11*x10262))+(((-1.0)*x10272))+((x10264*x10275))+x10260+((r10*x10265))+(((-1.0)*r10*x10266*x10277)));
evalcond[7]=((((-1.0)*x10272))+((r20*x10259*x10262))+(((-1.0)*r21*x10265*x10277))+((r20*x10267))+x10260+(((-1.0)*r22*sj4*x10273))+((r21*x10266)));
evalcond[8]=((((-1.0)*r12*sj4*x10273))+(((-1.0)*x10269))+(((-1.0)*r11*x10265*x10277))+((gconst5*x10264))+((r10*x10267))+((r10*x10259*x10262))+(((-1.0)*sj0*x10263)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10279 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst4*r11))+(((-1.0)*gconst5*r10)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10279.valid){
continue;
}
CheckValue<IkReal> x10280=IKPowWithIntegerCheck(IKsign((((gconst4*r20))+((gconst5*r21)))),-1);
if(!x10280.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10279.value)+(((1.5707963267949)*(x10280.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10281=IKsin(j5);
IkReal x10282=IKcos(j5);
IkReal x10283=(sj0*sj1);
IkReal x10284=(gconst5*r00);
IkReal x10285=(gconst5*sj4);
IkReal x10286=((1.0)*cj1);
IkReal x10287=(cj4*r11);
IkReal x10288=(gconst4*sj4);
IkReal x10289=(cj4*gconst5);
IkReal x10290=(cj4*gconst4);
IkReal x10291=(gconst5*r20);
IkReal x10292=(cj0*sj1);
IkReal x10293=((1.0)*gconst4);
IkReal x10294=(gconst5*r10);
IkReal x10295=(cj0*x10286);
IkReal x10296=((1.0)*x10281);
IkReal x10297=(sj4*x10282);
IkReal x10298=(gconst4*x10282);
IkReal x10299=(cj4*x10281);
IkReal x10300=((1.0)*x10282);
IkReal x10301=(gconst4*x10281);
evalcond[0]=((((-1.0)*r22*x10300))+(((-1.0)*x10291*x10296))+((r21*x10301)));
evalcond[1]=((((-1.0)*r12*x10300))+(((-1.0)*x10294*x10296))+((r11*x10301)));
evalcond[2]=((-1.0)+(((-1.0)*r02*x10300))+((r01*x10301))+(((-1.0)*x10284*x10296)));
evalcond[3]=(((r01*x10285))+(((-1.0)*cj4*x10284*x10300))+((r01*x10282*x10290))+((r02*x10299))+((r00*x10288)));
evalcond[4]=(((r01*x10289))+(((-1.0)*r02*sj4*x10296))+((x10284*x10297))+((r00*x10290))+(((-1.0)*r01*x10288*x10300)));
evalcond[5]=(((r20*x10288))+((r21*x10282*x10290))+((cj1*sj0))+x10292+(((-1.0)*r20*x10289*x10300))+((r21*x10285))+((r22*x10299)));
evalcond[6]=((((-1.0)*r10*x10289*x10300))+((r12*x10299))+((r11*x10285))+x10283+((x10287*x10298))+((r10*x10288))+(((-1.0)*x10295)));
evalcond[7]=(((r20*x10290))+(((-1.0)*r21*x10288*x10300))+(((-1.0)*r22*sj4*x10296))+x10283+((r20*x10282*x10285))+((r21*x10289))+(((-1.0)*x10295)));
evalcond[8]=((((-1.0)*r11*x10288*x10300))+((r10*x10282*x10285))+(((-1.0)*x10292))+((gconst5*x10287))+((r10*x10290))+(((-1.0)*sj0*x10286))+(((-1.0)*r12*sj4*x10296)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x10302=((-1.0)*r21);
CheckValue<IkReal> x10305 = IKatan2WithCheck(IkReal(x10302),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10305.valid){
continue;
}
IkReal x10303=((1.0)*(x10305.value));
IkReal x10304=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10303)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10303)));
IkReal gconst4=(x10302*x10304);
IkReal gconst5=((1.0)*r20*x10304);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10306=((-1.0)*r21);
CheckValue<IkReal> x10309 = IKatan2WithCheck(IkReal(x10306),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10309.valid){
continue;
}
IkReal x10307=((1.0)*(x10309.value));
IkReal x10308=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10307)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10307)));
IkReal gconst4=(x10306*x10308);
IkReal gconst5=((1.0)*r20*x10308);
j5eval[0]=0;
j5eval[1]=r12;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x10310=((-1.0)*r21);
CheckValue<IkReal> x10313 = IKatan2WithCheck(IkReal(x10310),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10313.valid){
continue;
}
IkReal x10311=((1.0)*(x10313.value));
IkReal x10312=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10311)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10311)));
IkReal gconst4=(x10310*x10312);
IkReal gconst5=((1.0)*r20*x10312);
j5eval[0]=r12;
j5eval[1]=sj4;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x10314=((-1.0)*r21);
CheckValue<IkReal> x10317 = IKatan2WithCheck(IkReal(x10314),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10317.valid){
continue;
}
IkReal x10315=((1.0)*(x10317.value));
IkReal x10316=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10315)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10315)));
IkReal gconst4=(x10314*x10316);
IkReal gconst5=((1.0)*r20*x10316);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10318=((-1.0)*r21);
CheckValue<IkReal> x10321 = IKatan2WithCheck(IkReal(x10318),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10321.valid){
continue;
}
IkReal x10319=((1.0)*(x10321.value));
IkReal x10320=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10319)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10319)));
IkReal gconst4=(x10318*x10320);
IkReal gconst5=((1.0)*r20*x10320);
j5eval[0]=0;
j5eval[1]=r12;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x10322=((-1.0)*r21);
CheckValue<IkReal> x10325 = IKatan2WithCheck(IkReal(x10322),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10325.valid){
continue;
}
IkReal x10323=((1.0)*(x10325.value));
IkReal x10324=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10323)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10323)));
IkReal gconst4=(x10322*x10324);
IkReal gconst5=((1.0)*r20*x10324);
j5eval[0]=r02;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10326=(gconst5*r00);
IkReal x10327=(gconst4*r01);
CheckValue<IkReal> x10328=IKPowWithIntegerCheck(IKsign(((x10327*x10327)+(((-2.0)*x10326*x10327))+(x10326*x10326)+(r02*r02))),-1);
if(!x10328.valid){
continue;
}
CheckValue<IkReal> x10329 = IKatan2WithCheck(IkReal(((((-1.0)*x10327))+x10326)),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x10329.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10328.value)))+(x10329.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10330=IKsin(j5);
IkReal x10331=IKcos(j5);
IkReal x10332=(gconst5*x10331);
IkReal x10333=((1.0)*x10330);
IkReal x10334=((1.0)*x10331);
IkReal x10335=(gconst4*x10330);
IkReal x10336=(gconst4*x10334);
IkReal x10337=(gconst5*x10333);
evalcond[0]=((((-1.0)*r22*x10334))+((r21*x10335))+(((-1.0)*r20*x10337)));
evalcond[1]=((((-1.0)*r12*x10334))+((r11*x10335))+(((-1.0)*r10*x10337)));
evalcond[2]=((((-1.0)*r01*x10336))+((r00*x10332))+(((-1.0)*r02*x10333)));
evalcond[3]=((1.0)+((r01*x10335))+(((-1.0)*r00*x10337))+(((-1.0)*r02*x10334)));
evalcond[4]=((((-1.0)*r11*x10336))+((cj1*sj0))+(((-1.0)*r12*x10333))+((cj0*sj1))+((r10*x10332)));
evalcond[5]=((((-1.0)*r22*x10333))+((r20*x10332))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*r21*x10336)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10338=((1.0)*gconst5);
CheckValue<IkReal> x10339=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x10338))+(((-1.0)*gconst4*r20)))),-1);
if(!x10339.valid){
continue;
}
CheckValue<IkReal> x10340 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst4*r11))+(((-1.0)*r10*x10338)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10340.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10339.value)))+(x10340.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10341=IKsin(j5);
IkReal x10342=IKcos(j5);
IkReal x10343=(gconst5*x10342);
IkReal x10344=((1.0)*x10341);
IkReal x10345=((1.0)*x10342);
IkReal x10346=(gconst4*x10341);
IkReal x10347=(gconst4*x10345);
IkReal x10348=(gconst5*x10344);
evalcond[0]=(((r21*x10346))+(((-1.0)*r22*x10345))+(((-1.0)*r20*x10348)));
evalcond[1]=((((-1.0)*r10*x10348))+(((-1.0)*r12*x10345))+((r11*x10346)));
evalcond[2]=(((r00*x10343))+(((-1.0)*r02*x10344))+(((-1.0)*r01*x10347)));
evalcond[3]=((1.0)+((r01*x10346))+(((-1.0)*r02*x10345))+(((-1.0)*r00*x10348)));
evalcond[4]=((((-1.0)*r12*x10344))+(((-1.0)*r11*x10347))+((cj1*sj0))+((r10*x10343))+((cj0*sj1)));
evalcond[5]=(((r20*x10343))+((sj0*sj1))+(((-1.0)*r22*x10344))+(((-1.0)*cj0*cj1))+(((-1.0)*r21*x10347)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10349=IKPowWithIntegerCheck(IKsign((((gconst5*r11))+((gconst4*r10)))),-1);
if(!x10349.valid){
continue;
}
CheckValue<IkReal> x10350 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10350.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10349.value)))+(x10350.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10351=IKsin(j5);
IkReal x10352=IKcos(j5);
IkReal x10353=(gconst5*x10352);
IkReal x10354=((1.0)*x10351);
IkReal x10355=((1.0)*x10352);
IkReal x10356=(gconst4*x10351);
IkReal x10357=(gconst4*x10355);
IkReal x10358=(gconst5*x10354);
evalcond[0]=(((r21*x10356))+(((-1.0)*r22*x10355))+(((-1.0)*r20*x10358)));
evalcond[1]=((((-1.0)*r10*x10358))+((r11*x10356))+(((-1.0)*r12*x10355)));
evalcond[2]=(((r00*x10353))+(((-1.0)*r01*x10357))+(((-1.0)*r02*x10354)));
evalcond[3]=((1.0)+((r01*x10356))+(((-1.0)*r00*x10358))+(((-1.0)*r02*x10355)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*r12*x10354))+(((-1.0)*r11*x10357))+((r10*x10353))+((cj0*sj1)));
evalcond[5]=(((r20*x10353))+(((-1.0)*r22*x10354))+((sj0*sj1))+(((-1.0)*r21*x10357))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x10359=((-1.0)*r21);
CheckValue<IkReal> x10362 = IKatan2WithCheck(IkReal(x10359),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10362.valid){
continue;
}
IkReal x10360=((1.0)*(x10362.value));
IkReal x10361=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10360)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10360)));
IkReal gconst4=(x10359*x10361);
IkReal gconst5=((1.0)*r20*x10361);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10363=((-1.0)*r21);
CheckValue<IkReal> x10366 = IKatan2WithCheck(IkReal(x10363),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10366.valid){
continue;
}
IkReal x10364=((1.0)*(x10366.value));
IkReal x10365=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10364)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10364)));
IkReal gconst4=(x10363*x10365);
IkReal gconst5=((1.0)*r20*x10365);
j5eval[0]=0;
j5eval[1]=r12;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10367=((-1.0)*r21);
CheckValue<IkReal> x10370 = IKatan2WithCheck(IkReal(x10367),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10370.valid){
continue;
}
IkReal x10368=((1.0)*(x10370.value));
IkReal x10369=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10368)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10368)));
IkReal gconst4=(x10367*x10369);
IkReal gconst5=((1.0)*r20*x10369);
IkReal x10371=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x10375=IKPowWithIntegerCheck(x10371,-1);
if(!x10375.valid){
continue;
}
IkReal x10372=x10375.value;
IkReal x10373=((1.0)*x10372);
IkReal x10374=((((-1.0)*x10373*(r00*r00)*(r20*r20)))+(((-1.0)*(r02*r02)))+(((-1.0)*x10373*(r01*r01)*(r21*r21)))+(((-2.0)*r00*r01*r20*r21*x10372)));
j5eval[0]=x10374;
j5eval[1]=IKsign(x10374);
j5eval[2]=r02;
j5eval[3]=x10371;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10376=(gconst4*r01);
IkReal x10377=(gconst5*r00);
CheckValue<IkReal> x10378=IKPowWithIntegerCheck(IKsign(((((-1.0)*(r02*r02)))+(((2.0)*x10376*x10377))+(((-1.0)*(x10376*x10376)))+(((-1.0)*(x10377*x10377))))),-1);
if(!x10378.valid){
continue;
}
CheckValue<IkReal> x10379 = IKatan2WithCheck(IkReal((x10376+(((-1.0)*x10377)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x10379.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10378.value)))+(x10379.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10380=IKcos(j5);
IkReal x10381=IKsin(j5);
IkReal x10382=(gconst5*r20);
IkReal x10383=((1.0)*gconst5*r00);
IkReal x10384=(gconst4*x10380);
IkReal x10385=((1.0)*gconst5*r10);
IkReal x10386=((1.0)*x10380);
IkReal x10387=(gconst4*x10381);
evalcond[0]=((((-1.0)*x10380*x10383))+((r02*x10381))+((r01*x10384)));
evalcond[1]=(((r21*x10387))+(((-1.0)*x10381*x10382))+(((-1.0)*r22*x10386)));
evalcond[2]=(((r11*x10387))+(((-1.0)*x10381*x10385))+(((-1.0)*r12*x10386)));
evalcond[3]=((1.0)+(((-1.0)*x10381*x10383))+(((-1.0)*r02*x10386))+((r01*x10387)));
evalcond[4]=(((r12*x10381))+((r11*x10384))+((cj1*sj0))+(((-1.0)*x10380*x10385))+((cj0*sj1)));
evalcond[5]=(((r21*x10384))+((r22*x10381))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*x10382*x10386)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10388=((1.0)*gconst5);
CheckValue<IkReal> x10389=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x10388))+(((-1.0)*gconst4*r20)))),-1);
if(!x10389.valid){
continue;
}
CheckValue<IkReal> x10390 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst4*r11))+(((-1.0)*r10*x10388)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10390.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10389.value)))+(x10390.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10391=IKcos(j5);
IkReal x10392=IKsin(j5);
IkReal x10393=(gconst5*r20);
IkReal x10394=((1.0)*gconst5*r00);
IkReal x10395=(gconst4*x10391);
IkReal x10396=((1.0)*gconst5*r10);
IkReal x10397=((1.0)*x10391);
IkReal x10398=(gconst4*x10392);
evalcond[0]=(((r01*x10395))+((r02*x10392))+(((-1.0)*x10391*x10394)));
evalcond[1]=(((r21*x10398))+(((-1.0)*r22*x10397))+(((-1.0)*x10392*x10393)));
evalcond[2]=(((r11*x10398))+(((-1.0)*x10392*x10396))+(((-1.0)*r12*x10397)));
evalcond[3]=((1.0)+((r01*x10398))+(((-1.0)*x10392*x10394))+(((-1.0)*r02*x10397)));
evalcond[4]=(((r11*x10395))+((r12*x10392))+((cj1*sj0))+(((-1.0)*x10391*x10396))+((cj0*sj1)));
evalcond[5]=(((r21*x10395))+((r22*x10392))+(((-1.0)*x10393*x10397))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10399=IKPowWithIntegerCheck(IKsign((((gconst5*r11))+((gconst4*r10)))),-1);
if(!x10399.valid){
continue;
}
CheckValue<IkReal> x10400 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10400.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10399.value)))+(x10400.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10401=IKcos(j5);
IkReal x10402=IKsin(j5);
IkReal x10403=(gconst5*r20);
IkReal x10404=((1.0)*gconst5*r00);
IkReal x10405=(gconst4*x10401);
IkReal x10406=((1.0)*gconst5*r10);
IkReal x10407=((1.0)*x10401);
IkReal x10408=(gconst4*x10402);
evalcond[0]=(((r01*x10405))+((r02*x10402))+(((-1.0)*x10401*x10404)));
evalcond[1]=(((r21*x10408))+(((-1.0)*r22*x10407))+(((-1.0)*x10402*x10403)));
evalcond[2]=((((-1.0)*x10402*x10406))+(((-1.0)*r12*x10407))+((r11*x10408)));
evalcond[3]=((1.0)+(((-1.0)*x10402*x10404))+((r01*x10408))+(((-1.0)*r02*x10407)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*x10401*x10406))+((r11*x10405))+((r12*x10402))+((cj0*sj1)));
evalcond[5]=(((r21*x10405))+((r22*x10402))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*x10403*x10407)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x10409=((-1.0)*r21);
CheckValue<IkReal> x10412 = IKatan2WithCheck(IkReal(x10409),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10412.valid){
continue;
}
IkReal x10410=((1.0)*(x10412.value));
IkReal x10411=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10410)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10410)));
IkReal gconst4=(x10409*x10411);
IkReal gconst5=((1.0)*r20*x10411);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10413=((-1.0)*r21);
CheckValue<IkReal> x10416 = IKatan2WithCheck(IkReal(x10413),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10416.valid){
continue;
}
IkReal x10414=((1.0)*(x10416.value));
IkReal x10415=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10414)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10414)));
IkReal gconst4=(x10413*x10415);
IkReal gconst5=((1.0)*r20*x10415);
j5eval[0]=0;
j5eval[1]=r12;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10417=((-1.0)*r21);
CheckValue<IkReal> x10420 = IKatan2WithCheck(IkReal(x10417),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10420.valid){
continue;
}
IkReal x10418=((1.0)*(x10420.value));
IkReal x10419=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10418)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10418)));
IkReal gconst4=(x10417*x10419);
IkReal gconst5=((1.0)*r20*x10419);
IkReal x10421=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x10425=IKPowWithIntegerCheck(x10421,-1);
if(!x10425.valid){
continue;
}
IkReal x10422=x10425.value;
IkReal x10423=((1.0)*x10422);
IkReal x10424=((((-1.0)*x10423*(r01*r01)*(r21*r21)))+(((-1.0)*x10423*(r00*r00)*(r20*r20)))+(((-1.0)*(r02*r02)))+(((-2.0)*r00*r01*r20*r21*x10422)));
j5eval[0]=x10424;
j5eval[1]=IKsign(x10424);
j5eval[2]=r02;
j5eval[3]=x10421;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10426=(gconst4*r01);
IkReal x10427=(gconst5*r00);
CheckValue<IkReal> x10428 = IKatan2WithCheck(IkReal((x10426+(((-1.0)*x10427)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x10428.valid){
continue;
}
CheckValue<IkReal> x10429=IKPowWithIntegerCheck(IKsign(((((2.0)*x10426*x10427))+(((-1.0)*(x10427*x10427)))+(((-1.0)*(x10426*x10426)))+(((-1.0)*(r02*r02))))),-1);
if(!x10429.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10428.value)+(((1.5707963267949)*(x10429.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10430=IKcos(j5);
IkReal x10431=IKsin(j5);
IkReal x10432=(gconst5*r20);
IkReal x10433=((1.0)*gconst5*r00);
IkReal x10434=(gconst4*x10430);
IkReal x10435=((1.0)*gconst5*r10);
IkReal x10436=((1.0)*x10430);
IkReal x10437=(gconst4*x10431);
evalcond[0]=(((r01*x10434))+(((-1.0)*x10430*x10433))+((r02*x10431)));
evalcond[1]=((((-1.0)*r22*x10436))+(((-1.0)*x10431*x10432))+((r21*x10437)));
evalcond[2]=((((-1.0)*x10431*x10435))+(((-1.0)*r12*x10436))+((r11*x10437)));
evalcond[3]=((1.0)+((r01*x10437))+(((-1.0)*x10431*x10433))+(((-1.0)*r02*x10436)));
evalcond[4]=(((r22*x10431))+((cj1*sj0))+(((-1.0)*x10432*x10436))+((cj0*sj1))+((r21*x10434)));
evalcond[5]=((((-1.0)*x10430*x10435))+((cj0*cj1))+((r12*x10431))+(((-1.0)*sj0*sj1))+((r11*x10434)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10438=((1.0)*gconst5);
CheckValue<IkReal> x10439=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x10438))+(((-1.0)*gconst4*r20)))),-1);
if(!x10439.valid){
continue;
}
CheckValue<IkReal> x10440 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*r10*x10438))+((gconst4*r11)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10440.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10439.value)))+(x10440.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10441=IKcos(j5);
IkReal x10442=IKsin(j5);
IkReal x10443=(gconst5*r20);
IkReal x10444=((1.0)*gconst5*r00);
IkReal x10445=(gconst4*x10441);
IkReal x10446=((1.0)*gconst5*r10);
IkReal x10447=((1.0)*x10441);
IkReal x10448=(gconst4*x10442);
evalcond[0]=((((-1.0)*x10441*x10444))+((r02*x10442))+((r01*x10445)));
evalcond[1]=((((-1.0)*x10442*x10443))+((r21*x10448))+(((-1.0)*r22*x10447)));
evalcond[2]=((((-1.0)*r12*x10447))+(((-1.0)*x10442*x10446))+((r11*x10448)));
evalcond[3]=((1.0)+(((-1.0)*x10442*x10444))+(((-1.0)*r02*x10447))+((r01*x10448)));
evalcond[4]=(((r22*x10442))+((cj1*sj0))+(((-1.0)*x10443*x10447))+((r21*x10445))+((cj0*sj1)));
evalcond[5]=((((-1.0)*x10441*x10446))+((cj0*cj1))+((r12*x10442))+((r11*x10445))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10449=IKPowWithIntegerCheck(IKsign((((gconst5*r11))+((gconst4*r10)))),-1);
if(!x10449.valid){
continue;
}
CheckValue<IkReal> x10450 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10450.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10449.value)))+(x10450.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10451=IKcos(j5);
IkReal x10452=IKsin(j5);
IkReal x10453=(gconst5*r20);
IkReal x10454=((1.0)*gconst5*r00);
IkReal x10455=(gconst4*x10451);
IkReal x10456=((1.0)*gconst5*r10);
IkReal x10457=((1.0)*x10451);
IkReal x10458=(gconst4*x10452);
evalcond[0]=(((r01*x10455))+(((-1.0)*x10451*x10454))+((r02*x10452)));
evalcond[1]=((((-1.0)*r22*x10457))+(((-1.0)*x10452*x10453))+((r21*x10458)));
evalcond[2]=(((r11*x10458))+(((-1.0)*x10452*x10456))+(((-1.0)*r12*x10457)));
evalcond[3]=((1.0)+(((-1.0)*r02*x10457))+(((-1.0)*x10452*x10454))+((r01*x10458)));
evalcond[4]=(((cj1*sj0))+((r22*x10452))+(((-1.0)*x10453*x10457))+((r21*x10455))+((cj0*sj1)));
evalcond[5]=(((r11*x10455))+((cj0*cj1))+((r12*x10452))+(((-1.0)*x10451*x10456))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x10459=((-1.0)*r21);
CheckValue<IkReal> x10462 = IKatan2WithCheck(IkReal(x10459),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10462.valid){
continue;
}
IkReal x10460=((1.0)*(x10462.value));
IkReal x10461=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10460)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10460)));
IkReal gconst4=(x10459*x10461);
IkReal gconst5=((1.0)*r20*x10461);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10463=((-1.0)*r21);
CheckValue<IkReal> x10466 = IKatan2WithCheck(IkReal(x10463),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10466.valid){
continue;
}
IkReal x10464=((1.0)*(x10466.value));
IkReal x10465=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10464)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10464)));
IkReal gconst4=(x10463*x10465);
IkReal gconst5=((1.0)*r20*x10465);
j5eval[0]=0;
j5eval[1]=r12;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x10467=((-1.0)*r21);
CheckValue<IkReal> x10470 = IKatan2WithCheck(IkReal(x10467),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10470.valid){
continue;
}
IkReal x10468=((1.0)*(x10470.value));
IkReal x10469=x9337;
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10468)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10468)));
IkReal gconst4=(x10467*x10469);
IkReal gconst5=((1.0)*r20*x10469);
j5eval[0]=r02;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10471=(gconst5*r00);
IkReal x10472=(gconst4*r01);
CheckValue<IkReal> x10473 = IKatan2WithCheck(IkReal(((((-1.0)*x10472))+x10471)),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x10473.valid){
continue;
}
CheckValue<IkReal> x10474=IKPowWithIntegerCheck(IKsign(((((-2.0)*x10471*x10472))+(x10472*x10472)+(x10471*x10471)+(r02*r02))),-1);
if(!x10474.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10473.value)+(((1.5707963267949)*(x10474.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10475=IKsin(j5);
IkReal x10476=IKcos(j5);
IkReal x10477=(gconst5*x10476);
IkReal x10478=((1.0)*x10475);
IkReal x10479=((1.0)*x10476);
IkReal x10480=(gconst4*x10475);
IkReal x10481=(gconst4*x10479);
IkReal x10482=(gconst5*x10478);
evalcond[0]=(((r21*x10480))+(((-1.0)*r22*x10479))+(((-1.0)*r20*x10482)));
evalcond[1]=(((r11*x10480))+(((-1.0)*r10*x10482))+(((-1.0)*r12*x10479)));
evalcond[2]=((((-1.0)*r02*x10478))+((r00*x10477))+(((-1.0)*r01*x10481)));
evalcond[3]=((1.0)+(((-1.0)*r02*x10479))+(((-1.0)*r00*x10482))+((r01*x10480)));
evalcond[4]=(((r20*x10477))+((cj1*sj0))+(((-1.0)*r21*x10481))+(((-1.0)*r22*x10478))+((cj0*sj1)));
evalcond[5]=(((cj0*cj1))+(((-1.0)*r11*x10481))+(((-1.0)*sj0*sj1))+((r10*x10477))+(((-1.0)*r12*x10478)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10483=((1.0)*gconst5);
CheckValue<IkReal> x10484 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst4*r11))+(((-1.0)*r10*x10483)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10484.valid){
continue;
}
CheckValue<IkReal> x10485=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x10483))+(((-1.0)*gconst4*r20)))),-1);
if(!x10485.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10484.value)+(((1.5707963267949)*(x10485.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10486=IKsin(j5);
IkReal x10487=IKcos(j5);
IkReal x10488=(gconst5*x10487);
IkReal x10489=((1.0)*x10486);
IkReal x10490=((1.0)*x10487);
IkReal x10491=(gconst4*x10486);
IkReal x10492=(gconst4*x10490);
IkReal x10493=(gconst5*x10489);
evalcond[0]=(((r21*x10491))+(((-1.0)*r22*x10490))+(((-1.0)*r20*x10493)));
evalcond[1]=(((r11*x10491))+(((-1.0)*r12*x10490))+(((-1.0)*r10*x10493)));
evalcond[2]=(((r00*x10488))+(((-1.0)*r01*x10492))+(((-1.0)*r02*x10489)));
evalcond[3]=((1.0)+((r01*x10491))+(((-1.0)*r00*x10493))+(((-1.0)*r02*x10490)));
evalcond[4]=((((-1.0)*r22*x10489))+((cj1*sj0))+(((-1.0)*r21*x10492))+((r20*x10488))+((cj0*sj1)));
evalcond[5]=(((r10*x10488))+((cj0*cj1))+(((-1.0)*r12*x10489))+(((-1.0)*r11*x10492))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10494=IKPowWithIntegerCheck(IKsign((((gconst5*r11))+((gconst4*r10)))),-1);
if(!x10494.valid){
continue;
}
CheckValue<IkReal> x10495 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10495.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10494.value)))+(x10495.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10496=IKsin(j5);
IkReal x10497=IKcos(j5);
IkReal x10498=(gconst5*x10497);
IkReal x10499=((1.0)*x10496);
IkReal x10500=((1.0)*x10497);
IkReal x10501=(gconst4*x10496);
IkReal x10502=(gconst4*x10500);
IkReal x10503=(gconst5*x10499);
evalcond[0]=((((-1.0)*r22*x10500))+((r21*x10501))+(((-1.0)*r20*x10503)));
evalcond[1]=((((-1.0)*r12*x10500))+(((-1.0)*r10*x10503))+((r11*x10501)));
evalcond[2]=((((-1.0)*r01*x10502))+(((-1.0)*r02*x10499))+((r00*x10498)));
evalcond[3]=((1.0)+((r01*x10501))+(((-1.0)*r00*x10503))+(((-1.0)*r02*x10500)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*r22*x10499))+((r20*x10498))+(((-1.0)*r21*x10502))+((cj0*sj1)));
evalcond[5]=(((r10*x10498))+((cj0*cj1))+(((-1.0)*r11*x10502))+(((-1.0)*r12*x10499))+(((-1.0)*sj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r10))+(IKabs(r11)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x10504=((-1.0)*r21);
IkReal x10505=((-1.0)*r20);
CheckValue<IkReal> x10507 = IKatan2WithCheck(IkReal(x10504),IkReal(x10505),IKFAST_ATAN2_MAGTHRESH);
if(!x10507.valid){
continue;
}
IkReal x10506=((1.0)*(x10507.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10506)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
r10=0;
r11=0;
r22=0;
r02=0;
npx=(((px*r00))+((pz*r20)));
npy=(((px*r01))+((pz*r21)));
npz=(py*r12);
rxp0_0=(py*x10505);
rxp0_2=(py*r00);
rxp1_0=(py*x10504);
rxp1_2=(py*r01);
rxp2_0=(pz*r12);
rxp2_1=0;
rxp2_2=((-1.0)*px*r12);
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10506)));
IkReal gconst4=x10504;
IkReal gconst5=((1.0)*r20);
IkReal x10508=((1.0)*r01*r21);
IkReal x10509=((1.0)*r00*r20);
j5eval[0]=((((-1.0)*x10508))+(((-1.0)*x10509)));
j5eval[1]=((((-1.0)*cj4*x10508))+(((-1.0)*cj4*x10509)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x10510=((-1.0)*r21);
IkReal x10511=((-1.0)*r20);
CheckValue<IkReal> x10513 = IKatan2WithCheck(IkReal(x10510),IkReal(x10511),IKFAST_ATAN2_MAGTHRESH);
if(!x10513.valid){
continue;
}
IkReal x10512=((1.0)*(x10513.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10512)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
r10=0;
r11=0;
r22=0;
r02=0;
npx=(((px*r00))+((pz*r20)));
npy=(((px*r01))+((pz*r21)));
npz=(py*r12);
rxp0_0=(py*x10511);
rxp0_2=(py*r00);
rxp1_0=(py*x10510);
rxp1_2=(py*r01);
rxp2_0=(pz*r12);
rxp2_1=0;
rxp2_2=((-1.0)*px*r12);
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10512)));
IkReal gconst4=x10510;
IkReal gconst5=((1.0)*r20);
IkReal x10514=((1.0)*r01*r21);
IkReal x10515=((1.0)*r00*r20);
j5eval[0]=((((-1.0)*x10515))+(((-1.0)*x10514)));
j5eval[1]=(((sj4*x10515))+((sj4*x10514)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x10516=((-1.0)*r21);
IkReal x10517=((-1.0)*r20);
CheckValue<IkReal> x10519 = IKatan2WithCheck(IkReal(x10516),IkReal(x10517),IKFAST_ATAN2_MAGTHRESH);
if(!x10519.valid){
continue;
}
IkReal x10518=((1.0)*(x10519.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10518)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
r10=0;
r11=0;
r22=0;
r02=0;
npx=(((px*r00))+((pz*r20)));
npy=(((px*r01))+((pz*r21)));
npz=(py*r12);
rxp0_0=(py*x10517);
rxp0_2=(py*r00);
rxp1_0=(py*x10516);
rxp1_2=(py*r01);
rxp2_0=(pz*r12);
rxp2_1=0;
rxp2_2=((-1.0)*px*r12);
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10518)));
IkReal gconst4=x10516;
IkReal gconst5=((1.0)*r20);
IkReal x10520=((1.0)*cj4);
j5eval[0]=cj4;
j5eval[1]=r12;
j5eval[2]=((((-1.0)*r01*r21*x10520))+(((-1.0)*r00*r20*x10520)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10521=((1.0)*gconst5);
CheckValue<IkReal> x10522=IKPowWithIntegerCheck(cj4,-1);
if(!x10522.valid){
continue;
}
CheckValue<IkReal> x10523=IKPowWithIntegerCheck(r12,-1);
if(!x10523.valid){
continue;
}
CheckValue<IkReal> x10524=IKPowWithIntegerCheck(((((-1.0)*cj4*r00*x10521))+((cj4*gconst4*r01))),-1);
if(!x10524.valid){
continue;
}
if( IKabs(((x10522.value)*(x10523.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x10524.value)*(((((-1.0)*r01*sj4*x10521))+(((-1.0)*gconst4*r00*sj4)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x10522.value)*(x10523.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))))+IKsqr(((x10524.value)*(((((-1.0)*r01*sj4*x10521))+(((-1.0)*gconst4*r00*sj4))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x10522.value)*(x10523.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))), ((x10524.value)*(((((-1.0)*r01*sj4*x10521))+(((-1.0)*gconst4*r00*sj4))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10525=IKsin(j5);
IkReal x10526=IKcos(j5);
IkReal x10527=(cj1*sj0);
IkReal x10528=(cj0*sj1);
IkReal x10529=(gconst5*r00);
IkReal x10530=(sj0*sj1);
IkReal x10531=(gconst5*r21);
IkReal x10532=(cj4*gconst4);
IkReal x10533=(gconst5*r20);
IkReal x10534=(gconst5*r01);
IkReal x10535=((1.0)*gconst4);
IkReal x10536=(cj0*cj1);
IkReal x10537=(gconst4*sj4);
IkReal x10538=((1.0)*x10525);
IkReal x10539=(sj4*x10526);
IkReal x10540=(gconst4*x10525);
IkReal x10541=(x10527+x10528);
IkReal x10542=((1.0)*cj4*x10526);
evalcond[0]=((-1.0)*r12*x10526);
evalcond[1]=(((r21*x10540))+(((-1.0)*x10533*x10538)));
evalcond[2]=(((cj4*r12*x10525))+(((-1.0)*x10530))+x10536);
evalcond[3]=((((-1.0)*r12*sj4*x10538))+x10541);
evalcond[4]=((1.0)+(((-1.0)*x10529*x10538))+((r01*x10540)));
evalcond[5]=(((sj4*x10534))+((r01*x10526*x10532))+((r00*x10537))+(((-1.0)*x10529*x10542)));
evalcond[6]=((((-1.0)*r01*x10535*x10539))+((x10529*x10539))+((cj4*x10534))+((r00*x10532)));
evalcond[7]=(((sj4*x10531))+x10541+(((-1.0)*x10533*x10542))+((r21*x10526*x10532))+((r20*x10537)));
evalcond[8]=(((x10533*x10539))+(((-1.0)*r21*x10535*x10539))+(((-1.0)*x10536))+((cj4*x10531))+x10530+((r20*x10532)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10543=(gconst5*r00);
IkReal x10544=((1.0)*gconst4);
CheckValue<IkReal> x10545=IKPowWithIntegerCheck((((gconst4*r01))+(((-1.0)*x10543))),-1);
if(!x10545.valid){
continue;
}
CheckValue<IkReal> x10546=IKPowWithIntegerCheck(((((-1.0)*r01*sj4*x10544))+((sj4*x10543))),-1);
if(!x10546.valid){
continue;
}
if( IKabs(((-1.0)*(x10545.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x10546.value)*(((((-1.0)*cj4*gconst5*r01))+(((-1.0)*cj4*r00*x10544)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x10545.value)))+IKsqr(((x10546.value)*(((((-1.0)*cj4*gconst5*r01))+(((-1.0)*cj4*r00*x10544))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x10545.value)), ((x10546.value)*(((((-1.0)*cj4*gconst5*r01))+(((-1.0)*cj4*r00*x10544))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10547=IKsin(j5);
IkReal x10548=IKcos(j5);
IkReal x10549=(cj1*sj0);
IkReal x10550=(cj0*sj1);
IkReal x10551=(gconst5*r00);
IkReal x10552=(sj0*sj1);
IkReal x10553=(gconst5*r21);
IkReal x10554=(cj4*gconst4);
IkReal x10555=(gconst5*r20);
IkReal x10556=(gconst5*r01);
IkReal x10557=((1.0)*gconst4);
IkReal x10558=(cj0*cj1);
IkReal x10559=(gconst4*sj4);
IkReal x10560=((1.0)*x10547);
IkReal x10561=(sj4*x10548);
IkReal x10562=(gconst4*x10547);
IkReal x10563=(x10549+x10550);
IkReal x10564=((1.0)*cj4*x10548);
evalcond[0]=((-1.0)*r12*x10548);
evalcond[1]=((((-1.0)*x10555*x10560))+((r21*x10562)));
evalcond[2]=(((cj4*r12*x10547))+(((-1.0)*x10552))+x10558);
evalcond[3]=((((-1.0)*r12*sj4*x10560))+x10563);
evalcond[4]=((1.0)+((r01*x10562))+(((-1.0)*x10551*x10560)));
evalcond[5]=(((sj4*x10556))+(((-1.0)*x10551*x10564))+((r00*x10559))+((r01*x10548*x10554)));
evalcond[6]=(((x10551*x10561))+(((-1.0)*r01*x10557*x10561))+((cj4*x10556))+((r00*x10554)));
evalcond[7]=(((r21*x10548*x10554))+((sj4*x10553))+(((-1.0)*x10555*x10564))+((r20*x10559))+x10563);
evalcond[8]=(((x10555*x10561))+((cj4*x10553))+(((-1.0)*x10558))+((r20*x10554))+x10552+(((-1.0)*r21*x10557*x10561)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10565=((1.0)*gconst5);
IkReal x10566=(gconst4*r01);
CheckValue<IkReal> x10567=IKPowWithIntegerCheck(((((-1.0)*r00*x10565))+x10566),-1);
if(!x10567.valid){
continue;
}
CheckValue<IkReal> x10568=IKPowWithIntegerCheck((((cj4*x10566))+(((-1.0)*cj4*r00*x10565))),-1);
if(!x10568.valid){
continue;
}
if( IKabs(((-1.0)*(x10567.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x10568.value)*(((((-1.0)*r01*sj4*x10565))+(((-1.0)*gconst4*r00*sj4)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x10567.value)))+IKsqr(((x10568.value)*(((((-1.0)*r01*sj4*x10565))+(((-1.0)*gconst4*r00*sj4))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x10567.value)), ((x10568.value)*(((((-1.0)*r01*sj4*x10565))+(((-1.0)*gconst4*r00*sj4))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10569=IKsin(j5);
IkReal x10570=IKcos(j5);
IkReal x10571=(cj1*sj0);
IkReal x10572=(cj0*sj1);
IkReal x10573=(gconst5*r00);
IkReal x10574=(sj0*sj1);
IkReal x10575=(gconst5*r21);
IkReal x10576=(cj4*gconst4);
IkReal x10577=(gconst5*r20);
IkReal x10578=(gconst5*r01);
IkReal x10579=((1.0)*gconst4);
IkReal x10580=(cj0*cj1);
IkReal x10581=(gconst4*sj4);
IkReal x10582=((1.0)*x10569);
IkReal x10583=(sj4*x10570);
IkReal x10584=(gconst4*x10569);
IkReal x10585=(x10572+x10571);
IkReal x10586=((1.0)*cj4*x10570);
evalcond[0]=((-1.0)*r12*x10570);
evalcond[1]=((((-1.0)*x10577*x10582))+((r21*x10584)));
evalcond[2]=(((cj4*r12*x10569))+(((-1.0)*x10574))+x10580);
evalcond[3]=(x10585+(((-1.0)*r12*sj4*x10582)));
evalcond[4]=((1.0)+(((-1.0)*x10573*x10582))+((r01*x10584)));
evalcond[5]=(((sj4*x10578))+(((-1.0)*x10573*x10586))+((r01*x10570*x10576))+((r00*x10581)));
evalcond[6]=((((-1.0)*r01*x10579*x10583))+((r00*x10576))+((x10573*x10583))+((cj4*x10578)));
evalcond[7]=((((-1.0)*x10577*x10586))+((sj4*x10575))+x10585+((r21*x10570*x10576))+((r20*x10581)));
evalcond[8]=(((r20*x10576))+((cj4*x10575))+x10574+(((-1.0)*r21*x10579*x10583))+(((-1.0)*x10580))+((x10577*x10583)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10587=gconst4*gconst4;
IkReal x10588=gconst5*gconst5;
IkReal x10589=(r01*sj4);
IkReal x10590=(cj4*r00);
IkReal x10591=(r00*sj4);
IkReal x10592=(cj4*r01);
IkReal x10593=(gconst4*gconst5*r21);
IkReal x10594=(r21*x10587);
IkReal x10595=(gconst4*gconst5*r20);
IkReal x10596=((1.0)*r20*x10588);
CheckValue<IkReal> x10597 = IKatan2WithCheck(IkReal((((gconst4*r22*x10591))+((gconst5*r22*x10589)))),IkReal(((((-1.0)*x10589*x10596))+((x10589*x10593))+(((-1.0)*x10591*x10595))+((x10591*x10594)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10597.valid){
continue;
}
CheckValue<IkReal> x10598=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj4*r02*r22))+((x10592*x10595))+(((-1.0)*x10590*x10596))+(((-1.0)*x10592*x10594))+((x10590*x10593)))),-1);
if(!x10598.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10597.value)+(((1.5707963267949)*(x10598.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10599=IKsin(j5);
IkReal x10600=IKcos(j5);
IkReal x10601=(cj1*sj0);
IkReal x10602=(cj0*sj1);
IkReal x10603=(gconst5*r00);
IkReal x10604=(sj0*sj1);
IkReal x10605=(gconst5*sj4);
IkReal x10606=(cj4*r11);
IkReal x10607=(gconst4*sj4);
IkReal x10608=(cj4*gconst5);
IkReal x10609=(cj4*gconst4);
IkReal x10610=(gconst5*r20);
IkReal x10611=((1.0)*gconst4);
IkReal x10612=(gconst5*r10);
IkReal x10613=(cj0*cj1);
IkReal x10614=((1.0)*x10599);
IkReal x10615=(sj4*x10600);
IkReal x10616=(gconst4*x10600);
IkReal x10617=(cj4*x10599);
IkReal x10618=((1.0)*x10600);
IkReal x10619=(gconst4*x10599);
IkReal x10620=(x10601+x10602);
evalcond[0]=((((-1.0)*x10610*x10614))+(((-1.0)*r22*x10618))+((r21*x10619)));
evalcond[1]=((((-1.0)*r12*x10618))+(((-1.0)*x10612*x10614))+((r11*x10619)));
evalcond[2]=((1.0)+(((-1.0)*r02*x10618))+((r01*x10619))+(((-1.0)*x10603*x10614)));
evalcond[3]=(((r01*x10605))+((r00*x10607))+((r02*x10617))+((r01*x10600*x10609))+(((-1.0)*cj4*x10603*x10618)));
evalcond[4]=(((r01*x10608))+((r00*x10609))+(((-1.0)*r02*sj4*x10614))+(((-1.0)*r01*x10607*x10618))+((x10603*x10615)));
evalcond[5]=(((r22*x10617))+((r21*x10605))+((r21*x10600*x10609))+(((-1.0)*r20*x10608*x10618))+((r20*x10607))+x10620);
evalcond[6]=(((r12*x10617))+(((-1.0)*r10*x10608*x10618))+((r11*x10605))+((r10*x10607))+(((-1.0)*x10604))+((x10606*x10616))+x10613);
evalcond[7]=((((-1.0)*r11*x10607*x10618))+((r10*x10600*x10605))+(((-1.0)*r12*sj4*x10614))+((r10*x10609))+((gconst5*x10606))+x10620);
evalcond[8]=(((r20*x10600*x10605))+(((-1.0)*r21*x10607*x10618))+((r21*x10608))+(((-1.0)*r22*sj4*x10614))+(((-1.0)*x10613))+((r20*x10609))+x10604);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10621=((1.0)*gconst5);
CheckValue<IkReal> x10622=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x10621))+(((-1.0)*gconst4*r20)))),-1);
if(!x10622.valid){
continue;
}
CheckValue<IkReal> x10623 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst4*r11))+(((-1.0)*r10*x10621)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10623.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10622.value)))+(x10623.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10624=IKsin(j5);
IkReal x10625=IKcos(j5);
IkReal x10626=(cj1*sj0);
IkReal x10627=(cj0*sj1);
IkReal x10628=(gconst5*r00);
IkReal x10629=(sj0*sj1);
IkReal x10630=(gconst5*sj4);
IkReal x10631=(cj4*r11);
IkReal x10632=(gconst4*sj4);
IkReal x10633=(cj4*gconst5);
IkReal x10634=(cj4*gconst4);
IkReal x10635=(gconst5*r20);
IkReal x10636=((1.0)*gconst4);
IkReal x10637=(gconst5*r10);
IkReal x10638=(cj0*cj1);
IkReal x10639=((1.0)*x10624);
IkReal x10640=(sj4*x10625);
IkReal x10641=(gconst4*x10625);
IkReal x10642=(cj4*x10624);
IkReal x10643=((1.0)*x10625);
IkReal x10644=(gconst4*x10624);
IkReal x10645=(x10626+x10627);
evalcond[0]=(((r21*x10644))+(((-1.0)*x10635*x10639))+(((-1.0)*r22*x10643)));
evalcond[1]=((((-1.0)*r12*x10643))+(((-1.0)*x10637*x10639))+((r11*x10644)));
evalcond[2]=((1.0)+(((-1.0)*r02*x10643))+((r01*x10644))+(((-1.0)*x10628*x10639)));
evalcond[3]=(((r00*x10632))+((r01*x10630))+((r01*x10625*x10634))+((r02*x10642))+(((-1.0)*cj4*x10628*x10643)));
evalcond[4]=(((r00*x10634))+((r01*x10633))+(((-1.0)*r01*x10632*x10643))+(((-1.0)*r02*sj4*x10639))+((x10628*x10640)));
evalcond[5]=(((r21*x10625*x10634))+((r20*x10632))+((r22*x10642))+x10645+(((-1.0)*r20*x10633*x10643))+((r21*x10630)));
evalcond[6]=(((r10*x10632))+(((-1.0)*x10629))+((x10631*x10641))+(((-1.0)*r10*x10633*x10643))+((r11*x10630))+((r12*x10642))+x10638);
evalcond[7]=(((gconst5*x10631))+(((-1.0)*r12*sj4*x10639))+((r10*x10634))+x10645+((r10*x10625*x10630))+(((-1.0)*r11*x10632*x10643)));
evalcond[8]=(((r20*x10634))+(((-1.0)*r21*x10632*x10643))+((r20*x10625*x10630))+(((-1.0)*x10638))+(((-1.0)*r22*sj4*x10639))+x10629+((r21*x10633)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10646=IKPowWithIntegerCheck(IKsign((((gconst5*r11))+((gconst4*r10)))),-1);
if(!x10646.valid){
continue;
}
CheckValue<IkReal> x10647 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst4*r21))+(((-1.0)*gconst5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10647.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10646.value)))+(x10647.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10648=IKsin(j5);
IkReal x10649=IKcos(j5);
IkReal x10650=(cj1*sj0);
IkReal x10651=(cj0*sj1);
IkReal x10652=(gconst5*r00);
IkReal x10653=(sj0*sj1);
IkReal x10654=(gconst5*sj4);
IkReal x10655=(cj4*r11);
IkReal x10656=(gconst4*sj4);
IkReal x10657=(cj4*gconst5);
IkReal x10658=(cj4*gconst4);
IkReal x10659=(gconst5*r20);
IkReal x10660=((1.0)*gconst4);
IkReal x10661=(gconst5*r10);
IkReal x10662=(cj0*cj1);
IkReal x10663=((1.0)*x10648);
IkReal x10664=(sj4*x10649);
IkReal x10665=(gconst4*x10649);
IkReal x10666=(cj4*x10648);
IkReal x10667=((1.0)*x10649);
IkReal x10668=(gconst4*x10648);
IkReal x10669=(x10651+x10650);
evalcond[0]=((((-1.0)*x10659*x10663))+(((-1.0)*r22*x10667))+((r21*x10668)));
evalcond[1]=((((-1.0)*x10661*x10663))+(((-1.0)*r12*x10667))+((r11*x10668)));
evalcond[2]=((1.0)+(((-1.0)*r02*x10667))+((r01*x10668))+(((-1.0)*x10652*x10663)));
evalcond[3]=(((r00*x10656))+((r02*x10666))+((r01*x10649*x10658))+(((-1.0)*cj4*x10652*x10667))+((r01*x10654)));
evalcond[4]=(((r00*x10658))+(((-1.0)*r01*x10656*x10667))+(((-1.0)*r02*sj4*x10663))+((r01*x10657))+((x10652*x10664)));
evalcond[5]=(((r22*x10666))+(((-1.0)*r20*x10657*x10667))+((r21*x10654))+((r20*x10656))+((r21*x10649*x10658))+x10669);
evalcond[6]=((((-1.0)*x10653))+((r12*x10666))+(((-1.0)*r10*x10657*x10667))+((x10655*x10665))+((r11*x10654))+((r10*x10656))+x10662);
evalcond[7]=((((-1.0)*r12*sj4*x10663))+((gconst5*x10655))+((r10*x10649*x10654))+(((-1.0)*r11*x10656*x10667))+((r10*x10658))+x10669);
evalcond[8]=((((-1.0)*r21*x10656*x10667))+((r20*x10649*x10654))+(((-1.0)*r22*sj4*x10663))+((r21*x10657))+(((-1.0)*x10662))+((r20*x10658))+x10653);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x10670=((-1.0)*r21);
IkReal x10671=((-1.0)*px);
CheckValue<IkReal> x10673 = IKatan2WithCheck(IkReal(x10670),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10673.valid){
continue;
}
IkReal x10672=((1.0)*(x10673.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10672)));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x10671);
rxp1_1=(px*r21);
rxp1_2=(r11*x10671);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10672)));
IkReal gconst4=x10670;
IkReal gconst5=((1.0)*r20);
j5eval[0]=((((-1.0)*r11*r21))+(((-1.0)*r10*r20)));
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x10674=((-1.0)*r21);
IkReal x10675=((-1.0)*px);
CheckValue<IkReal> x10677 = IKatan2WithCheck(IkReal(x10674),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10677.valid){
continue;
}
IkReal x10676=((1.0)*(x10677.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10676)));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x10675);
rxp1_1=(px*r21);
rxp1_2=(r11*x10675);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10676)));
IkReal gconst4=x10674;
IkReal gconst5=((1.0)*r20);
IkReal x10678=((1.0)*cj4);
j5eval[0]=((((-1.0)*r11*r21))+(((-1.0)*r10*r20)));
j5eval[1]=((((-1.0)*x10678*(r21*r21)))+(((-1.0)*x10678))+((x10678*(r10*r10))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x10679=((-1.0)*r21);
IkReal x10680=((-1.0)*px);
CheckValue<IkReal> x10682 = IKatan2WithCheck(IkReal(x10679),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10682.valid){
continue;
}
IkReal x10681=((1.0)*(x10682.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10681)));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x10680);
rxp1_1=(px*r21);
rxp1_2=(r11*x10680);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10681)));
IkReal gconst4=x10679;
IkReal gconst5=((1.0)*r20);
j5eval[0]=cj4;
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x10683=((-1.0)*r21);
IkReal x10684=((-1.0)*px);
CheckValue<IkReal> x10686 = IKatan2WithCheck(IkReal(x10683),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10686.valid){
continue;
}
IkReal x10685=((1.0)*(x10686.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10685)));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x10684);
rxp1_1=(px*r21);
rxp1_2=(r11*x10684);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10685)));
IkReal gconst4=x10683;
IkReal gconst5=((1.0)*r20);
j5eval[0]=((1.0)+(((1.0)*(r21*r21)))+(((-1.0)*(r10*r10))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x10688=IKPowWithIntegerCheck((((gconst5*r20))+(((-1.0)*gconst4*r21))),-1);
if(!x10688.valid){
continue;
}
IkReal x10687=x10688.value;
cj5array[0]=((((-1.0)*sj0*sj1*x10687))+((cj0*cj1*x10687)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x10689=IKsin(j5);
IkReal x10690=(gconst4*x10689);
IkReal x10691=((1.0)*gconst5*x10689);
evalcond[0]=((-1.0)*r02*x10689);
evalcond[1]=(((r21*x10690))+(((-1.0)*r20*x10691)));
evalcond[2]=(((r11*x10690))+(((-1.0)*r10*x10691)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x10692=((-1.0)*r21);
IkReal x10693=((-1.0)*px);
CheckValue<IkReal> x10695 = IKatan2WithCheck(IkReal(x10692),IkReal(((-1.0)*r20)),IKFAST_ATAN2_MAGTHRESH);
if(!x10695.valid){
continue;
}
IkReal x10694=((1.0)*(x10695.value));
sj6=gconst4;
cj6=gconst5;
j6=((3.14159265)+(((-1.0)*x10694)));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x10693);
rxp1_1=(px*r21);
rxp1_2=(r11*x10693);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst3=((3.14159265358979)+(((-1.0)*x10694)));
IkReal gconst4=x10692;
IkReal gconst5=((1.0)*r20);
j5eval[0]=((-1.0)+(((-1.0)*(r21*r21)))+(((1.0)*(r10*r10))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x10697=IKPowWithIntegerCheck((((gconst4*r21))+(((-1.0)*gconst5*r20))),-1);
if(!x10697.valid){
continue;
}
IkReal x10696=x10697.value;
cj5array[0]=(((cj0*cj1*x10696))+(((-1.0)*sj0*sj1*x10696)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x10698=IKsin(j5);
IkReal x10699=(gconst4*x10698);
IkReal x10700=((1.0)*gconst5*x10698);
evalcond[0]=(r02*x10698);
evalcond[1]=(((r21*x10699))+(((-1.0)*r20*x10700)));
evalcond[2]=((((-1.0)*r10*x10700))+((r11*x10699)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10702=IKPowWithIntegerCheck(r02,-1);
if(!x10702.valid){
continue;
}
IkReal x10701=x10702.value;
CheckValue<IkReal> x10703=IKPowWithIntegerCheck(cj4,-1);
if(!x10703.valid){
continue;
}
if( IKabs((x10701*(x10703.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*x10701)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x10701*(x10703.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))))+IKsqr(((-1.0)*sj2*x10701))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((x10701*(x10703.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))), ((-1.0)*sj2*x10701));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10704=IKsin(j5);
IkReal x10705=IKcos(j5);
IkReal x10706=(cj2*sj1);
IkReal x10707=(r21*sj4);
IkReal x10708=(cj4*r11);
IkReal x10709=(gconst4*sj4);
IkReal x10710=(cj4*gconst4);
IkReal x10711=((1.0)*sj2);
IkReal x10712=(cj4*gconst5);
IkReal x10713=(sj0*sj1);
IkReal x10714=((1.0)*sj4);
IkReal x10715=(cj1*sj0);
IkReal x10716=(cj0*sj1);
IkReal x10717=((1.0)*cj0*cj1);
IkReal x10718=(gconst4*x10705);
IkReal x10719=(r02*x10704);
IkReal x10720=((1.0)*x10705);
IkReal x10721=(gconst4*x10704);
IkReal x10722=((1.0)*gconst5*x10704);
IkReal x10723=(gconst5*sj4*x10705);
evalcond[0]=((((-1.0)*r02*x10720))+(((-1.0)*x10711)));
evalcond[1]=(((r21*x10721))+(((-1.0)*r20*x10722)));
evalcond[2]=(cj2+(((-1.0)*r10*x10722))+((r11*x10721)));
evalcond[3]=((((-1.0)*cj2*x10717))+((sj0*x10706))+((cj4*x10719)));
evalcond[4]=((((-1.0)*x10714*x10719))+(((-1.0)*cj2*x10715))+(((-1.0)*cj0*x10706)));
evalcond[5]=((((-1.0)*r20*x10712*x10720))+((r21*x10705*x10710))+((gconst5*x10707))+x10716+x10715+((r20*x10709)));
evalcond[6]=(((r20*x10710))+(((-1.0)*x10717))+((r21*x10712))+((r20*x10723))+(((-1.0)*x10707*x10718))+x10713);
evalcond[7]=((((-1.0)*cj0*cj1*x10711))+(((-1.0)*r10*x10712*x10720))+((r10*x10709))+((x10708*x10718))+((gconst5*r11*sj4))+((sj2*x10713)));
evalcond[8]=(((r10*x10723))+(((-1.0)*r11*x10709*x10720))+(((-1.0)*x10711*x10716))+(((-1.0)*x10711*x10715))+((gconst5*x10708))+((r10*x10710)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10724=((1.0)*gconst5);
CheckValue<IkReal> x10725=IKPowWithIntegerCheck((((gconst4*r11))+(((-1.0)*r10*x10724))),-1);
if(!x10725.valid){
continue;
}
CheckValue<IkReal> x10726=IKPowWithIntegerCheck((((cj4*gconst4*r21))+(((-1.0)*cj4*r20*x10724))),-1);
if(!x10726.valid){
continue;
}
if( IKabs(((-1.0)*cj2*(x10725.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x10726.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*gconst4*r20*sj4))+(((-1.0)*r21*sj4*x10724))+(((-1.0)*cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*cj2*(x10725.value)))+IKsqr(((x10726.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*gconst4*r20*sj4))+(((-1.0)*r21*sj4*x10724))+(((-1.0)*cj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*cj2*(x10725.value)), ((x10726.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*gconst4*r20*sj4))+(((-1.0)*r21*sj4*x10724))+(((-1.0)*cj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10727=IKsin(j5);
IkReal x10728=IKcos(j5);
IkReal x10729=(cj2*sj1);
IkReal x10730=(r21*sj4);
IkReal x10731=(cj4*r11);
IkReal x10732=(gconst4*sj4);
IkReal x10733=(cj4*gconst4);
IkReal x10734=((1.0)*sj2);
IkReal x10735=(cj4*gconst5);
IkReal x10736=(sj0*sj1);
IkReal x10737=((1.0)*sj4);
IkReal x10738=(cj1*sj0);
IkReal x10739=(cj0*sj1);
IkReal x10740=((1.0)*cj0*cj1);
IkReal x10741=(gconst4*x10728);
IkReal x10742=(r02*x10727);
IkReal x10743=((1.0)*x10728);
IkReal x10744=(gconst4*x10727);
IkReal x10745=((1.0)*gconst5*x10727);
IkReal x10746=(gconst5*sj4*x10728);
evalcond[0]=((((-1.0)*r02*x10743))+(((-1.0)*x10734)));
evalcond[1]=((((-1.0)*r20*x10745))+((r21*x10744)));
evalcond[2]=(cj2+(((-1.0)*r10*x10745))+((r11*x10744)));
evalcond[3]=(((cj4*x10742))+(((-1.0)*cj2*x10740))+((sj0*x10729)));
evalcond[4]=((((-1.0)*cj2*x10738))+(((-1.0)*x10737*x10742))+(((-1.0)*cj0*x10729)));
evalcond[5]=(((r21*x10728*x10733))+((r20*x10732))+(((-1.0)*r20*x10735*x10743))+x10738+x10739+((gconst5*x10730)));
evalcond[6]=(((r21*x10735))+(((-1.0)*x10730*x10741))+((r20*x10733))+((r20*x10746))+(((-1.0)*x10740))+x10736);
evalcond[7]=(((r10*x10732))+((x10731*x10741))+((gconst5*r11*sj4))+(((-1.0)*cj0*cj1*x10734))+(((-1.0)*r10*x10735*x10743))+((sj2*x10736)));
evalcond[8]=((((-1.0)*x10734*x10738))+(((-1.0)*x10734*x10739))+(((-1.0)*r11*x10732*x10743))+((r10*x10733))+((r10*x10746))+((gconst5*x10731)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x10747=IKPowWithIntegerCheck((((gconst4*r11))+(((-1.0)*gconst5*r10))),-1);
if(!x10747.valid){
continue;
}
CheckValue<IkReal> x10748=IKPowWithIntegerCheck(r02,-1);
if(!x10748.valid){
continue;
}
if( IKabs(((-1.0)*cj2*(x10747.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*(x10748.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*cj2*(x10747.value)))+IKsqr(((-1.0)*sj2*(x10748.value)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*cj2*(x10747.value)), ((-1.0)*sj2*(x10748.value)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10749=IKsin(j5);
IkReal x10750=IKcos(j5);
IkReal x10751=(cj2*sj1);
IkReal x10752=(r21*sj4);
IkReal x10753=(cj4*r11);
IkReal x10754=(gconst4*sj4);
IkReal x10755=(cj4*gconst4);
IkReal x10756=((1.0)*sj2);
IkReal x10757=(cj4*gconst5);
IkReal x10758=(sj0*sj1);
IkReal x10759=((1.0)*sj4);
IkReal x10760=(cj1*sj0);
IkReal x10761=(cj0*sj1);
IkReal x10762=((1.0)*cj0*cj1);
IkReal x10763=(gconst4*x10750);
IkReal x10764=(r02*x10749);
IkReal x10765=((1.0)*x10750);
IkReal x10766=(gconst4*x10749);
IkReal x10767=((1.0)*gconst5*x10749);
IkReal x10768=(gconst5*sj4*x10750);
evalcond[0]=((((-1.0)*x10756))+(((-1.0)*r02*x10765)));
evalcond[1]=((((-1.0)*r20*x10767))+((r21*x10766)));
evalcond[2]=((((-1.0)*r10*x10767))+cj2+((r11*x10766)));
evalcond[3]=(((sj0*x10751))+((cj4*x10764))+(((-1.0)*cj2*x10762)));
evalcond[4]=((((-1.0)*cj0*x10751))+(((-1.0)*x10759*x10764))+(((-1.0)*cj2*x10760)));
evalcond[5]=((((-1.0)*r20*x10757*x10765))+((r21*x10750*x10755))+((gconst5*x10752))+((r20*x10754))+x10761+x10760);
evalcond[6]=(((r20*x10768))+(((-1.0)*x10762))+((r20*x10755))+x10758+(((-1.0)*x10752*x10763))+((r21*x10757)));
evalcond[7]=(((sj2*x10758))+((r10*x10754))+(((-1.0)*r10*x10757*x10765))+(((-1.0)*cj0*cj1*x10756))+((gconst5*r11*sj4))+((x10753*x10763)));
evalcond[8]=(((r10*x10755))+((gconst5*x10753))+((r10*x10768))+(((-1.0)*r11*x10754*x10765))+(((-1.0)*x10756*x10761))+(((-1.0)*x10756*x10760)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10769=((1.0)*sj2);
IkReal x10770=((1.0)*cj2);
CheckValue<IkReal> x10771=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst5*r21))+(((-1.0)*gconst4*r20)))),-1);
if(!x10771.valid){
continue;
}
CheckValue<IkReal> x10772 = IKatan2WithCheck(IkReal(((((-1.0)*r02*x10770))+(((-1.0)*r12*x10769)))),IkReal(((((-1.0)*gconst4*r11*x10769))+(((-1.0)*gconst4*r01*x10770))+((cj2*gconst5*r00))+((gconst5*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10772.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10771.value)))+(x10772.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10773=IKsin(j5);
IkReal x10774=IKcos(j5);
IkReal x10775=(gconst5*r00);
IkReal x10776=(cj2*sj1);
IkReal x10777=(r21*sj4);
IkReal x10778=(cj4*r11);
IkReal x10779=(gconst4*sj4);
IkReal x10780=(cj4*gconst4);
IkReal x10781=((1.0)*sj2);
IkReal x10782=(cj4*gconst5);
IkReal x10783=(gconst5*r10);
IkReal x10784=(gconst5*sj4);
IkReal x10785=(sj0*sj1);
IkReal x10786=((1.0)*sj4);
IkReal x10787=(cj1*sj0);
IkReal x10788=(cj0*sj1);
IkReal x10789=((1.0)*x10773);
IkReal x10790=((1.0)*cj0*cj1);
IkReal x10791=(gconst4*x10774);
IkReal x10792=(cj4*x10773);
IkReal x10793=((1.0)*x10774);
IkReal x10794=(sj4*x10774);
IkReal x10795=(gconst4*x10773);
evalcond[0]=(((r21*x10795))+(((-1.0)*gconst5*r20*x10789))+(((-1.0)*r22*x10793)));
evalcond[1]=((((-1.0)*x10783*x10789))+cj2+(((-1.0)*r12*x10793))+((r11*x10795)));
evalcond[2]=((((-1.0)*x10775*x10789))+(((-1.0)*r02*x10793))+(((-1.0)*x10781))+((r01*x10795)));
evalcond[3]=(((r21*x10774*x10780))+((r20*x10779))+(((-1.0)*r20*x10782*x10793))+((gconst5*x10777))+x10787+x10788+((r22*x10792)));
evalcond[4]=(((r21*x10782))+((r20*x10780))+(((-1.0)*x10777*x10791))+(((-1.0)*x10790))+((r20*x10774*x10784))+x10785+(((-1.0)*r22*x10773*x10786)));
evalcond[5]=((((-1.0)*cj4*x10775*x10793))+((sj0*x10776))+((r02*x10792))+(((-1.0)*cj2*x10790))+((r00*x10779))+((r01*x10784))+((r01*x10774*x10780)));
evalcond[6]=(((r11*x10784))+((r12*x10792))+((x10778*x10791))+(((-1.0)*cj0*cj1*x10781))+(((-1.0)*r10*x10782*x10793))+((r10*x10779))+((sj2*x10785)));
evalcond[7]=((((-1.0)*r02*x10773*x10786))+(((-1.0)*cj0*x10776))+((r01*x10782))+((x10775*x10794))+((r00*x10780))+(((-1.0)*cj2*x10787))+(((-1.0)*r01*x10779*x10793)));
evalcond[8]=(((x10783*x10794))+(((-1.0)*r12*x10773*x10786))+((gconst5*x10778))+(((-1.0)*r11*x10779*x10793))+((r10*x10780))+(((-1.0)*x10781*x10787))+(((-1.0)*x10781*x10788)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10796=((1.0)*gconst5);
CheckValue<IkReal> x10797=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x10796))+(((-1.0)*gconst4*r10)))),-1);
if(!x10797.valid){
continue;
}
CheckValue<IkReal> x10798 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x10796))+((gconst4*r21*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10798.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10797.value)))+(x10798.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10799=IKsin(j5);
IkReal x10800=IKcos(j5);
IkReal x10801=(gconst5*r00);
IkReal x10802=(cj2*sj1);
IkReal x10803=(r21*sj4);
IkReal x10804=(cj4*r11);
IkReal x10805=(gconst4*sj4);
IkReal x10806=(cj4*gconst4);
IkReal x10807=((1.0)*sj2);
IkReal x10808=(cj4*gconst5);
IkReal x10809=(gconst5*r10);
IkReal x10810=(gconst5*sj4);
IkReal x10811=(sj0*sj1);
IkReal x10812=((1.0)*sj4);
IkReal x10813=(cj1*sj0);
IkReal x10814=(cj0*sj1);
IkReal x10815=((1.0)*x10799);
IkReal x10816=((1.0)*cj0*cj1);
IkReal x10817=(gconst4*x10800);
IkReal x10818=(cj4*x10799);
IkReal x10819=((1.0)*x10800);
IkReal x10820=(sj4*x10800);
IkReal x10821=(gconst4*x10799);
evalcond[0]=(((r21*x10821))+(((-1.0)*gconst5*r20*x10815))+(((-1.0)*r22*x10819)));
evalcond[1]=(cj2+(((-1.0)*x10809*x10815))+(((-1.0)*r12*x10819))+((r11*x10821)));
evalcond[2]=((((-1.0)*r02*x10819))+(((-1.0)*x10807))+(((-1.0)*x10801*x10815))+((r01*x10821)));
evalcond[3]=(((r22*x10818))+((r20*x10805))+((r21*x10800*x10806))+(((-1.0)*r20*x10808*x10819))+((gconst5*x10803))+x10813+x10814);
evalcond[4]=(((r20*x10806))+(((-1.0)*x10803*x10817))+((r20*x10800*x10810))+((r21*x10808))+(((-1.0)*r22*x10799*x10812))+(((-1.0)*x10816))+x10811);
evalcond[5]=((((-1.0)*cj4*x10801*x10819))+((r02*x10818))+((r01*x10800*x10806))+((r00*x10805))+((sj0*x10802))+(((-1.0)*cj2*x10816))+((r01*x10810)));
evalcond[6]=(((x10804*x10817))+((r10*x10805))+(((-1.0)*r10*x10808*x10819))+((sj2*x10811))+(((-1.0)*cj0*cj1*x10807))+((r11*x10810))+((r12*x10818)));
evalcond[7]=((((-1.0)*r01*x10805*x10819))+(((-1.0)*cj2*x10813))+(((-1.0)*cj0*x10802))+((r01*x10808))+((r00*x10806))+((x10801*x10820))+(((-1.0)*r02*x10799*x10812)));
evalcond[8]=(((r10*x10806))+((x10809*x10820))+((gconst5*x10804))+(((-1.0)*r12*x10799*x10812))+(((-1.0)*x10807*x10813))+(((-1.0)*x10807*x10814))+(((-1.0)*r11*x10805*x10819)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10822=((1.0)*gconst5);
CheckValue<IkReal> x10823 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst4*r21))+(((-1.0)*cj2*r20*x10822)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10823.valid){
continue;
}
CheckValue<IkReal> x10824=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst4*r00))+(((-1.0)*r01*x10822)))),-1);
if(!x10824.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10823.value)+(((1.5707963267949)*(x10824.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10825=IKsin(j5);
IkReal x10826=IKcos(j5);
IkReal x10827=(gconst5*r00);
IkReal x10828=(cj2*sj1);
IkReal x10829=(r21*sj4);
IkReal x10830=(cj4*r11);
IkReal x10831=(gconst4*sj4);
IkReal x10832=(cj4*gconst4);
IkReal x10833=((1.0)*sj2);
IkReal x10834=(cj4*gconst5);
IkReal x10835=(gconst5*r10);
IkReal x10836=(gconst5*sj4);
IkReal x10837=(sj0*sj1);
IkReal x10838=((1.0)*sj4);
IkReal x10839=(cj1*sj0);
IkReal x10840=(cj0*sj1);
IkReal x10841=((1.0)*x10825);
IkReal x10842=((1.0)*cj0*cj1);
IkReal x10843=(gconst4*x10826);
IkReal x10844=(cj4*x10825);
IkReal x10845=((1.0)*x10826);
IkReal x10846=(sj4*x10826);
IkReal x10847=(gconst4*x10825);
evalcond[0]=((((-1.0)*r22*x10845))+((r21*x10847))+(((-1.0)*gconst5*r20*x10841)));
evalcond[1]=(cj2+(((-1.0)*r12*x10845))+(((-1.0)*x10835*x10841))+((r11*x10847)));
evalcond[2]=(((r01*x10847))+(((-1.0)*r02*x10845))+(((-1.0)*x10827*x10841))+(((-1.0)*x10833)));
evalcond[3]=(((gconst5*x10829))+((r22*x10844))+(((-1.0)*r20*x10834*x10845))+((r20*x10831))+((r21*x10826*x10832))+x10840+x10839);
evalcond[4]=((((-1.0)*x10842))+(((-1.0)*r22*x10825*x10838))+((r20*x10832))+((r20*x10826*x10836))+((r21*x10834))+(((-1.0)*x10829*x10843))+x10837);
evalcond[5]=(((sj0*x10828))+((r01*x10826*x10832))+(((-1.0)*cj2*x10842))+((r02*x10844))+((r01*x10836))+(((-1.0)*cj4*x10827*x10845))+((r00*x10831)));
evalcond[6]=((((-1.0)*cj0*cj1*x10833))+(((-1.0)*r10*x10834*x10845))+((x10830*x10843))+((r10*x10831))+((r12*x10844))+((sj2*x10837))+((r11*x10836)));
evalcond[7]=((((-1.0)*r01*x10831*x10845))+(((-1.0)*cj2*x10839))+((r01*x10834))+(((-1.0)*cj0*x10828))+(((-1.0)*r02*x10825*x10838))+((r00*x10832))+((x10827*x10846)));
evalcond[8]=((((-1.0)*x10833*x10840))+((gconst5*x10830))+(((-1.0)*r12*x10825*x10838))+((r10*x10832))+(((-1.0)*x10833*x10839))+(((-1.0)*r11*x10831*x10845))+((x10835*x10846)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10848=((-1.0)*r10);
IkReal x10850 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x10850)==0){
continue;
}
IkReal x10849=pow(x10850,-0.5);
CheckValue<IkReal> x10851 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x10848),IKFAST_ATAN2_MAGTHRESH);
if(!x10851.valid){
continue;
}
IkReal gconst6=((-1.0)*(x10851.value));
IkReal gconst7=(r11*x10849);
IkReal gconst8=(x10848*x10849);
CheckValue<IkReal> x10852 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10852.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x10852.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x10853=((-1.0)*r10);
IkReal x10854=x10849;
CheckValue<IkReal> x10856 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(x10853),IKFAST_ATAN2_MAGTHRESH);
if(!x10856.valid){
continue;
}
IkReal x10855=((-1.0)*(x10856.value));
sj6=gconst7;
cj6=gconst8;
j6=x10855;
IkReal gconst6=x10855;
IkReal gconst7=(r11*x10854);
IkReal gconst8=(x10853*x10854);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10857=((1.0)*sj2);
IkReal x10858=((1.0)*gconst7);
CheckValue<IkReal> x10859 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x10857))+(((-1.0)*cj2*r02)))),IkReal((((gconst8*r10*sj2))+((cj2*gconst8*r00))+(((-1.0)*cj2*r01*x10858))+(((-1.0)*gconst7*r11*x10857)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10859.valid){
continue;
}
CheckValue<IkReal> x10860=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x10858))+(((-1.0)*gconst8*r21)))),-1);
if(!x10860.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10859.value)+(((1.5707963267949)*(x10860.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10861=IKsin(j5);
IkReal x10862=IKcos(j5);
IkReal x10863=(gconst8*sj4);
IkReal x10864=(cj4*gconst8);
IkReal x10865=(cj4*gconst7);
IkReal x10866=((1.0)*sj4);
IkReal x10867=(gconst7*sj4);
IkReal x10868=((1.0)*sj2);
IkReal x10869=((1.0)*cj2);
IkReal x10870=(cj1*sj0);
IkReal x10871=(cj0*sj1);
IkReal x10872=(sj0*sj1);
IkReal x10873=(r10*x10862);
IkReal x10874=((1.0)*cj0*cj1);
IkReal x10875=(r01*x10862);
IkReal x10876=((1.0)*x10862);
IkReal x10877=(gconst7*x10861);
IkReal x10878=(r22*x10861);
IkReal x10879=(cj4*x10861);
IkReal x10880=((1.0)*gconst8*x10861);
evalcond[0]=(((r21*x10877))+(((-1.0)*r22*x10876))+(((-1.0)*r20*x10880)));
evalcond[1]=(cj2+(((-1.0)*r12*x10876))+((r11*x10877))+(((-1.0)*r10*x10880)));
evalcond[2]=((((-1.0)*r00*x10880))+((r01*x10877))+(((-1.0)*r02*x10876))+(((-1.0)*x10868)));
evalcond[3]=((((-1.0)*r20*x10864*x10876))+((r21*x10863))+((cj4*x10878))+((r20*x10867))+((r21*x10862*x10865))+x10871+x10870);
evalcond[4]=(((r21*x10864))+(((-1.0)*x10866*x10878))+((r20*x10865))+(((-1.0)*gconst7*r21*x10862*x10866))+((r20*x10862*x10863))+(((-1.0)*x10874))+x10872);
evalcond[5]=(((r02*x10879))+(((-1.0)*r00*x10864*x10876))+((cj2*x10872))+(((-1.0)*cj0*cj1*x10869))+((r00*x10867))+((r01*x10863))+((x10865*x10875)));
evalcond[6]=((((-1.0)*x10864*x10873))+((r12*x10879))+((r11*x10863))+(((-1.0)*cj0*cj1*x10868))+((r10*x10867))+((sj2*x10872))+((r11*x10862*x10865)));
evalcond[7]=(((r00*x10862*x10863))+(((-1.0)*r02*x10861*x10866))+(((-1.0)*x10869*x10870))+(((-1.0)*x10869*x10871))+((r00*x10865))+((r01*x10864))+(((-1.0)*gconst7*x10866*x10875)));
evalcond[8]=(((r11*x10864))+(((-1.0)*x10868*x10870))+(((-1.0)*x10868*x10871))+((r10*x10865))+((x10863*x10873))+(((-1.0)*gconst7*r11*x10862*x10866))+(((-1.0)*r12*x10861*x10866)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10881=((1.0)*gconst8);
CheckValue<IkReal> x10882=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x10881))+(((-1.0)*gconst7*r00)))),-1);
if(!x10882.valid){
continue;
}
CheckValue<IkReal> x10883 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst7*r21))+(((-1.0)*cj2*r20*x10881)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10883.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x10882.value)))+(x10883.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x10884=IKsin(j5);
IkReal x10885=IKcos(j5);
IkReal x10886=(gconst8*sj4);
IkReal x10887=(cj4*gconst8);
IkReal x10888=(cj4*gconst7);
IkReal x10889=((1.0)*sj4);
IkReal x10890=(gconst7*sj4);
IkReal x10891=((1.0)*sj2);
IkReal x10892=((1.0)*cj2);
IkReal x10893=(cj1*sj0);
IkReal x10894=(cj0*sj1);
IkReal x10895=(sj0*sj1);
IkReal x10896=(r10*x10885);
IkReal x10897=((1.0)*cj0*cj1);
IkReal x10898=(r01*x10885);
IkReal x10899=((1.0)*x10885);
IkReal x10900=(gconst7*x10884);
IkReal x10901=(r22*x10884);
IkReal x10902=(cj4*x10884);
IkReal x10903=((1.0)*gconst8*x10884);
evalcond[0]=((((-1.0)*r20*x10903))+(((-1.0)*r22*x10899))+((r21*x10900)));
evalcond[1]=(cj2+(((-1.0)*r10*x10903))+(((-1.0)*r12*x10899))+((r11*x10900)));
evalcond[2]=((((-1.0)*r00*x10903))+(((-1.0)*r02*x10899))+(((-1.0)*x10891))+((r01*x10900)));
evalcond[3]=(((r20*x10890))+((r21*x10885*x10888))+((cj4*x10901))+((r21*x10886))+(((-1.0)*r20*x10887*x10899))+x10893+x10894);
evalcond[4]=((((-1.0)*x10897))+((r20*x10885*x10886))+((r21*x10887))+(((-1.0)*x10889*x10901))+((r20*x10888))+(((-1.0)*gconst7*r21*x10885*x10889))+x10895);
evalcond[5]=((((-1.0)*r00*x10887*x10899))+(((-1.0)*cj0*cj1*x10892))+((cj2*x10895))+((x10888*x10898))+((r02*x10902))+((r00*x10890))+((r01*x10886)));
evalcond[6]=(((r12*x10902))+((sj2*x10895))+(((-1.0)*x10887*x10896))+((r11*x10885*x10888))+(((-1.0)*cj0*cj1*x10891))+((r10*x10890))+((r11*x10886)));
evalcond[7]=(((r00*x10888))+(((-1.0)*gconst7*x10889*x10898))+(((-1.0)*x10892*x10893))+(((-1.0)*x10892*x10894))+(((-1.0)*r02*x10884*x10889))+((r00*x10885*x10886))+((r01*x10887)));
evalcond[8]=((((-1.0)*x10891*x10893))+(((-1.0)*x10891*x10894))+(((-1.0)*gconst7*r11*x10885*x10889))+(((-1.0)*r12*x10884*x10889))+((x10886*x10896))+((r11*x10887))+((r10*x10888)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x10904=((-1.0)*r11);
IkReal x10906 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x10906)==0){
continue;
}
IkReal x10905=pow(x10906,-0.5);
CheckValue<IkReal> x10907 = IKatan2WithCheck(IkReal(x10904),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10907.valid){
continue;
}
IkReal gconst9=((3.14159265358979)+(((-1.0)*(x10907.value))));
IkReal gconst10=(x10904*x10905);
IkReal gconst11=((1.0)*r10*x10905);
CheckValue<IkReal> x10908 = IKatan2WithCheck(IkReal(((-1.0)*r11)),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10908.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x10908.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x10909=((-1.0)*r11);
CheckValue<IkReal> x10912 = IKatan2WithCheck(IkReal(x10909),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10912.valid){
continue;
}
IkReal x10910=((1.0)*(x10912.value));
IkReal x10911=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x10910)));
IkReal gconst9=((3.14159265358979)+(((-1.0)*x10910)));
IkReal gconst10=(x10909*x10911);
IkReal gconst11=((1.0)*r10*x10911);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x10913=((-1.0)*r11);
CheckValue<IkReal> x10916 = IKatan2WithCheck(IkReal(x10913),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10916.valid){
continue;
}
IkReal x10914=((1.0)*(x10916.value));
IkReal x10915=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x10914)));
IkReal gconst9=((3.14159265358979)+(((-1.0)*x10914)));
IkReal gconst10=(x10913*x10915);
IkReal gconst11=((1.0)*r10*x10915);
IkReal x10917=r12*r12;
IkReal x10918=((1.0)*sj2);
IkReal x10919=(cj2*r02);
IkReal x10920=x10905;
j5eval[0]=((IKabs(((((-1.0)*r12*x10918))+(((-1.0)*x10919)))))+(IKabs((((sj2*x10917*x10920))+((r12*x10919*x10920))+(((-1.0)*x10918*x10920))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x10921=((-1.0)*r11);
CheckValue<IkReal> x10924 = IKatan2WithCheck(IkReal(x10921),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10924.valid){
continue;
}
IkReal x10922=((1.0)*(x10924.value));
IkReal x10923=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x10922)));
IkReal gconst9=((3.14159265358979)+(((-1.0)*x10922)));
IkReal gconst10=(x10921*x10923);
IkReal gconst11=((1.0)*r10*x10923);
IkReal x10925=((1.0)*cj4);
CheckValue<IkReal> x10928=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r12*r12)))),-1);
if(!x10928.valid){
continue;
}
IkReal x10926=x10928.value;
IkReal x10927=((((-1.0)*x10925*x10926*(r11*r11)*(r21*r21)))+(((-2.0)*cj4*r10*r11*r20*r21*x10926))+(((-1.0)*x10925*(r22*r22)))+(((-1.0)*x10925*x10926*(r10*r10)*(r20*r20))));
j5eval[0]=x10927;
j5eval[1]=IKsign(x10927);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x10929=((-1.0)*r11);
CheckValue<IkReal> x10932 = IKatan2WithCheck(IkReal(x10929),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10932.valid){
continue;
}
IkReal x10930=((1.0)*(x10932.value));
IkReal x10931=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x10930)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x10930)));
IkReal gconst10=(x10929*x10931);
IkReal gconst11=((1.0)*r10*x10931);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x10933=((-1.0)*r11);
CheckValue<IkReal> x10936 = IKatan2WithCheck(IkReal(x10933),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10936.valid){
continue;
}
IkReal x10934=((1.0)*(x10936.value));
IkReal x10935=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x10934)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x10934)));
IkReal gconst10=(x10933*x10935);
IkReal gconst11=((1.0)*r10*x10935);
IkReal x10937=r12*r12;
IkReal x10938=((1.0)*sj2);
IkReal x10939=(cj2*r02);
IkReal x10940=x10905;
j5eval[0]=((IKabs(((((-1.0)*r12*x10938))+(((-1.0)*x10939)))))+(IKabs((((r12*x10939*x10940))+((sj2*x10937*x10940))+(((-1.0)*x10938*x10940))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x10941=((-1.0)*r11);
CheckValue<IkReal> x10944 = IKatan2WithCheck(IkReal(x10941),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10944.valid){
continue;
}
IkReal x10942=((1.0)*(x10944.value));
IkReal x10943=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x10942)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x10942)));
IkReal gconst10=(x10941*x10943);
IkReal gconst11=((1.0)*r10*x10943);
IkReal x10945=r12*r12;
IkReal x10946=(cj0*cj1*r22);
IkReal x10947=(r22*sj0*sj1);
CheckValue<IkReal> x10951=IKPowWithIntegerCheck(((-1.0)+x10945),-1);
if(!x10951.valid){
continue;
}
IkReal x10948=x10951.value;
if((((1.0)+(((-1.0)*x10945)))) < -0.00001)
continue;
IkReal x10949=IKsqrt(((1.0)+(((-1.0)*x10945))));
IkReal x10950=(r12*x10948*x10949);
j5eval[0]=((IKabs(((((-1.0)*x10947*x10950))+((x10946*x10950)))))+(IKabs(((((-1.0)*x10946))+x10947))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x10952=((-1.0)*r11);
CheckValue<IkReal> x10955 = IKatan2WithCheck(IkReal(x10952),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10955.valid){
continue;
}
IkReal x10953=((1.0)*(x10955.value));
IkReal x10954=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x10953)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x10953)));
IkReal gconst10=(x10952*x10954);
IkReal gconst11=((1.0)*r10*x10954);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x10956=((-1.0)*r11);
CheckValue<IkReal> x10959 = IKatan2WithCheck(IkReal(x10956),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10959.valid){
continue;
}
IkReal x10957=((1.0)*(x10959.value));
IkReal x10958=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x10957)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x10957)));
IkReal gconst10=(x10956*x10958);
IkReal gconst11=((1.0)*r10*x10958);
IkReal x10960=((1.0)+(((-1.0)*(r12*r12))));
CheckValue<IkReal> x10964=IKPowWithIntegerCheck(x10960,-1);
if(!x10964.valid){
continue;
}
IkReal x10961=x10964.value;
IkReal x10962=((1.0)*x10961);
IkReal x10963=((((-1.0)*(r02*r02)))+(((-1.0)*x10962*(r01*r01)*(r11*r11)))+(((-1.0)*x10962*(r00*r00)*(r10*r10)))+(((-2.0)*r00*r01*r10*r11*x10961)));
j5eval[0]=x10963;
j5eval[1]=IKsign(x10963);
j5eval[2]=r02;
j5eval[3]=x10960;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x10965=((-1.0)*r11);
CheckValue<IkReal> x10968 = IKatan2WithCheck(IkReal(x10965),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x10968.valid){
continue;
}
IkReal x10966=((1.0)*(x10968.value));
IkReal x10967=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x10966)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x10966)));
IkReal gconst10=(x10965*x10967);
IkReal gconst11=((1.0)*r10*x10967);
IkReal x10969=r12*r12;
IkReal x10970=(cj0*cj1*r22);
IkReal x10971=(r22*sj0*sj1);
CheckValue<IkReal> x10975=IKPowWithIntegerCheck(((-1.0)+x10969),-1);
if(!x10975.valid){
continue;
}
IkReal x10972=x10975.value;
if((((1.0)+(((-1.0)*x10969)))) < -0.00001)
continue;
IkReal x10973=IKsqrt(((1.0)+(((-1.0)*x10969))));
IkReal x10974=(r12*x10972*x10973);
j5eval[0]=((IKabs(((((-1.0)*x10970))+x10971)))+(IKabs(((((-1.0)*x10971*x10974))+((x10970*x10974))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10976=(cj0*cj1);
IkReal x10977=(gconst11*r20);
IkReal x10978=(sj0*sj1);
IkReal x10979=(gconst10*r21);
CheckValue<IkReal> x10980 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x10976))+((r22*x10978)))),IkReal((((x10976*x10977))+(((-1.0)*x10977*x10978))+((x10978*x10979))+(((-1.0)*x10976*x10979)))),IKFAST_ATAN2_MAGTHRESH);
if(!x10980.valid){
continue;
}
CheckValue<IkReal> x10981=IKPowWithIntegerCheck(IKsign(((x10977*x10977)+(r22*r22)+(((-2.0)*x10977*x10979))+(x10979*x10979))),-1);
if(!x10981.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10980.value)+(((1.5707963267949)*(x10981.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10982=IKsin(j5);
IkReal x10983=IKcos(j5);
IkReal x10984=((1.0)*cj0);
IkReal x10985=(gconst11*r00);
IkReal x10986=(gconst11*r20);
IkReal x10987=(gconst11*r10);
IkReal x10988=((1.0)*x10982);
IkReal x10989=(gconst10*x10982);
IkReal x10990=((1.0)*x10983);
evalcond[0]=(((r21*x10989))+(((-1.0)*r22*x10990))+(((-1.0)*x10986*x10988)));
evalcond[1]=(((r11*x10989))+(((-1.0)*r12*x10990))+(((-1.0)*x10987*x10988)));
evalcond[2]=(((x10983*x10985))+(((-1.0)*r02*x10988))+(((-1.0)*gconst10*r01*x10990)));
evalcond[3]=((-1.0)+((r01*x10989))+(((-1.0)*x10985*x10988))+(((-1.0)*r02*x10990)));
evalcond[4]=((((-1.0)*gconst10*r21*x10990))+(((-1.0)*r22*x10988))+((x10983*x10986))+((sj0*sj1))+(((-1.0)*cj1*x10984)));
evalcond[5]=((((-1.0)*gconst10*r11*x10990))+(((-1.0)*sj1*x10984))+(((-1.0)*cj1*sj0))+((x10983*x10987))+(((-1.0)*r12*x10988)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x10991=(gconst11*r00);
IkReal x10992=(gconst10*r01);
CheckValue<IkReal> x10993 = IKatan2WithCheck(IkReal(((((-1.0)*x10992))+x10991)),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x10993.valid){
continue;
}
CheckValue<IkReal> x10994=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x10992*x10992)))+(((-1.0)*(r02*r02)))+(((-1.0)*(x10991*x10991)))+(((2.0)*x10991*x10992)))),-1);
if(!x10994.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x10993.value)+(((1.5707963267949)*(x10994.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x10995=IKsin(j5);
IkReal x10996=IKcos(j5);
IkReal x10997=((1.0)*cj0);
IkReal x10998=(gconst11*r00);
IkReal x10999=(gconst11*r20);
IkReal x11000=(gconst11*r10);
IkReal x11001=((1.0)*x10995);
IkReal x11002=(gconst10*x10995);
IkReal x11003=((1.0)*x10996);
evalcond[0]=((((-1.0)*r22*x11003))+(((-1.0)*x10999*x11001))+((r21*x11002)));
evalcond[1]=((((-1.0)*x11000*x11001))+(((-1.0)*r12*x11003))+((r11*x11002)));
evalcond[2]=((((-1.0)*r02*x11001))+(((-1.0)*gconst10*r01*x11003))+((x10996*x10998)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x11003))+(((-1.0)*x10998*x11001))+((r01*x11002)));
evalcond[4]=((((-1.0)*r22*x11001))+((x10996*x10999))+((sj0*sj1))+(((-1.0)*cj1*x10997))+(((-1.0)*gconst10*r21*x11003)));
evalcond[5]=((((-1.0)*gconst10*r11*x11003))+(((-1.0)*sj1*x10997))+(((-1.0)*cj1*sj0))+((x10996*x11000))+(((-1.0)*r12*x11001)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11004 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst10*r11))+(((-1.0)*gconst11*r10)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11004.valid){
continue;
}
CheckValue<IkReal> x11005=IKPowWithIntegerCheck(IKsign((((gconst11*r21))+((gconst10*r20)))),-1);
if(!x11005.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11004.value)+(((1.5707963267949)*(x11005.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11006=IKsin(j5);
IkReal x11007=IKcos(j5);
IkReal x11008=((1.0)*cj0);
IkReal x11009=(gconst11*r00);
IkReal x11010=(gconst11*r20);
IkReal x11011=(gconst11*r10);
IkReal x11012=((1.0)*x11006);
IkReal x11013=(gconst10*x11006);
IkReal x11014=((1.0)*x11007);
evalcond[0]=((((-1.0)*r22*x11014))+(((-1.0)*x11010*x11012))+((r21*x11013)));
evalcond[1]=((((-1.0)*x11011*x11012))+(((-1.0)*r12*x11014))+((r11*x11013)));
evalcond[2]=((((-1.0)*gconst10*r01*x11014))+((x11007*x11009))+(((-1.0)*r02*x11012)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x11014))+((r01*x11013))+(((-1.0)*x11009*x11012)));
evalcond[4]=((((-1.0)*gconst10*r21*x11014))+(((-1.0)*r22*x11012))+((x11007*x11010))+((sj0*sj1))+(((-1.0)*cj1*x11008)));
evalcond[5]=((((-1.0)*gconst10*r11*x11014))+(((-1.0)*cj1*sj0))+((x11007*x11011))+(((-1.0)*r12*x11012))+(((-1.0)*sj1*x11008)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x11015=((-1.0)*r11);
CheckValue<IkReal> x11018 = IKatan2WithCheck(IkReal(x11015),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11018.valid){
continue;
}
IkReal x11016=((1.0)*(x11018.value));
IkReal x11017=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11016)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11016)));
IkReal gconst10=(x11015*x11017);
IkReal gconst11=((1.0)*r10*x11017);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x11019=((-1.0)*r11);
CheckValue<IkReal> x11022 = IKatan2WithCheck(IkReal(x11019),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11022.valid){
continue;
}
IkReal x11020=((1.0)*(x11022.value));
IkReal x11021=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11020)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11020)));
IkReal gconst10=(x11019*x11021);
IkReal gconst11=((1.0)*r10*x11021);
j5eval[0]=r02;
j5eval[1]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x11023=((-1.0)*r11);
CheckValue<IkReal> x11026 = IKatan2WithCheck(IkReal(x11023),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11026.valid){
continue;
}
IkReal x11024=((1.0)*(x11026.value));
IkReal x11025=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11024)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11024)));
IkReal gconst10=(x11023*x11025);
IkReal gconst11=((1.0)*r10*x11025);
IkReal x11027=r12*r12;
CheckValue<IkReal> x11030=IKPowWithIntegerCheck(((1.0)+(((-1.0)*x11027))),-1);
if(!x11030.valid){
continue;
}
IkReal x11028=x11030.value;
IkReal x11029=((1.0)*x11028);
j5eval[0]=IKsign((x11027+((x11029*(r10*r10*r10*r10)))+(((2.0)*x11028*(r10*r10)*(r11*r11)))+((x11029*(r11*r11*r11*r11)))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11031=(gconst10*r11);
IkReal x11032=(cj1*sj0);
IkReal x11033=(cj0*sj1);
IkReal x11034=(gconst11*r10);
CheckValue<IkReal> x11035 = IKatan2WithCheck(IkReal((((r12*x11032))+((r12*x11033)))),IkReal(((((-1.0)*x11033*x11034))+(((-1.0)*x11032*x11034))+((x11031*x11033))+((x11031*x11032)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11035.valid){
continue;
}
CheckValue<IkReal> x11036=IKPowWithIntegerCheck(IKsign(((r12*r12)+(x11031*x11031)+(((-2.0)*x11031*x11034))+(x11034*x11034))),-1);
if(!x11036.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11035.value)+(((1.5707963267949)*(x11036.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11037=IKsin(j5);
IkReal x11038=IKcos(j5);
IkReal x11039=(gconst11*r00);
IkReal x11040=(gconst11*r20);
IkReal x11041=(gconst11*r10);
IkReal x11042=((1.0)*x11037);
IkReal x11043=(gconst10*x11037);
IkReal x11044=((1.0)*x11038);
evalcond[0]=((((-1.0)*r22*x11044))+((r21*x11043))+(((-1.0)*x11040*x11042)));
evalcond[1]=(((r11*x11043))+(((-1.0)*x11041*x11042))+(((-1.0)*r12*x11044)));
evalcond[2]=((((-1.0)*r02*x11042))+(((-1.0)*gconst10*r01*x11044))+((x11038*x11039)));
evalcond[3]=((1.0)+((r01*x11043))+(((-1.0)*r02*x11044))+(((-1.0)*x11039*x11042)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*r12*x11042))+((x11038*x11041))+((cj0*sj1))+(((-1.0)*gconst10*r11*x11044)));
evalcond[5]=((((-1.0)*r22*x11042))+((sj0*sj1))+(((-1.0)*gconst10*r21*x11044))+(((-1.0)*cj0*cj1))+((x11038*x11040)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11045=(gconst11*r00);
IkReal x11046=(gconst10*r01);
CheckValue<IkReal> x11047 = IKatan2WithCheck(IkReal((x11045+(((-1.0)*x11046)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x11047.valid){
continue;
}
CheckValue<IkReal> x11048=IKPowWithIntegerCheck(IKsign(((x11046*x11046)+(((-2.0)*x11045*x11046))+(x11045*x11045)+(r02*r02))),-1);
if(!x11048.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11047.value)+(((1.5707963267949)*(x11048.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11049=IKsin(j5);
IkReal x11050=IKcos(j5);
IkReal x11051=(gconst11*r00);
IkReal x11052=(gconst11*r20);
IkReal x11053=(gconst11*r10);
IkReal x11054=((1.0)*x11049);
IkReal x11055=(gconst10*x11049);
IkReal x11056=((1.0)*x11050);
evalcond[0]=((((-1.0)*r22*x11056))+(((-1.0)*x11052*x11054))+((r21*x11055)));
evalcond[1]=((((-1.0)*r12*x11056))+(((-1.0)*x11053*x11054))+((r11*x11055)));
evalcond[2]=(((x11050*x11051))+(((-1.0)*gconst10*r01*x11056))+(((-1.0)*r02*x11054)));
evalcond[3]=((1.0)+((r01*x11055))+(((-1.0)*x11051*x11054))+(((-1.0)*r02*x11056)));
evalcond[4]=((((-1.0)*gconst10*r11*x11056))+(((-1.0)*r12*x11054))+((cj1*sj0))+((x11050*x11053))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r22*x11054))+((sj0*sj1))+((x11050*x11052))+(((-1.0)*gconst10*r21*x11056))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11057=((1.0)*gconst11);
CheckValue<IkReal> x11058 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst10*r11))+(((-1.0)*r10*x11057)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11058.valid){
continue;
}
CheckValue<IkReal> x11059=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst10*r20))+(((-1.0)*r21*x11057)))),-1);
if(!x11059.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11058.value)+(((1.5707963267949)*(x11059.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11060=IKsin(j5);
IkReal x11061=IKcos(j5);
IkReal x11062=(gconst11*r00);
IkReal x11063=(gconst11*r20);
IkReal x11064=(gconst11*r10);
IkReal x11065=((1.0)*x11060);
IkReal x11066=(gconst10*x11060);
IkReal x11067=((1.0)*x11061);
evalcond[0]=((((-1.0)*r22*x11067))+((r21*x11066))+(((-1.0)*x11063*x11065)));
evalcond[1]=((((-1.0)*r12*x11067))+((r11*x11066))+(((-1.0)*x11064*x11065)));
evalcond[2]=((((-1.0)*gconst10*r01*x11067))+(((-1.0)*r02*x11065))+((x11061*x11062)));
evalcond[3]=((1.0)+(((-1.0)*r02*x11067))+((r01*x11066))+(((-1.0)*x11062*x11065)));
evalcond[4]=((((-1.0)*gconst10*r11*x11067))+((cj1*sj0))+((x11061*x11064))+(((-1.0)*r12*x11065))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r22*x11065))+(((-1.0)*gconst10*r21*x11067))+((sj0*sj1))+((x11061*x11063))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x11068=((-1.0)*r11);
IkReal x11069=((-1.0)*r10);
CheckValue<IkReal> x11071 = IKatan2WithCheck(IkReal(x11068),IkReal(x11069),IKFAST_ATAN2_MAGTHRESH);
if(!x11071.valid){
continue;
}
IkReal x11070=((1.0)*(x11071.value));
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11070)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x11069);
rxp1_1=(px*r21);
rxp1_2=(px*x11068);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11070)));
IkReal gconst10=x11068;
IkReal gconst11=((1.0)*r10);
j5eval[0]=((((1.0)*r10*r20))+(((1.0)*r11*r21)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x11073=IKPowWithIntegerCheck((((gconst11*r20))+(((-1.0)*gconst10*r21))),-1);
if(!x11073.valid){
continue;
}
IkReal x11072=x11073.value;
cj5array[0]=(((cj0*cj1*x11072))+(((-1.0)*sj0*sj1*x11072)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x11074=IKsin(j5);
IkReal x11075=(gconst10*x11074);
IkReal x11076=((1.0)*gconst11*x11074);
evalcond[0]=((-1.0)*r02*x11074);
evalcond[1]=((((-1.0)*r20*x11076))+((r21*x11075)));
evalcond[2]=(((r11*x11075))+(((-1.0)*r10*x11076)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(r22);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11077=((1.0)*gconst11);
CheckValue<IkReal> x11078 = IKatan2WithCheck(IkReal((((cj2*r02))+((r12*sj2)))),IkReal(((((-1.0)*r10*sj2*x11077))+((cj2*gconst10*r01))+(((-1.0)*cj2*r00*x11077))+((gconst10*r11*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11078.valid){
continue;
}
CheckValue<IkReal> x11079=IKPowWithIntegerCheck(IKsign((((gconst11*r21))+((gconst10*r20)))),-1);
if(!x11079.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11078.value)+(((1.5707963267949)*(x11079.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11080=IKsin(j5);
IkReal x11081=IKcos(j5);
IkReal x11082=((1.0)*cj0);
IkReal x11083=(gconst11*r00);
IkReal x11084=((1.0)*sj2);
IkReal x11085=(gconst11*r20);
IkReal x11086=(cj1*sj0);
IkReal x11087=(gconst11*r10);
IkReal x11088=((1.0)*x11080);
IkReal x11089=(gconst10*x11080);
IkReal x11090=((1.0)*x11081);
evalcond[0]=(((r21*x11089))+(((-1.0)*x11085*x11088)));
evalcond[1]=((((-1.0)*r12*x11090))+cj2+(((-1.0)*x11087*x11088))+((r11*x11089)));
evalcond[2]=((((-1.0)*cj1*x11082))+(((-1.0)*gconst10*r21*x11090))+((x11081*x11085))+((sj0*sj1)));
evalcond[3]=(((r01*x11089))+(((-1.0)*r02*x11090))+(((-1.0)*x11084))+(((-1.0)*x11083*x11088)));
evalcond[4]=((((-1.0)*r02*x11088))+(((-1.0)*gconst10*r01*x11090))+(((-1.0)*cj2*sj1*x11082))+((x11081*x11083))+(((-1.0)*cj2*x11086)));
evalcond[5]=((((-1.0)*gconst10*r11*x11090))+(((-1.0)*sj1*sj2*x11082))+((x11081*x11087))+(((-1.0)*r12*x11088))+(((-1.0)*x11084*x11086)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11091=(cj0*cj1);
IkReal x11092=(gconst11*r20);
IkReal x11093=(sj0*sj1);
IkReal x11094=(gconst10*r21);
CheckValue<IkReal> x11095 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x11091))+((r22*x11093)))),IkReal((((x11093*x11094))+(((-1.0)*x11091*x11094))+(((-1.0)*x11092*x11093))+((x11091*x11092)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11095.valid){
continue;
}
CheckValue<IkReal> x11096=IKPowWithIntegerCheck(IKsign(((x11094*x11094)+(r22*r22)+(((-2.0)*x11092*x11094))+(x11092*x11092))),-1);
if(!x11096.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11095.value)+(((1.5707963267949)*(x11096.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11097=IKsin(j5);
IkReal x11098=IKcos(j5);
IkReal x11099=((1.0)*cj0);
IkReal x11100=(gconst10*r11);
IkReal x11101=(gconst10*r21);
IkReal x11102=((1.0)*sj2);
IkReal x11103=(cj1*sj0);
IkReal x11104=(gconst10*r01);
IkReal x11105=((1.0)*x11098);
IkReal x11106=((1.0)*x11097);
IkReal x11107=(gconst11*x11098);
IkReal x11108=(gconst11*x11106);
evalcond[0]=((((-1.0)*r22*x11105))+((x11097*x11101))+(((-1.0)*r20*x11108)));
evalcond[1]=((((-1.0)*r10*x11108))+cj2+(((-1.0)*r12*x11105))+((x11097*x11100)));
evalcond[2]=((((-1.0)*r02*x11105))+(((-1.0)*r00*x11108))+(((-1.0)*x11102))+((x11097*x11104)));
evalcond[3]=((((-1.0)*cj1*x11099))+(((-1.0)*x11101*x11105))+((sj0*sj1))+(((-1.0)*r22*x11106))+((r20*x11107)));
evalcond[4]=((((-1.0)*cj2*x11103))+(((-1.0)*x11104*x11105))+(((-1.0)*r02*x11106))+(((-1.0)*cj2*sj1*x11099))+((r00*x11107)));
evalcond[5]=((((-1.0)*x11102*x11103))+((r10*x11107))+(((-1.0)*x11100*x11105))+(((-1.0)*r12*x11106))+(((-1.0)*sj1*sj2*x11099)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11109=((1.0)*gconst10);
CheckValue<IkReal> x11110 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal(((((-1.0)*cj2*r01*x11109))+((cj2*gconst11*r00))+(((-1.0)*r11*sj2*x11109))+((gconst11*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11110.valid){
continue;
}
CheckValue<IkReal> x11111=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst11*r21))+(((-1.0)*r20*x11109)))),-1);
if(!x11111.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11110.value)+(((1.5707963267949)*(x11111.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11112=IKsin(j5);
IkReal x11113=IKcos(j5);
IkReal x11114=((1.0)*cj0);
IkReal x11115=(gconst10*r11);
IkReal x11116=(gconst10*r21);
IkReal x11117=((1.0)*sj2);
IkReal x11118=(cj1*sj0);
IkReal x11119=(gconst10*r01);
IkReal x11120=((1.0)*x11113);
IkReal x11121=((1.0)*x11112);
IkReal x11122=(gconst11*x11113);
IkReal x11123=(gconst11*x11121);
evalcond[0]=((((-1.0)*r20*x11123))+((x11112*x11116))+(((-1.0)*r22*x11120)));
evalcond[1]=((((-1.0)*r12*x11120))+cj2+((x11112*x11115))+(((-1.0)*r10*x11123)));
evalcond[2]=(((x11112*x11119))+(((-1.0)*r00*x11123))+(((-1.0)*r02*x11120))+(((-1.0)*x11117)));
evalcond[3]=((((-1.0)*cj1*x11114))+(((-1.0)*x11116*x11120))+((sj0*sj1))+(((-1.0)*r22*x11121))+((r20*x11122)));
evalcond[4]=((((-1.0)*cj2*x11118))+(((-1.0)*x11119*x11120))+(((-1.0)*r02*x11121))+(((-1.0)*cj2*sj1*x11114))+((r00*x11122)));
evalcond[5]=((((-1.0)*r12*x11121))+((r10*x11122))+(((-1.0)*x11115*x11120))+(((-1.0)*x11117*x11118))+(((-1.0)*sj1*sj2*x11114)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11124=((1.0)*gconst11);
CheckValue<IkReal> x11125 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst10*r21))+(((-1.0)*cj2*r20*x11124)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11125.valid){
continue;
}
CheckValue<IkReal> x11126=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst10*r00))+(((-1.0)*r01*x11124)))),-1);
if(!x11126.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11125.value)+(((1.5707963267949)*(x11126.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11127=IKsin(j5);
IkReal x11128=IKcos(j5);
IkReal x11129=((1.0)*cj0);
IkReal x11130=(gconst10*r11);
IkReal x11131=(gconst10*r21);
IkReal x11132=((1.0)*sj2);
IkReal x11133=(cj1*sj0);
IkReal x11134=(gconst10*r01);
IkReal x11135=((1.0)*x11128);
IkReal x11136=((1.0)*x11127);
IkReal x11137=(gconst11*x11128);
IkReal x11138=(gconst11*x11136);
evalcond[0]=((((-1.0)*r20*x11138))+((x11127*x11131))+(((-1.0)*r22*x11135)));
evalcond[1]=((((-1.0)*r10*x11138))+cj2+((x11127*x11130))+(((-1.0)*r12*x11135)));
evalcond[2]=(((x11127*x11134))+(((-1.0)*r02*x11135))+(((-1.0)*r00*x11138))+(((-1.0)*x11132)));
evalcond[3]=((((-1.0)*x11131*x11135))+(((-1.0)*cj1*x11129))+((sj0*sj1))+(((-1.0)*r22*x11136))+((r20*x11137)));
evalcond[4]=((((-1.0)*cj2*x11133))+(((-1.0)*x11134*x11135))+(((-1.0)*r02*x11136))+(((-1.0)*cj2*sj1*x11129))+((r00*x11137)));
evalcond[5]=((((-1.0)*x11132*x11133))+(((-1.0)*sj1*sj2*x11129))+((r10*x11137))+(((-1.0)*r12*x11136))+(((-1.0)*x11130*x11135)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x11139=((-1.0)*r11);
CheckValue<IkReal> x11142 = IKatan2WithCheck(IkReal(x11139),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11142.valid){
continue;
}
IkReal x11140=((1.0)*(x11142.value));
IkReal x11141=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11140)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11140)));
IkReal gconst10=(x11139*x11141);
IkReal gconst11=((1.0)*r10*x11141);
j5eval[0]=cj2;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x11143=((-1.0)*r11);
CheckValue<IkReal> x11146 = IKatan2WithCheck(IkReal(x11143),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11146.valid){
continue;
}
IkReal x11144=((1.0)*(x11146.value));
IkReal x11145=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11144)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11144)));
IkReal gconst10=(x11143*x11145);
IkReal gconst11=((1.0)*r10*x11145);
IkReal x11147=r12*r12;
IkReal x11148=((1.0)*sj2);
IkReal x11149=(cj2*r02);
IkReal x11150=x10905;
j5eval[0]=((IKabs(((((-1.0)*x11149))+(((-1.0)*r12*x11148)))))+(IKabs((((sj2*x11147*x11150))+((r12*x11149*x11150))+(((-1.0)*x11148*x11150))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x11151=((-1.0)*r11);
CheckValue<IkReal> x11154 = IKatan2WithCheck(IkReal(x11151),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11154.valid){
continue;
}
IkReal x11152=((1.0)*(x11154.value));
IkReal x11153=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11152)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11152)));
IkReal gconst10=(x11151*x11153);
IkReal gconst11=((1.0)*r10*x11153);
IkReal x11155=r12*r12;
IkReal x11156=((1.0)+(((-1.0)*x11155)));
IkReal x11157=(cj0*cj1*r22);
IkReal x11158=(r22*sj0*sj1);
CheckValue<IkReal> x11165=IKPowWithIntegerCheck(x11156,-1);
if(!x11165.valid){
continue;
}
IkReal x11159=x11165.value;
CheckValue<IkReal> x11166=IKPowWithIntegerCheck(((-1.0)+x11155),-1);
if(!x11166.valid){
continue;
}
IkReal x11160=x11166.value;
IkReal x11161=((1.0)*x11159);
if((x11156) < -0.00001)
continue;
IkReal x11162=IKsqrt(x11156);
IkReal x11163=(r12*x11160*x11162);
IkReal x11164=((((-1.0)*x11161*(r11*r11)*(r21*r21)))+(((-1.0)*x11161*(r10*r10)*(r20*r20)))+(((-1.0)*(r22*r22)))+(((-2.0)*r10*r11*r20*r21*x11159)));
j5eval[0]=x11164;
j5eval[1]=IKsign(x11164);
j5eval[2]=((IKabs(((((-1.0)*x11157))+x11158)))+(IKabs((((x11157*x11163))+(((-1.0)*x11158*x11163))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x11167=((-1.0)*r11);
CheckValue<IkReal> x11170 = IKatan2WithCheck(IkReal(x11167),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11170.valid){
continue;
}
IkReal x11168=((1.0)*(x11170.value));
IkReal x11169=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11168)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11168)));
IkReal gconst10=(x11167*x11169);
IkReal gconst11=((1.0)*r10*x11169);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x11171=((-1.0)*r11);
CheckValue<IkReal> x11174 = IKatan2WithCheck(IkReal(x11171),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11174.valid){
continue;
}
IkReal x11172=((1.0)*(x11174.value));
IkReal x11173=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11172)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11172)));
IkReal gconst10=(x11171*x11173);
IkReal gconst11=((1.0)*r10*x11173);
j5eval[0]=r02;
j5eval[1]=((1.0)+(((-1.0)*(r12*r12))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x11175=((-1.0)*r11);
CheckValue<IkReal> x11178 = IKatan2WithCheck(IkReal(x11175),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11178.valid){
continue;
}
IkReal x11176=((1.0)*(x11178.value));
IkReal x11177=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11176)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11176)));
IkReal gconst10=(x11175*x11177);
IkReal gconst11=((1.0)*r10*x11177);
IkReal x11179=(cj0*sj1);
IkReal x11180=(cj1*sj0);
IkReal x11181=x10905;
IkReal x11182=(r02*r12*x11181);
j5eval[0]=((IKabs((((x11180*x11182))+((x11179*x11182)))))+(IKabs((((r02*x11180))+((r02*x11179))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11183=((1.0)*gconst10);
IkReal x11184=(cj0*sj1);
IkReal x11185=(gconst11*r00);
IkReal x11186=(cj1*sj0);
CheckValue<IkReal> x11187 = IKatan2WithCheck(IkReal(((((-1.0)*r01*x11183*x11186))+(((-1.0)*r01*x11183*x11184))+((x11185*x11186))+((x11184*x11185)))),IkReal((((r02*x11184))+((r02*x11186)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11187.valid){
continue;
}
CheckValue<IkReal> x11188=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x11183))+(((-1.0)*gconst11*r21)))),-1);
if(!x11188.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11187.value)+(((1.5707963267949)*(x11188.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11189=IKcos(j5);
IkReal x11190=IKsin(j5);
IkReal x11191=((1.0)*cj0);
IkReal x11192=(gconst10*r11);
IkReal x11193=(gconst10*r21);
IkReal x11194=(gconst10*r01);
IkReal x11195=((1.0)*x11189);
IkReal x11196=((1.0)*gconst11*x11190);
evalcond[0]=((((-1.0)*gconst11*r00*x11195))+((r02*x11190))+((x11189*x11194)));
evalcond[1]=(((x11190*x11193))+(((-1.0)*r22*x11195))+(((-1.0)*r20*x11196)));
evalcond[2]=(((x11190*x11192))+(((-1.0)*r12*x11195))+(((-1.0)*r10*x11196)));
evalcond[3]=((-1.0)+((x11190*x11194))+(((-1.0)*r02*x11195))+(((-1.0)*r00*x11196)));
evalcond[4]=(((r22*x11190))+((sj0*sj1))+(((-1.0)*gconst11*r20*x11195))+(((-1.0)*cj1*x11191))+((x11189*x11193)));
evalcond[5]=((((-1.0)*sj1*x11191))+(((-1.0)*gconst11*r10*x11195))+((r12*x11190))+(((-1.0)*cj1*sj0))+((x11189*x11192)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11197=(gconst10*r01);
IkReal x11198=(gconst11*r00);
CheckValue<IkReal> x11199=IKPowWithIntegerCheck(IKsign(((((-2.0)*x11197*x11198))+(x11198*x11198)+(r02*r02)+(x11197*x11197))),-1);
if(!x11199.valid){
continue;
}
CheckValue<IkReal> x11200 = IKatan2WithCheck(IkReal((x11197+(((-1.0)*x11198)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x11200.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11199.value)))+(x11200.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11201=IKcos(j5);
IkReal x11202=IKsin(j5);
IkReal x11203=((1.0)*cj0);
IkReal x11204=(gconst10*r11);
IkReal x11205=(gconst10*r21);
IkReal x11206=(gconst10*r01);
IkReal x11207=((1.0)*x11201);
IkReal x11208=((1.0)*gconst11*x11202);
evalcond[0]=(((r02*x11202))+((x11201*x11206))+(((-1.0)*gconst11*r00*x11207)));
evalcond[1]=((((-1.0)*r22*x11207))+(((-1.0)*r20*x11208))+((x11202*x11205)));
evalcond[2]=((((-1.0)*r10*x11208))+((x11202*x11204))+(((-1.0)*r12*x11207)));
evalcond[3]=((-1.0)+((x11202*x11206))+(((-1.0)*r00*x11208))+(((-1.0)*r02*x11207)));
evalcond[4]=(((x11201*x11205))+(((-1.0)*gconst11*r20*x11207))+(((-1.0)*cj1*x11203))+((sj0*sj1))+((r22*x11202)));
evalcond[5]=(((x11201*x11204))+(((-1.0)*cj1*sj0))+(((-1.0)*gconst11*r10*x11207))+((r12*x11202))+(((-1.0)*sj1*x11203)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11209 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst10*r11))+(((-1.0)*gconst11*r10)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11209.valid){
continue;
}
CheckValue<IkReal> x11210=IKPowWithIntegerCheck(IKsign((((gconst11*r21))+((gconst10*r20)))),-1);
if(!x11210.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11209.value)+(((1.5707963267949)*(x11210.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11211=IKcos(j5);
IkReal x11212=IKsin(j5);
IkReal x11213=((1.0)*cj0);
IkReal x11214=(gconst10*r11);
IkReal x11215=(gconst10*r21);
IkReal x11216=(gconst10*r01);
IkReal x11217=((1.0)*x11211);
IkReal x11218=((1.0)*gconst11*x11212);
evalcond[0]=(((r02*x11212))+((x11211*x11216))+(((-1.0)*gconst11*r00*x11217)));
evalcond[1]=(((x11212*x11215))+(((-1.0)*r20*x11218))+(((-1.0)*r22*x11217)));
evalcond[2]=(((x11212*x11214))+(((-1.0)*r12*x11217))+(((-1.0)*r10*x11218)));
evalcond[3]=((-1.0)+((x11212*x11216))+(((-1.0)*r00*x11218))+(((-1.0)*r02*x11217)));
evalcond[4]=((((-1.0)*gconst11*r20*x11217))+((x11211*x11215))+((sj0*sj1))+(((-1.0)*cj1*x11213))+((r22*x11212)));
evalcond[5]=((((-1.0)*cj1*sj0))+((x11211*x11214))+(((-1.0)*gconst11*r10*x11217))+((r12*x11212))+(((-1.0)*sj1*x11213)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x11219=((-1.0)*r11);
CheckValue<IkReal> x11222 = IKatan2WithCheck(IkReal(x11219),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11222.valid){
continue;
}
IkReal x11220=((1.0)*(x11222.value));
IkReal x11221=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11220)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11220)));
IkReal gconst10=(x11219*x11221);
IkReal gconst11=((1.0)*r10*x11221);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x11223=((-1.0)*r11);
CheckValue<IkReal> x11226 = IKatan2WithCheck(IkReal(x11223),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11226.valid){
continue;
}
IkReal x11224=((1.0)*(x11226.value));
IkReal x11225=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11224)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11224)));
IkReal gconst10=(x11223*x11225);
IkReal gconst11=((1.0)*r10*x11225);
IkReal x11227=((1.0)+(((-1.0)*(r12*r12))));
CheckValue<IkReal> x11231=IKPowWithIntegerCheck(x11227,-1);
if(!x11231.valid){
continue;
}
IkReal x11228=x11231.value;
IkReal x11229=((1.0)*x11228);
IkReal x11230=((((-1.0)*x11229*(r00*r00)*(r10*r10)))+(((-1.0)*(r02*r02)))+(((-1.0)*x11229*(r01*r01)*(r11*r11)))+(((-2.0)*r00*r01*r10*r11*x11228)));
j5eval[0]=x11230;
j5eval[1]=r02;
j5eval[2]=x11227;
j5eval[3]=IKsign(x11230);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x11232=((-1.0)*r11);
CheckValue<IkReal> x11235 = IKatan2WithCheck(IkReal(x11232),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11235.valid){
continue;
}
IkReal x11233=((1.0)*(x11235.value));
IkReal x11234=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11233)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11233)));
IkReal gconst10=(x11232*x11234);
IkReal gconst11=((1.0)*r10*x11234);
IkReal x11236=r12*r12;
CheckValue<IkReal> x11242=IKPowWithIntegerCheck(((-1.0)+x11236),-1);
if(!x11242.valid){
continue;
}
IkReal x11237=x11242.value;
IkReal x11238=((1.0)*cj1*r02*sj0);
IkReal x11239=((1.0)*cj0*r02*sj1);
if((((1.0)+(((-1.0)*x11236)))) < -0.00001)
continue;
IkReal x11240=IKsqrt(((1.0)+(((-1.0)*x11236))));
IkReal x11241=(r12*x11237*x11240);
j5eval[0]=((IKabs(((((-1.0)*x11239))+(((-1.0)*x11238)))))+(IKabs(((((-1.0)*x11239*x11241))+(((-1.0)*x11238*x11241))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11243=(gconst10*r01);
IkReal x11244=(cj0*sj1);
IkReal x11245=(cj1*sj0);
IkReal x11246=((1.0)*r02);
IkReal x11247=((1.0)*gconst11*r00);
CheckValue<IkReal> x11248=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst10*r20))+(((-1.0)*gconst11*r21)))),-1);
if(!x11248.valid){
continue;
}
CheckValue<IkReal> x11249 = IKatan2WithCheck(IkReal(((((-1.0)*x11244*x11247))+((x11243*x11244))+((x11243*x11245))+(((-1.0)*x11245*x11247)))),IkReal(((((-1.0)*x11244*x11246))+(((-1.0)*x11245*x11246)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11249.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11248.value)))+(x11249.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11250=IKcos(j5);
IkReal x11251=IKsin(j5);
IkReal x11252=(gconst10*r11);
IkReal x11253=(gconst10*r21);
IkReal x11254=(gconst10*r01);
IkReal x11255=((1.0)*x11250);
IkReal x11256=((1.0)*gconst11*x11251);
evalcond[0]=(((r02*x11251))+((x11250*x11254))+(((-1.0)*gconst11*r00*x11255)));
evalcond[1]=((((-1.0)*r20*x11256))+(((-1.0)*r22*x11255))+((x11251*x11253)));
evalcond[2]=((((-1.0)*r10*x11256))+((x11251*x11252))+(((-1.0)*r12*x11255)));
evalcond[3]=((1.0)+(((-1.0)*r02*x11255))+(((-1.0)*r00*x11256))+((x11251*x11254)));
evalcond[4]=(((cj1*sj0))+((x11250*x11252))+((r12*x11251))+(((-1.0)*gconst11*r10*x11255))+((cj0*sj1)));
evalcond[5]=(((r22*x11251))+((x11250*x11253))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*gconst11*r20*x11255)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11257=(gconst10*r01);
IkReal x11258=(gconst11*r00);
CheckValue<IkReal> x11259=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x11258*x11258)))+(((-1.0)*(r02*r02)))+(((-1.0)*(x11257*x11257)))+(((2.0)*x11257*x11258)))),-1);
if(!x11259.valid){
continue;
}
CheckValue<IkReal> x11260 = IKatan2WithCheck(IkReal(((((-1.0)*x11258))+x11257)),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x11260.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11259.value)))+(x11260.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11261=IKcos(j5);
IkReal x11262=IKsin(j5);
IkReal x11263=(gconst10*r11);
IkReal x11264=(gconst10*r21);
IkReal x11265=(gconst10*r01);
IkReal x11266=((1.0)*x11261);
IkReal x11267=((1.0)*gconst11*x11262);
evalcond[0]=(((x11261*x11265))+(((-1.0)*gconst11*r00*x11266))+((r02*x11262)));
evalcond[1]=(((x11262*x11264))+(((-1.0)*r22*x11266))+(((-1.0)*r20*x11267)));
evalcond[2]=((((-1.0)*r10*x11267))+((x11262*x11263))+(((-1.0)*r12*x11266)));
evalcond[3]=((1.0)+(((-1.0)*r02*x11266))+((x11262*x11265))+(((-1.0)*r00*x11267)));
evalcond[4]=(((x11261*x11263))+((cj1*sj0))+(((-1.0)*gconst11*r10*x11266))+((cj0*sj1))+((r12*x11262)));
evalcond[5]=(((x11261*x11264))+((sj0*sj1))+((r22*x11262))+(((-1.0)*gconst11*r20*x11266))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11268=((1.0)*gconst11);
CheckValue<IkReal> x11269=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst10*r20))+(((-1.0)*r21*x11268)))),-1);
if(!x11269.valid){
continue;
}
CheckValue<IkReal> x11270 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst10*r11))+(((-1.0)*r10*x11268)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11270.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11269.value)))+(x11270.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11271=IKcos(j5);
IkReal x11272=IKsin(j5);
IkReal x11273=(gconst10*r11);
IkReal x11274=(gconst10*r21);
IkReal x11275=(gconst10*r01);
IkReal x11276=((1.0)*x11271);
IkReal x11277=((1.0)*gconst11*x11272);
evalcond[0]=((((-1.0)*gconst11*r00*x11276))+((r02*x11272))+((x11271*x11275)));
evalcond[1]=((((-1.0)*r22*x11276))+(((-1.0)*r20*x11277))+((x11272*x11274)));
evalcond[2]=((((-1.0)*r12*x11276))+(((-1.0)*r10*x11277))+((x11272*x11273)));
evalcond[3]=((1.0)+(((-1.0)*r00*x11277))+(((-1.0)*r02*x11276))+((x11272*x11275)));
evalcond[4]=(((r12*x11272))+((cj1*sj0))+(((-1.0)*gconst11*r10*x11276))+((cj0*sj1))+((x11271*x11273)));
evalcond[5]=(((r22*x11272))+((sj0*sj1))+(((-1.0)*gconst11*r20*x11276))+(((-1.0)*cj0*cj1))+((x11271*x11274)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x11278=((-1.0)*r11);
IkReal x11279=((-1.0)*r10);
CheckValue<IkReal> x11281 = IKatan2WithCheck(IkReal(x11278),IkReal(x11279),IKFAST_ATAN2_MAGTHRESH);
if(!x11281.valid){
continue;
}
IkReal x11280=((1.0)*(x11281.value));
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11280)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x11279);
rxp1_1=(px*r21);
rxp1_2=(px*x11278);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11280)));
IkReal gconst10=x11278;
IkReal gconst11=((1.0)*r10);
j5eval[0]=((((-1.0)*r11*r21))+(((-1.0)*r10*r20)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x11283=IKPowWithIntegerCheck((((gconst10*r21))+(((-1.0)*gconst11*r20))),-1);
if(!x11283.valid){
continue;
}
IkReal x11282=x11283.value;
cj5array[0]=((((-1.0)*sj0*sj1*x11282))+((cj0*cj1*x11282)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x11284=IKsin(j5);
IkReal x11285=(gconst10*x11284);
IkReal x11286=((1.0)*gconst11*x11284);
evalcond[0]=(r02*x11284);
evalcond[1]=(((r21*x11285))+(((-1.0)*r20*x11286)));
evalcond[2]=((((-1.0)*r10*x11286))+((r11*x11285)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(r22);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11287=((1.0)*gconst11);
CheckValue<IkReal> x11288 = IKatan2WithCheck(IkReal((((cj2*r02))+((r12*sj2)))),IkReal(((((-1.0)*r10*sj2*x11287))+((cj2*gconst10*r01))+((gconst10*r11*sj2))+(((-1.0)*cj2*r00*x11287)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11288.valid){
continue;
}
CheckValue<IkReal> x11289=IKPowWithIntegerCheck(IKsign((((gconst11*r21))+((gconst10*r20)))),-1);
if(!x11289.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11288.value)+(((1.5707963267949)*(x11289.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11290=IKsin(j5);
IkReal x11291=IKcos(j5);
IkReal x11292=((1.0)*cj0);
IkReal x11293=(gconst10*r11);
IkReal x11294=(gconst10*r21);
IkReal x11295=((1.0)*sj2);
IkReal x11296=(gconst10*r01);
IkReal x11297=(cj1*sj0);
IkReal x11298=((1.0)*x11291);
IkReal x11299=((1.0)*gconst11*x11290);
evalcond[0]=((((-1.0)*r20*x11299))+((x11290*x11294)));
evalcond[1]=(cj2+(((-1.0)*r10*x11299))+((x11290*x11293))+(((-1.0)*r12*x11298)));
evalcond[2]=((((-1.0)*cj1*x11292))+((x11291*x11294))+(((-1.0)*gconst11*r20*x11298))+((sj0*sj1)));
evalcond[3]=((((-1.0)*r02*x11298))+(((-1.0)*r00*x11299))+(((-1.0)*x11295))+((x11290*x11296)));
evalcond[4]=((((-1.0)*gconst11*r00*x11298))+((r02*x11290))+((x11291*x11296))+(((-1.0)*cj2*sj1*x11292))+(((-1.0)*cj2*x11297)));
evalcond[5]=((((-1.0)*gconst11*r10*x11298))+(((-1.0)*sj1*sj2*x11292))+(((-1.0)*x11295*x11297))+((x11291*x11293))+((r12*x11290)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11300=(cj0*cj1);
IkReal x11301=(gconst11*r20);
IkReal x11302=(sj0*sj1);
IkReal x11303=(gconst10*r21);
CheckValue<IkReal> x11304 = IKatan2WithCheck(IkReal(((((-1.0)*r22*x11300))+((r22*x11302)))),IkReal(((((-1.0)*x11300*x11303))+((x11300*x11301))+(((-1.0)*x11301*x11302))+((x11302*x11303)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11304.valid){
continue;
}
CheckValue<IkReal> x11305=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x11303*x11303)))+(((-1.0)*(x11301*x11301)))+(((2.0)*x11301*x11303))+(((-1.0)*(r22*r22))))),-1);
if(!x11305.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11304.value)+(((1.5707963267949)*(x11305.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11306=IKsin(j5);
IkReal x11307=IKcos(j5);
IkReal x11308=((1.0)*cj0);
IkReal x11309=(gconst10*r11);
IkReal x11310=(gconst10*r21);
IkReal x11311=((1.0)*sj2);
IkReal x11312=(gconst10*r01);
IkReal x11313=(cj1*sj0);
IkReal x11314=((1.0)*x11307);
IkReal x11315=((1.0)*gconst11*x11306);
evalcond[0]=((((-1.0)*r22*x11314))+(((-1.0)*r20*x11315))+((x11306*x11310)));
evalcond[1]=(((x11306*x11309))+cj2+(((-1.0)*r12*x11314))+(((-1.0)*r10*x11315)));
evalcond[2]=((((-1.0)*r02*x11314))+((x11306*x11312))+(((-1.0)*r00*x11315))+(((-1.0)*x11311)));
evalcond[3]=(((x11307*x11310))+((sj0*sj1))+(((-1.0)*gconst11*r20*x11314))+((r22*x11306))+(((-1.0)*cj1*x11308)));
evalcond[4]=(((r02*x11306))+((x11307*x11312))+(((-1.0)*cj2*x11313))+(((-1.0)*gconst11*r00*x11314))+(((-1.0)*cj2*sj1*x11308)));
evalcond[5]=((((-1.0)*x11311*x11313))+((r12*x11306))+(((-1.0)*gconst11*r10*x11314))+(((-1.0)*sj1*sj2*x11308))+((x11307*x11309)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11316=((1.0)*gconst10);
CheckValue<IkReal> x11317 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj2*gconst11*r00))+(((-1.0)*cj2*r01*x11316))+((gconst11*r10*sj2))+(((-1.0)*r11*sj2*x11316)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11317.valid){
continue;
}
CheckValue<IkReal> x11318=IKPowWithIntegerCheck(IKsign(((((-1.0)*r20*x11316))+(((-1.0)*gconst11*r21)))),-1);
if(!x11318.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11317.value)+(((1.5707963267949)*(x11318.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11319=IKsin(j5);
IkReal x11320=IKcos(j5);
IkReal x11321=((1.0)*cj0);
IkReal x11322=(gconst10*r11);
IkReal x11323=(gconst10*r21);
IkReal x11324=((1.0)*sj2);
IkReal x11325=(gconst10*r01);
IkReal x11326=(cj1*sj0);
IkReal x11327=((1.0)*x11320);
IkReal x11328=((1.0)*gconst11*x11319);
evalcond[0]=((((-1.0)*r22*x11327))+(((-1.0)*r20*x11328))+((x11319*x11323)));
evalcond[1]=(cj2+(((-1.0)*r12*x11327))+(((-1.0)*r10*x11328))+((x11319*x11322)));
evalcond[2]=((((-1.0)*r02*x11327))+((x11319*x11325))+(((-1.0)*r00*x11328))+(((-1.0)*x11324)));
evalcond[3]=(((x11320*x11323))+((r22*x11319))+((sj0*sj1))+(((-1.0)*cj1*x11321))+(((-1.0)*gconst11*r20*x11327)));
evalcond[4]=(((x11320*x11325))+((r02*x11319))+(((-1.0)*cj2*x11326))+(((-1.0)*gconst11*r00*x11327))+(((-1.0)*cj2*sj1*x11321)));
evalcond[5]=(((x11320*x11322))+(((-1.0)*sj1*sj2*x11321))+(((-1.0)*gconst11*r10*x11327))+((r12*x11319))+(((-1.0)*x11324*x11326)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11329=((1.0)*gconst11);
CheckValue<IkReal> x11330 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst10*r21))+(((-1.0)*cj2*r20*x11329)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11330.valid){
continue;
}
CheckValue<IkReal> x11331=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst10*r00))+(((-1.0)*r01*x11329)))),-1);
if(!x11331.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11330.value)+(((1.5707963267949)*(x11331.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11332=IKsin(j5);
IkReal x11333=IKcos(j5);
IkReal x11334=((1.0)*cj0);
IkReal x11335=(gconst10*r11);
IkReal x11336=(gconst10*r21);
IkReal x11337=((1.0)*sj2);
IkReal x11338=(gconst10*r01);
IkReal x11339=(cj1*sj0);
IkReal x11340=((1.0)*x11333);
IkReal x11341=((1.0)*gconst11*x11332);
evalcond[0]=(((x11332*x11336))+(((-1.0)*r20*x11341))+(((-1.0)*r22*x11340)));
evalcond[1]=((((-1.0)*r10*x11341))+((x11332*x11335))+cj2+(((-1.0)*r12*x11340)));
evalcond[2]=(((x11332*x11338))+(((-1.0)*r00*x11341))+(((-1.0)*x11337))+(((-1.0)*r02*x11340)));
evalcond[3]=((((-1.0)*gconst11*r20*x11340))+(((-1.0)*cj1*x11334))+((sj0*sj1))+((x11333*x11336))+((r22*x11332)));
evalcond[4]=((((-1.0)*gconst11*r00*x11340))+(((-1.0)*cj2*x11339))+(((-1.0)*cj2*sj1*x11334))+((x11333*x11338))+((r02*x11332)));
evalcond[5]=((((-1.0)*sj1*sj2*x11334))+((r12*x11332))+(((-1.0)*gconst11*r10*x11340))+(((-1.0)*x11337*x11339))+((x11333*x11335)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x11342=((-1.0)*r11);
CheckValue<IkReal> x11345 = IKatan2WithCheck(IkReal(x11342),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11345.valid){
continue;
}
IkReal x11343=((1.0)*(x11345.value));
IkReal x11344=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11343)));
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11343)));
IkReal gconst10=(x11342*x11344);
IkReal gconst11=((1.0)*r10*x11344);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11346=gconst10*gconst10;
IkReal x11347=gconst11*gconst11;
IkReal x11348=(cj4*r01);
IkReal x11349=(r01*sj4);
IkReal x11350=(cj4*r00);
IkReal x11351=(r00*sj4);
IkReal x11352=(gconst10*gconst11);
IkReal x11353=((1.0)*r20);
IkReal x11354=(r20*x11347);
IkReal x11355=(r21*x11346);
CheckValue<IkReal> x11356 = IKatan2WithCheck(IkReal((((gconst10*r22*x11350))+((gconst11*r22*x11348)))),IkReal(((((-1.0)*x11350*x11352*x11353))+((r21*x11348*x11352))+((x11350*x11355))+(((-1.0)*x11347*x11348*x11353)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11356.valid){
continue;
}
CheckValue<IkReal> x11357=IKPowWithIntegerCheck(IKsign((((x11349*x11355))+(((-1.0)*x11349*x11352*x11353))+(((-1.0)*r21*x11351*x11352))+((x11351*x11354))+((r02*r22*sj4)))),-1);
if(!x11357.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11356.value)+(((1.5707963267949)*(x11357.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11358=IKsin(j5);
IkReal x11359=IKcos(j5);
IkReal x11360=(sj0*sj1);
IkReal x11361=(cj4*gconst11);
IkReal x11362=((1.0)*cj0);
IkReal x11363=(gconst11*r00);
IkReal x11364=((1.0)*sj4);
IkReal x11365=(gconst11*sj4);
IkReal x11366=(gconst11*r20);
IkReal x11367=(gconst10*sj4);
IkReal x11368=(cj4*gconst10);
IkReal x11369=(gconst11*r10);
IkReal x11370=(cj1*sj0);
IkReal x11371=(cj1*x11362);
IkReal x11372=(r22*x11358);
IkReal x11373=((1.0)*x11358);
IkReal x11374=(sj4*x11359);
IkReal x11375=(cj4*x11358);
IkReal x11376=(gconst10*x11359);
IkReal x11377=(gconst10*x11358);
IkReal x11378=((1.0)*x11359);
evalcond[0]=(((r21*x11377))+(((-1.0)*r22*x11378))+(((-1.0)*x11366*x11373)));
evalcond[1]=((((-1.0)*x11369*x11373))+((r11*x11377))+(((-1.0)*r12*x11378)));
evalcond[2]=((-1.0)+((r01*x11377))+(((-1.0)*x11363*x11373))+(((-1.0)*r02*x11378)));
evalcond[3]=(((r01*x11365))+((r00*x11367))+((r01*x11359*x11368))+(((-1.0)*r00*x11361*x11378))+((r02*x11375)));
evalcond[4]=(((r01*x11361))+((r00*x11368))+(((-1.0)*r01*x11364*x11376))+((x11363*x11374))+(((-1.0)*r02*x11358*x11364)));
evalcond[5]=(((r21*x11365))+x11370+((r21*x11359*x11368))+((cj4*x11372))+(((-1.0)*r20*x11361*x11378))+((cj0*sj1))+((r20*x11367)));
evalcond[6]=((((-1.0)*x11371))+(((-1.0)*r10*x11361*x11378))+x11360+((r11*x11359*x11368))+((r12*x11375))+((r10*x11367))+((r11*x11365)));
evalcond[7]=(((r21*x11361))+(((-1.0)*x11371))+x11360+((r20*x11359*x11365))+(((-1.0)*r21*x11364*x11376))+(((-1.0)*x11364*x11372))+((r20*x11368)));
evalcond[8]=((((-1.0)*x11370))+((r10*x11359*x11365))+((r10*x11368))+(((-1.0)*r12*x11358*x11364))+((r11*x11361))+(((-1.0)*r11*x11364*x11376))+(((-1.0)*sj1*x11362)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11379 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst10*r11))+(((-1.0)*gconst11*r10)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11379.valid){
continue;
}
CheckValue<IkReal> x11380=IKPowWithIntegerCheck(IKsign((((gconst11*r21))+((gconst10*r20)))),-1);
if(!x11380.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11379.value)+(((1.5707963267949)*(x11380.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11381=IKsin(j5);
IkReal x11382=IKcos(j5);
IkReal x11383=(sj0*sj1);
IkReal x11384=(cj4*gconst11);
IkReal x11385=((1.0)*cj0);
IkReal x11386=(gconst11*r00);
IkReal x11387=((1.0)*sj4);
IkReal x11388=(gconst11*sj4);
IkReal x11389=(gconst11*r20);
IkReal x11390=(gconst10*sj4);
IkReal x11391=(cj4*gconst10);
IkReal x11392=(gconst11*r10);
IkReal x11393=(cj1*sj0);
IkReal x11394=(cj1*x11385);
IkReal x11395=(r22*x11381);
IkReal x11396=((1.0)*x11381);
IkReal x11397=(sj4*x11382);
IkReal x11398=(cj4*x11381);
IkReal x11399=(gconst10*x11382);
IkReal x11400=(gconst10*x11381);
IkReal x11401=((1.0)*x11382);
evalcond[0]=(((r21*x11400))+(((-1.0)*r22*x11401))+(((-1.0)*x11389*x11396)));
evalcond[1]=((((-1.0)*x11392*x11396))+((r11*x11400))+(((-1.0)*r12*x11401)));
evalcond[2]=((-1.0)+(((-1.0)*r02*x11401))+(((-1.0)*x11386*x11396))+((r01*x11400)));
evalcond[3]=(((r02*x11398))+((r00*x11390))+((r01*x11382*x11391))+(((-1.0)*r00*x11384*x11401))+((r01*x11388)));
evalcond[4]=(((r00*x11391))+(((-1.0)*r01*x11387*x11399))+(((-1.0)*r02*x11381*x11387))+((x11386*x11397))+((r01*x11384)));
evalcond[5]=(((r21*x11382*x11391))+((r20*x11390))+x11393+((cj4*x11395))+((r21*x11388))+(((-1.0)*r20*x11384*x11401))+((cj0*sj1)));
evalcond[6]=(((r11*x11388))+(((-1.0)*r10*x11384*x11401))+(((-1.0)*x11394))+x11383+((r12*x11398))+((r11*x11382*x11391))+((r10*x11390)));
evalcond[7]=(((r20*x11391))+(((-1.0)*x11394))+x11383+((r21*x11384))+(((-1.0)*x11387*x11395))+(((-1.0)*r21*x11387*x11399))+((r20*x11382*x11388)));
evalcond[8]=(((r11*x11384))+((r10*x11382*x11388))+(((-1.0)*sj1*x11385))+(((-1.0)*r12*x11381*x11387))+(((-1.0)*r11*x11387*x11399))+(((-1.0)*x11393))+((r10*x11391)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x11402=((-1.0)*r11);
CheckValue<IkReal> x11405 = IKatan2WithCheck(IkReal(x11402),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11405.valid){
continue;
}
IkReal x11403=((1.0)*(x11405.value));
IkReal x11404=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11403)));
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11403)));
IkReal gconst10=(x11402*x11404);
IkReal gconst11=((1.0)*r10*x11404);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11406=gconst10*gconst10;
IkReal x11407=gconst11*gconst11;
IkReal x11408=(cj4*r01);
IkReal x11409=(r01*sj4);
IkReal x11410=(cj4*r00);
IkReal x11411=(r00*sj4);
IkReal x11412=(gconst10*gconst11);
IkReal x11413=((1.0)*r20);
IkReal x11414=(r20*x11407);
IkReal x11415=(r21*x11406);
CheckValue<IkReal> x11416 = IKatan2WithCheck(IkReal((((gconst10*r22*x11410))+((gconst11*r22*x11408)))),IkReal(((((-1.0)*x11410*x11412*x11413))+(((-1.0)*x11407*x11408*x11413))+((x11410*x11415))+((r21*x11408*x11412)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11416.valid){
continue;
}
CheckValue<IkReal> x11417=IKPowWithIntegerCheck(IKsign((((x11411*x11414))+(((-1.0)*r21*x11411*x11412))+(((-1.0)*x11409*x11412*x11413))+((x11409*x11415))+((r02*r22*sj4)))),-1);
if(!x11417.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11416.value)+(((1.5707963267949)*(x11417.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11418=IKsin(j5);
IkReal x11419=IKcos(j5);
IkReal x11420=(cj1*sj0);
IkReal x11421=(cj0*sj1);
IkReal x11422=(cj4*gconst11);
IkReal x11423=(cj0*cj1);
IkReal x11424=(sj0*sj1);
IkReal x11425=(gconst11*r00);
IkReal x11426=((1.0)*sj4);
IkReal x11427=(gconst11*sj4);
IkReal x11428=(gconst11*r20);
IkReal x11429=(gconst10*sj4);
IkReal x11430=(cj4*gconst10);
IkReal x11431=(gconst11*r10);
IkReal x11432=(r22*x11418);
IkReal x11433=((1.0)*x11418);
IkReal x11434=(sj4*x11419);
IkReal x11435=(cj4*x11418);
IkReal x11436=(gconst10*x11419);
IkReal x11437=(gconst10*x11418);
IkReal x11438=((1.0)*x11419);
IkReal x11439=(x11421+x11420);
evalcond[0]=((((-1.0)*x11428*x11433))+((r21*x11437))+(((-1.0)*r22*x11438)));
evalcond[1]=((((-1.0)*r12*x11438))+((r11*x11437))+(((-1.0)*x11431*x11433)));
evalcond[2]=((1.0)+(((-1.0)*x11425*x11433))+(((-1.0)*r02*x11438))+((r01*x11437)));
evalcond[3]=(((r02*x11435))+((r01*x11419*x11430))+(((-1.0)*r00*x11422*x11438))+((r01*x11427))+((r00*x11429)));
evalcond[4]=((((-1.0)*r02*x11418*x11426))+((x11425*x11434))+(((-1.0)*r01*x11426*x11436))+((r01*x11422))+((r00*x11430)));
evalcond[5]=((((-1.0)*r20*x11422*x11438))+((r20*x11429))+x11439+((r21*x11419*x11430))+((r21*x11427))+((cj4*x11432)));
evalcond[6]=(x11423+((r10*x11429))+((r11*x11419*x11430))+(((-1.0)*x11424))+((r11*x11427))+((r12*x11435))+(((-1.0)*r10*x11422*x11438)));
evalcond[7]=(x11439+((r10*x11419*x11427))+(((-1.0)*r12*x11418*x11426))+((r10*x11430))+(((-1.0)*r11*x11426*x11436))+((r11*x11422)));
evalcond[8]=(((r20*x11430))+x11424+(((-1.0)*x11426*x11432))+((r20*x11419*x11427))+((r21*x11422))+(((-1.0)*x11423))+(((-1.0)*r21*x11426*x11436)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11440=((1.0)*gconst11);
CheckValue<IkReal> x11441=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x11440))+(((-1.0)*gconst10*r20)))),-1);
if(!x11441.valid){
continue;
}
CheckValue<IkReal> x11442 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst10*r11))+(((-1.0)*r10*x11440)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11442.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11441.value)))+(x11442.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11443=IKsin(j5);
IkReal x11444=IKcos(j5);
IkReal x11445=(cj1*sj0);
IkReal x11446=(cj0*sj1);
IkReal x11447=(cj4*gconst11);
IkReal x11448=(cj0*cj1);
IkReal x11449=(sj0*sj1);
IkReal x11450=(gconst11*r00);
IkReal x11451=((1.0)*sj4);
IkReal x11452=(gconst11*sj4);
IkReal x11453=(gconst11*r20);
IkReal x11454=(gconst10*sj4);
IkReal x11455=(cj4*gconst10);
IkReal x11456=(gconst11*r10);
IkReal x11457=(r22*x11443);
IkReal x11458=((1.0)*x11443);
IkReal x11459=(sj4*x11444);
IkReal x11460=(cj4*x11443);
IkReal x11461=(gconst10*x11444);
IkReal x11462=(gconst10*x11443);
IkReal x11463=((1.0)*x11444);
IkReal x11464=(x11445+x11446);
evalcond[0]=((((-1.0)*x11453*x11458))+(((-1.0)*r22*x11463))+((r21*x11462)));
evalcond[1]=((((-1.0)*r12*x11463))+((r11*x11462))+(((-1.0)*x11456*x11458)));
evalcond[2]=((1.0)+((r01*x11462))+(((-1.0)*x11450*x11458))+(((-1.0)*r02*x11463)));
evalcond[3]=((((-1.0)*r00*x11447*x11463))+((r01*x11452))+((r00*x11454))+((r01*x11444*x11455))+((r02*x11460)));
evalcond[4]=((((-1.0)*r02*x11443*x11451))+((x11450*x11459))+((r00*x11455))+(((-1.0)*r01*x11451*x11461))+((r01*x11447)));
evalcond[5]=(((cj4*x11457))+x11464+((r20*x11454))+(((-1.0)*r20*x11447*x11463))+((r21*x11452))+((r21*x11444*x11455)));
evalcond[6]=(((r11*x11444*x11455))+((r10*x11454))+(((-1.0)*x11449))+((r12*x11460))+x11448+((r11*x11452))+(((-1.0)*r10*x11447*x11463)));
evalcond[7]=((((-1.0)*r11*x11451*x11461))+((r10*x11455))+x11464+((r11*x11447))+((r10*x11444*x11452))+(((-1.0)*r12*x11443*x11451)));
evalcond[8]=((((-1.0)*x11448))+x11449+((r20*x11455))+(((-1.0)*r21*x11451*x11461))+((r20*x11444*x11452))+((r21*x11447))+(((-1.0)*x11451*x11457)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x11465=((-1.0)*r11);
IkReal x11466=((-1.0)*r10);
CheckValue<IkReal> x11468 = IKatan2WithCheck(IkReal(x11465),IkReal(x11466),IKFAST_ATAN2_MAGTHRESH);
if(!x11468.valid){
continue;
}
IkReal x11467=((1.0)*(x11468.value));
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11467)));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x11466);
rxp1_1=(px*r21);
rxp1_2=(px*x11465);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11467)));
IkReal gconst10=x11465;
IkReal gconst11=((1.0)*r10);
j5eval[0]=-1.0;
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x11469=((-1.0)*r11);
IkReal x11470=((-1.0)*r10);
CheckValue<IkReal> x11472 = IKatan2WithCheck(IkReal(x11469),IkReal(x11470),IKFAST_ATAN2_MAGTHRESH);
if(!x11472.valid){
continue;
}
IkReal x11471=((1.0)*(x11472.value));
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11471)));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x11470);
rxp1_1=(px*r21);
rxp1_2=(px*x11469);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11471)));
IkReal gconst10=x11469;
IkReal gconst11=((1.0)*r10);
IkReal x11473=((1.0)*cj4);
j5eval[0]=-1.0;
j5eval[1]=((((-1.0)*r10*r20*x11473))+(((-1.0)*r11*r21*x11473)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x11474=((-1.0)*r11);
IkReal x11475=((-1.0)*r10);
CheckValue<IkReal> x11477 = IKatan2WithCheck(IkReal(x11474),IkReal(x11475),IKFAST_ATAN2_MAGTHRESH);
if(!x11477.valid){
continue;
}
IkReal x11476=((1.0)*(x11477.value));
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11476)));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x11475);
rxp1_1=(px*r21);
rxp1_2=(px*x11474);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11476)));
IkReal gconst10=x11474;
IkReal gconst11=((1.0)*r10);
j5eval[0]=cj4;
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j5]

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11479=IKPowWithIntegerCheck(r02,-1);
if(!x11479.valid){
continue;
}
IkReal x11478=x11479.value;
CheckValue<IkReal> x11480=IKPowWithIntegerCheck(cj4,-1);
if(!x11480.valid){
continue;
}
if( IKabs((x11478*(x11480.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*x11478)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x11478*(x11480.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))))+IKsqr(((-1.0)*sj2*x11478))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((x11478*(x11480.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))), ((-1.0)*sj2*x11478));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11481=IKsin(j5);
IkReal x11482=IKcos(j5);
IkReal x11483=(cj2*sj0);
IkReal x11484=(cj4*gconst11);
IkReal x11485=((1.0)*sj2);
IkReal x11486=(gconst11*sj4);
IkReal x11487=((1.0)*r20);
IkReal x11488=(gconst10*sj4);
IkReal x11489=(cj4*gconst10);
IkReal x11490=(cj0*sj1);
IkReal x11491=(sj0*sj1);
IkReal x11492=(cj1*sj0);
IkReal x11493=((1.0)*cj0*cj1);
IkReal x11494=(r02*x11481);
IkReal x11495=(gconst10*x11481);
IkReal x11496=(gconst11*x11481);
IkReal x11497=(r10*x11482);
IkReal x11498=((1.0)*x11482*x11488);
evalcond[0]=((((-1.0)*r02*x11482))+(((-1.0)*x11485)));
evalcond[1]=(((r21*x11495))+(((-1.0)*x11487*x11496)));
evalcond[2]=(cj2+((r11*x11495))+(((-1.0)*r10*x11496)));
evalcond[3]=((((-1.0)*cj2*x11493))+((sj1*x11483))+((cj4*x11494)));
evalcond[4]=((((-1.0)*cj1*x11483))+(((-1.0)*cj2*x11490))+(((-1.0)*sj4*x11494)));
evalcond[5]=(((r20*x11488))+x11492+x11490+((r21*x11482*x11489))+(((-1.0)*x11482*x11484*x11487))+((r21*x11486)));
evalcond[6]=((((-1.0)*x11493))+((r20*x11489))+x11491+((r20*x11482*x11486))+((r21*x11484))+(((-1.0)*r21*x11498)));
evalcond[7]=(((sj2*x11491))+(((-1.0)*x11484*x11497))+((r11*x11486))+(((-1.0)*cj0*cj1*x11485))+((r10*x11488))+((r11*x11482*x11489)));
evalcond[8]=((((-1.0)*x11485*x11492))+(((-1.0)*x11485*x11490))+((r11*x11484))+(((-1.0)*r11*x11498))+((r10*x11489))+((x11486*x11497)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11499=((1.0)*gconst11);
CheckValue<IkReal> x11500=IKPowWithIntegerCheck((((gconst10*r11))+(((-1.0)*r10*x11499))),-1);
if(!x11500.valid){
continue;
}
CheckValue<IkReal> x11501=IKPowWithIntegerCheck(((((-1.0)*cj4*r20*x11499))+((cj4*gconst10*r21))),-1);
if(!x11501.valid){
continue;
}
if( IKabs(((-1.0)*cj2*(x11500.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11501.value)*(((((-1.0)*r21*sj4*x11499))+(((-1.0)*gconst10*r20*sj4))+(((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*cj2*(x11500.value)))+IKsqr(((x11501.value)*(((((-1.0)*r21*sj4*x11499))+(((-1.0)*gconst10*r20*sj4))+(((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*cj2*(x11500.value)), ((x11501.value)*(((((-1.0)*r21*sj4*x11499))+(((-1.0)*gconst10*r20*sj4))+(((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11502=IKsin(j5);
IkReal x11503=IKcos(j5);
IkReal x11504=(cj2*sj0);
IkReal x11505=(cj4*gconst11);
IkReal x11506=((1.0)*sj2);
IkReal x11507=(gconst11*sj4);
IkReal x11508=((1.0)*r20);
IkReal x11509=(gconst10*sj4);
IkReal x11510=(cj4*gconst10);
IkReal x11511=(cj0*sj1);
IkReal x11512=(sj0*sj1);
IkReal x11513=(cj1*sj0);
IkReal x11514=((1.0)*cj0*cj1);
IkReal x11515=(r02*x11502);
IkReal x11516=(gconst10*x11502);
IkReal x11517=(gconst11*x11502);
IkReal x11518=(r10*x11503);
IkReal x11519=((1.0)*x11503*x11509);
evalcond[0]=((((-1.0)*x11506))+(((-1.0)*r02*x11503)));
evalcond[1]=((((-1.0)*x11508*x11517))+((r21*x11516)));
evalcond[2]=(cj2+(((-1.0)*r10*x11517))+((r11*x11516)));
evalcond[3]=(((cj4*x11515))+(((-1.0)*cj2*x11514))+((sj1*x11504)));
evalcond[4]=((((-1.0)*cj1*x11504))+(((-1.0)*cj2*x11511))+(((-1.0)*sj4*x11515)));
evalcond[5]=(x11513+x11511+((r21*x11507))+(((-1.0)*x11503*x11505*x11508))+((r21*x11503*x11510))+((r20*x11509)));
evalcond[6]=(x11512+((r20*x11510))+((r21*x11505))+(((-1.0)*r21*x11519))+(((-1.0)*x11514))+((r20*x11503*x11507)));
evalcond[7]=((((-1.0)*x11505*x11518))+((r11*x11503*x11510))+((r11*x11507))+((r10*x11509))+(((-1.0)*cj0*cj1*x11506))+((sj2*x11512)));
evalcond[8]=(((r11*x11505))+((x11507*x11518))+(((-1.0)*r11*x11519))+((r10*x11510))+(((-1.0)*x11506*x11513))+(((-1.0)*x11506*x11511)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11520=IKPowWithIntegerCheck((((gconst10*r11))+(((-1.0)*gconst11*r10))),-1);
if(!x11520.valid){
continue;
}
CheckValue<IkReal> x11521=IKPowWithIntegerCheck(r02,-1);
if(!x11521.valid){
continue;
}
if( IKabs(((-1.0)*cj2*(x11520.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*(x11521.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*cj2*(x11520.value)))+IKsqr(((-1.0)*sj2*(x11521.value)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*cj2*(x11520.value)), ((-1.0)*sj2*(x11521.value)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11522=IKsin(j5);
IkReal x11523=IKcos(j5);
IkReal x11524=(cj2*sj0);
IkReal x11525=(cj4*gconst11);
IkReal x11526=((1.0)*sj2);
IkReal x11527=(gconst11*sj4);
IkReal x11528=((1.0)*r20);
IkReal x11529=(gconst10*sj4);
IkReal x11530=(cj4*gconst10);
IkReal x11531=(cj0*sj1);
IkReal x11532=(sj0*sj1);
IkReal x11533=(cj1*sj0);
IkReal x11534=((1.0)*cj0*cj1);
IkReal x11535=(r02*x11522);
IkReal x11536=(gconst10*x11522);
IkReal x11537=(gconst11*x11522);
IkReal x11538=(r10*x11523);
IkReal x11539=((1.0)*x11523*x11529);
evalcond[0]=((((-1.0)*r02*x11523))+(((-1.0)*x11526)));
evalcond[1]=(((r21*x11536))+(((-1.0)*x11528*x11537)));
evalcond[2]=(cj2+((r11*x11536))+(((-1.0)*r10*x11537)));
evalcond[3]=(((sj1*x11524))+(((-1.0)*cj2*x11534))+((cj4*x11535)));
evalcond[4]=((((-1.0)*cj1*x11524))+(((-1.0)*cj2*x11531))+(((-1.0)*sj4*x11535)));
evalcond[5]=(((r21*x11523*x11530))+x11531+x11533+(((-1.0)*x11523*x11525*x11528))+((r21*x11527))+((r20*x11529)));
evalcond[6]=(x11532+((r21*x11525))+((r20*x11523*x11527))+((r20*x11530))+(((-1.0)*r21*x11539))+(((-1.0)*x11534)));
evalcond[7]=((((-1.0)*x11525*x11538))+((sj2*x11532))+((r11*x11527))+((r10*x11529))+((r11*x11523*x11530))+(((-1.0)*cj0*cj1*x11526)));
evalcond[8]=((((-1.0)*r11*x11539))+((r11*x11525))+((x11527*x11538))+((r10*x11530))+(((-1.0)*x11526*x11533))+(((-1.0)*x11526*x11531)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(r22);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x11540=((-1.0)*r11);
CheckValue<IkReal> x11543 = IKatan2WithCheck(IkReal(x11540),IkReal(((-1.0)*r10)),IKFAST_ATAN2_MAGTHRESH);
if(!x11543.valid){
continue;
}
IkReal x11541=((1.0)*(x11543.value));
IkReal x11542=x10905;
sj6=gconst10;
cj6=gconst11;
j6=((3.14159265)+(((-1.0)*x11541)));
r22=0;
npz=(((px*r02))+((py*r12)));
rxp2_0=(pz*r12);
rxp2_1=((-1.0)*pz*r02);
IkReal gconst9=((3.14159265358979)+(((-1.0)*x11541)));
IkReal gconst10=(x11540*x11542);
IkReal gconst11=((1.0)*r10*x11542);
IkReal x11544=r12*r12;
IkReal x11545=((1.0)*sj2);
IkReal x11546=(cj2*r02);
IkReal x11547=x10905;
j5eval[0]=((IKabs(((((-1.0)*x11546))+(((-1.0)*r12*x11545)))))+(IKabs((((sj2*x11544*x11547))+((r12*x11546*x11547))+(((-1.0)*x11545*x11547))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11548=(cj0*cj1);
IkReal x11549=(gconst10*r20);
IkReal x11550=(gconst11*r21);
IkReal x11551=(gconst11*sj4);
IkReal x11552=((1.0)*r20);
IkReal x11553=((1.0)*cj4);
IkReal x11554=(r12*x11553);
IkReal x11555=(gconst10*r21*sj4);
IkReal x11556=((1.0)*sj0*sj1);
CheckValue<IkReal> x11557=IKPowWithIntegerCheck(((((-1.0)*gconst10*r11*x11555))+((gconst10*r10*sj4*x11550))+((r11*x11549*x11551))+(((-1.0)*gconst11*r10*x11551*x11552))),-1);
if(!x11557.valid){
continue;
}
CheckValue<IkReal> x11558=IKPowWithIntegerCheck((((r20*x11551))+(((-1.0)*x11555))),-1);
if(!x11558.valid){
continue;
}
if( IKabs(((x11557.value)*(((((-1.0)*cj2*x11551*x11552))+((cj2*x11555))+(((-1.0)*r12*x11556))+(((-1.0)*x11550*x11554))+((r12*x11548))+(((-1.0)*x11549*x11554)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11558.value)*((x11548+(((-1.0)*x11556))+(((-1.0)*x11550*x11553))+(((-1.0)*x11549*x11553)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x11557.value)*(((((-1.0)*cj2*x11551*x11552))+((cj2*x11555))+(((-1.0)*r12*x11556))+(((-1.0)*x11550*x11554))+((r12*x11548))+(((-1.0)*x11549*x11554))))))+IKsqr(((x11558.value)*((x11548+(((-1.0)*x11556))+(((-1.0)*x11550*x11553))+(((-1.0)*x11549*x11553))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x11557.value)*(((((-1.0)*cj2*x11551*x11552))+((cj2*x11555))+(((-1.0)*r12*x11556))+(((-1.0)*x11550*x11554))+((r12*x11548))+(((-1.0)*x11549*x11554))))), ((x11558.value)*((x11548+(((-1.0)*x11556))+(((-1.0)*x11550*x11553))+(((-1.0)*x11549*x11553))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11559=IKsin(j5);
IkReal x11560=IKcos(j5);
IkReal x11561=(cj4*gconst11);
IkReal x11562=(cj2*sj0);
IkReal x11563=(gconst11*r00);
IkReal x11564=(cj4*gconst10);
IkReal x11565=((1.0)*gconst10);
IkReal x11566=((1.0)*sj2);
IkReal x11567=(gconst11*sj4);
IkReal x11568=(gconst11*r20);
IkReal x11569=(gconst10*sj4);
IkReal x11570=(cj0*sj1);
IkReal x11571=(gconst11*r10);
IkReal x11572=(sj0*sj1);
IkReal x11573=(cj1*sj0);
IkReal x11574=((1.0)*cj0*cj1);
IkReal x11575=((1.0)*x11559);
IkReal x11576=(sj4*x11560);
IkReal x11577=(cj4*x11559);
IkReal x11578=(gconst10*x11559);
IkReal x11579=((1.0)*x11560);
evalcond[0]=(((r21*x11578))+(((-1.0)*x11568*x11575)));
evalcond[1]=(cj2+(((-1.0)*x11571*x11575))+((r11*x11578))+(((-1.0)*r12*x11579)));
evalcond[2]=(((r01*x11578))+(((-1.0)*x11566))+(((-1.0)*r02*x11579))+(((-1.0)*x11563*x11575)));
evalcond[3]=(x11570+x11573+((r21*x11560*x11564))+((r20*x11569))+(((-1.0)*r20*x11561*x11579))+((r21*x11567)));
evalcond[4]=(x11572+((r20*x11564))+((r20*x11560*x11567))+(((-1.0)*x11574))+((r21*x11561))+(((-1.0)*r21*x11565*x11576)));
evalcond[5]=(((sj1*x11562))+((r00*x11569))+((r01*x11567))+(((-1.0)*r00*x11561*x11579))+(((-1.0)*cj2*x11574))+((r01*x11560*x11564))+((r02*x11577)));
evalcond[6]=(((sj2*x11572))+(((-1.0)*r10*x11561*x11579))+((r10*x11569))+(((-1.0)*cj0*cj1*x11566))+((r12*x11577))+((r11*x11567))+((r11*x11560*x11564)));
evalcond[7]=(((x11563*x11576))+(((-1.0)*r01*x11565*x11576))+((r00*x11564))+((r01*x11561))+(((-1.0)*cj1*x11562))+(((-1.0)*r02*sj4*x11575))+(((-1.0)*cj2*x11570)));
evalcond[8]=((((-1.0)*x11566*x11573))+(((-1.0)*x11566*x11570))+((r10*x11560*x11567))+((r10*x11564))+((r11*x11561))+(((-1.0)*r11*x11565*x11576))+(((-1.0)*r12*sj4*x11575)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11580=((1.0)*gconst10);
CheckValue<IkReal> x11581=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst11*r21))+(((-1.0)*r20*x11580)))),-1);
if(!x11581.valid){
continue;
}
CheckValue<IkReal> x11582 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal(((((-1.0)*r11*sj2*x11580))+((cj2*gconst11*r00))+(((-1.0)*cj2*r01*x11580))+((gconst11*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11582.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11581.value)))+(x11582.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11583=IKsin(j5);
IkReal x11584=IKcos(j5);
IkReal x11585=(cj4*gconst11);
IkReal x11586=(cj2*sj0);
IkReal x11587=(gconst11*r00);
IkReal x11588=(cj4*gconst10);
IkReal x11589=((1.0)*gconst10);
IkReal x11590=((1.0)*sj2);
IkReal x11591=(gconst11*sj4);
IkReal x11592=(gconst11*r20);
IkReal x11593=(gconst10*sj4);
IkReal x11594=(cj0*sj1);
IkReal x11595=(gconst11*r10);
IkReal x11596=(sj0*sj1);
IkReal x11597=(cj1*sj0);
IkReal x11598=((1.0)*cj0*cj1);
IkReal x11599=((1.0)*x11583);
IkReal x11600=(sj4*x11584);
IkReal x11601=(cj4*x11583);
IkReal x11602=(gconst10*x11583);
IkReal x11603=((1.0)*x11584);
evalcond[0]=(((r21*x11602))+(((-1.0)*x11592*x11599)));
evalcond[1]=(cj2+(((-1.0)*r12*x11603))+(((-1.0)*x11595*x11599))+((r11*x11602)));
evalcond[2]=(((r01*x11602))+(((-1.0)*r02*x11603))+(((-1.0)*x11590))+(((-1.0)*x11587*x11599)));
evalcond[3]=(x11597+x11594+((r20*x11593))+(((-1.0)*r20*x11585*x11603))+((r21*x11584*x11588))+((r21*x11591)));
evalcond[4]=(((r20*x11588))+x11596+(((-1.0)*r21*x11589*x11600))+(((-1.0)*x11598))+((r20*x11584*x11591))+((r21*x11585)));
evalcond[5]=(((sj1*x11586))+((r01*x11591))+(((-1.0)*cj2*x11598))+((r00*x11593))+((r01*x11584*x11588))+((r02*x11601))+(((-1.0)*r00*x11585*x11603)));
evalcond[6]=(((r10*x11593))+(((-1.0)*cj0*cj1*x11590))+((r11*x11584*x11588))+((r11*x11591))+(((-1.0)*r10*x11585*x11603))+((sj2*x11596))+((r12*x11601)));
evalcond[7]=(((r01*x11585))+((x11587*x11600))+(((-1.0)*cj1*x11586))+(((-1.0)*r02*sj4*x11599))+(((-1.0)*cj2*x11594))+(((-1.0)*r01*x11589*x11600))+((r00*x11588)));
evalcond[8]=((((-1.0)*r12*sj4*x11599))+(((-1.0)*r11*x11589*x11600))+(((-1.0)*x11590*x11597))+(((-1.0)*x11590*x11594))+((r10*x11588))+((r10*x11584*x11591))+((r11*x11585)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11604=gconst10*gconst10;
IkReal x11605=r21*r21;
IkReal x11606=gconst11*gconst11;
IkReal x11607=r20*r20;
IkReal x11608=(cj1*sj0);
IkReal x11609=(cj0*sj1);
IkReal x11610=(r20*sj4);
IkReal x11611=(gconst11*sj4);
IkReal x11612=((1.0)*cj4);
IkReal x11613=(gconst10*r21);
IkReal x11614=((1.0)*x11606);
IkReal x11615=((1.0)*gconst11*r20);
CheckValue<IkReal> x11616 = IKatan2WithCheck(IkReal((((gconst10*r22*x11610))+((r22*x11608))+((r22*x11609))+((r21*r22*x11611)))),IkReal((((r21*x11604*x11610))+(((-1.0)*x11609*x11615))+((x11609*x11613))+(((-1.0)*x11608*x11615))+(((-1.0)*r21*x11610*x11614))+((gconst10*x11605*x11611))+(((-1.0)*gconst10*x11607*x11611))+((x11608*x11613)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11616.valid){
continue;
}
CheckValue<IkReal> x11617=IKPowWithIntegerCheck(IKsign(((((2.0)*cj4*gconst11*r20*x11613))+(((-1.0)*x11604*x11605*x11612))+(((-1.0)*x11612*(r22*r22)))+(((-1.0)*x11606*x11607*x11612)))),-1);
if(!x11617.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11616.value)+(((1.5707963267949)*(x11617.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11618=IKsin(j5);
IkReal x11619=IKcos(j5);
IkReal x11620=(cj4*gconst11);
IkReal x11621=(cj2*sj0);
IkReal x11622=(gconst11*r00);
IkReal x11623=((1.0)*sj4);
IkReal x11624=((1.0)*sj2);
IkReal x11625=(gconst11*sj4);
IkReal x11626=(gconst11*r20);
IkReal x11627=(gconst10*sj4);
IkReal x11628=(cj4*gconst10);
IkReal x11629=(cj0*sj1);
IkReal x11630=(gconst11*r10);
IkReal x11631=(sj0*sj1);
IkReal x11632=(cj1*sj0);
IkReal x11633=((1.0)*cj0*cj1);
IkReal x11634=(r22*x11618);
IkReal x11635=((1.0)*x11618);
IkReal x11636=(sj4*x11619);
IkReal x11637=(cj4*x11618);
IkReal x11638=(gconst10*x11619);
IkReal x11639=(gconst10*x11618);
IkReal x11640=((1.0)*x11619);
evalcond[0]=((((-1.0)*r22*x11640))+((r21*x11639))+(((-1.0)*x11626*x11635)));
evalcond[1]=(((r11*x11639))+(((-1.0)*r12*x11640))+cj2+(((-1.0)*x11630*x11635)));
evalcond[2]=((((-1.0)*x11624))+(((-1.0)*x11622*x11635))+((r01*x11639))+(((-1.0)*r02*x11640)));
evalcond[3]=((((-1.0)*r20*x11620*x11640))+x11629+x11632+((r21*x11619*x11628))+((r21*x11625))+((r20*x11627))+((cj4*x11634)));
evalcond[4]=((((-1.0)*x11633))+x11631+((r21*x11620))+((r20*x11619*x11625))+(((-1.0)*x11623*x11634))+((r20*x11628))+(((-1.0)*r21*x11623*x11638)));
evalcond[5]=(((sj1*x11621))+((r02*x11637))+((r01*x11619*x11628))+((r00*x11627))+(((-1.0)*r00*x11620*x11640))+((r01*x11625))+(((-1.0)*cj2*x11633)));
evalcond[6]=(((r11*x11619*x11628))+((r11*x11625))+((r12*x11637))+(((-1.0)*r10*x11620*x11640))+(((-1.0)*cj0*cj1*x11624))+((sj2*x11631))+((r10*x11627)));
evalcond[7]=(((x11622*x11636))+(((-1.0)*cj2*x11629))+(((-1.0)*cj1*x11621))+((r00*x11628))+(((-1.0)*r01*x11623*x11638))+((r01*x11620))+(((-1.0)*r02*x11618*x11623)));
evalcond[8]=(((r11*x11620))+((r10*x11619*x11625))+(((-1.0)*r12*x11618*x11623))+(((-1.0)*r11*x11623*x11638))+(((-1.0)*x11624*x11632))+(((-1.0)*x11624*x11629))+((r10*x11628)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11641=((1.0)*gconst10);
CheckValue<IkReal> x11642 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj2*gconst11*r00))+(((-1.0)*r11*sj2*x11641))+(((-1.0)*cj2*r01*x11641))+((gconst11*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11642.valid){
continue;
}
CheckValue<IkReal> x11643=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst11*r21))+(((-1.0)*r20*x11641)))),-1);
if(!x11643.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11642.value)+(((1.5707963267949)*(x11643.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11644=IKsin(j5);
IkReal x11645=IKcos(j5);
IkReal x11646=(cj4*gconst11);
IkReal x11647=(cj2*sj0);
IkReal x11648=(gconst11*r00);
IkReal x11649=((1.0)*sj4);
IkReal x11650=((1.0)*sj2);
IkReal x11651=(gconst11*sj4);
IkReal x11652=(gconst11*r20);
IkReal x11653=(gconst10*sj4);
IkReal x11654=(cj4*gconst10);
IkReal x11655=(cj0*sj1);
IkReal x11656=(gconst11*r10);
IkReal x11657=(sj0*sj1);
IkReal x11658=(cj1*sj0);
IkReal x11659=((1.0)*cj0*cj1);
IkReal x11660=(r22*x11644);
IkReal x11661=((1.0)*x11644);
IkReal x11662=(sj4*x11645);
IkReal x11663=(cj4*x11644);
IkReal x11664=(gconst10*x11645);
IkReal x11665=(gconst10*x11644);
IkReal x11666=((1.0)*x11645);
evalcond[0]=(((r21*x11665))+(((-1.0)*x11652*x11661))+(((-1.0)*r22*x11666)));
evalcond[1]=(cj2+(((-1.0)*r12*x11666))+((r11*x11665))+(((-1.0)*x11656*x11661)));
evalcond[2]=((((-1.0)*x11650))+(((-1.0)*x11648*x11661))+((r01*x11665))+(((-1.0)*r02*x11666)));
evalcond[3]=(((r21*x11645*x11654))+x11658+x11655+((cj4*x11660))+((r21*x11651))+((r20*x11653))+(((-1.0)*r20*x11646*x11666)));
evalcond[4]=((((-1.0)*x11659))+x11657+(((-1.0)*x11649*x11660))+(((-1.0)*r21*x11649*x11664))+((r20*x11645*x11651))+((r21*x11646))+((r20*x11654)));
evalcond[5]=(((sj1*x11647))+((r02*x11663))+(((-1.0)*r00*x11646*x11666))+((r01*x11651))+(((-1.0)*cj2*x11659))+((r00*x11653))+((r01*x11645*x11654)));
evalcond[6]=(((r11*x11651))+((r10*x11653))+(((-1.0)*r10*x11646*x11666))+((sj2*x11657))+(((-1.0)*cj0*cj1*x11650))+((r11*x11645*x11654))+((r12*x11663)));
evalcond[7]=(((x11648*x11662))+(((-1.0)*cj1*x11647))+(((-1.0)*cj2*x11655))+(((-1.0)*r02*x11644*x11649))+(((-1.0)*r01*x11649*x11664))+((r01*x11646))+((r00*x11654)));
evalcond[8]=(((r11*x11646))+(((-1.0)*x11650*x11658))+(((-1.0)*x11650*x11655))+((r10*x11654))+(((-1.0)*r12*x11644*x11649))+(((-1.0)*r11*x11649*x11664))+((r10*x11645*x11651)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11667=((1.0)*gconst11);
CheckValue<IkReal> x11668=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst10*r00))+(((-1.0)*r01*x11667)))),-1);
if(!x11668.valid){
continue;
}
CheckValue<IkReal> x11669 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst10*r21))+(((-1.0)*cj2*r20*x11667)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11669.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11668.value)))+(x11669.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x11670=IKsin(j5);
IkReal x11671=IKcos(j5);
IkReal x11672=(cj4*gconst11);
IkReal x11673=(cj2*sj0);
IkReal x11674=(gconst11*r00);
IkReal x11675=((1.0)*sj4);
IkReal x11676=((1.0)*sj2);
IkReal x11677=(gconst11*sj4);
IkReal x11678=(gconst11*r20);
IkReal x11679=(gconst10*sj4);
IkReal x11680=(cj4*gconst10);
IkReal x11681=(cj0*sj1);
IkReal x11682=(gconst11*r10);
IkReal x11683=(sj0*sj1);
IkReal x11684=(cj1*sj0);
IkReal x11685=((1.0)*cj0*cj1);
IkReal x11686=(r22*x11670);
IkReal x11687=((1.0)*x11670);
IkReal x11688=(sj4*x11671);
IkReal x11689=(cj4*x11670);
IkReal x11690=(gconst10*x11671);
IkReal x11691=(gconst10*x11670);
IkReal x11692=((1.0)*x11671);
evalcond[0]=((((-1.0)*r22*x11692))+(((-1.0)*x11678*x11687))+((r21*x11691)));
evalcond[1]=(cj2+((r11*x11691))+(((-1.0)*x11682*x11687))+(((-1.0)*r12*x11692)));
evalcond[2]=(((r01*x11691))+(((-1.0)*r02*x11692))+(((-1.0)*x11674*x11687))+(((-1.0)*x11676)));
evalcond[3]=(x11684+x11681+((r20*x11679))+((r21*x11677))+((r21*x11671*x11680))+(((-1.0)*r20*x11672*x11692))+((cj4*x11686)));
evalcond[4]=((((-1.0)*r21*x11675*x11690))+x11683+(((-1.0)*x11685))+((r20*x11671*x11677))+(((-1.0)*x11675*x11686))+((r21*x11672))+((r20*x11680)));
evalcond[5]=(((r01*x11671*x11680))+(((-1.0)*cj2*x11685))+((r02*x11689))+((r00*x11679))+((r01*x11677))+((sj1*x11673))+(((-1.0)*r00*x11672*x11692)));
evalcond[6]=(((r12*x11689))+(((-1.0)*cj0*cj1*x11676))+((r11*x11671*x11680))+((r11*x11677))+(((-1.0)*r10*x11672*x11692))+((sj2*x11683))+((r10*x11679)));
evalcond[7]=(((r00*x11680))+(((-1.0)*cj1*x11673))+(((-1.0)*r02*x11670*x11675))+(((-1.0)*cj2*x11681))+(((-1.0)*r01*x11675*x11690))+((r01*x11672))+((x11674*x11688)));
evalcond[8]=((((-1.0)*r11*x11675*x11690))+(((-1.0)*r12*x11670*x11675))+((r10*x11680))+((r11*x11672))+((r10*x11671*x11677))+(((-1.0)*x11676*x11684))+(((-1.0)*x11676*x11681)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j2))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
IkReal x11693=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x11693;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x11693);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
IkReal x11694=((1.0)*cj6);
IkReal x11695=((((-1.0)*r00*sj6))+(((-1.0)*r01*x11694)));
j5eval[0]=x11695;
j5eval[1]=IKsign(x11695);
j5eval[2]=((IKabs(((((-1.0)*r20*x11694))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
sj2=0;
cj2=1.0;
j2=0;
IkReal x11696=cj6*cj6;
IkReal x11697=(cj4*r21);
IkReal x11698=(cj6*sj6);
IkReal x11699=((1.0)*cj4);
IkReal x11700=((((-1.0)*r10*r20*x11696*x11699))+(((-1.0)*r12*r22*x11699))+((r10*x11697*x11698))+((cj4*r11*r20*x11698))+((r11*x11696*x11697))+(((-1.0)*r11*x11697)));
j5eval[0]=x11700;
j5eval[1]=IKsign(x11700);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x11701=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x11701;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x11701);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x11702=((1.0)*cj6);
IkReal x11703=((((-1.0)*r00*sj6))+(((-1.0)*r01*x11702)));
j5eval[0]=x11703;
j5eval[1]=IKsign(x11703);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x11702))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x11704=cj6*cj6;
IkReal x11705=r11*r11;
IkReal x11706=(cj6*r10);
IkReal x11707=(r11*sj6);
IkReal x11708=(x11705+(r12*r12)+(((-2.0)*x11706*x11707))+(((-1.0)*x11704*x11705))+((x11704*(r10*r10))));
j5eval[0]=x11708;
j5eval[1]=IKsign(x11708);
j5eval[2]=((IKabs(r12))+(IKabs((x11706+(((-1.0)*x11707))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x11709=((-1.0)*px);
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x11709);
rxp1_1=(px*r21);
rxp1_2=(r11*x11709);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=((((-1.0)*cj6*r10))+((r11*sj6)));
j5eval[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x11710=((-1.0)*px);
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x11710);
rxp1_1=(px*r21);
rxp1_2=(r11*x11710);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=r02;
j5eval[1]=(((cj6*r20))+(((-1.0)*r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11711=((1.0)*sj0);
CheckValue<IkReal> x11712=IKPowWithIntegerCheck(r02,-1);
if(!x11712.valid){
continue;
}
CheckValue<IkReal> x11713=IKPowWithIntegerCheck((((cj6*r20))+(((-1.0)*r21*sj6))),-1);
if(!x11713.valid){
continue;
}
if( IKabs(((x11712.value)*(((((-1.0)*cj1*x11711))+(((-1.0)*cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11713.value)*((((cj0*cj1))+(((-1.0)*sj1*x11711)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x11712.value)*(((((-1.0)*cj1*x11711))+(((-1.0)*cj0*sj1))))))+IKsqr(((x11713.value)*((((cj0*cj1))+(((-1.0)*sj1*x11711))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x11712.value)*(((((-1.0)*cj1*x11711))+(((-1.0)*cj0*sj1))))), ((x11713.value)*((((cj0*cj1))+(((-1.0)*sj1*x11711))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11714=IKsin(j5);
IkReal x11715=IKcos(j5);
IkReal x11716=((1.0)*cj0);
IkReal x11717=(sj6*x11714);
IkReal x11718=(cj6*x11715);
IkReal x11719=((1.0)*x11714);
IkReal x11720=((1.0)*sj6*x11715);
evalcond[0]=((-1.0)*r02*x11715);
evalcond[1]=((((-1.0)*cj6*r20*x11719))+((r21*x11717)));
evalcond[2]=((((-1.0)*r11*x11720))+((r10*x11718)));
evalcond[3]=((1.0)+(((-1.0)*cj6*r10*x11719))+((r11*x11717)));
evalcond[4]=((((-1.0)*sj1*x11716))+(((-1.0)*cj1*sj0))+(((-1.0)*r02*x11719)));
evalcond[5]=((((-1.0)*r21*x11720))+((r20*x11718))+((sj0*sj1))+(((-1.0)*cj1*x11716)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11721=IKPowWithIntegerCheck(((((-1.0)*cj6*r10))+((r11*sj6))),-1);
if(!x11721.valid){
continue;
}
CheckValue<IkReal> x11722=IKPowWithIntegerCheck((((cj6*r20))+(((-1.0)*r21*sj6))),-1);
if(!x11722.valid){
continue;
}
if( IKabs(((-1.0)*(x11721.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11722.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x11721.value)))+IKsqr(((x11722.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x11721.value)), ((x11722.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11723=IKsin(j5);
IkReal x11724=IKcos(j5);
IkReal x11725=((1.0)*cj0);
IkReal x11726=(sj6*x11723);
IkReal x11727=(cj6*x11724);
IkReal x11728=((1.0)*x11723);
IkReal x11729=((1.0)*sj6*x11724);
evalcond[0]=((-1.0)*r02*x11724);
evalcond[1]=((((-1.0)*cj6*r20*x11728))+((r21*x11726)));
evalcond[2]=((((-1.0)*r11*x11729))+((r10*x11727)));
evalcond[3]=((1.0)+(((-1.0)*cj6*r10*x11728))+((r11*x11726)));
evalcond[4]=((((-1.0)*cj1*sj0))+(((-1.0)*sj1*x11725))+(((-1.0)*r02*x11728)));
evalcond[5]=((((-1.0)*r21*x11729))+((r20*x11727))+((sj0*sj1))+(((-1.0)*cj1*x11725)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r21))+(IKabs(r20)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x11730=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x11730);
rxp1_0=(pz*r11);
rxp1_1=(r01*x11730);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=((((-1.0)*cj6*r10))+((r11*sj6)));
j5eval[1]=((((-1.0)*r01*sj6))+((cj6*r00)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x11731=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x11731);
rxp1_0=(pz*r11);
rxp1_1=(r01*x11731);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=r22;
j5eval[1]=((((-1.0)*r01*sj6))+((cj6*r00)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11732=IKPowWithIntegerCheck(r22,-1);
if(!x11732.valid){
continue;
}
CheckValue<IkReal> x11733=IKPowWithIntegerCheck(((((-1.0)*r01*sj6))+((cj6*r00))),-1);
if(!x11733.valid){
continue;
}
if( IKabs(((x11732.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11733.value)*((((cj1*sj0))+((cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x11732.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))))+IKsqr(((x11733.value)*((((cj1*sj0))+((cj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x11732.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))), ((x11733.value)*((((cj1*sj0))+((cj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11734=IKsin(j5);
IkReal x11735=IKcos(j5);
IkReal x11736=(r01*sj6);
IkReal x11737=((1.0)*cj0);
IkReal x11738=(cj6*r10);
IkReal x11739=(cj6*r00);
IkReal x11740=(r11*sj6);
IkReal x11741=((1.0)*x11735);
IkReal x11742=((1.0)*x11734);
evalcond[0]=((-1.0)*r22*x11735);
evalcond[1]=((((-1.0)*x11739*x11742))+((x11734*x11736)));
evalcond[2]=((((-1.0)*cj1*x11737))+((sj0*sj1))+(((-1.0)*r22*x11742)));
evalcond[3]=(((x11735*x11738))+(((-1.0)*x11740*x11741)));
evalcond[4]=((1.0)+(((-1.0)*x11738*x11742))+((x11734*x11740)));
evalcond[5]=(((x11735*x11739))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x11737))+(((-1.0)*x11736*x11741)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11743=IKPowWithIntegerCheck(((((-1.0)*cj6*r10))+((r11*sj6))),-1);
if(!x11743.valid){
continue;
}
CheckValue<IkReal> x11744=IKPowWithIntegerCheck(((((-1.0)*r01*sj6))+((cj6*r00))),-1);
if(!x11744.valid){
continue;
}
if( IKabs(((-1.0)*(x11743.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11744.value)*((((cj1*sj0))+((cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x11743.value)))+IKsqr(((x11744.value)*((((cj1*sj0))+((cj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x11743.value)), ((x11744.value)*((((cj1*sj0))+((cj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11745=IKsin(j5);
IkReal x11746=IKcos(j5);
IkReal x11747=(r01*sj6);
IkReal x11748=((1.0)*cj0);
IkReal x11749=(cj6*r10);
IkReal x11750=(cj6*r00);
IkReal x11751=(r11*sj6);
IkReal x11752=((1.0)*x11746);
IkReal x11753=((1.0)*x11745);
evalcond[0]=((-1.0)*r22*x11746);
evalcond[1]=(((x11745*x11747))+(((-1.0)*x11750*x11753)));
evalcond[2]=((((-1.0)*cj1*x11748))+((sj0*sj1))+(((-1.0)*r22*x11753)));
evalcond[3]=(((x11746*x11749))+(((-1.0)*x11751*x11752)));
evalcond[4]=((1.0)+(((-1.0)*x11749*x11753))+((x11745*x11751)));
evalcond[5]=((((-1.0)*cj1*sj0))+((x11746*x11750))+(((-1.0)*x11747*x11752))+(((-1.0)*sj1*x11748)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11754=cj6*cj6;
IkReal x11755=r11*r11;
IkReal x11756=(cj6*r10);
IkReal x11757=(r11*sj6);
CheckValue<IkReal> x11758 = IKatan2WithCheck(IkReal((x11756+(((-1.0)*x11757)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x11758.valid){
continue;
}
CheckValue<IkReal> x11759=IKPowWithIntegerCheck(IKsign((x11755+(r12*r12)+((x11754*(r10*r10)))+(((-2.0)*x11756*x11757))+(((-1.0)*x11754*x11755)))),-1);
if(!x11759.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11758.value)+(((1.5707963267949)*(x11759.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11760=IKsin(j5);
IkReal x11761=IKcos(j5);
IkReal x11762=((1.0)*cj0);
IkReal x11763=(sj6*x11760);
IkReal x11764=((1.0)*x11760);
IkReal x11765=((1.0)*x11761);
IkReal x11766=(cj6*x11761);
IkReal x11767=(sj6*x11765);
IkReal x11768=(cj6*x11764);
evalcond[0]=((((-1.0)*r22*x11765))+((r21*x11763))+(((-1.0)*r20*x11768)));
evalcond[1]=((((-1.0)*r02*x11765))+(((-1.0)*r00*x11768))+((r01*x11763)));
evalcond[2]=((((-1.0)*r12*x11764))+(((-1.0)*r11*x11767))+((r10*x11766)));
evalcond[3]=((1.0)+(((-1.0)*r12*x11765))+((r11*x11763))+(((-1.0)*r10*x11768)));
evalcond[4]=((((-1.0)*r21*x11767))+((r20*x11766))+(((-1.0)*cj1*x11762))+((sj0*sj1))+(((-1.0)*r22*x11764)));
evalcond[5]=((((-1.0)*sj1*x11762))+(((-1.0)*cj1*sj0))+(((-1.0)*r02*x11764))+((r00*x11766))+(((-1.0)*r01*x11767)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11769=((1.0)*cj6);
CheckValue<IkReal> x11770 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x11769)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11770.valid){
continue;
}
CheckValue<IkReal> x11771=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x11769)))),-1);
if(!x11771.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11770.value)+(((1.5707963267949)*(x11771.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11772=IKsin(j5);
IkReal x11773=IKcos(j5);
IkReal x11774=((1.0)*cj0);
IkReal x11775=(sj6*x11772);
IkReal x11776=((1.0)*x11772);
IkReal x11777=((1.0)*x11773);
IkReal x11778=(cj6*x11773);
IkReal x11779=(sj6*x11777);
IkReal x11780=(cj6*x11776);
evalcond[0]=((((-1.0)*r20*x11780))+(((-1.0)*r22*x11777))+((r21*x11775)));
evalcond[1]=((((-1.0)*r02*x11777))+(((-1.0)*r00*x11780))+((r01*x11775)));
evalcond[2]=(((r10*x11778))+(((-1.0)*r11*x11779))+(((-1.0)*r12*x11776)));
evalcond[3]=((1.0)+(((-1.0)*r12*x11777))+((r11*x11775))+(((-1.0)*r10*x11780)));
evalcond[4]=((((-1.0)*cj1*x11774))+((r20*x11778))+((sj0*sj1))+(((-1.0)*r22*x11776))+(((-1.0)*r21*x11779)));
evalcond[5]=((((-1.0)*cj1*sj0))+(((-1.0)*r02*x11776))+(((-1.0)*sj1*x11774))+(((-1.0)*r01*x11779))+((r00*x11778)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11781=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x11781.valid){
continue;
}
CheckValue<IkReal> x11782 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x11782.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11781.value)))+(x11782.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11783=IKsin(j5);
IkReal x11784=IKcos(j5);
IkReal x11785=((1.0)*cj0);
IkReal x11786=(sj6*x11783);
IkReal x11787=((1.0)*x11783);
IkReal x11788=((1.0)*x11784);
IkReal x11789=(cj6*x11784);
IkReal x11790=(sj6*x11788);
IkReal x11791=(cj6*x11787);
evalcond[0]=((((-1.0)*r20*x11791))+((r21*x11786))+(((-1.0)*r22*x11788)));
evalcond[1]=((((-1.0)*r00*x11791))+(((-1.0)*r02*x11788))+((r01*x11786)));
evalcond[2]=((((-1.0)*r12*x11787))+((r10*x11789))+(((-1.0)*r11*x11790)));
evalcond[3]=((1.0)+((r11*x11786))+(((-1.0)*r12*x11788))+(((-1.0)*r10*x11791)));
evalcond[4]=(((r20*x11789))+(((-1.0)*cj1*x11785))+((sj0*sj1))+(((-1.0)*r22*x11787))+(((-1.0)*r21*x11790)));
evalcond[5]=((((-1.0)*sj1*x11785))+(((-1.0)*cj1*sj0))+(((-1.0)*r01*x11790))+(((-1.0)*r02*x11787))+((r00*x11789)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x11792=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x11792;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*cj6*r00))))));
j5eval[2]=IKsign(x11792);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x11793=((1.0)*cj6);
IkReal x11794=((((-1.0)*r00*sj6))+(((-1.0)*r01*x11793)));
j5eval[0]=x11794;
j5eval[1]=IKsign(x11794);
j5eval[2]=((IKabs(((((-1.0)*r20*x11793))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x11795=(r11*sj6);
IkReal x11796=(cj0*cj1);
IkReal x11797=(sj0*sj1);
IkReal x11798=(cj6*r10);
IkReal x11799=((((-1.0)*r00*sj6))+(((-1.0)*cj6*r01)));
j5eval[0]=x11799;
j5eval[1]=((IKabs(((((-1.0)*x11795*x11796))+(((-1.0)*x11797*x11798))+((x11795*x11797))+((x11796*x11798)))))+(IKabs((((r12*x11796))+(((-1.0)*r12*x11797))))));
j5eval[2]=IKsign(x11799);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x11800=((-1.0)*px);
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x11800);
rxp1_1=(px*r21);
rxp1_2=(r11*x11800);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=r02;
j5eval[1]=((((-1.0)*cj6*r20))+((r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x11801=((-1.0)*px);
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x11801);
rxp1_1=(px*r21);
rxp1_2=(r11*x11801);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal x11802=((1.0)*cj6);
j5eval[0]=((((-1.0)*r10*x11802))+((r11*sj6)));
j5eval[1]=(((r21*sj6))+(((-1.0)*r20*x11802)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11803=((1.0)*cj6);
CheckValue<IkReal> x11804=IKPowWithIntegerCheck(((((-1.0)*r10*x11803))+((r11*sj6))),-1);
if(!x11804.valid){
continue;
}
CheckValue<IkReal> x11805=IKPowWithIntegerCheck((((r21*sj6))+(((-1.0)*r20*x11803))),-1);
if(!x11805.valid){
continue;
}
if( IKabs(((-1.0)*(x11804.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11805.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x11804.value)))+IKsqr(((x11805.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x11804.value)), ((x11805.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11806=IKsin(j5);
IkReal x11807=IKcos(j5);
IkReal x11808=((1.0)*cj1);
IkReal x11809=(sj6*x11807);
IkReal x11810=(sj6*x11806);
IkReal x11811=((1.0)*cj6*r10);
IkReal x11812=((1.0)*cj6*r20);
evalcond[0]=((-1.0)*r02*x11807);
evalcond[1]=(((r21*x11810))+(((-1.0)*x11806*x11812)));
evalcond[2]=(((r02*x11806))+(((-1.0)*sj0*x11808))+(((-1.0)*cj0*sj1)));
evalcond[3]=(((r11*x11809))+(((-1.0)*x11807*x11811)));
evalcond[4]=((1.0)+(((-1.0)*x11806*x11811))+((r11*x11810)));
evalcond[5]=(((r21*x11809))+(((-1.0)*cj0*x11808))+((sj0*sj1))+(((-1.0)*x11807*x11812)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11813=IKPowWithIntegerCheck(r02,-1);
if(!x11813.valid){
continue;
}
CheckValue<IkReal> x11814=IKPowWithIntegerCheck(((((-1.0)*cj6*r20))+((r21*sj6))),-1);
if(!x11814.valid){
continue;
}
if( IKabs(((x11813.value)*((((cj1*sj0))+((cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x11814.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x11813.value)*((((cj1*sj0))+((cj0*sj1))))))+IKsqr(((x11814.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x11813.value)*((((cj1*sj0))+((cj0*sj1))))), ((x11814.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11815=IKsin(j5);
IkReal x11816=IKcos(j5);
IkReal x11817=((1.0)*cj1);
IkReal x11818=(sj6*x11816);
IkReal x11819=(sj6*x11815);
IkReal x11820=((1.0)*cj6*r10);
IkReal x11821=((1.0)*cj6*r20);
evalcond[0]=((-1.0)*r02*x11816);
evalcond[1]=(((r21*x11819))+(((-1.0)*x11815*x11821)));
evalcond[2]=((((-1.0)*sj0*x11817))+((r02*x11815))+(((-1.0)*cj0*sj1)));
evalcond[3]=(((r11*x11818))+(((-1.0)*x11816*x11820)));
evalcond[4]=((1.0)+((r11*x11819))+(((-1.0)*x11815*x11820)));
evalcond[5]=(((r21*x11818))+((sj0*sj1))+(((-1.0)*cj0*x11817))+(((-1.0)*x11816*x11821)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x11822=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x11822;
j5eval[1]=IKsign(x11822);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x11823=((1.0)*cj6);
IkReal x11824=((((-1.0)*r21*x11823))+(((-1.0)*r20*sj6)));
j5eval[0]=x11824;
j5eval[1]=((IKabs(r12))+(IKabs(((((-1.0)*r10*x11823))+((r11*sj6))))));
j5eval[2]=IKsign(x11824);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x11825=cj6*cj6;
IkReal x11826=(r11*r21);
IkReal x11827=(r21*sj6);
IkReal x11828=(cj6*r20);
IkReal x11829=(((x11825*x11826))+(((-1.0)*r12*r22))+(((-1.0)*r10*r20*x11825))+(((-1.0)*x11826))+((cj6*r10*x11827))+((r11*sj6*x11828)));
j5eval[0]=x11829;
j5eval[1]=IKsign(x11829);
j5eval[2]=((IKabs(r22))+(IKabs(((((-1.0)*x11828))+x11827))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11830=cj6*cj6;
IkReal x11831=(r21*sj6);
IkReal x11832=(cj6*r20);
IkReal x11833=(r11*r21);
CheckValue<IkReal> x11834=IKPowWithIntegerCheck(IKsign(((((-1.0)*r12*r22))+((cj6*r10*x11831))+((x11830*x11833))+(((-1.0)*x11833))+((r11*sj6*x11832))+(((-1.0)*r10*r20*x11830)))),-1);
if(!x11834.valid){
continue;
}
CheckValue<IkReal> x11835 = IKatan2WithCheck(IkReal(((((-1.0)*x11832))+x11831)),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x11835.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11834.value)))+(x11835.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11836=IKcos(j5);
IkReal x11837=IKsin(j5);
IkReal x11838=(cj6*r10);
IkReal x11839=(cj6*r00);
IkReal x11840=(cj6*r20);
IkReal x11841=(sj6*x11836);
IkReal x11842=(sj6*x11837);
IkReal x11843=((1.0)*x11836);
IkReal x11844=((1.0)*x11837);
evalcond[0]=(((r21*x11841))+((r22*x11837))+(((-1.0)*x11840*x11843)));
evalcond[1]=((((-1.0)*x11838*x11843))+((r11*x11841))+((r12*x11837)));
evalcond[2]=(((r21*x11842))+(((-1.0)*x11840*x11844))+(((-1.0)*r22*x11843)));
evalcond[3]=((((-1.0)*r02*x11843))+(((-1.0)*x11839*x11844))+((r01*x11842)));
evalcond[4]=((-1.0)+(((-1.0)*x11839*x11843))+((r02*x11837))+((r01*x11841)));
evalcond[5]=((1.0)+(((-1.0)*x11838*x11844))+((r11*x11842))+(((-1.0)*r12*x11843)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11845=((1.0)*cj6);
CheckValue<IkReal> x11846 = IKatan2WithCheck(IkReal((((r11*sj6))+(((-1.0)*r10*x11845)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x11846.valid){
continue;
}
CheckValue<IkReal> x11847=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x11845))+(((-1.0)*r20*sj6)))),-1);
if(!x11847.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11846.value)+(((1.5707963267949)*(x11847.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11848=IKcos(j5);
IkReal x11849=IKsin(j5);
IkReal x11850=(cj6*r10);
IkReal x11851=(cj6*r00);
IkReal x11852=(cj6*r20);
IkReal x11853=(sj6*x11848);
IkReal x11854=(sj6*x11849);
IkReal x11855=((1.0)*x11848);
IkReal x11856=((1.0)*x11849);
evalcond[0]=(((r21*x11853))+((r22*x11849))+(((-1.0)*x11852*x11855)));
evalcond[1]=((((-1.0)*x11850*x11855))+((r11*x11853))+((r12*x11849)));
evalcond[2]=(((r21*x11854))+(((-1.0)*x11852*x11856))+(((-1.0)*r22*x11855)));
evalcond[3]=((((-1.0)*r02*x11855))+(((-1.0)*x11851*x11856))+((r01*x11854)));
evalcond[4]=((-1.0)+(((-1.0)*x11851*x11855))+((r01*x11853))+((r02*x11849)));
evalcond[5]=((1.0)+(((-1.0)*x11850*x11856))+((r11*x11854))+(((-1.0)*r12*x11855)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11857 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x11857.valid){
continue;
}
CheckValue<IkReal> x11858=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x11858.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11857.value)+(((1.5707963267949)*(x11858.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11859=IKcos(j5);
IkReal x11860=IKsin(j5);
IkReal x11861=(cj6*r10);
IkReal x11862=(cj6*r00);
IkReal x11863=(cj6*r20);
IkReal x11864=(sj6*x11859);
IkReal x11865=(sj6*x11860);
IkReal x11866=((1.0)*x11859);
IkReal x11867=((1.0)*x11860);
evalcond[0]=((((-1.0)*x11863*x11866))+((r22*x11860))+((r21*x11864)));
evalcond[1]=((((-1.0)*x11861*x11866))+((r12*x11860))+((r11*x11864)));
evalcond[2]=((((-1.0)*r22*x11866))+(((-1.0)*x11863*x11867))+((r21*x11865)));
evalcond[3]=((((-1.0)*x11862*x11867))+((r01*x11865))+(((-1.0)*r02*x11866)));
evalcond[4]=((-1.0)+((r02*x11860))+(((-1.0)*x11862*x11866))+((r01*x11864)));
evalcond[5]=((1.0)+(((-1.0)*x11861*x11867))+((r11*x11865))+(((-1.0)*r12*x11866)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x11868=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x11868;
j5eval[1]=IKsign(x11868);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x11869=((1.0)*cj6);
IkReal x11870=((((-1.0)*r10*sj6))+(((-1.0)*r11*x11869)));
j5eval[0]=x11870;
j5eval[1]=IKsign(x11870);
j5eval[2]=((IKabs(r22))+(IKabs(((((-1.0)*r20*x11869))+((r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=0;
sj1=0;
cj1=1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x11871=cj6*cj6;
IkReal x11872=(r11*r21);
IkReal x11873=(r21*sj6);
IkReal x11874=(cj6*r20);
IkReal x11875=(((x11871*x11872))+(((-1.0)*r10*r20*x11871))+((r11*sj6*x11874))+(((-1.0)*r12*r22))+(((-1.0)*x11872))+((cj6*r10*x11873)));
j5eval[0]=x11875;
j5eval[1]=IKsign(x11875);
j5eval[2]=((IKabs(r22))+(IKabs(((((-1.0)*x11874))+x11873))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11876=cj6*cj6;
IkReal x11877=(r21*sj6);
IkReal x11878=(cj6*r20);
IkReal x11879=(r11*r21);
CheckValue<IkReal> x11880=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*r20*x11876))+((r11*sj6*x11878))+(((-1.0)*r12*r22))+(((-1.0)*x11879))+((cj6*r10*x11877))+((x11876*x11879)))),-1);
if(!x11880.valid){
continue;
}
CheckValue<IkReal> x11881 = IKatan2WithCheck(IkReal(((((-1.0)*x11878))+x11877)),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x11881.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11880.value)))+(x11881.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11882=IKcos(j5);
IkReal x11883=IKsin(j5);
IkReal x11884=(cj6*r10);
IkReal x11885=(cj6*r00);
IkReal x11886=(cj6*r20);
IkReal x11887=(sj6*x11882);
IkReal x11888=(sj6*x11883);
IkReal x11889=((1.0)*x11882);
IkReal x11890=((1.0)*x11883);
evalcond[0]=(((r21*x11887))+(((-1.0)*x11886*x11889))+((r22*x11883)));
evalcond[1]=((((-1.0)*x11884*x11889))+((r12*x11883))+((r11*x11887)));
evalcond[2]=(((r21*x11888))+(((-1.0)*x11886*x11890))+(((-1.0)*r22*x11889)));
evalcond[3]=(((r01*x11888))+(((-1.0)*r02*x11889))+(((-1.0)*x11885*x11890)));
evalcond[4]=((1.0)+((r01*x11887))+((r02*x11883))+(((-1.0)*x11885*x11889)));
evalcond[5]=((1.0)+(((-1.0)*x11884*x11890))+(((-1.0)*r12*x11889))+((r11*x11888)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11891=((1.0)*cj6);
CheckValue<IkReal> x11892 = IKatan2WithCheck(IkReal(((((-1.0)*r20*x11891))+((r21*sj6)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x11892.valid){
continue;
}
CheckValue<IkReal> x11893=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x11891)))),-1);
if(!x11893.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11892.value)+(((1.5707963267949)*(x11893.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11894=IKcos(j5);
IkReal x11895=IKsin(j5);
IkReal x11896=(cj6*r10);
IkReal x11897=(cj6*r00);
IkReal x11898=(cj6*r20);
IkReal x11899=(sj6*x11894);
IkReal x11900=(sj6*x11895);
IkReal x11901=((1.0)*x11894);
IkReal x11902=((1.0)*x11895);
evalcond[0]=(((r21*x11899))+((r22*x11895))+(((-1.0)*x11898*x11901)));
evalcond[1]=((((-1.0)*x11896*x11901))+((r11*x11899))+((r12*x11895)));
evalcond[2]=((((-1.0)*r22*x11901))+((r21*x11900))+(((-1.0)*x11898*x11902)));
evalcond[3]=((((-1.0)*r02*x11901))+(((-1.0)*x11897*x11902))+((r01*x11900)));
evalcond[4]=((1.0)+(((-1.0)*x11897*x11901))+((r01*x11899))+((r02*x11895)));
evalcond[5]=((1.0)+(((-1.0)*x11896*x11902))+(((-1.0)*r12*x11901))+((r11*x11900)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11903=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x11903.valid){
continue;
}
CheckValue<IkReal> x11904 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x11904.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11903.value)))+(x11904.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11905=IKcos(j5);
IkReal x11906=IKsin(j5);
IkReal x11907=(cj6*r10);
IkReal x11908=(cj6*r00);
IkReal x11909=(cj6*r20);
IkReal x11910=(sj6*x11905);
IkReal x11911=(sj6*x11906);
IkReal x11912=((1.0)*x11905);
IkReal x11913=((1.0)*x11906);
evalcond[0]=(((r22*x11906))+((r21*x11910))+(((-1.0)*x11909*x11912)));
evalcond[1]=(((r11*x11910))+((r12*x11906))+(((-1.0)*x11907*x11912)));
evalcond[2]=((((-1.0)*r22*x11912))+((r21*x11911))+(((-1.0)*x11909*x11913)));
evalcond[3]=((((-1.0)*x11908*x11913))+((r01*x11911))+(((-1.0)*r02*x11912)));
evalcond[4]=((1.0)+(((-1.0)*x11908*x11912))+((r01*x11910))+((r02*x11906)));
evalcond[5]=((1.0)+((r11*x11911))+(((-1.0)*r12*x11912))+(((-1.0)*x11907*x11913)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x11914=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x11914;
j5eval[1]=IKsign(x11914);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x11915=((1.0)*cj6);
IkReal x11916=((((-1.0)*r21*x11915))+(((-1.0)*r20*sj6)));
j5eval[0]=x11916;
j5eval[1]=((IKabs(r12))+(IKabs((((r11*sj6))+(((-1.0)*r10*x11915))))));
j5eval[2]=IKsign(x11916);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x11917=cj6*cj6;
IkReal x11918=(r11*r21);
IkReal x11919=(r21*sj6);
IkReal x11920=(cj6*r20);
IkReal x11921=((((-1.0)*r10*r20*x11917))+(((-1.0)*r12*r22))+(((-1.0)*x11918))+((x11917*x11918))+((r11*sj6*x11920))+((cj6*r10*x11919)));
j5eval[0]=x11921;
j5eval[1]=IKsign(x11921);
j5eval[2]=((IKabs((x11919+(((-1.0)*x11920)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11922=cj6*cj6;
IkReal x11923=(r21*sj6);
IkReal x11924=(cj6*r20);
IkReal x11925=(r11*r21);
CheckValue<IkReal> x11926=IKPowWithIntegerCheck(IKsign(((((-1.0)*r12*r22))+((r11*sj6*x11924))+(((-1.0)*r10*r20*x11922))+(((-1.0)*x11925))+((cj6*r10*x11923))+((x11922*x11925)))),-1);
if(!x11926.valid){
continue;
}
CheckValue<IkReal> x11927 = IKatan2WithCheck(IkReal((x11923+(((-1.0)*x11924)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x11927.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11926.value)))+(x11927.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11928=IKcos(j5);
IkReal x11929=IKsin(j5);
IkReal x11930=(cj6*r10);
IkReal x11931=(cj6*r00);
IkReal x11932=(cj6*r20);
IkReal x11933=(sj6*x11928);
IkReal x11934=(sj6*x11929);
IkReal x11935=((1.0)*x11928);
IkReal x11936=((1.0)*x11929);
evalcond[0]=(((r21*x11933))+((r22*x11929))+(((-1.0)*x11932*x11935)));
evalcond[1]=(((r11*x11933))+(((-1.0)*x11930*x11935))+((r12*x11929)));
evalcond[2]=(((r21*x11934))+(((-1.0)*r22*x11935))+(((-1.0)*x11932*x11936)));
evalcond[3]=((((-1.0)*r02*x11935))+(((-1.0)*x11931*x11936))+((r01*x11934)));
evalcond[4]=((-1.0)+((r02*x11929))+(((-1.0)*x11931*x11935))+((r01*x11933)));
evalcond[5]=((1.0)+((r11*x11934))+(((-1.0)*x11930*x11936))+(((-1.0)*r12*x11935)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11937=((1.0)*cj6);
CheckValue<IkReal> x11938 = IKatan2WithCheck(IkReal((((r11*sj6))+(((-1.0)*r10*x11937)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x11938.valid){
continue;
}
CheckValue<IkReal> x11939=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x11937))+(((-1.0)*r20*sj6)))),-1);
if(!x11939.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11938.value)+(((1.5707963267949)*(x11939.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11940=IKcos(j5);
IkReal x11941=IKsin(j5);
IkReal x11942=(cj6*r10);
IkReal x11943=(cj6*r00);
IkReal x11944=(cj6*r20);
IkReal x11945=(sj6*x11940);
IkReal x11946=(sj6*x11941);
IkReal x11947=((1.0)*x11940);
IkReal x11948=((1.0)*x11941);
evalcond[0]=((((-1.0)*x11944*x11947))+((r21*x11945))+((r22*x11941)));
evalcond[1]=(((r11*x11945))+((r12*x11941))+(((-1.0)*x11942*x11947)));
evalcond[2]=((((-1.0)*r22*x11947))+(((-1.0)*x11944*x11948))+((r21*x11946)));
evalcond[3]=((((-1.0)*x11943*x11948))+(((-1.0)*r02*x11947))+((r01*x11946)));
evalcond[4]=((-1.0)+(((-1.0)*x11943*x11947))+((r02*x11941))+((r01*x11945)));
evalcond[5]=((1.0)+((r11*x11946))+(((-1.0)*x11942*x11948))+(((-1.0)*r12*x11947)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11949 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x11949.valid){
continue;
}
CheckValue<IkReal> x11950=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x11950.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x11949.value)+(((1.5707963267949)*(x11950.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11951=IKcos(j5);
IkReal x11952=IKsin(j5);
IkReal x11953=(cj6*r10);
IkReal x11954=(cj6*r00);
IkReal x11955=(cj6*r20);
IkReal x11956=(sj6*x11951);
IkReal x11957=(sj6*x11952);
IkReal x11958=((1.0)*x11951);
IkReal x11959=((1.0)*x11952);
evalcond[0]=(((r21*x11956))+(((-1.0)*x11955*x11958))+((r22*x11952)));
evalcond[1]=(((r12*x11952))+((r11*x11956))+(((-1.0)*x11953*x11958)));
evalcond[2]=(((r21*x11957))+(((-1.0)*r22*x11958))+(((-1.0)*x11955*x11959)));
evalcond[3]=((((-1.0)*r02*x11958))+((r01*x11957))+(((-1.0)*x11954*x11959)));
evalcond[4]=((-1.0)+((r02*x11952))+((r01*x11956))+(((-1.0)*x11954*x11958)));
evalcond[5]=((1.0)+(((-1.0)*r12*x11958))+((r11*x11957))+(((-1.0)*x11953*x11959)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j1), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x11960=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x11960;
j5eval[1]=IKsign(x11960);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x11961=((1.0)*cj6);
IkReal x11962=((((-1.0)*r10*sj6))+(((-1.0)*r11*x11961)));
j5eval[0]=x11962;
j5eval[1]=IKsign(x11962);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x11961)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=1.5707963267949;
sj1=1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x11963=cj6*cj6;
IkReal x11964=(r11*r21);
IkReal x11965=(r21*sj6);
IkReal x11966=(cj6*r20);
IkReal x11967=((((-1.0)*x11964))+((cj6*r10*x11965))+(((-1.0)*r12*r22))+((x11963*x11964))+((r11*sj6*x11966))+(((-1.0)*r10*r20*x11963)));
j5eval[0]=x11967;
j5eval[1]=IKsign(x11967);
j5eval[2]=((IKabs((x11965+(((-1.0)*x11966)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11968=cj6*cj6;
IkReal x11969=(r21*sj6);
IkReal x11970=(cj6*r20);
IkReal x11971=(r11*r21);
CheckValue<IkReal> x11972=IKPowWithIntegerCheck(IKsign(((((-1.0)*x11971))+((cj6*r10*x11969))+((x11968*x11971))+(((-1.0)*r12*r22))+((r11*sj6*x11970))+(((-1.0)*r10*r20*x11968)))),-1);
if(!x11972.valid){
continue;
}
CheckValue<IkReal> x11973 = IKatan2WithCheck(IkReal((x11969+(((-1.0)*x11970)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x11973.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11972.value)))+(x11973.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11974=IKcos(j5);
IkReal x11975=IKsin(j5);
IkReal x11976=(cj6*r10);
IkReal x11977=(cj6*r00);
IkReal x11978=(cj6*r20);
IkReal x11979=(sj6*x11974);
IkReal x11980=(sj6*x11975);
IkReal x11981=((1.0)*x11974);
IkReal x11982=((1.0)*x11975);
evalcond[0]=((((-1.0)*x11978*x11981))+((r22*x11975))+((r21*x11979)));
evalcond[1]=((((-1.0)*x11976*x11981))+((r11*x11979))+((r12*x11975)));
evalcond[2]=(((r21*x11980))+(((-1.0)*x11978*x11982))+(((-1.0)*r22*x11981)));
evalcond[3]=((((-1.0)*x11977*x11982))+(((-1.0)*r02*x11981))+((r01*x11980)));
evalcond[4]=((1.0)+(((-1.0)*x11977*x11981))+((r01*x11979))+((r02*x11975)));
evalcond[5]=((1.0)+(((-1.0)*r12*x11981))+(((-1.0)*x11976*x11982))+((r11*x11980)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x11983=((1.0)*cj6);
CheckValue<IkReal> x11984=IKPowWithIntegerCheck(IKsign(((((-1.0)*r11*x11983))+(((-1.0)*r10*sj6)))),-1);
if(!x11984.valid){
continue;
}
CheckValue<IkReal> x11985 = IKatan2WithCheck(IkReal((((r21*sj6))+(((-1.0)*r20*x11983)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x11985.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11984.value)))+(x11985.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11986=IKcos(j5);
IkReal x11987=IKsin(j5);
IkReal x11988=(cj6*r10);
IkReal x11989=(cj6*r00);
IkReal x11990=(cj6*r20);
IkReal x11991=(sj6*x11986);
IkReal x11992=(sj6*x11987);
IkReal x11993=((1.0)*x11986);
IkReal x11994=((1.0)*x11987);
evalcond[0]=((((-1.0)*x11990*x11993))+((r21*x11991))+((r22*x11987)));
evalcond[1]=((((-1.0)*x11988*x11993))+((r12*x11987))+((r11*x11991)));
evalcond[2]=((((-1.0)*x11990*x11994))+((r21*x11992))+(((-1.0)*r22*x11993)));
evalcond[3]=((((-1.0)*r02*x11993))+(((-1.0)*x11989*x11994))+((r01*x11992)));
evalcond[4]=((1.0)+(((-1.0)*x11989*x11993))+((r02*x11987))+((r01*x11991)));
evalcond[5]=((1.0)+(((-1.0)*x11988*x11994))+(((-1.0)*r12*x11993))+((r11*x11992)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x11995=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x11995.valid){
continue;
}
CheckValue<IkReal> x11996 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x11996.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x11995.value)))+(x11996.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x11997=IKcos(j5);
IkReal x11998=IKsin(j5);
IkReal x11999=(cj6*r10);
IkReal x12000=(cj6*r00);
IkReal x12001=(cj6*r20);
IkReal x12002=(sj6*x11997);
IkReal x12003=(sj6*x11998);
IkReal x12004=((1.0)*x11997);
IkReal x12005=((1.0)*x11998);
evalcond[0]=((((-1.0)*x12001*x12004))+((r22*x11998))+((r21*x12002)));
evalcond[1]=((((-1.0)*x11999*x12004))+((r11*x12002))+((r12*x11998)));
evalcond[2]=((((-1.0)*x12001*x12005))+((r21*x12003))+(((-1.0)*r22*x12004)));
evalcond[3]=(((r01*x12003))+(((-1.0)*r02*x12004))+(((-1.0)*x12000*x12005)));
evalcond[4]=((1.0)+((r01*x12002))+(((-1.0)*x12000*x12004))+((r02*x11998)));
evalcond[5]=((1.0)+(((-1.0)*x11999*x12005))+(((-1.0)*r12*x12004))+((r11*x12003)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((1.5707963267949)+j0), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x12006=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x12006;
j5eval[1]=IKsign(x12006);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x12007=((1.0)*cj6);
IkReal x12008=((((-1.0)*r10*sj6))+(((-1.0)*r11*x12007)));
j5eval[0]=x12008;
j5eval[1]=IKsign(x12008);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x12007)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=1.5707963267949;
sj0=1.0;
cj0=0;
IkReal x12009=cj6*cj6;
IkReal x12010=(r11*r21);
IkReal x12011=(r21*sj6);
IkReal x12012=(cj6*r20);
IkReal x12013=(((r11*sj6*x12012))+(((-1.0)*r12*r22))+(((-1.0)*r10*r20*x12009))+((x12009*x12010))+(((-1.0)*x12010))+((cj6*r10*x12011)));
j5eval[0]=x12013;
j5eval[1]=IKsign(x12013);
j5eval[2]=((IKabs(r22))+(IKabs((x12011+(((-1.0)*x12012))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12014=cj6*cj6;
IkReal x12015=(r21*sj6);
IkReal x12016=(cj6*r20);
IkReal x12017=(r11*r21);
CheckValue<IkReal> x12018 = IKatan2WithCheck(IkReal((x12015+(((-1.0)*x12016)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x12018.valid){
continue;
}
CheckValue<IkReal> x12019=IKPowWithIntegerCheck(IKsign((((r11*sj6*x12016))+(((-1.0)*r12*r22))+((x12014*x12017))+(((-1.0)*r10*r20*x12014))+(((-1.0)*x12017))+((cj6*r10*x12015)))),-1);
if(!x12019.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12018.value)+(((1.5707963267949)*(x12019.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12020=IKcos(j5);
IkReal x12021=IKsin(j5);
IkReal x12022=(cj6*r10);
IkReal x12023=(cj6*r00);
IkReal x12024=(cj6*r20);
IkReal x12025=(sj6*x12020);
IkReal x12026=(sj6*x12021);
IkReal x12027=((1.0)*x12020);
IkReal x12028=((1.0)*x12021);
evalcond[0]=((((-1.0)*x12024*x12027))+((r22*x12021))+((r21*x12025)));
evalcond[1]=(((r12*x12021))+((r11*x12025))+(((-1.0)*x12022*x12027)));
evalcond[2]=((((-1.0)*x12024*x12028))+((r21*x12026))+(((-1.0)*r22*x12027)));
evalcond[3]=(((r01*x12026))+(((-1.0)*r02*x12027))+(((-1.0)*x12023*x12028)));
evalcond[4]=((1.0)+((r01*x12025))+(((-1.0)*x12023*x12027))+((r02*x12021)));
evalcond[5]=((1.0)+((r11*x12026))+(((-1.0)*r12*x12027))+(((-1.0)*x12022*x12028)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12029=((1.0)*cj6);
CheckValue<IkReal> x12030=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x12029)))),-1);
if(!x12030.valid){
continue;
}
CheckValue<IkReal> x12031 = IKatan2WithCheck(IkReal(((((-1.0)*r20*x12029))+((r21*sj6)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x12031.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12030.value)))+(x12031.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12032=IKcos(j5);
IkReal x12033=IKsin(j5);
IkReal x12034=(cj6*r10);
IkReal x12035=(cj6*r00);
IkReal x12036=(cj6*r20);
IkReal x12037=(sj6*x12032);
IkReal x12038=(sj6*x12033);
IkReal x12039=((1.0)*x12032);
IkReal x12040=((1.0)*x12033);
evalcond[0]=((((-1.0)*x12036*x12039))+((r22*x12033))+((r21*x12037)));
evalcond[1]=((((-1.0)*x12034*x12039))+((r12*x12033))+((r11*x12037)));
evalcond[2]=(((r21*x12038))+(((-1.0)*r22*x12039))+(((-1.0)*x12036*x12040)));
evalcond[3]=(((r01*x12038))+(((-1.0)*x12035*x12040))+(((-1.0)*r02*x12039)));
evalcond[4]=((1.0)+((r01*x12037))+(((-1.0)*x12035*x12039))+((r02*x12033)));
evalcond[5]=((1.0)+(((-1.0)*x12034*x12040))+(((-1.0)*r12*x12039))+((r11*x12038)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12041=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x12041.valid){
continue;
}
CheckValue<IkReal> x12042 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x12042.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12041.value)))+(x12042.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12043=IKcos(j5);
IkReal x12044=IKsin(j5);
IkReal x12045=(cj6*r10);
IkReal x12046=(cj6*r00);
IkReal x12047=(cj6*r20);
IkReal x12048=(sj6*x12043);
IkReal x12049=(sj6*x12044);
IkReal x12050=((1.0)*x12043);
IkReal x12051=((1.0)*x12044);
evalcond[0]=(((r21*x12048))+(((-1.0)*x12047*x12050))+((r22*x12044)));
evalcond[1]=((((-1.0)*x12045*x12050))+((r12*x12044))+((r11*x12048)));
evalcond[2]=(((r21*x12049))+(((-1.0)*r22*x12050))+(((-1.0)*x12047*x12051)));
evalcond[3]=((((-1.0)*x12046*x12051))+((r01*x12049))+(((-1.0)*r02*x12050)));
evalcond[4]=((1.0)+(((-1.0)*x12046*x12050))+((r02*x12044))+((r01*x12048)));
evalcond[5]=((1.0)+(((-1.0)*x12045*x12051))+((r11*x12049))+(((-1.0)*r12*x12050)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j1, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j0), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x12052=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x12052;
j5eval[1]=IKsign(x12052);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x12053=((1.0)*cj6);
IkReal x12054=((((-1.0)*r21*x12053))+(((-1.0)*r20*sj6)));
j5eval[0]=x12054;
j5eval[1]=((IKabs(r12))+(IKabs(((((-1.0)*r10*x12053))+((r11*sj6))))));
j5eval[2]=IKsign(x12054);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=3.14159265358979;
sj1=0;
cj1=-1.0;
j0=-1.5707963267949;
sj0=-1.0;
cj0=0;
IkReal x12055=cj6*cj6;
IkReal x12056=(r11*r21);
IkReal x12057=(r21*sj6);
IkReal x12058=(cj6*r20);
IkReal x12059=(((cj6*r10*x12057))+(((-1.0)*r10*r20*x12055))+(((-1.0)*r12*r22))+(((-1.0)*x12056))+((r11*sj6*x12058))+((x12055*x12056)));
j5eval[0]=x12059;
j5eval[1]=IKsign(x12059);
j5eval[2]=((IKabs(((((-1.0)*x12058))+x12057)))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12060=cj6*cj6;
IkReal x12061=(r21*sj6);
IkReal x12062=(cj6*r20);
IkReal x12063=(r11*r21);
CheckValue<IkReal> x12064 = IKatan2WithCheck(IkReal(((((-1.0)*x12062))+x12061)),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x12064.valid){
continue;
}
CheckValue<IkReal> x12065=IKPowWithIntegerCheck(IKsign(((((-1.0)*x12063))+((x12060*x12063))+(((-1.0)*r12*r22))+((r11*sj6*x12062))+((cj6*r10*x12061))+(((-1.0)*r10*r20*x12060)))),-1);
if(!x12065.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12064.value)+(((1.5707963267949)*(x12065.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12066=IKcos(j5);
IkReal x12067=IKsin(j5);
IkReal x12068=(cj6*r10);
IkReal x12069=(cj6*r00);
IkReal x12070=(cj6*r20);
IkReal x12071=(sj6*x12066);
IkReal x12072=(sj6*x12067);
IkReal x12073=((1.0)*x12066);
IkReal x12074=((1.0)*x12067);
evalcond[0]=(((r22*x12067))+((r21*x12071))+(((-1.0)*x12070*x12073)));
evalcond[1]=(((r11*x12071))+((r12*x12067))+(((-1.0)*x12068*x12073)));
evalcond[2]=((((-1.0)*r22*x12073))+((r21*x12072))+(((-1.0)*x12070*x12074)));
evalcond[3]=((((-1.0)*x12069*x12074))+(((-1.0)*r02*x12073))+((r01*x12072)));
evalcond[4]=((-1.0)+(((-1.0)*x12069*x12073))+((r02*x12067))+((r01*x12071)));
evalcond[5]=((1.0)+((r11*x12072))+(((-1.0)*r12*x12073))+(((-1.0)*x12068*x12074)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12075=((1.0)*cj6);
CheckValue<IkReal> x12076 = IKatan2WithCheck(IkReal(((((-1.0)*r10*x12075))+((r11*sj6)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x12076.valid){
continue;
}
CheckValue<IkReal> x12077=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x12075))+(((-1.0)*r20*sj6)))),-1);
if(!x12077.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12076.value)+(((1.5707963267949)*(x12077.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12078=IKcos(j5);
IkReal x12079=IKsin(j5);
IkReal x12080=(cj6*r10);
IkReal x12081=(cj6*r00);
IkReal x12082=(cj6*r20);
IkReal x12083=(sj6*x12078);
IkReal x12084=(sj6*x12079);
IkReal x12085=((1.0)*x12078);
IkReal x12086=((1.0)*x12079);
evalcond[0]=(((r22*x12079))+(((-1.0)*x12082*x12085))+((r21*x12083)));
evalcond[1]=((((-1.0)*x12080*x12085))+((r11*x12083))+((r12*x12079)));
evalcond[2]=((((-1.0)*x12082*x12086))+(((-1.0)*r22*x12085))+((r21*x12084)));
evalcond[3]=(((r01*x12084))+(((-1.0)*x12081*x12086))+(((-1.0)*r02*x12085)));
evalcond[4]=((-1.0)+((r01*x12083))+(((-1.0)*x12081*x12085))+((r02*x12079)));
evalcond[5]=((1.0)+(((-1.0)*r12*x12085))+(((-1.0)*x12080*x12086))+((r11*x12084)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12087 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x12087.valid){
continue;
}
CheckValue<IkReal> x12088=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x12088.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12087.value)+(((1.5707963267949)*(x12088.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12089=IKcos(j5);
IkReal x12090=IKsin(j5);
IkReal x12091=(cj6*r10);
IkReal x12092=(cj6*r00);
IkReal x12093=(cj6*r20);
IkReal x12094=(sj6*x12089);
IkReal x12095=(sj6*x12090);
IkReal x12096=((1.0)*x12089);
IkReal x12097=((1.0)*x12090);
evalcond[0]=((((-1.0)*x12093*x12096))+((r22*x12090))+((r21*x12094)));
evalcond[1]=(((r11*x12094))+((r12*x12090))+(((-1.0)*x12091*x12096)));
evalcond[2]=((((-1.0)*x12093*x12097))+(((-1.0)*r22*x12096))+((r21*x12095)));
evalcond[3]=(((r01*x12095))+(((-1.0)*x12092*x12097))+(((-1.0)*r02*x12096)));
evalcond[4]=((-1.0)+((r01*x12094))+(((-1.0)*x12092*x12096))+((r02*x12090)));
evalcond[5]=((1.0)+((r11*x12095))+(((-1.0)*r12*x12096))+(((-1.0)*x12091*x12097)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(((3.14159265358979)+j0), 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x12098=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x12098;
j5eval[1]=IKsign(x12098);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x12099=((1.0)*cj6);
IkReal x12100=((((-1.0)*r10*sj6))+(((-1.0)*r11*x12099)));
j5eval[0]=x12100;
j5eval[1]=IKsign(x12100);
j5eval[2]=((IKabs((((r21*sj6))+(((-1.0)*r20*x12099)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=0;
sj0=0;
cj0=1.0;
IkReal x12101=cj6*cj6;
IkReal x12102=(r11*r21);
IkReal x12103=(r21*sj6);
IkReal x12104=(cj6*r20);
IkReal x12105=(((cj6*r10*x12103))+(((-1.0)*r12*r22))+((x12101*x12102))+(((-1.0)*r10*r20*x12101))+((r11*sj6*x12104))+(((-1.0)*x12102)));
j5eval[0]=x12105;
j5eval[1]=IKsign(x12105);
j5eval[2]=((IKabs(r22))+(IKabs((x12103+(((-1.0)*x12104))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12106=cj6*cj6;
IkReal x12107=(r21*sj6);
IkReal x12108=(cj6*r20);
IkReal x12109=(r11*r21);
CheckValue<IkReal> x12110 = IKatan2WithCheck(IkReal((x12107+(((-1.0)*x12108)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x12110.valid){
continue;
}
CheckValue<IkReal> x12111=IKPowWithIntegerCheck(IKsign((((cj6*r10*x12107))+(((-1.0)*r12*r22))+((x12106*x12109))+(((-1.0)*r10*r20*x12106))+((r11*sj6*x12108))+(((-1.0)*x12109)))),-1);
if(!x12111.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12110.value)+(((1.5707963267949)*(x12111.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12112=IKcos(j5);
IkReal x12113=IKsin(j5);
IkReal x12114=(cj6*r10);
IkReal x12115=(cj6*r00);
IkReal x12116=(cj6*r20);
IkReal x12117=(sj6*x12112);
IkReal x12118=(sj6*x12113);
IkReal x12119=((1.0)*x12112);
IkReal x12120=((1.0)*x12113);
evalcond[0]=((((-1.0)*x12116*x12119))+((r21*x12117))+((r22*x12113)));
evalcond[1]=((((-1.0)*x12114*x12119))+((r12*x12113))+((r11*x12117)));
evalcond[2]=((((-1.0)*r22*x12119))+(((-1.0)*x12116*x12120))+((r21*x12118)));
evalcond[3]=(((r01*x12118))+(((-1.0)*x12115*x12120))+(((-1.0)*r02*x12119)));
evalcond[4]=((1.0)+((r02*x12113))+(((-1.0)*x12115*x12119))+((r01*x12117)));
evalcond[5]=((1.0)+(((-1.0)*r12*x12119))+(((-1.0)*x12114*x12120))+((r11*x12118)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12121=((1.0)*cj6);
CheckValue<IkReal> x12122 = IKatan2WithCheck(IkReal(((((-1.0)*r20*x12121))+((r21*sj6)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x12122.valid){
continue;
}
CheckValue<IkReal> x12123=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x12121)))),-1);
if(!x12123.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12122.value)+(((1.5707963267949)*(x12123.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12124=IKcos(j5);
IkReal x12125=IKsin(j5);
IkReal x12126=(cj6*r10);
IkReal x12127=(cj6*r00);
IkReal x12128=(cj6*r20);
IkReal x12129=(sj6*x12124);
IkReal x12130=(sj6*x12125);
IkReal x12131=((1.0)*x12124);
IkReal x12132=((1.0)*x12125);
evalcond[0]=(((r21*x12129))+((r22*x12125))+(((-1.0)*x12128*x12131)));
evalcond[1]=((((-1.0)*x12126*x12131))+((r12*x12125))+((r11*x12129)));
evalcond[2]=(((r21*x12130))+(((-1.0)*r22*x12131))+(((-1.0)*x12128*x12132)));
evalcond[3]=(((r01*x12130))+(((-1.0)*x12127*x12132))+(((-1.0)*r02*x12131)));
evalcond[4]=((1.0)+((r01*x12129))+(((-1.0)*x12127*x12131))+((r02*x12125)));
evalcond[5]=((1.0)+(((-1.0)*x12126*x12132))+(((-1.0)*r12*x12131))+((r11*x12130)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12133=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x12133.valid){
continue;
}
CheckValue<IkReal> x12134 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x12134.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12133.value)))+(x12134.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12135=IKcos(j5);
IkReal x12136=IKsin(j5);
IkReal x12137=(cj6*r10);
IkReal x12138=(cj6*r00);
IkReal x12139=(cj6*r20);
IkReal x12140=(sj6*x12135);
IkReal x12141=(sj6*x12136);
IkReal x12142=((1.0)*x12135);
IkReal x12143=((1.0)*x12136);
evalcond[0]=(((r22*x12136))+((r21*x12140))+(((-1.0)*x12139*x12142)));
evalcond[1]=((((-1.0)*x12137*x12142))+((r12*x12136))+((r11*x12140)));
evalcond[2]=((((-1.0)*r22*x12142))+((r21*x12141))+(((-1.0)*x12139*x12143)));
evalcond[3]=((((-1.0)*r02*x12142))+((r01*x12141))+(((-1.0)*x12138*x12143)));
evalcond[4]=((1.0)+((r01*x12140))+((r02*x12136))+(((-1.0)*x12138*x12142)));
evalcond[5]=((1.0)+(((-1.0)*x12137*x12143))+(((-1.0)*r12*x12142))+((r11*x12141)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(((-3.14159265358979)+(IKfmod(j0, 6.28318530717959)))))+(IKabs(((-3.14159265358979)+(IKfmod(((4.71238898038469)+j1), 6.28318530717959))))));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x12144=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x12144;
j5eval[1]=IKsign(x12144);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x12145=((1.0)*cj6);
IkReal x12146=((((-1.0)*r21*x12145))+(((-1.0)*r20*sj6)));
j5eval[0]=x12146;
j5eval[1]=((IKabs(r12))+(IKabs((((r11*sj6))+(((-1.0)*r10*x12145))))));
j5eval[2]=IKsign(x12146);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j1=-1.5707963267949;
sj1=-1.0;
cj1=0;
j0=3.14159265358979;
sj0=0;
cj0=-1.0;
IkReal x12147=cj6*cj6;
IkReal x12148=(r11*r21);
IkReal x12149=(r21*sj6);
IkReal x12150=(cj6*r20);
IkReal x12151=(((r11*sj6*x12150))+(((-1.0)*r12*r22))+(((-1.0)*x12148))+((cj6*r10*x12149))+((x12147*x12148))+(((-1.0)*r10*r20*x12147)));
j5eval[0]=x12151;
j5eval[1]=IKsign(x12151);
j5eval[2]=((IKabs(r22))+(IKabs(((((-1.0)*x12150))+x12149))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12152=cj6*cj6;
IkReal x12153=(r21*sj6);
IkReal x12154=(cj6*r20);
IkReal x12155=(r11*r21);
CheckValue<IkReal> x12156=IKPowWithIntegerCheck(IKsign((((r11*sj6*x12154))+(((-1.0)*r12*r22))+(((-1.0)*x12155))+((cj6*r10*x12153))+(((-1.0)*r10*r20*x12152))+((x12152*x12155)))),-1);
if(!x12156.valid){
continue;
}
CheckValue<IkReal> x12157 = IKatan2WithCheck(IkReal(((((-1.0)*x12154))+x12153)),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x12157.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12156.value)))+(x12157.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12158=IKcos(j5);
IkReal x12159=IKsin(j5);
IkReal x12160=(cj6*r10);
IkReal x12161=(cj6*r00);
IkReal x12162=(cj6*r20);
IkReal x12163=(sj6*x12158);
IkReal x12164=(sj6*x12159);
IkReal x12165=((1.0)*x12158);
IkReal x12166=((1.0)*x12159);
evalcond[0]=(((r21*x12163))+((r22*x12159))+(((-1.0)*x12162*x12165)));
evalcond[1]=((((-1.0)*x12160*x12165))+((r12*x12159))+((r11*x12163)));
evalcond[2]=(((r21*x12164))+(((-1.0)*r22*x12165))+(((-1.0)*x12162*x12166)));
evalcond[3]=((((-1.0)*x12161*x12166))+((r01*x12164))+(((-1.0)*r02*x12165)));
evalcond[4]=((-1.0)+(((-1.0)*x12161*x12165))+((r02*x12159))+((r01*x12163)));
evalcond[5]=((1.0)+(((-1.0)*x12160*x12166))+((r11*x12164))+(((-1.0)*r12*x12165)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12167=((1.0)*cj6);
CheckValue<IkReal> x12168=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x12167))+(((-1.0)*r20*sj6)))),-1);
if(!x12168.valid){
continue;
}
CheckValue<IkReal> x12169 = IKatan2WithCheck(IkReal((((r11*sj6))+(((-1.0)*r10*x12167)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x12169.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12168.value)))+(x12169.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12170=IKcos(j5);
IkReal x12171=IKsin(j5);
IkReal x12172=(cj6*r10);
IkReal x12173=(cj6*r00);
IkReal x12174=(cj6*r20);
IkReal x12175=(sj6*x12170);
IkReal x12176=(sj6*x12171);
IkReal x12177=((1.0)*x12170);
IkReal x12178=((1.0)*x12171);
evalcond[0]=(((r21*x12175))+(((-1.0)*x12174*x12177))+((r22*x12171)));
evalcond[1]=(((r11*x12175))+((r12*x12171))+(((-1.0)*x12172*x12177)));
evalcond[2]=(((r21*x12176))+(((-1.0)*r22*x12177))+(((-1.0)*x12174*x12178)));
evalcond[3]=((((-1.0)*x12173*x12178))+((r01*x12176))+(((-1.0)*r02*x12177)));
evalcond[4]=((-1.0)+(((-1.0)*x12173*x12177))+((r01*x12175))+((r02*x12171)));
evalcond[5]=((1.0)+((r11*x12176))+(((-1.0)*r12*x12177))+(((-1.0)*x12172*x12178)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12179 = IKatan2WithCheck(IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IkReal(((-1.0)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x12179.valid){
continue;
}
CheckValue<IkReal> x12180=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x12180.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12179.value)+(((1.5707963267949)*(x12180.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12181=IKcos(j5);
IkReal x12182=IKsin(j5);
IkReal x12183=(cj6*r10);
IkReal x12184=(cj6*r00);
IkReal x12185=(cj6*r20);
IkReal x12186=(sj6*x12181);
IkReal x12187=(sj6*x12182);
IkReal x12188=((1.0)*x12181);
IkReal x12189=((1.0)*x12182);
evalcond[0]=(((r22*x12182))+(((-1.0)*x12185*x12188))+((r21*x12186)));
evalcond[1]=((((-1.0)*x12183*x12188))+((r12*x12182))+((r11*x12186)));
evalcond[2]=((((-1.0)*x12185*x12189))+((r21*x12187))+(((-1.0)*r22*x12188)));
evalcond[3]=((((-1.0)*r02*x12188))+((r01*x12187))+(((-1.0)*x12184*x12189)));
evalcond[4]=((-1.0)+((r02*x12182))+((r01*x12186))+(((-1.0)*x12184*x12188)));
evalcond[5]=((1.0)+(((-1.0)*x12183*x12189))+((r11*x12187))+(((-1.0)*r12*x12188)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r21))+(IKabs(r20)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x12190=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x12190);
rxp1_0=(pz*r11);
rxp1_1=(r01*x12190);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=r22;
j5eval[1]=(((r01*sj6))+(((-1.0)*cj6*r00)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x12191=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x12191);
rxp1_0=(pz*r11);
rxp1_1=(r01*x12191);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
IkReal x12192=((1.0)*cj6);
j5eval[0]=(((r11*sj6))+(((-1.0)*r10*x12192)));
j5eval[1]=(((r01*sj6))+(((-1.0)*r00*x12192)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12193=((1.0)*cj6);
CheckValue<IkReal> x12194=IKPowWithIntegerCheck((((r11*sj6))+(((-1.0)*r10*x12193))),-1);
if(!x12194.valid){
continue;
}
CheckValue<IkReal> x12195=IKPowWithIntegerCheck((((r01*sj6))+(((-1.0)*r00*x12193))),-1);
if(!x12195.valid){
continue;
}
if( IKabs(((-1.0)*(x12194.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x12195.value)*((((cj1*sj0))+((cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x12194.value)))+IKsqr(((x12195.value)*((((cj1*sj0))+((cj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x12194.value)), ((x12195.value)*((((cj1*sj0))+((cj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12196=IKsin(j5);
IkReal x12197=IKcos(j5);
IkReal x12198=((1.0)*cj6);
IkReal x12199=((1.0)*cj1);
IkReal x12200=(sj6*x12197);
IkReal x12201=(sj6*x12196);
evalcond[0]=((-1.0)*r22*x12197);
evalcond[1]=(((r22*x12196))+((sj0*sj1))+(((-1.0)*cj0*x12199)));
evalcond[2]=((((-1.0)*r00*x12196*x12198))+((r01*x12201)));
evalcond[3]=((((-1.0)*r10*x12197*x12198))+((r11*x12200)));
evalcond[4]=((1.0)+(((-1.0)*r10*x12196*x12198))+((r11*x12201)));
evalcond[5]=((((-1.0)*r00*x12197*x12198))+(((-1.0)*sj0*x12199))+((r01*x12200))+(((-1.0)*cj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12202=IKPowWithIntegerCheck(r22,-1);
if(!x12202.valid){
continue;
}
CheckValue<IkReal> x12203=IKPowWithIntegerCheck((((r01*sj6))+(((-1.0)*cj6*r00))),-1);
if(!x12203.valid){
continue;
}
if( IKabs(((x12202.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x12203.value)*((((cj1*sj0))+((cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x12202.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))))+IKsqr(((x12203.value)*((((cj1*sj0))+((cj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x12202.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))), ((x12203.value)*((((cj1*sj0))+((cj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12204=IKsin(j5);
IkReal x12205=IKcos(j5);
IkReal x12206=((1.0)*cj6);
IkReal x12207=((1.0)*cj1);
IkReal x12208=(sj6*x12205);
IkReal x12209=(sj6*x12204);
evalcond[0]=((-1.0)*r22*x12205);
evalcond[1]=(((r22*x12204))+((sj0*sj1))+(((-1.0)*cj0*x12207)));
evalcond[2]=((((-1.0)*r00*x12204*x12206))+((r01*x12209)));
evalcond[3]=((((-1.0)*r10*x12205*x12206))+((r11*x12208)));
evalcond[4]=((1.0)+(((-1.0)*r10*x12204*x12206))+((r11*x12209)));
evalcond[5]=((((-1.0)*r00*x12205*x12206))+((r01*x12208))+(((-1.0)*sj0*x12207))+(((-1.0)*cj0*sj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12210=(r11*sj6);
IkReal x12211=(cj0*cj1);
IkReal x12212=(sj0*sj1);
IkReal x12213=(cj6*r10);
CheckValue<IkReal> x12214=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*cj6*r01)))),-1);
if(!x12214.valid){
continue;
}
CheckValue<IkReal> x12215 = IKatan2WithCheck(IkReal(((((-1.0)*x12212*x12213))+((x12211*x12213))+(((-1.0)*x12210*x12211))+((x12210*x12212)))),IkReal((((r12*x12211))+(((-1.0)*r12*x12212)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12215.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12214.value)))+(x12215.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12216=IKcos(j5);
IkReal x12217=IKsin(j5);
IkReal x12218=((1.0)*cj0);
IkReal x12219=(sj6*x12217);
IkReal x12220=((1.0)*x12216);
IkReal x12221=(sj6*x12216);
IkReal x12222=((1.0)*cj6*x12217);
evalcond[0]=((((-1.0)*cj6*r10*x12220))+((r11*x12221))+((r12*x12217)));
evalcond[1]=((((-1.0)*r22*x12220))+((r21*x12219))+(((-1.0)*r20*x12222)));
evalcond[2]=((((-1.0)*r00*x12222))+((r01*x12219))+(((-1.0)*r02*x12220)));
evalcond[3]=((1.0)+(((-1.0)*r12*x12220))+(((-1.0)*r10*x12222))+((r11*x12219)));
evalcond[4]=(((r22*x12217))+(((-1.0)*cj1*x12218))+((sj0*sj1))+((r21*x12221))+(((-1.0)*cj6*r20*x12220)));
evalcond[5]=((((-1.0)*sj1*x12218))+((r02*x12217))+(((-1.0)*cj1*sj0))+((r01*x12221))+(((-1.0)*cj6*r00*x12220)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12223=((1.0)*cj6);
CheckValue<IkReal> x12224=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x12223)))),-1);
if(!x12224.valid){
continue;
}
CheckValue<IkReal> x12225 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x12223)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12225.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12224.value)))+(x12225.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12226=IKcos(j5);
IkReal x12227=IKsin(j5);
IkReal x12228=((1.0)*cj0);
IkReal x12229=(sj6*x12227);
IkReal x12230=((1.0)*x12226);
IkReal x12231=(sj6*x12226);
IkReal x12232=((1.0)*cj6*x12227);
evalcond[0]=((((-1.0)*cj6*r10*x12230))+((r11*x12231))+((r12*x12227)));
evalcond[1]=((((-1.0)*r22*x12230))+(((-1.0)*r20*x12232))+((r21*x12229)));
evalcond[2]=((((-1.0)*r00*x12232))+(((-1.0)*r02*x12230))+((r01*x12229)));
evalcond[3]=((1.0)+((r11*x12229))+(((-1.0)*r12*x12230))+(((-1.0)*r10*x12232)));
evalcond[4]=((((-1.0)*cj6*r20*x12230))+(((-1.0)*cj1*x12228))+((r22*x12227))+((sj0*sj1))+((r21*x12231)));
evalcond[5]=(((r01*x12231))+(((-1.0)*sj1*x12228))+((r02*x12227))+(((-1.0)*cj6*r00*x12230))+(((-1.0)*cj1*sj0)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12233=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x12233.valid){
continue;
}
CheckValue<IkReal> x12234 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12234.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12233.value)))+(x12234.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12235=IKcos(j5);
IkReal x12236=IKsin(j5);
IkReal x12237=((1.0)*cj0);
IkReal x12238=(sj6*x12236);
IkReal x12239=((1.0)*x12235);
IkReal x12240=(sj6*x12235);
IkReal x12241=((1.0)*cj6*x12236);
evalcond[0]=(((r11*x12240))+((r12*x12236))+(((-1.0)*cj6*r10*x12239)));
evalcond[1]=((((-1.0)*r22*x12239))+(((-1.0)*r20*x12241))+((r21*x12238)));
evalcond[2]=(((r01*x12238))+(((-1.0)*r02*x12239))+(((-1.0)*r00*x12241)));
evalcond[3]=((1.0)+(((-1.0)*r10*x12241))+(((-1.0)*r12*x12239))+((r11*x12238)));
evalcond[4]=((((-1.0)*cj6*r20*x12239))+((sj0*sj1))+(((-1.0)*cj1*x12237))+((r22*x12236))+((r21*x12240)));
evalcond[5]=((((-1.0)*cj6*r00*x12239))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x12237))+((r01*x12240))+((r02*x12236)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12242=((-1.0)*r00);
IkReal x12244 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x12244)==0){
continue;
}
IkReal x12243=pow(x12244,-0.5);
CheckValue<IkReal> x12245 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x12242),IKFAST_ATAN2_MAGTHRESH);
if(!x12245.valid){
continue;
}
IkReal gconst18=((-1.0)*(x12245.value));
IkReal gconst19=(r01*x12243);
IkReal gconst20=(x12242*x12243);
CheckValue<IkReal> x12246 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x12246.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x12246.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x12247=((-1.0)*r00);
IkReal x12248=x12243;
CheckValue<IkReal> x12250 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x12247),IKFAST_ATAN2_MAGTHRESH);
if(!x12250.valid){
continue;
}
IkReal x12249=((-1.0)*(x12250.value));
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst19;
cj6=gconst20;
j6=x12249;
IkReal gconst18=x12249;
IkReal gconst19=(r01*x12248);
IkReal gconst20=(x12247*x12248);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x12251=((-1.0)*r00);
IkReal x12252=x12243;
CheckValue<IkReal> x12254 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x12251),IKFAST_ATAN2_MAGTHRESH);
if(!x12254.valid){
continue;
}
IkReal x12253=((-1.0)*(x12254.value));
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst19;
cj6=gconst20;
j6=x12253;
IkReal gconst18=x12253;
IkReal gconst19=(r01*x12252);
IkReal gconst20=(x12251*x12252);
CheckValue<IkReal> x12262=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r02*r02)))),-1);
if(!x12262.valid){
continue;
}
IkReal x12255=x12262.value;
IkReal x12256=(sj4*x12255);
IkReal x12257=(r20*x12256);
IkReal x12258=(r10*x12256);
IkReal x12259=(r11*x12256);
IkReal x12260=(r21*x12256);
IkReal x12261=(r00*r01*x12256);
j5eval[0]=IKsign((((r10*x12257*(r00*r00)))+((r00*r01*r21*x12258))+((r21*x12259*(r01*r01)))+((r12*r22*sj4))+((r00*r01*r11*x12257))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12263=gconst20*gconst20;
IkReal x12264=gconst19*gconst19;
IkReal x12265=(gconst19*gconst20);
IkReal x12266=(cj4*r21);
IkReal x12267=(r11*r20);
IkReal x12268=(r11*sj4);
IkReal x12269=(r10*sj4);
IkReal x12270=((1.0)*r10*r20);
CheckValue<IkReal> x12271=IKPowWithIntegerCheck(IKsign((((cj4*x12265*x12267))+(((-1.0)*cj4*r12*r22))+(((-1.0)*cj4*x12263*x12270))+((r10*x12265*x12266))+(((-1.0)*r11*x12264*x12266)))),-1);
if(!x12271.valid){
continue;
}
CheckValue<IkReal> x12272 = IKatan2WithCheck(IkReal((((gconst19*r22*x12269))+((gconst20*r22*x12268)))),IkReal(((((-1.0)*r20*x12265*x12269))+(((-1.0)*sj4*x12263*x12267))+((r21*x12265*x12268))+((r21*x12264*x12269)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12272.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12271.value)))+(x12272.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12273=IKsin(j5);
IkReal x12274=IKcos(j5);
IkReal x12275=(sj0*sj1);
IkReal x12276=(gconst20*r20);
IkReal x12277=(cj4*gconst20);
IkReal x12278=(cj4*gconst19);
IkReal x12279=((1.0)*cj0);
IkReal x12280=(gconst20*sj4);
IkReal x12281=(gconst19*sj4);
IkReal x12282=(cj1*sj0);
IkReal x12283=(cj1*x12279);
IkReal x12284=((1.0)*x12273);
IkReal x12285=(cj4*x12273);
IkReal x12286=((1.0)*x12274);
IkReal x12287=(gconst19*x12273);
evalcond[0]=((((-1.0)*r22*x12286))+(((-1.0)*x12276*x12284))+((r21*x12287)));
evalcond[1]=(((r01*x12287))+(((-1.0)*gconst20*r00*x12284))+(((-1.0)*r02*x12286)));
evalcond[2]=((1.0)+(((-1.0)*r12*x12286))+((r11*x12287))+(((-1.0)*gconst20*r10*x12284)));
evalcond[3]=((((-1.0)*r10*x12277*x12286))+((r12*x12285))+((r11*x12280))+((r11*x12274*x12278))+((r10*x12281)));
evalcond[4]=((((-1.0)*r11*x12281*x12286))+((r10*x12274*x12280))+((r10*x12278))+(((-1.0)*r12*sj4*x12284))+((r11*x12277)));
evalcond[5]=(((r22*x12285))+x12282+((r21*x12274*x12278))+(((-1.0)*cj4*x12276*x12286))+((r20*x12281))+((cj0*sj1))+((r21*x12280)));
evalcond[6]=(((r02*x12285))+((r01*x12274*x12278))+x12275+((r00*x12281))+((r01*x12280))+(((-1.0)*r00*x12277*x12286))+(((-1.0)*x12283)));
evalcond[7]=(((r20*x12278))+((r21*x12277))+((sj4*x12274*x12276))+x12275+(((-1.0)*r21*x12281*x12286))+(((-1.0)*x12283))+(((-1.0)*r22*sj4*x12284)));
evalcond[8]=(((r00*x12274*x12280))+(((-1.0)*r01*x12281*x12286))+(((-1.0)*sj1*x12279))+(((-1.0)*x12282))+((r00*x12278))+(((-1.0)*r02*sj4*x12284))+((r01*x12277)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12288=gconst20*gconst20;
IkReal x12289=gconst19*gconst19;
IkReal x12290=(r11*sj4);
IkReal x12291=(cj4*r10);
IkReal x12292=(gconst19*r21);
IkReal x12293=(r10*sj4);
IkReal x12294=(r21*x12289);
IkReal x12295=(cj4*gconst20*r11);
IkReal x12296=(r20*x12288);
IkReal x12297=((1.0)*gconst19*gconst20*r20);
CheckValue<IkReal> x12298=IKPowWithIntegerCheck(IKsign(((((-1.0)*x12290*x12297))+((x12293*x12296))+((x12290*x12294))+((r12*r22*sj4))+(((-1.0)*gconst20*x12292*x12293)))),-1);
if(!x12298.valid){
continue;
}
CheckValue<IkReal> x12299 = IKatan2WithCheck(IkReal((((r22*x12295))+((gconst19*r22*x12291)))),IkReal(((((-1.0)*cj4*r11*x12296))+(((-1.0)*x12291*x12297))+((x12291*x12294))+((x12292*x12295)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12299.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12298.value)))+(x12299.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12300=IKsin(j5);
IkReal x12301=IKcos(j5);
IkReal x12302=(sj0*sj1);
IkReal x12303=(gconst20*r20);
IkReal x12304=(cj4*gconst20);
IkReal x12305=(cj4*gconst19);
IkReal x12306=((1.0)*cj0);
IkReal x12307=(gconst20*sj4);
IkReal x12308=(gconst19*sj4);
IkReal x12309=(cj1*sj0);
IkReal x12310=(cj1*x12306);
IkReal x12311=((1.0)*x12300);
IkReal x12312=(cj4*x12300);
IkReal x12313=((1.0)*x12301);
IkReal x12314=(gconst19*x12300);
evalcond[0]=((((-1.0)*r22*x12313))+(((-1.0)*x12303*x12311))+((r21*x12314)));
evalcond[1]=((((-1.0)*r02*x12313))+((r01*x12314))+(((-1.0)*gconst20*r00*x12311)));
evalcond[2]=((1.0)+((r11*x12314))+(((-1.0)*gconst20*r10*x12311))+(((-1.0)*r12*x12313)));
evalcond[3]=(((r10*x12308))+((r12*x12312))+(((-1.0)*r10*x12304*x12313))+((r11*x12307))+((r11*x12301*x12305)));
evalcond[4]=(((r10*x12305))+((r11*x12304))+(((-1.0)*r12*sj4*x12311))+(((-1.0)*r11*x12308*x12313))+((r10*x12301*x12307)));
evalcond[5]=(((r22*x12312))+x12309+((r21*x12307))+(((-1.0)*cj4*x12303*x12313))+((r20*x12308))+((r21*x12301*x12305))+((cj0*sj1)));
evalcond[6]=(x12302+((r02*x12312))+((r01*x12301*x12305))+((r00*x12308))+((r01*x12307))+(((-1.0)*x12310))+(((-1.0)*r00*x12304*x12313)));
evalcond[7]=((((-1.0)*r21*x12308*x12313))+((sj4*x12301*x12303))+x12302+((r21*x12304))+((r20*x12305))+(((-1.0)*r22*sj4*x12311))+(((-1.0)*x12310)));
evalcond[8]=(((r00*x12301*x12307))+(((-1.0)*x12309))+(((-1.0)*r01*x12308*x12313))+(((-1.0)*r02*sj4*x12311))+((r00*x12305))+((r01*x12304))+(((-1.0)*sj1*x12306)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12315 = IKatan2WithCheck(IkReal(r02),IkReal(((((-1.0)*gconst20*r00))+((gconst19*r01)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12315.valid){
continue;
}
CheckValue<IkReal> x12316=IKPowWithIntegerCheck(IKsign((((gconst20*r21))+((gconst19*r20)))),-1);
if(!x12316.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12315.value)+(((1.5707963267949)*(x12316.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12317=IKsin(j5);
IkReal x12318=IKcos(j5);
IkReal x12319=(sj0*sj1);
IkReal x12320=(gconst20*r20);
IkReal x12321=(cj4*gconst20);
IkReal x12322=(cj4*gconst19);
IkReal x12323=((1.0)*cj0);
IkReal x12324=(gconst20*sj4);
IkReal x12325=(gconst19*sj4);
IkReal x12326=(cj1*sj0);
IkReal x12327=(cj1*x12323);
IkReal x12328=((1.0)*x12317);
IkReal x12329=(cj4*x12317);
IkReal x12330=((1.0)*x12318);
IkReal x12331=(gconst19*x12317);
evalcond[0]=((((-1.0)*r22*x12330))+(((-1.0)*x12320*x12328))+((r21*x12331)));
evalcond[1]=(((r01*x12331))+(((-1.0)*gconst20*r00*x12328))+(((-1.0)*r02*x12330)));
evalcond[2]=((1.0)+((r11*x12331))+(((-1.0)*gconst20*r10*x12328))+(((-1.0)*r12*x12330)));
evalcond[3]=((((-1.0)*r10*x12321*x12330))+((r11*x12318*x12322))+((r10*x12325))+((r12*x12329))+((r11*x12324)));
evalcond[4]=(((r10*x12318*x12324))+((r10*x12322))+(((-1.0)*r12*sj4*x12328))+(((-1.0)*r11*x12325*x12330))+((r11*x12321)));
evalcond[5]=(((r21*x12318*x12322))+x12326+((r20*x12325))+((r21*x12324))+(((-1.0)*cj4*x12320*x12330))+((r22*x12329))+((cj0*sj1)));
evalcond[6]=(((r01*x12318*x12322))+(((-1.0)*r00*x12321*x12330))+((r00*x12325))+x12319+((r01*x12324))+(((-1.0)*x12327))+((r02*x12329)));
evalcond[7]=(x12319+((r20*x12322))+(((-1.0)*r21*x12325*x12330))+((r21*x12321))+(((-1.0)*x12327))+(((-1.0)*r22*sj4*x12328))+((sj4*x12318*x12320)));
evalcond[8]=((((-1.0)*r01*x12325*x12330))+((r00*x12322))+((r01*x12321))+((r00*x12318*x12324))+(((-1.0)*sj1*x12323))+(((-1.0)*x12326))+(((-1.0)*r02*sj4*x12328)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12332=((-1.0)*r01);
IkReal x12334 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x12334)==0){
continue;
}
IkReal x12333=pow(x12334,-0.5);
CheckValue<IkReal> x12335 = IKatan2WithCheck(IkReal(x12332),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x12335.valid){
continue;
}
IkReal gconst21=((3.14159265358979)+(((-1.0)*(x12335.value))));
IkReal gconst22=(x12332*x12333);
IkReal gconst23=((1.0)*r00*x12333);
CheckValue<IkReal> x12336 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x12336.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x12336.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x12337=((-1.0)*r01);
CheckValue<IkReal> x12340 = IKatan2WithCheck(IkReal(x12337),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x12340.valid){
continue;
}
IkReal x12338=((1.0)*(x12340.value));
IkReal x12339=x12333;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst22;
cj6=gconst23;
j6=((3.14159265)+(((-1.0)*x12338)));
IkReal gconst21=((3.14159265358979)+(((-1.0)*x12338)));
IkReal gconst22=(x12337*x12339);
IkReal gconst23=((1.0)*r00*x12339);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
IkReal x12341=((-1.0)*r01);
CheckValue<IkReal> x12344 = IKatan2WithCheck(IkReal(x12341),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x12344.valid){
continue;
}
IkReal x12342=((1.0)*(x12344.value));
IkReal x12343=x12333;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst22;
cj6=gconst23;
j6=((3.14159265)+(((-1.0)*x12342)));
IkReal gconst21=((3.14159265358979)+(((-1.0)*x12342)));
IkReal gconst22=(x12341*x12343);
IkReal gconst23=((1.0)*r00*x12343);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r22;
j5eval[3]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12345=gconst23*gconst23;
IkReal x12346=gconst22*gconst22;
IkReal x12347=((1.0)*cj4);
IkReal x12348=(r10*sj4);
IkReal x12349=(r11*sj4);
IkReal x12350=(r20*x12345);
IkReal x12351=(r21*x12346);
IkReal x12352=(gconst22*gconst23*r21);
IkReal x12353=(gconst22*gconst23*r20);
CheckValue<IkReal> x12354 = IKatan2WithCheck(IkReal((((gconst22*r22*x12348))+((gconst23*r22*x12349)))),IkReal(((((-1.0)*x12349*x12350))+((x12348*x12351))+(((-1.0)*x12348*x12353))+((x12349*x12352)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12354.valid){
continue;
}
CheckValue<IkReal> x12355=IKPowWithIntegerCheck(IKsign(((((-1.0)*r12*r22*x12347))+(((-1.0)*r11*x12347*x12351))+((cj4*r10*x12352))+((cj4*r11*x12353))+(((-1.0)*r10*x12347*x12350)))),-1);
if(!x12355.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12354.value)+(((1.5707963267949)*(x12355.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12356=IKsin(j5);
IkReal x12357=IKcos(j5);
IkReal x12358=(sj0*sj1);
IkReal x12359=(cj4*gconst22);
IkReal x12360=(gconst22*sj4);
IkReal x12361=(gconst23*r10);
IkReal x12362=(cj4*gconst23);
IkReal x12363=(gconst23*sj4);
IkReal x12364=((1.0)*cj0);
IkReal x12365=(cj1*sj0);
IkReal x12366=(cj1*x12364);
IkReal x12367=(r01*x12357);
IkReal x12368=(gconst22*x12356);
IkReal x12369=((1.0)*x12356);
IkReal x12370=(cj4*x12356);
IkReal x12371=(r00*x12357);
IkReal x12372=((1.0)*x12357);
evalcond[0]=((((-1.0)*r22*x12372))+((r21*x12368))+(((-1.0)*gconst23*r20*x12369)));
evalcond[1]=((((-1.0)*gconst23*r00*x12369))+(((-1.0)*r02*x12372))+((r01*x12368)));
evalcond[2]=((1.0)+((r11*x12368))+(((-1.0)*r12*x12372))+(((-1.0)*x12361*x12369)));
evalcond[3]=(((r11*x12363))+((r10*x12360))+(((-1.0)*cj4*x12361*x12372))+((r11*x12357*x12359))+((r12*x12370)));
evalcond[4]=(((r11*x12362))+(((-1.0)*r11*x12360*x12372))+((sj4*x12357*x12361))+((r10*x12359))+(((-1.0)*r12*sj4*x12369)));
evalcond[5]=((((-1.0)*r20*x12362*x12372))+x12365+((r21*x12363))+((r22*x12370))+((r21*x12357*x12359))+((cj0*sj1))+((r20*x12360)));
evalcond[6]=((((-1.0)*x12366))+x12358+(((-1.0)*x12362*x12371))+((r02*x12370))+((r00*x12360))+((x12359*x12367))+((r01*x12363)));
evalcond[7]=((((-1.0)*x12366))+((r20*x12359))+x12358+((r21*x12362))+((r20*x12357*x12363))+(((-1.0)*r22*sj4*x12369))+(((-1.0)*r21*x12360*x12372)));
evalcond[8]=((((-1.0)*r02*sj4*x12369))+(((-1.0)*x12360*x12367))+((r00*x12359))+(((-1.0)*sj1*x12364))+(((-1.0)*x12365))+((x12363*x12371))+((r01*x12362)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12373=((1.0)*gconst23);
CheckValue<IkReal> x12374=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x12373))+(((-1.0)*gconst22*r00)))),-1);
if(!x12374.valid){
continue;
}
CheckValue<IkReal> x12375 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x12373))+((gconst22*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12375.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12374.value)))+(x12375.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12376=IKsin(j5);
IkReal x12377=IKcos(j5);
IkReal x12378=(sj0*sj1);
IkReal x12379=(cj4*gconst22);
IkReal x12380=(gconst22*sj4);
IkReal x12381=(gconst23*r10);
IkReal x12382=(cj4*gconst23);
IkReal x12383=(gconst23*sj4);
IkReal x12384=((1.0)*cj0);
IkReal x12385=(cj1*sj0);
IkReal x12386=(cj1*x12384);
IkReal x12387=(r01*x12377);
IkReal x12388=(gconst22*x12376);
IkReal x12389=((1.0)*x12376);
IkReal x12390=(cj4*x12376);
IkReal x12391=(r00*x12377);
IkReal x12392=((1.0)*x12377);
evalcond[0]=((((-1.0)*gconst23*r20*x12389))+(((-1.0)*r22*x12392))+((r21*x12388)));
evalcond[1]=((((-1.0)*r02*x12392))+(((-1.0)*gconst23*r00*x12389))+((r01*x12388)));
evalcond[2]=((1.0)+(((-1.0)*r12*x12392))+((r11*x12388))+(((-1.0)*x12381*x12389)));
evalcond[3]=(((r11*x12383))+(((-1.0)*cj4*x12381*x12392))+((r10*x12380))+((r11*x12377*x12379))+((r12*x12390)));
evalcond[4]=(((r11*x12382))+((r10*x12379))+(((-1.0)*r12*sj4*x12389))+(((-1.0)*r11*x12380*x12392))+((sj4*x12377*x12381)));
evalcond[5]=(((r22*x12390))+x12385+((r20*x12380))+(((-1.0)*r20*x12382*x12392))+((r21*x12383))+((r21*x12377*x12379))+((cj0*sj1)));
evalcond[6]=(((r02*x12390))+x12378+((r00*x12380))+((r01*x12383))+(((-1.0)*x12386))+((x12379*x12387))+(((-1.0)*x12382*x12391)));
evalcond[7]=((((-1.0)*r21*x12380*x12392))+x12378+((r20*x12377*x12383))+((r21*x12382))+(((-1.0)*x12386))+(((-1.0)*r22*sj4*x12389))+((r20*x12379)));
evalcond[8]=((((-1.0)*sj1*x12384))+((r01*x12382))+(((-1.0)*x12380*x12387))+((x12383*x12391))+(((-1.0)*x12385))+(((-1.0)*r02*sj4*x12389))+((r00*x12379)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12393=IKPowWithIntegerCheck(IKsign((((gconst22*r20))+((gconst23*r21)))),-1);
if(!x12393.valid){
continue;
}
CheckValue<IkReal> x12394 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst22*r01))+(((-1.0)*gconst23*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12394.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12393.value)))+(x12394.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12395=IKsin(j5);
IkReal x12396=IKcos(j5);
IkReal x12397=(sj0*sj1);
IkReal x12398=(cj4*gconst22);
IkReal x12399=(gconst22*sj4);
IkReal x12400=(gconst23*r10);
IkReal x12401=(cj4*gconst23);
IkReal x12402=(gconst23*sj4);
IkReal x12403=((1.0)*cj0);
IkReal x12404=(cj1*sj0);
IkReal x12405=(cj1*x12403);
IkReal x12406=(r01*x12396);
IkReal x12407=(gconst22*x12395);
IkReal x12408=((1.0)*x12395);
IkReal x12409=(cj4*x12395);
IkReal x12410=(r00*x12396);
IkReal x12411=((1.0)*x12396);
evalcond[0]=((((-1.0)*r22*x12411))+((r21*x12407))+(((-1.0)*gconst23*r20*x12408)));
evalcond[1]=((((-1.0)*r02*x12411))+(((-1.0)*gconst23*r00*x12408))+((r01*x12407)));
evalcond[2]=((1.0)+(((-1.0)*r12*x12411))+((r11*x12407))+(((-1.0)*x12400*x12408)));
evalcond[3]=(((r11*x12396*x12398))+(((-1.0)*cj4*x12400*x12411))+((r10*x12399))+((r11*x12402))+((r12*x12409)));
evalcond[4]=((((-1.0)*r11*x12399*x12411))+((sj4*x12396*x12400))+((r10*x12398))+(((-1.0)*r12*sj4*x12408))+((r11*x12401)));
evalcond[5]=(((r22*x12409))+((r20*x12399))+((r21*x12402))+x12404+(((-1.0)*r20*x12401*x12411))+((r21*x12396*x12398))+((cj0*sj1)));
evalcond[6]=((((-1.0)*x12405))+((r02*x12409))+x12397+(((-1.0)*x12401*x12410))+((r00*x12399))+((r01*x12402))+((x12398*x12406)));
evalcond[7]=((((-1.0)*x12405))+(((-1.0)*r21*x12399*x12411))+x12397+((r20*x12398))+((r20*x12396*x12402))+((r21*x12401))+(((-1.0)*r22*sj4*x12408)));
evalcond[8]=((((-1.0)*x12399*x12406))+(((-1.0)*r02*sj4*x12408))+(((-1.0)*sj1*x12403))+((r00*x12398))+((x12402*x12410))+((r01*x12401))+(((-1.0)*x12404)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12413 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x12413)==0){
continue;
}
IkReal x12412=pow(x12413,-0.5);
CheckValue<IkReal> x12414 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12414.valid){
continue;
}
IkReal gconst24=((-1.0)*(x12414.value));
IkReal gconst25=((-1.0)*r21*x12412);
IkReal gconst26=(r20*x12412);
CheckValue<IkReal> x12415 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12415.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x12415.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
CheckValue<IkReal> x12418 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12418.valid){
continue;
}
IkReal x12416=((-1.0)*(x12418.value));
IkReal x12417=x12412;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst25;
cj6=gconst26;
j6=x12416;
IkReal gconst24=x12416;
IkReal gconst25=((-1.0)*r21*x12417);
IkReal gconst26=(r20*x12417);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x12421 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12421.valid){
continue;
}
IkReal x12419=((-1.0)*(x12421.value));
IkReal x12420=x12412;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst25;
cj6=gconst26;
j6=x12419;
IkReal gconst24=x12419;
IkReal gconst25=((-1.0)*r21*x12420);
IkReal gconst26=(r20*x12420);
CheckValue<IkReal> x12429=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r22*r22)))),-1);
if(!x12429.valid){
continue;
}
IkReal x12422=x12429.value;
IkReal x12423=(sj4*x12422);
IkReal x12424=(r10*x12423);
IkReal x12425=(r01*x12423);
IkReal x12426=(r00*x12423);
IkReal x12427=(r11*x12423);
IkReal x12428=(r20*r21*x12423);
j5eval[0]=IKsign((((r02*r12*sj4))+((r01*r20*r21*x12424))+((r00*x12424*(r20*r20)))+((r11*x12425*(r21*r21)))+((r11*r20*r21*x12426))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12430=gconst25*gconst25;
IkReal x12431=gconst26*gconst26;
IkReal x12432=(r10*sj4);
IkReal x12433=(cj4*r11);
IkReal x12434=(cj4*r10);
IkReal x12435=(r11*sj4);
IkReal x12436=(gconst25*gconst26*r00);
IkReal x12437=(r01*x12430);
IkReal x12438=(gconst25*gconst26*r01);
IkReal x12439=((1.0)*r00*x12431);
CheckValue<IkReal> x12440=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj4*r02*r12))+(((-1.0)*x12434*x12439))+(((-1.0)*x12433*x12437))+((x12433*x12436))+((x12434*x12438)))),-1);
if(!x12440.valid){
continue;
}
CheckValue<IkReal> x12441 = IKatan2WithCheck(IkReal((((gconst25*r02*x12432))+((gconst26*r02*x12435)))),IkReal(((((-1.0)*x12432*x12436))+(((-1.0)*x12435*x12439))+((x12432*x12437))+((x12435*x12438)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12441.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12440.value)))+(x12441.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12442=IKsin(j5);
IkReal x12443=IKcos(j5);
IkReal x12444=(sj0*sj1);
IkReal x12445=(cj4*gconst26);
IkReal x12446=((1.0)*sj4);
IkReal x12447=((1.0)*cj0);
IkReal x12448=((1.0)*r20);
IkReal x12449=(gconst25*r01);
IkReal x12450=(gconst26*sj4);
IkReal x12451=(cj4*gconst25);
IkReal x12452=((1.0)*r10);
IkReal x12453=(gconst25*sj4);
IkReal x12454=(gconst25*r21);
IkReal x12455=(cj1*sj0);
IkReal x12456=(cj1*x12447);
IkReal x12457=(cj4*x12442);
IkReal x12458=(gconst26*x12442);
IkReal x12459=(r00*x12443);
IkReal x12460=((1.0)*x12443);
IkReal x12461=(gconst25*r11*x12443);
evalcond[0]=((((-1.0)*r22*x12460))+((x12442*x12454))+(((-1.0)*x12448*x12458)));
evalcond[1]=((((-1.0)*r02*x12460))+((x12442*x12449))+(((-1.0)*r00*x12458)));
evalcond[2]=((1.0)+(((-1.0)*x12452*x12458))+((gconst25*r11*x12442))+(((-1.0)*r12*x12460)));
evalcond[3]=(((r11*x12443*x12451))+((r11*x12450))+((r12*x12457))+(((-1.0)*x12443*x12445*x12452))+((r10*x12453)));
evalcond[4]=((((-1.0)*r12*x12442*x12446))+(((-1.0)*x12446*x12461))+((r11*x12445))+((r10*x12451))+((r10*x12443*x12450)));
evalcond[5]=(((r22*x12457))+((r21*x12443*x12451))+((r20*x12453))+(((-1.0)*x12443*x12445*x12448))+x12455+((cj0*sj1))+((r21*x12450)));
evalcond[6]=(((r02*x12457))+((cj4*x12443*x12449))+(((-1.0)*x12445*x12459))+((r01*x12450))+((r00*x12453))+(((-1.0)*x12456))+x12444);
evalcond[7]=(((r20*x12443*x12450))+((r21*x12445))+(((-1.0)*r22*x12442*x12446))+((r20*x12451))+(((-1.0)*x12443*x12446*x12454))+(((-1.0)*x12456))+x12444);
evalcond[8]=(((r01*x12445))+(((-1.0)*r02*x12442*x12446))+((x12450*x12459))+(((-1.0)*sj1*x12447))+(((-1.0)*x12455))+((r00*x12451))+(((-1.0)*x12443*x12446*x12449)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12462=gconst26*gconst26;
IkReal x12463=gconst25*gconst25;
IkReal x12464=(cj4*r10);
IkReal x12465=(r10*sj4);
IkReal x12466=(cj4*r11);
IkReal x12467=(r11*sj4);
IkReal x12468=(r00*x12462);
IkReal x12469=(r01*x12463);
IkReal x12470=((1.0)*gconst25*gconst26);
CheckValue<IkReal> x12471 = IKatan2WithCheck(IkReal((((gconst26*r02*x12466))+((gconst25*r02*x12464)))),IkReal((((x12464*x12469))+((gconst25*gconst26*r01*x12466))+(((-1.0)*x12466*x12468))+(((-1.0)*r00*x12464*x12470)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12471.valid){
continue;
}
CheckValue<IkReal> x12472=IKPowWithIntegerCheck(IKsign((((x12465*x12468))+((r02*r12*sj4))+(((-1.0)*r01*x12465*x12470))+(((-1.0)*r00*x12467*x12470))+((x12467*x12469)))),-1);
if(!x12472.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12471.value)+(((1.5707963267949)*(x12472.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12473=IKsin(j5);
IkReal x12474=IKcos(j5);
IkReal x12475=(sj0*sj1);
IkReal x12476=(cj4*gconst26);
IkReal x12477=((1.0)*sj4);
IkReal x12478=((1.0)*cj0);
IkReal x12479=((1.0)*r20);
IkReal x12480=(gconst25*r01);
IkReal x12481=(gconst26*sj4);
IkReal x12482=(cj4*gconst25);
IkReal x12483=((1.0)*r10);
IkReal x12484=(gconst25*sj4);
IkReal x12485=(gconst25*r21);
IkReal x12486=(cj1*sj0);
IkReal x12487=(cj1*x12478);
IkReal x12488=(cj4*x12473);
IkReal x12489=(gconst26*x12473);
IkReal x12490=(r00*x12474);
IkReal x12491=((1.0)*x12474);
IkReal x12492=(gconst25*r11*x12474);
evalcond[0]=(((x12473*x12485))+(((-1.0)*x12479*x12489))+(((-1.0)*r22*x12491)));
evalcond[1]=(((x12473*x12480))+(((-1.0)*r02*x12491))+(((-1.0)*r00*x12489)));
evalcond[2]=((1.0)+(((-1.0)*x12483*x12489))+((gconst25*r11*x12473))+(((-1.0)*r12*x12491)));
evalcond[3]=(((r12*x12488))+((r11*x12474*x12482))+((r11*x12481))+(((-1.0)*x12474*x12476*x12483))+((r10*x12484)));
evalcond[4]=((((-1.0)*r12*x12473*x12477))+((r11*x12476))+(((-1.0)*x12477*x12492))+((r10*x12474*x12481))+((r10*x12482)));
evalcond[5]=(((r22*x12488))+((r20*x12484))+x12486+((cj0*sj1))+((r21*x12481))+((r21*x12474*x12482))+(((-1.0)*x12474*x12476*x12479)));
evalcond[6]=((((-1.0)*x12487))+(((-1.0)*x12476*x12490))+((r02*x12488))+((r00*x12484))+((r01*x12481))+x12475+((cj4*x12474*x12480)));
evalcond[7]=((((-1.0)*x12487))+((r20*x12474*x12481))+(((-1.0)*r22*x12473*x12477))+((r20*x12482))+x12475+(((-1.0)*x12474*x12477*x12485))+((r21*x12476)));
evalcond[8]=(((r01*x12476))+(((-1.0)*x12486))+(((-1.0)*r02*x12473*x12477))+((r00*x12482))+(((-1.0)*x12474*x12477*x12480))+((x12481*x12490))+(((-1.0)*sj1*x12478)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12493=((1.0)*gconst26);
CheckValue<IkReal> x12494=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x12493))+(((-1.0)*gconst25*r00)))),-1);
if(!x12494.valid){
continue;
}
CheckValue<IkReal> x12495 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x12493))+((gconst25*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12495.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12494.value)))+(x12495.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12496=IKsin(j5);
IkReal x12497=IKcos(j5);
IkReal x12498=(sj0*sj1);
IkReal x12499=(cj4*gconst26);
IkReal x12500=((1.0)*sj4);
IkReal x12501=((1.0)*cj0);
IkReal x12502=((1.0)*r20);
IkReal x12503=(gconst25*r01);
IkReal x12504=(gconst26*sj4);
IkReal x12505=(cj4*gconst25);
IkReal x12506=((1.0)*r10);
IkReal x12507=(gconst25*sj4);
IkReal x12508=(gconst25*r21);
IkReal x12509=(cj1*sj0);
IkReal x12510=(cj1*x12501);
IkReal x12511=(cj4*x12496);
IkReal x12512=(gconst26*x12496);
IkReal x12513=(r00*x12497);
IkReal x12514=((1.0)*x12497);
IkReal x12515=(gconst25*r11*x12497);
evalcond[0]=((((-1.0)*x12502*x12512))+(((-1.0)*r22*x12514))+((x12496*x12508)));
evalcond[1]=((((-1.0)*r02*x12514))+((x12496*x12503))+(((-1.0)*r00*x12512)));
evalcond[2]=((1.0)+(((-1.0)*r12*x12514))+(((-1.0)*x12506*x12512))+((gconst25*r11*x12496)));
evalcond[3]=(((r12*x12511))+((r11*x12504))+(((-1.0)*x12497*x12499*x12506))+((r10*x12507))+((r11*x12497*x12505)));
evalcond[4]=((((-1.0)*r12*x12496*x12500))+(((-1.0)*x12500*x12515))+((r10*x12505))+((r10*x12497*x12504))+((r11*x12499)));
evalcond[5]=(((r20*x12507))+((r21*x12504))+(((-1.0)*x12497*x12499*x12502))+((r22*x12511))+x12509+((r21*x12497*x12505))+((cj0*sj1)));
evalcond[6]=((((-1.0)*x12510))+((r01*x12504))+((r00*x12507))+((cj4*x12497*x12503))+(((-1.0)*x12499*x12513))+((r02*x12511))+x12498);
evalcond[7]=((((-1.0)*x12510))+(((-1.0)*r22*x12496*x12500))+(((-1.0)*x12497*x12500*x12508))+((r20*x12505))+((r21*x12499))+x12498+((r20*x12497*x12504)));
evalcond[8]=(((r01*x12499))+((r00*x12505))+(((-1.0)*x12497*x12500*x12503))+(((-1.0)*x12509))+(((-1.0)*r02*x12496*x12500))+((x12504*x12513))+(((-1.0)*sj1*x12501)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x12517 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x12517)==0){
continue;
}
IkReal x12516=pow(x12517,-0.5);
CheckValue<IkReal> x12518 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12518.valid){
continue;
}
IkReal gconst27=((3.14159265358979)+(((-1.0)*(x12518.value))));
IkReal gconst28=((1.0)*r21*x12516);
IkReal gconst29=((-1.0)*r20*x12516);
CheckValue<IkReal> x12519 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12519.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x12519.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
CheckValue<IkReal> x12522 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12522.valid){
continue;
}
IkReal x12520=((1.0)*(x12522.value));
IkReal x12521=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12520)));
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12520)));
IkReal gconst28=((1.0)*r21*x12521);
IkReal gconst29=((-1.0)*r20*x12521);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x12525 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12525.valid){
continue;
}
IkReal x12523=((1.0)*(x12525.value));
IkReal x12524=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12523)));
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12523)));
IkReal gconst28=((1.0)*r21*x12524);
IkReal gconst29=((-1.0)*r20*x12524);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
CheckValue<IkReal> x12528 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12528.valid){
continue;
}
IkReal x12526=((1.0)*(x12528.value));
IkReal x12527=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12526)));
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12526)));
IkReal gconst28=((1.0)*r21*x12527);
IkReal gconst29=((-1.0)*r20*x12527);
j5eval[0]=r02;
j5eval[1]=sj4;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
CheckValue<IkReal> x12531 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12531.valid){
continue;
}
IkReal x12529=((1.0)*(x12531.value));
IkReal x12530=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12529)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12529)));
IkReal gconst28=((1.0)*r21*x12530);
IkReal gconst29=((-1.0)*r20*x12530);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x12534 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12534.valid){
continue;
}
IkReal x12532=((1.0)*(x12534.value));
IkReal x12533=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12532)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12532)));
IkReal gconst28=((1.0)*r21*x12533);
IkReal gconst29=((-1.0)*r20*x12533);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
CheckValue<IkReal> x12537 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12537.valid){
continue;
}
IkReal x12535=((1.0)*(x12537.value));
IkReal x12536=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12535)));
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12535)));
IkReal gconst28=((1.0)*r21*x12536);
IkReal gconst29=((-1.0)*r20*x12536);
j5eval[0]=r12;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12538=(gconst29*r10);
IkReal x12539=(gconst28*r11);
CheckValue<IkReal> x12540=IKPowWithIntegerCheck(IKsign(((x12538*x12538)+(r12*r12)+(x12539*x12539)+(((-2.0)*x12538*x12539)))),-1);
if(!x12540.valid){
continue;
}
CheckValue<IkReal> x12541 = IKatan2WithCheck(IkReal(((((-1.0)*x12539))+x12538)),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x12541.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12540.value)))+(x12541.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12542=IKsin(j5);
IkReal x12543=IKcos(j5);
IkReal x12544=(gconst29*r10);
IkReal x12545=((1.0)*cj0);
IkReal x12546=(gconst29*r00);
IkReal x12547=(gconst29*r20);
IkReal x12548=((1.0)*x12542);
IkReal x12549=(gconst28*x12542);
IkReal x12550=((1.0)*x12543);
IkReal x12551=(gconst28*x12550);
evalcond[0]=((((-1.0)*x12547*x12548))+(((-1.0)*r22*x12550))+((r21*x12549)));
evalcond[1]=(((r01*x12549))+(((-1.0)*x12546*x12548))+(((-1.0)*r02*x12550)));
evalcond[2]=(((x12543*x12544))+(((-1.0)*r11*x12551))+(((-1.0)*r12*x12548)));
evalcond[3]=((1.0)+(((-1.0)*x12544*x12548))+(((-1.0)*r12*x12550))+((r11*x12549)));
evalcond[4]=((((-1.0)*r22*x12548))+(((-1.0)*r21*x12551))+((sj0*sj1))+(((-1.0)*cj1*x12545))+((x12543*x12547)));
evalcond[5]=((((-1.0)*r01*x12551))+(((-1.0)*cj1*sj0))+((x12543*x12546))+(((-1.0)*sj1*x12545))+(((-1.0)*r02*x12548)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12552=((1.0)*gconst29);
CheckValue<IkReal> x12553 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x12552))+((gconst28*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12553.valid){
continue;
}
CheckValue<IkReal> x12554=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x12552))+(((-1.0)*gconst28*r00)))),-1);
if(!x12554.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12553.value)+(((1.5707963267949)*(x12554.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12555=IKsin(j5);
IkReal x12556=IKcos(j5);
IkReal x12557=(gconst29*r10);
IkReal x12558=((1.0)*cj0);
IkReal x12559=(gconst29*r00);
IkReal x12560=(gconst29*r20);
IkReal x12561=((1.0)*x12555);
IkReal x12562=(gconst28*x12555);
IkReal x12563=((1.0)*x12556);
IkReal x12564=(gconst28*x12563);
evalcond[0]=((((-1.0)*r22*x12563))+(((-1.0)*x12560*x12561))+((r21*x12562)));
evalcond[1]=((((-1.0)*r02*x12563))+((r01*x12562))+(((-1.0)*x12559*x12561)));
evalcond[2]=(((x12556*x12557))+(((-1.0)*r11*x12564))+(((-1.0)*r12*x12561)));
evalcond[3]=((1.0)+((r11*x12562))+(((-1.0)*r12*x12563))+(((-1.0)*x12557*x12561)));
evalcond[4]=((((-1.0)*r22*x12561))+((x12556*x12560))+((sj0*sj1))+(((-1.0)*cj1*x12558))+(((-1.0)*r21*x12564)));
evalcond[5]=(((x12556*x12559))+(((-1.0)*r01*x12564))+(((-1.0)*r02*x12561))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x12558)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12565=IKPowWithIntegerCheck(IKsign((((gconst29*r21))+((gconst28*r20)))),-1);
if(!x12565.valid){
continue;
}
CheckValue<IkReal> x12566 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst28*r01))+(((-1.0)*gconst29*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12566.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12565.value)))+(x12566.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12567=IKsin(j5);
IkReal x12568=IKcos(j5);
IkReal x12569=(gconst29*r10);
IkReal x12570=((1.0)*cj0);
IkReal x12571=(gconst29*r00);
IkReal x12572=(gconst29*r20);
IkReal x12573=((1.0)*x12567);
IkReal x12574=(gconst28*x12567);
IkReal x12575=((1.0)*x12568);
IkReal x12576=(gconst28*x12575);
evalcond[0]=((((-1.0)*x12572*x12573))+((r21*x12574))+(((-1.0)*r22*x12575)));
evalcond[1]=((((-1.0)*x12571*x12573))+(((-1.0)*r02*x12575))+((r01*x12574)));
evalcond[2]=(((x12568*x12569))+(((-1.0)*r12*x12573))+(((-1.0)*r11*x12576)));
evalcond[3]=((1.0)+(((-1.0)*x12569*x12573))+(((-1.0)*r12*x12575))+((r11*x12574)));
evalcond[4]=((((-1.0)*r21*x12576))+((x12568*x12572))+((sj0*sj1))+(((-1.0)*r22*x12573))+(((-1.0)*cj1*x12570)));
evalcond[5]=((((-1.0)*sj1*x12570))+(((-1.0)*cj1*sj0))+((x12568*x12571))+(((-1.0)*r02*x12573))+(((-1.0)*r01*x12576)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
CheckValue<IkReal> x12579 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12579.valid){
continue;
}
IkReal x12577=((1.0)*(x12579.value));
IkReal x12578=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12577)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12577)));
IkReal gconst28=((1.0)*r21*x12578);
IkReal gconst29=((-1.0)*r20*x12578);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x12582 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12582.valid){
continue;
}
IkReal x12580=((1.0)*(x12582.value));
IkReal x12581=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12580)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12580)));
IkReal gconst28=((1.0)*r21*x12581);
IkReal gconst29=((-1.0)*r20*x12581);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
CheckValue<IkReal> x12585 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12585.valid){
continue;
}
IkReal x12583=((1.0)*(x12585.value));
IkReal x12584=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12583)));
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12583)));
IkReal gconst28=((1.0)*r21*x12584);
IkReal gconst29=((-1.0)*r20*x12584);
IkReal x12586=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x12590=IKPowWithIntegerCheck(x12586,-1);
if(!x12590.valid){
continue;
}
IkReal x12587=x12590.value;
IkReal x12588=((1.0)*x12587);
IkReal x12589=((((-2.0)*r10*r11*r20*r21*x12587))+(((-1.0)*x12588*(r10*r10)*(r20*r20)))+(((-1.0)*x12588*(r11*r11)*(r21*r21)))+(((-1.0)*(r12*r12))));
j5eval[0]=x12589;
j5eval[1]=r12;
j5eval[2]=x12586;
j5eval[3]=IKsign(x12589);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12591=(gconst28*r11);
IkReal x12592=(gconst29*r10);
CheckValue<IkReal> x12593=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x12591*x12591)))+(((-1.0)*(r12*r12)))+(((-1.0)*(x12592*x12592)))+(((2.0)*x12591*x12592)))),-1);
if(!x12593.valid){
continue;
}
CheckValue<IkReal> x12594 = IKatan2WithCheck(IkReal((x12591+(((-1.0)*x12592)))),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x12594.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12593.value)))+(x12594.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12595=IKcos(j5);
IkReal x12596=IKsin(j5);
IkReal x12597=((1.0)*gconst29);
IkReal x12598=((1.0)*cj0);
IkReal x12599=(gconst28*x12595);
IkReal x12600=(gconst28*x12596);
IkReal x12601=((1.0)*x12595);
evalcond[0]=(((r12*x12596))+(((-1.0)*r10*x12595*x12597))+((r11*x12599)));
evalcond[1]=((((-1.0)*r20*x12596*x12597))+(((-1.0)*r22*x12601))+((r21*x12600)));
evalcond[2]=(((r01*x12600))+(((-1.0)*r00*x12596*x12597))+(((-1.0)*r02*x12601)));
evalcond[3]=((1.0)+(((-1.0)*r10*x12596*x12597))+((r11*x12600))+(((-1.0)*r12*x12601)));
evalcond[4]=((((-1.0)*r20*x12595*x12597))+((r21*x12599))+((sj0*sj1))+((r22*x12596))+(((-1.0)*cj1*x12598)));
evalcond[5]=(((r01*x12599))+(((-1.0)*sj1*x12598))+(((-1.0)*cj1*sj0))+((r02*x12596))+(((-1.0)*r00*x12595*x12597)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12602=((1.0)*gconst29);
CheckValue<IkReal> x12603=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x12602))+(((-1.0)*gconst28*r00)))),-1);
if(!x12603.valid){
continue;
}
CheckValue<IkReal> x12604 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst28*r21))+(((-1.0)*r20*x12602)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12604.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12603.value)))+(x12604.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12605=IKcos(j5);
IkReal x12606=IKsin(j5);
IkReal x12607=((1.0)*gconst29);
IkReal x12608=((1.0)*cj0);
IkReal x12609=(gconst28*x12605);
IkReal x12610=(gconst28*x12606);
IkReal x12611=((1.0)*x12605);
evalcond[0]=(((r11*x12609))+(((-1.0)*r10*x12605*x12607))+((r12*x12606)));
evalcond[1]=((((-1.0)*r22*x12611))+((r21*x12610))+(((-1.0)*r20*x12606*x12607)));
evalcond[2]=((((-1.0)*r00*x12606*x12607))+(((-1.0)*r02*x12611))+((r01*x12610)));
evalcond[3]=((1.0)+(((-1.0)*r12*x12611))+(((-1.0)*r10*x12606*x12607))+((r11*x12610)));
evalcond[4]=((((-1.0)*cj1*x12608))+((sj0*sj1))+((r22*x12606))+((r21*x12609))+(((-1.0)*r20*x12605*x12607)));
evalcond[5]=(((r01*x12609))+(((-1.0)*sj1*x12608))+(((-1.0)*cj1*sj0))+(((-1.0)*r00*x12605*x12607))+((r02*x12606)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12612=IKPowWithIntegerCheck(IKsign((((gconst29*r21))+((gconst28*r20)))),-1);
if(!x12612.valid){
continue;
}
CheckValue<IkReal> x12613 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst28*r01))+(((-1.0)*gconst29*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12613.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12612.value)))+(x12613.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12614=IKcos(j5);
IkReal x12615=IKsin(j5);
IkReal x12616=((1.0)*gconst29);
IkReal x12617=((1.0)*cj0);
IkReal x12618=(gconst28*x12614);
IkReal x12619=(gconst28*x12615);
IkReal x12620=((1.0)*x12614);
evalcond[0]=((((-1.0)*r10*x12614*x12616))+((r11*x12618))+((r12*x12615)));
evalcond[1]=((((-1.0)*r22*x12620))+(((-1.0)*r20*x12615*x12616))+((r21*x12619)));
evalcond[2]=((((-1.0)*r02*x12620))+(((-1.0)*r00*x12615*x12616))+((r01*x12619)));
evalcond[3]=((1.0)+(((-1.0)*r12*x12620))+(((-1.0)*r10*x12615*x12616))+((r11*x12619)));
evalcond[4]=((((-1.0)*cj1*x12617))+(((-1.0)*r20*x12614*x12616))+((sj0*sj1))+((r21*x12618))+((r22*x12615)));
evalcond[5]=(((r02*x12615))+(((-1.0)*r00*x12614*x12616))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x12617))+((r01*x12618)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
CheckValue<IkReal> x12623 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12623.valid){
continue;
}
IkReal x12621=((1.0)*(x12623.value));
IkReal x12622=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12621)));
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12621)));
IkReal gconst28=((1.0)*r21*x12622);
IkReal gconst29=((-1.0)*r20*x12622);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x12626 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12626.valid){
continue;
}
IkReal x12624=((1.0)*(x12626.value));
IkReal x12625=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12624)));
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12624)));
IkReal gconst28=((1.0)*r21*x12625);
IkReal gconst29=((-1.0)*r20*x12625);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[4];
CheckValue<IkReal> x12629 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12629.valid){
continue;
}
IkReal x12627=((1.0)*(x12629.value));
IkReal x12628=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12627)));
sj4=0;
cj4=1.0;
j4=0;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12627)));
IkReal gconst28=((1.0)*r21*x12628);
IkReal gconst29=((-1.0)*r20*x12628);
IkReal x12630=((1.0)+(((-1.0)*(r22*r22))));
CheckValue<IkReal> x12634=IKPowWithIntegerCheck(x12630,-1);
if(!x12634.valid){
continue;
}
IkReal x12631=x12634.value;
IkReal x12632=((1.0)*x12631);
IkReal x12633=((((-1.0)*(r12*r12)))+(((-1.0)*x12632*(r11*r11)*(r21*r21)))+(((-1.0)*x12632*(r10*r10)*(r20*r20)))+(((-2.0)*r10*r11*r20*r21*x12631)));
j5eval[0]=x12633;
j5eval[1]=r12;
j5eval[2]=x12630;
j5eval[3]=IKsign(x12633);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12635=(gconst28*r11);
IkReal x12636=(gconst29*r10);
CheckValue<IkReal> x12637=IKPowWithIntegerCheck(IKsign(((((-1.0)*(x12636*x12636)))+(((2.0)*x12635*x12636))+(((-1.0)*(x12635*x12635)))+(((-1.0)*(r12*r12))))),-1);
if(!x12637.valid){
continue;
}
CheckValue<IkReal> x12638 = IKatan2WithCheck(IkReal(((((-1.0)*x12636))+x12635)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x12638.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12637.value)))+(x12638.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12639=IKcos(j5);
IkReal x12640=IKsin(j5);
IkReal x12641=((1.0)*gconst29);
IkReal x12642=(gconst28*x12639);
IkReal x12643=(gconst28*x12640);
IkReal x12644=((1.0)*x12639);
evalcond[0]=(((r12*x12640))+(((-1.0)*r10*x12639*x12641))+((r11*x12642)));
evalcond[1]=((((-1.0)*r22*x12644))+(((-1.0)*r20*x12640*x12641))+((r21*x12643)));
evalcond[2]=((((-1.0)*r02*x12644))+(((-1.0)*r00*x12640*x12641))+((r01*x12643)));
evalcond[3]=((1.0)+(((-1.0)*r10*x12640*x12641))+(((-1.0)*r12*x12644))+((r11*x12643)));
evalcond[4]=(((cj1*sj0))+((r22*x12640))+((r21*x12642))+((cj0*sj1))+(((-1.0)*r20*x12639*x12641)));
evalcond[5]=((((-1.0)*r00*x12639*x12641))+((sj0*sj1))+((r01*x12642))+((r02*x12640))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12645=((1.0)*gconst29);
CheckValue<IkReal> x12646=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst28*r00))+(((-1.0)*r01*x12645)))),-1);
if(!x12646.valid){
continue;
}
CheckValue<IkReal> x12647 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x12645))+((gconst28*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12647.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12646.value)))+(x12647.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12648=IKcos(j5);
IkReal x12649=IKsin(j5);
IkReal x12650=((1.0)*gconst29);
IkReal x12651=(gconst28*x12648);
IkReal x12652=(gconst28*x12649);
IkReal x12653=((1.0)*x12648);
evalcond[0]=(((r12*x12649))+((r11*x12651))+(((-1.0)*r10*x12648*x12650)));
evalcond[1]=(((r21*x12652))+(((-1.0)*r22*x12653))+(((-1.0)*r20*x12649*x12650)));
evalcond[2]=((((-1.0)*r00*x12649*x12650))+(((-1.0)*r02*x12653))+((r01*x12652)));
evalcond[3]=((1.0)+(((-1.0)*r10*x12649*x12650))+((r11*x12652))+(((-1.0)*r12*x12653)));
evalcond[4]=((((-1.0)*r20*x12648*x12650))+((r21*x12651))+((cj1*sj0))+((r22*x12649))+((cj0*sj1)));
evalcond[5]=(((sj0*sj1))+(((-1.0)*r00*x12648*x12650))+((r02*x12649))+(((-1.0)*cj0*cj1))+((r01*x12651)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12654=IKPowWithIntegerCheck(IKsign((((gconst29*r21))+((gconst28*r20)))),-1);
if(!x12654.valid){
continue;
}
CheckValue<IkReal> x12655 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst28*r01))+(((-1.0)*gconst29*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12655.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12654.value)))+(x12655.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12656=IKcos(j5);
IkReal x12657=IKsin(j5);
IkReal x12658=((1.0)*gconst29);
IkReal x12659=(gconst28*x12656);
IkReal x12660=(gconst28*x12657);
IkReal x12661=((1.0)*x12656);
evalcond[0]=((((-1.0)*r10*x12656*x12658))+((r11*x12659))+((r12*x12657)));
evalcond[1]=((((-1.0)*r22*x12661))+((r21*x12660))+(((-1.0)*r20*x12657*x12658)));
evalcond[2]=((((-1.0)*r00*x12657*x12658))+(((-1.0)*r02*x12661))+((r01*x12660)));
evalcond[3]=((1.0)+(((-1.0)*r10*x12657*x12658))+((r11*x12660))+(((-1.0)*r12*x12661)));
evalcond[4]=(((r22*x12657))+((r21*x12659))+((cj1*sj0))+(((-1.0)*r20*x12656*x12658))+((cj0*sj1)));
evalcond[5]=(((r02*x12657))+(((-1.0)*r00*x12656*x12658))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r01*x12659)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
CheckValue<IkReal> x12664 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12664.valid){
continue;
}
IkReal x12662=((1.0)*(x12664.value));
IkReal x12663=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12662)));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12662)));
IkReal gconst28=((1.0)*r21*x12663);
IkReal gconst29=((-1.0)*r20*x12663);
j5eval[0]=0;
j5eval[1]=r02;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x12667 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12667.valid){
continue;
}
IkReal x12665=((1.0)*(x12667.value));
IkReal x12666=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12665)));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12665)));
IkReal gconst28=((1.0)*r21*x12666);
IkReal gconst29=((-1.0)*r20*x12666);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
CheckValue<IkReal> x12670 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x12670.valid){
continue;
}
IkReal x12668=((1.0)*(x12670.value));
IkReal x12669=x12516;
sj2=0;
cj2=1.0;
j2=0;
sj6=gconst28;
cj6=gconst29;
j6=((3.14159265)+(((-1.0)*x12668)));
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal gconst27=((3.14159265358979)+(((-1.0)*x12668)));
IkReal gconst28=((1.0)*r21*x12669);
IkReal gconst29=((-1.0)*r20*x12669);
j5eval[0]=r12;
j5eval[1]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12671=(gconst29*r10);
IkReal x12672=(gconst28*r11);
CheckValue<IkReal> x12673 = IKatan2WithCheck(IkReal(((((-1.0)*x12672))+x12671)),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x12673.valid){
continue;
}
CheckValue<IkReal> x12674=IKPowWithIntegerCheck(IKsign(((x12671*x12671)+(r12*r12)+(((-2.0)*x12671*x12672))+(x12672*x12672))),-1);
if(!x12674.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12673.value)+(((1.5707963267949)*(x12674.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12675=IKsin(j5);
IkReal x12676=IKcos(j5);
IkReal x12677=(gconst29*r10);
IkReal x12678=(gconst29*r00);
IkReal x12679=(gconst29*r20);
IkReal x12680=((1.0)*x12675);
IkReal x12681=(gconst28*x12675);
IkReal x12682=((1.0)*x12676);
IkReal x12683=(gconst28*x12682);
evalcond[0]=(((r21*x12681))+(((-1.0)*x12679*x12680))+(((-1.0)*r22*x12682)));
evalcond[1]=(((r01*x12681))+(((-1.0)*r02*x12682))+(((-1.0)*x12678*x12680)));
evalcond[2]=(((x12676*x12677))+(((-1.0)*r12*x12680))+(((-1.0)*r11*x12683)));
evalcond[3]=((1.0)+((r11*x12681))+(((-1.0)*r12*x12682))+(((-1.0)*x12677*x12680)));
evalcond[4]=((((-1.0)*r21*x12683))+((x12676*x12679))+((cj1*sj0))+((cj0*sj1))+(((-1.0)*r22*x12680)));
evalcond[5]=(((x12676*x12678))+(((-1.0)*r01*x12683))+(((-1.0)*r02*x12680))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12684=((1.0)*gconst29);
CheckValue<IkReal> x12685=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x12684))+(((-1.0)*gconst28*r00)))),-1);
if(!x12685.valid){
continue;
}
CheckValue<IkReal> x12686 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x12684))+((gconst28*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12686.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12685.value)))+(x12686.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12687=IKsin(j5);
IkReal x12688=IKcos(j5);
IkReal x12689=(gconst29*r10);
IkReal x12690=(gconst29*r00);
IkReal x12691=(gconst29*r20);
IkReal x12692=((1.0)*x12687);
IkReal x12693=(gconst28*x12687);
IkReal x12694=((1.0)*x12688);
IkReal x12695=(gconst28*x12694);
evalcond[0]=((((-1.0)*r22*x12694))+((r21*x12693))+(((-1.0)*x12691*x12692)));
evalcond[1]=((((-1.0)*r02*x12694))+(((-1.0)*x12690*x12692))+((r01*x12693)));
evalcond[2]=((((-1.0)*r11*x12695))+(((-1.0)*r12*x12692))+((x12688*x12689)));
evalcond[3]=((1.0)+(((-1.0)*r12*x12694))+(((-1.0)*x12689*x12692))+((r11*x12693)));
evalcond[4]=((((-1.0)*r22*x12692))+((cj1*sj0))+((cj0*sj1))+(((-1.0)*r21*x12695))+((x12688*x12691)));
evalcond[5]=((((-1.0)*r02*x12692))+((sj0*sj1))+(((-1.0)*r01*x12695))+(((-1.0)*cj0*cj1))+((x12688*x12690)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12696=IKPowWithIntegerCheck(IKsign((((gconst29*r21))+((gconst28*r20)))),-1);
if(!x12696.valid){
continue;
}
CheckValue<IkReal> x12697 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst28*r01))+(((-1.0)*gconst29*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12697.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12696.value)))+(x12697.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12698=IKsin(j5);
IkReal x12699=IKcos(j5);
IkReal x12700=(gconst29*r10);
IkReal x12701=(gconst29*r00);
IkReal x12702=(gconst29*r20);
IkReal x12703=((1.0)*x12698);
IkReal x12704=(gconst28*x12698);
IkReal x12705=((1.0)*x12699);
IkReal x12706=(gconst28*x12705);
evalcond[0]=((((-1.0)*x12702*x12703))+((r21*x12704))+(((-1.0)*r22*x12705)));
evalcond[1]=((((-1.0)*x12701*x12703))+((r01*x12704))+(((-1.0)*r02*x12705)));
evalcond[2]=(((x12699*x12700))+(((-1.0)*r11*x12706))+(((-1.0)*r12*x12703)));
evalcond[3]=((1.0)+((r11*x12704))+(((-1.0)*x12700*x12703))+(((-1.0)*r12*x12705)));
evalcond[4]=(((x12699*x12702))+((cj1*sj0))+(((-1.0)*r22*x12703))+(((-1.0)*r21*x12706))+((cj0*sj1)));
evalcond[5]=(((x12699*x12701))+(((-1.0)*r01*x12706))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*r02*x12703)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(r02);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
IkReal op[2+1], zeror[2];
int numroots;
op[0]=((1.0)+r12);
op[1]=((((-2.0)*gconst29*r10))+(((2.0)*gconst28*r11)));
op[2]=((1.0)+(((-1.0)*r12)));
polyroots2(op,zeror,numroots);
IkReal j5array[2], cj5array[2], sj5array[2], tempj5array[1];
int numsolutions = 0;
for(int ij5 = 0; ij5 < numroots; ++ij5)
{
IkReal htj5 = zeror[ij5];
tempj5array[0]=((2.0)*(atan(htj5)));
for(int kj5 = 0; kj5 < 1; ++kj5)
{
j5array[numsolutions] = tempj5array[kj5];
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
sj5array[numsolutions] = IKsin(j5array[numsolutions]);
cj5array[numsolutions] = IKcos(j5array[numsolutions]);
numsolutions++;
}
}
bool j5valid[2]={true,true};
_nj5 = 2;
for(int ij5 = 0; ij5 < numsolutions; ++ij5)
    {
if( !j5valid[ij5] )
{
    continue;
}
    j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
htj5 = IKtan(j5/2);

_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < numsolutions; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
    }

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12707=gconst29*gconst29;
IkReal x12708=gconst28*gconst28;
IkReal x12709=((1.0)*cj4);
IkReal x12710=((1.0)*sj4);
IkReal x12711=(r11*r21);
IkReal x12712=(gconst29*sj4);
IkReal x12713=(gconst28*r10);
IkReal x12714=(gconst28*gconst29*r20);
IkReal x12715=(r20*x12707);
CheckValue<IkReal> x12716 = IKatan2WithCheck(IkReal((((r11*r22*x12712))+((r22*sj4*x12713)))),IkReal((((r10*r21*sj4*x12708))+(((-1.0)*r11*x12710*x12715))+((gconst28*x12711*x12712))+(((-1.0)*gconst29*r20*x12710*x12713)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12716.valid){
continue;
}
CheckValue<IkReal> x12717=IKPowWithIntegerCheck(IKsign((((cj4*gconst29*r21*x12713))+(((-1.0)*x12708*x12709*x12711))+((cj4*r11*x12714))+(((-1.0)*r12*r22*x12709))+(((-1.0)*r10*x12709*x12715)))),-1);
if(!x12717.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12716.value)+(((1.5707963267949)*(x12717.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12718=IKsin(j5);
IkReal x12719=IKcos(j5);
IkReal x12720=(sj0*sj1);
IkReal x12721=(cj4*gconst28);
IkReal x12722=(gconst29*sj4);
IkReal x12723=((1.0)*cj0);
IkReal x12724=((1.0)*sj4);
IkReal x12725=(gconst28*sj4);
IkReal x12726=(cj4*gconst29);
IkReal x12727=(cj1*sj0);
IkReal x12728=(cj1*x12723);
IkReal x12729=((1.0)*gconst29*r10);
IkReal x12730=(cj4*x12719);
IkReal x12731=(r02*x12718);
IkReal x12732=(cj4*x12718);
IkReal x12733=(r11*x12719);
IkReal x12734=(r01*x12719);
IkReal x12735=(gconst28*x12718);
IkReal x12736=(r21*x12719);
IkReal x12737=((1.0)*gconst29*r20);
IkReal x12738=((1.0)*x12719);
IkReal x12739=((1.0)*gconst29*r00);
evalcond[0]=(((r21*x12735))+(((-1.0)*r22*x12738))+(((-1.0)*x12718*x12737)));
evalcond[1]=((((-1.0)*r02*x12738))+(((-1.0)*x12718*x12739))+((r01*x12735)));
evalcond[2]=((1.0)+((r11*x12735))+(((-1.0)*x12718*x12729))+(((-1.0)*r12*x12738)));
evalcond[3]=(((x12721*x12733))+((r11*x12722))+((r12*x12732))+((r10*x12725))+(((-1.0)*r10*x12726*x12738)));
evalcond[4]=(((r10*x12719*x12722))+(((-1.0)*gconst28*x12724*x12733))+((r11*x12726))+(((-1.0)*r12*x12718*x12724))+((r10*x12721)));
evalcond[5]=(((x12721*x12736))+((r21*x12722))+((r20*x12725))+(((-1.0)*r20*x12726*x12738))+x12727+((r22*x12732))+((cj0*sj1)));
evalcond[6]=(((x12721*x12734))+((cj4*x12731))+(((-1.0)*x12728))+(((-1.0)*r00*x12726*x12738))+x12720+((r00*x12725))+((r01*x12722)));
evalcond[7]=((((-1.0)*gconst28*x12724*x12736))+(((-1.0)*x12728))+((r21*x12726))+((r20*x12721))+(((-1.0)*r22*x12718*x12724))+((r20*x12719*x12722))+x12720);
evalcond[8]=((((-1.0)*x12727))+(((-1.0)*gconst28*x12724*x12734))+(((-1.0)*sj1*x12723))+((r00*x12721))+(((-1.0)*x12724*x12731))+((r01*x12726))+((r00*x12719*x12722)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12740=((1.0)*gconst29);
CheckValue<IkReal> x12741=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst28*r00))+(((-1.0)*r01*x12740)))),-1);
if(!x12741.valid){
continue;
}
CheckValue<IkReal> x12742 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst28*r21))+(((-1.0)*r20*x12740)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12742.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12741.value)))+(x12742.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12743=IKsin(j5);
IkReal x12744=IKcos(j5);
IkReal x12745=(sj0*sj1);
IkReal x12746=(cj4*gconst28);
IkReal x12747=(gconst29*sj4);
IkReal x12748=((1.0)*cj0);
IkReal x12749=((1.0)*sj4);
IkReal x12750=(gconst28*sj4);
IkReal x12751=(cj4*gconst29);
IkReal x12752=(cj1*sj0);
IkReal x12753=(cj1*x12748);
IkReal x12754=((1.0)*gconst29*r10);
IkReal x12755=(cj4*x12744);
IkReal x12756=(r02*x12743);
IkReal x12757=(cj4*x12743);
IkReal x12758=(r11*x12744);
IkReal x12759=(r01*x12744);
IkReal x12760=(gconst28*x12743);
IkReal x12761=(r21*x12744);
IkReal x12762=((1.0)*gconst29*r20);
IkReal x12763=((1.0)*x12744);
IkReal x12764=((1.0)*gconst29*r00);
evalcond[0]=(((r21*x12760))+(((-1.0)*r22*x12763))+(((-1.0)*x12743*x12762)));
evalcond[1]=((((-1.0)*r02*x12763))+(((-1.0)*x12743*x12764))+((r01*x12760)));
evalcond[2]=((1.0)+(((-1.0)*r12*x12763))+(((-1.0)*x12743*x12754))+((r11*x12760)));
evalcond[3]=(((r11*x12747))+(((-1.0)*r10*x12751*x12763))+((r10*x12750))+((x12746*x12758))+((r12*x12757)));
evalcond[4]=(((r11*x12751))+(((-1.0)*r12*x12743*x12749))+((r10*x12744*x12747))+((r10*x12746))+(((-1.0)*gconst28*x12749*x12758)));
evalcond[5]=(((r22*x12757))+x12752+((r20*x12750))+(((-1.0)*r20*x12751*x12763))+((r21*x12747))+((x12746*x12761))+((cj0*sj1)));
evalcond[6]=(((cj4*x12756))+(((-1.0)*x12753))+x12745+((r00*x12750))+((r01*x12747))+((x12746*x12759))+(((-1.0)*r00*x12751*x12763)));
evalcond[7]=((((-1.0)*gconst28*x12749*x12761))+(((-1.0)*r22*x12743*x12749))+(((-1.0)*x12753))+x12745+((r20*x12746))+((r21*x12751))+((r20*x12744*x12747)));
evalcond[8]=(((r00*x12744*x12747))+(((-1.0)*x12752))+(((-1.0)*x12749*x12756))+(((-1.0)*sj1*x12748))+((r00*x12746))+((r01*x12751))+(((-1.0)*gconst28*x12749*x12759)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12765=IKPowWithIntegerCheck(IKsign((((gconst29*r21))+((gconst28*r20)))),-1);
if(!x12765.valid){
continue;
}
CheckValue<IkReal> x12766 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst28*r01))+(((-1.0)*gconst29*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12766.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12765.value)))+(x12766.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12767=IKsin(j5);
IkReal x12768=IKcos(j5);
IkReal x12769=(sj0*sj1);
IkReal x12770=(cj4*gconst28);
IkReal x12771=(gconst29*sj4);
IkReal x12772=((1.0)*cj0);
IkReal x12773=((1.0)*sj4);
IkReal x12774=(gconst28*sj4);
IkReal x12775=(cj4*gconst29);
IkReal x12776=(cj1*sj0);
IkReal x12777=(cj1*x12772);
IkReal x12778=((1.0)*gconst29*r10);
IkReal x12779=(cj4*x12768);
IkReal x12780=(r02*x12767);
IkReal x12781=(cj4*x12767);
IkReal x12782=(r11*x12768);
IkReal x12783=(r01*x12768);
IkReal x12784=(gconst28*x12767);
IkReal x12785=(r21*x12768);
IkReal x12786=((1.0)*gconst29*r20);
IkReal x12787=((1.0)*x12768);
IkReal x12788=((1.0)*gconst29*r00);
evalcond[0]=(((r21*x12784))+(((-1.0)*r22*x12787))+(((-1.0)*x12767*x12786)));
evalcond[1]=(((r01*x12784))+(((-1.0)*r02*x12787))+(((-1.0)*x12767*x12788)));
evalcond[2]=((1.0)+(((-1.0)*x12767*x12778))+((r11*x12784))+(((-1.0)*r12*x12787)));
evalcond[3]=(((x12770*x12782))+((r12*x12781))+(((-1.0)*r10*x12775*x12787))+((r11*x12771))+((r10*x12774)));
evalcond[4]=((((-1.0)*r12*x12767*x12773))+((r10*x12768*x12771))+(((-1.0)*gconst28*x12773*x12782))+((r11*x12775))+((r10*x12770)));
evalcond[5]=(((r20*x12774))+((x12770*x12785))+(((-1.0)*r20*x12775*x12787))+((r21*x12771))+x12776+((r22*x12781))+((cj0*sj1)));
evalcond[6]=(((r01*x12771))+((x12770*x12783))+((cj4*x12780))+(((-1.0)*r00*x12775*x12787))+x12769+(((-1.0)*x12777))+((r00*x12774)));
evalcond[7]=(((r20*x12770))+(((-1.0)*gconst28*x12773*x12785))+((r21*x12775))+((r20*x12768*x12771))+x12769+(((-1.0)*r22*x12767*x12773))+(((-1.0)*x12777)));
evalcond[8]=(((r01*x12775))+(((-1.0)*x12773*x12780))+(((-1.0)*x12776))+(((-1.0)*gconst28*x12773*x12783))+((r00*x12768*x12771))+(((-1.0)*sj1*x12772))+((r00*x12770)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r21))+(IKabs(r20)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x12789=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x12789);
rxp1_0=(pz*r11);
rxp1_1=(r01*x12789);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
IkReal x12790=(r11*sj6);
IkReal x12791=((1.0)*cj6*r10);
j5eval[0]=((((-1.0)*x12791))+x12790);
j5eval[1]=(((cj4*x12790))+(((-1.0)*cj4*x12791)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x12792=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x12792);
rxp1_0=(pz*r11);
rxp1_1=(r01*x12792);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
IkReal x12793=(r11*sj6);
IkReal x12794=(cj6*r10);
j5eval[0]=((((-1.0)*x12794))+x12793);
j5eval[1]=(((sj4*x12794))+(((-1.0)*sj4*x12793)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x12795=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x12795);
rxp1_0=(pz*r11);
rxp1_1=(r01*x12795);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=cj4;
j5eval[1]=r22;
j5eval[2]=((((-1.0)*cj4*cj6*r10))+((cj4*r11*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x12796=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x12796);
rxp1_0=(pz*r11);
rxp1_1=(r01*x12796);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=0;
cj4=1.0;
j4=0;
IkReal x12797=((1.0)*cj6);
j5eval[0]=((((-1.0)*r10*x12797))+((r11*sj6)));
j5eval[1]=(((r01*sj6))+(((-1.0)*r00*x12797)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x12798=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x12798);
rxp1_0=(pz*r11);
rxp1_1=(r01*x12798);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=0;
cj4=1.0;
j4=0;
j5eval[0]=r22;
j5eval[1]=(((r01*sj6))+(((-1.0)*cj6*r00)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12799=((1.0)*sj0);
CheckValue<IkReal> x12800=IKPowWithIntegerCheck(r22,-1);
if(!x12800.valid){
continue;
}
CheckValue<IkReal> x12801=IKPowWithIntegerCheck((((r01*sj6))+(((-1.0)*cj6*r00))),-1);
if(!x12801.valid){
continue;
}
if( IKabs(((x12800.value)*(((((-1.0)*cj1*x12799))+(((-1.0)*cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x12801.value)*(((((-1.0)*sj1*x12799))+((cj0*cj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x12800.value)*(((((-1.0)*cj1*x12799))+(((-1.0)*cj0*sj1))))))+IKsqr(((x12801.value)*(((((-1.0)*sj1*x12799))+((cj0*cj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x12800.value)*(((((-1.0)*cj1*x12799))+(((-1.0)*cj0*sj1))))), ((x12801.value)*(((((-1.0)*sj1*x12799))+((cj0*cj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12802=IKsin(j5);
IkReal x12803=IKcos(j5);
IkReal x12804=((1.0)*cj6);
IkReal x12805=(sj6*x12803);
IkReal x12806=(sj6*x12802);
evalcond[0]=((-1.0)*r22*x12803);
evalcond[1]=(((cj1*sj0))+((r22*x12802))+((cj0*sj1)));
evalcond[2]=(((r01*x12806))+(((-1.0)*r00*x12802*x12804)));
evalcond[3]=(((r11*x12805))+(((-1.0)*r10*x12803*x12804)));
evalcond[4]=((1.0)+((r11*x12806))+(((-1.0)*r10*x12802*x12804)));
evalcond[5]=((((-1.0)*r00*x12803*x12804))+((sj0*sj1))+((r01*x12805))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12807=((1.0)*cj6);
CheckValue<IkReal> x12808=IKPowWithIntegerCheck(((((-1.0)*r10*x12807))+((r11*sj6))),-1);
if(!x12808.valid){
continue;
}
CheckValue<IkReal> x12809=IKPowWithIntegerCheck((((r01*sj6))+(((-1.0)*r00*x12807))),-1);
if(!x12809.valid){
continue;
}
if( IKabs(((-1.0)*(x12808.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x12809.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x12808.value)))+IKsqr(((x12809.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x12808.value)), ((x12809.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12810=IKsin(j5);
IkReal x12811=IKcos(j5);
IkReal x12812=((1.0)*cj6);
IkReal x12813=(sj6*x12811);
IkReal x12814=(sj6*x12810);
evalcond[0]=((-1.0)*r22*x12811);
evalcond[1]=(((cj1*sj0))+((cj0*sj1))+((r22*x12810)));
evalcond[2]=((((-1.0)*r00*x12810*x12812))+((r01*x12814)));
evalcond[3]=(((r11*x12813))+(((-1.0)*r10*x12811*x12812)));
evalcond[4]=((1.0)+((r11*x12814))+(((-1.0)*r10*x12810*x12812)));
evalcond[5]=((((-1.0)*r00*x12811*x12812))+((r01*x12813))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x12815=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x12815);
rxp1_0=(pz*r11);
rxp1_1=(r01*x12815);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j5eval[0]=r22;
j5eval[1]=((((-1.0)*r01*sj6))+((cj6*r00)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x12816=((-1.0)*pz);
sj2=0;
cj2=1.0;
j2=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x12816);
rxp1_0=(pz*r11);
rxp1_1=(r01*x12816);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
j5eval[0]=((((-1.0)*cj6*r10))+((r11*sj6)));
j5eval[1]=((((-1.0)*r01*sj6))+((cj6*r00)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12817=IKPowWithIntegerCheck(((((-1.0)*cj6*r10))+((r11*sj6))),-1);
if(!x12817.valid){
continue;
}
CheckValue<IkReal> x12818=IKPowWithIntegerCheck(((((-1.0)*r01*sj6))+((cj6*r00))),-1);
if(!x12818.valid){
continue;
}
if( IKabs(((-1.0)*(x12817.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x12818.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x12817.value)))+IKsqr(((x12818.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x12817.value)), ((x12818.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12819=IKsin(j5);
IkReal x12820=IKcos(j5);
IkReal x12821=(r01*sj6);
IkReal x12822=(cj6*r10);
IkReal x12823=(cj6*r00);
IkReal x12824=(r11*sj6);
IkReal x12825=((1.0)*x12820);
IkReal x12826=((1.0)*x12819);
evalcond[0]=((-1.0)*r22*x12820);
evalcond[1]=((((-1.0)*r22*x12826))+((cj1*sj0))+((cj0*sj1)));
evalcond[2]=(((x12819*x12821))+(((-1.0)*x12823*x12826)));
evalcond[3]=((((-1.0)*x12824*x12825))+((x12820*x12822)));
evalcond[4]=((1.0)+((x12819*x12824))+(((-1.0)*x12822*x12826)));
evalcond[5]=(((sj0*sj1))+((x12820*x12823))+(((-1.0)*cj0*cj1))+(((-1.0)*x12821*x12825)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12827=IKPowWithIntegerCheck(r22,-1);
if(!x12827.valid){
continue;
}
CheckValue<IkReal> x12828=IKPowWithIntegerCheck(((((-1.0)*r01*sj6))+((cj6*r00))),-1);
if(!x12828.valid){
continue;
}
if( IKabs(((x12827.value)*((((cj1*sj0))+((cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x12828.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x12827.value)*((((cj1*sj0))+((cj0*sj1))))))+IKsqr(((x12828.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x12827.value)*((((cj1*sj0))+((cj0*sj1))))), ((x12828.value)*((((cj0*cj1))+(((-1.0)*sj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12829=IKsin(j5);
IkReal x12830=IKcos(j5);
IkReal x12831=(r01*sj6);
IkReal x12832=(cj6*r10);
IkReal x12833=(cj6*r00);
IkReal x12834=(r11*sj6);
IkReal x12835=((1.0)*x12830);
IkReal x12836=((1.0)*x12829);
evalcond[0]=((-1.0)*r22*x12830);
evalcond[1]=(((cj1*sj0))+(((-1.0)*r22*x12836))+((cj0*sj1)));
evalcond[2]=((((-1.0)*x12833*x12836))+((x12829*x12831)));
evalcond[3]=(((x12830*x12832))+(((-1.0)*x12834*x12835)));
evalcond[4]=((1.0)+(((-1.0)*x12832*x12836))+((x12829*x12834)));
evalcond[5]=(((x12830*x12833))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*x12831*x12835)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12837=((1.0)*cj6);
CheckValue<IkReal> x12838=IKPowWithIntegerCheck(cj4,-1);
if(!x12838.valid){
continue;
}
CheckValue<IkReal> x12839=IKPowWithIntegerCheck(r22,-1);
if(!x12839.valid){
continue;
}
CheckValue<IkReal> x12840=IKPowWithIntegerCheck(((((-1.0)*cj4*r10*x12837))+((cj4*r11*sj6))),-1);
if(!x12840.valid){
continue;
}
if( IKabs(((x12838.value)*(x12839.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x12840.value)*(((((-1.0)*r10*sj4*sj6))+(((-1.0)*r11*sj4*x12837)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x12838.value)*(x12839.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1))))))+IKsqr(((x12840.value)*(((((-1.0)*r10*sj4*sj6))+(((-1.0)*r11*sj4*x12837))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x12838.value)*(x12839.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1))))), ((x12840.value)*(((((-1.0)*r10*sj4*sj6))+(((-1.0)*r11*sj4*x12837))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12841=IKsin(j5);
IkReal x12842=IKcos(j5);
IkReal x12843=(sj0*sj1);
IkReal x12844=(cj6*r10);
IkReal x12845=((1.0)*cj0);
IkReal x12846=(r11*sj6);
IkReal x12847=(cj6*r00);
IkReal x12848=(cj4*cj6);
IkReal x12849=(sj4*sj6);
IkReal x12850=(cj4*sj6);
IkReal x12851=(cj6*sj4);
IkReal x12852=(r01*sj6);
IkReal x12853=(cj1*sj0);
IkReal x12854=(cj1*x12845);
IkReal x12855=(sj6*x12841);
IkReal x12856=((1.0)*x12841);
IkReal x12857=(sj4*x12842);
IkReal x12858=(cj4*x12842);
evalcond[0]=((-1.0)*r22*x12842);
evalcond[1]=(x12853+((cj4*r22*x12841))+((cj0*sj1)));
evalcond[2]=((((-1.0)*x12847*x12856))+((x12841*x12852)));
evalcond[3]=((1.0)+((x12841*x12846))+(((-1.0)*x12844*x12856)));
evalcond[4]=(x12843+(((-1.0)*r22*sj4*x12856))+(((-1.0)*x12854)));
evalcond[5]=(((r10*x12849))+((r11*x12851))+((x12846*x12858))+(((-1.0)*x12844*x12858)));
evalcond[6]=(((r10*x12850))+(((-1.0)*x12846*x12857))+((r11*x12848))+((x12844*x12857)));
evalcond[7]=(x12843+(((-1.0)*x12847*x12858))+((r00*x12849))+((r01*x12851))+(((-1.0)*x12854))+((r01*x12842*x12850)));
evalcond[8]=(((r00*x12850))+((r01*x12848))+((x12847*x12857))+(((-1.0)*r01*x12842*x12849))+(((-1.0)*x12853))+(((-1.0)*sj1*x12845)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12859=((1.0)*sj6);
IkReal x12860=(cj6*r10);
CheckValue<IkReal> x12861=IKPowWithIntegerCheck(((((-1.0)*x12860))+((r11*sj6))),-1);
if(!x12861.valid){
continue;
}
CheckValue<IkReal> x12862=IKPowWithIntegerCheck((((sj4*x12860))+(((-1.0)*r11*sj4*x12859))),-1);
if(!x12862.valid){
continue;
}
if( IKabs(((-1.0)*(x12861.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x12862.value)*(((((-1.0)*cj4*cj6*r11))+(((-1.0)*cj4*r10*x12859)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x12861.value)))+IKsqr(((x12862.value)*(((((-1.0)*cj4*cj6*r11))+(((-1.0)*cj4*r10*x12859))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x12861.value)), ((x12862.value)*(((((-1.0)*cj4*cj6*r11))+(((-1.0)*cj4*r10*x12859))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12863=IKsin(j5);
IkReal x12864=IKcos(j5);
IkReal x12865=(sj0*sj1);
IkReal x12866=(cj6*r10);
IkReal x12867=((1.0)*cj0);
IkReal x12868=(r11*sj6);
IkReal x12869=(cj6*r00);
IkReal x12870=(cj4*cj6);
IkReal x12871=(sj4*sj6);
IkReal x12872=(cj4*sj6);
IkReal x12873=(cj6*sj4);
IkReal x12874=(r01*sj6);
IkReal x12875=(cj1*sj0);
IkReal x12876=(cj1*x12867);
IkReal x12877=(sj6*x12863);
IkReal x12878=((1.0)*x12863);
IkReal x12879=(sj4*x12864);
IkReal x12880=(cj4*x12864);
evalcond[0]=((-1.0)*r22*x12864);
evalcond[1]=(x12875+((cj4*r22*x12863))+((cj0*sj1)));
evalcond[2]=(((x12863*x12874))+(((-1.0)*x12869*x12878)));
evalcond[3]=((1.0)+(((-1.0)*x12866*x12878))+((x12863*x12868)));
evalcond[4]=(x12865+(((-1.0)*r22*sj4*x12878))+(((-1.0)*x12876)));
evalcond[5]=(((r10*x12871))+((x12868*x12880))+((r11*x12873))+(((-1.0)*x12866*x12880)));
evalcond[6]=(((r10*x12872))+(((-1.0)*x12868*x12879))+((r11*x12870))+((x12866*x12879)));
evalcond[7]=(x12865+((r01*x12864*x12872))+((r01*x12873))+((r00*x12871))+(((-1.0)*x12869*x12880))+(((-1.0)*x12876)));
evalcond[8]=((((-1.0)*sj1*x12867))+((r01*x12870))+((r00*x12872))+((x12869*x12879))+(((-1.0)*x12875))+(((-1.0)*r01*x12864*x12871)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12881=(r11*sj6);
IkReal x12882=((1.0)*cj6);
CheckValue<IkReal> x12883=IKPowWithIntegerCheck((x12881+(((-1.0)*r10*x12882))),-1);
if(!x12883.valid){
continue;
}
CheckValue<IkReal> x12884=IKPowWithIntegerCheck((((cj4*x12881))+(((-1.0)*cj4*r10*x12882))),-1);
if(!x12884.valid){
continue;
}
if( IKabs(((-1.0)*(x12883.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x12884.value)*(((((-1.0)*r11*sj4*x12882))+(((-1.0)*r10*sj4*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x12883.value)))+IKsqr(((x12884.value)*(((((-1.0)*r11*sj4*x12882))+(((-1.0)*r10*sj4*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x12883.value)), ((x12884.value)*(((((-1.0)*r11*sj4*x12882))+(((-1.0)*r10*sj4*sj6))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12885=IKsin(j5);
IkReal x12886=IKcos(j5);
IkReal x12887=(sj0*sj1);
IkReal x12888=(cj6*r10);
IkReal x12889=((1.0)*cj0);
IkReal x12890=(r11*sj6);
IkReal x12891=(cj6*r00);
IkReal x12892=(cj4*cj6);
IkReal x12893=(sj4*sj6);
IkReal x12894=(cj4*sj6);
IkReal x12895=(cj6*sj4);
IkReal x12896=(r01*sj6);
IkReal x12897=(cj1*sj0);
IkReal x12898=(cj1*x12889);
IkReal x12899=(sj6*x12885);
IkReal x12900=((1.0)*x12885);
IkReal x12901=(sj4*x12886);
IkReal x12902=(cj4*x12886);
evalcond[0]=((-1.0)*r22*x12886);
evalcond[1]=(x12897+((cj4*r22*x12885))+((cj0*sj1)));
evalcond[2]=(((x12885*x12896))+(((-1.0)*x12891*x12900)));
evalcond[3]=((1.0)+((x12885*x12890))+(((-1.0)*x12888*x12900)));
evalcond[4]=(x12887+(((-1.0)*r22*sj4*x12900))+(((-1.0)*x12898)));
evalcond[5]=(((x12890*x12902))+(((-1.0)*x12888*x12902))+((r10*x12893))+((r11*x12895)));
evalcond[6]=((((-1.0)*x12890*x12901))+((x12888*x12901))+((r10*x12894))+((r11*x12892)));
evalcond[7]=(x12887+((r01*x12895))+((r00*x12893))+((r01*x12886*x12894))+(((-1.0)*x12891*x12902))+(((-1.0)*x12898)));
evalcond[8]=((((-1.0)*x12897))+((x12891*x12901))+(((-1.0)*sj1*x12889))+((r01*x12892))+((r00*x12894))+(((-1.0)*r01*x12886*x12893)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12903=cj6*cj6;
IkReal x12904=(r10*sj6);
IkReal x12905=(cj4*r21);
IkReal x12906=(r22*sj4);
IkReal x12907=(cj6*r11);
IkReal x12908=((1.0)*r11);
IkReal x12909=(r21*sj4);
IkReal x12910=(cj4*r20);
IkReal x12911=(r20*sj4);
IkReal x12912=((1.0)*r10*x12903);
CheckValue<IkReal> x12913=IKPowWithIntegerCheck(IKsign(((((-1.0)*x12910*x12912))+(((-1.0)*cj4*r12*r22))+((r11*x12903*x12905))+((sj6*x12907*x12910))+((cj6*x12904*x12905))+(((-1.0)*x12905*x12908)))),-1);
if(!x12913.valid){
continue;
}
CheckValue<IkReal> x12914 = IKatan2WithCheck(IkReal((((x12906*x12907))+((x12904*x12906)))),IkReal(((((-1.0)*cj6*x12904*x12911))+(((-1.0)*x12909*x12912))+((sj6*x12907*x12909))+(((-1.0)*x12903*x12908*x12911))+((r10*x12909)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12914.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12913.value)))+(x12914.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12915=IKsin(j5);
IkReal x12916=IKcos(j5);
IkReal x12917=(sj0*sj1);
IkReal x12918=(sj4*sj6);
IkReal x12919=(cj4*cj6);
IkReal x12920=((1.0)*cj0);
IkReal x12921=((1.0)*sj4);
IkReal x12922=(cj4*sj6);
IkReal x12923=(cj6*sj4);
IkReal x12924=(cj1*sj0);
IkReal x12925=(cj1*x12920);
IkReal x12926=((1.0)*x12916);
IkReal x12927=(sj6*x12915);
IkReal x12928=(r22*x12915);
IkReal x12929=(cj4*x12915);
IkReal x12930=(x12916*x12923);
IkReal x12931=(x12916*x12922);
IkReal x12932=((1.0)*cj6*x12915);
evalcond[0]=((((-1.0)*r20*x12932))+((r21*x12927))+(((-1.0)*r22*x12926)));
evalcond[1]=((((-1.0)*r02*x12926))+((r01*x12927))+(((-1.0)*r00*x12932)));
evalcond[2]=((1.0)+((r11*x12927))+(((-1.0)*r12*x12926))+(((-1.0)*r10*x12932)));
evalcond[3]=(((r11*x12931))+((r11*x12923))+(((-1.0)*r10*x12919*x12926))+((r10*x12918))+((r12*x12929)));
evalcond[4]=((((-1.0)*r11*x12918*x12926))+((r10*x12922))+((r10*x12930))+(((-1.0)*r12*x12915*x12921))+((r11*x12919)));
evalcond[5]=(x12924+((cj4*x12928))+((r20*x12918))+((r21*x12923))+((r21*x12931))+((cj0*sj1))+(((-1.0)*r20*x12919*x12926)));
evalcond[6]=(x12917+((r00*x12918))+((r02*x12929))+(((-1.0)*r00*x12919*x12926))+((r01*x12923))+((r01*x12931))+(((-1.0)*x12925)));
evalcond[7]=(x12917+((r20*x12930))+((r20*x12922))+((r21*x12919))+(((-1.0)*x12921*x12928))+(((-1.0)*x12925))+(((-1.0)*r21*x12918*x12926)));
evalcond[8]=((((-1.0)*x12924))+(((-1.0)*r01*x12918*x12926))+(((-1.0)*sj1*x12920))+((r00*x12922))+(((-1.0)*r02*x12915*x12921))+((r00*x12930))+((r01*x12919)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12933=((1.0)*cj6);
CheckValue<IkReal> x12934 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x12933))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12934.valid){
continue;
}
CheckValue<IkReal> x12935=IKPowWithIntegerCheck(IKsign(((((-1.0)*r00*sj6))+(((-1.0)*r01*x12933)))),-1);
if(!x12935.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x12934.value)+(((1.5707963267949)*(x12935.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12936=IKsin(j5);
IkReal x12937=IKcos(j5);
IkReal x12938=(sj0*sj1);
IkReal x12939=(sj4*sj6);
IkReal x12940=(cj4*cj6);
IkReal x12941=((1.0)*cj0);
IkReal x12942=((1.0)*sj4);
IkReal x12943=(cj4*sj6);
IkReal x12944=(cj6*sj4);
IkReal x12945=(cj1*sj0);
IkReal x12946=(cj1*x12941);
IkReal x12947=((1.0)*x12937);
IkReal x12948=(sj6*x12936);
IkReal x12949=(r22*x12936);
IkReal x12950=(cj4*x12936);
IkReal x12951=(x12937*x12944);
IkReal x12952=(x12937*x12943);
IkReal x12953=((1.0)*cj6*x12936);
evalcond[0]=(((r21*x12948))+(((-1.0)*r22*x12947))+(((-1.0)*r20*x12953)));
evalcond[1]=(((r01*x12948))+(((-1.0)*r02*x12947))+(((-1.0)*r00*x12953)));
evalcond[2]=((1.0)+(((-1.0)*r10*x12953))+((r11*x12948))+(((-1.0)*r12*x12947)));
evalcond[3]=(((r12*x12950))+(((-1.0)*r10*x12940*x12947))+((r11*x12944))+((r10*x12939))+((r11*x12952)));
evalcond[4]=(((r10*x12943))+((r10*x12951))+(((-1.0)*r11*x12939*x12947))+(((-1.0)*r12*x12936*x12942))+((r11*x12940)));
evalcond[5]=(x12945+((r20*x12939))+((cj4*x12949))+((r21*x12952))+((r21*x12944))+((cj0*sj1))+(((-1.0)*r20*x12940*x12947)));
evalcond[6]=(x12938+((r01*x12952))+((r01*x12944))+(((-1.0)*x12946))+(((-1.0)*r00*x12940*x12947))+((r02*x12950))+((r00*x12939)));
evalcond[7]=(x12938+(((-1.0)*r21*x12939*x12947))+((r21*x12940))+(((-1.0)*x12946))+((r20*x12951))+((r20*x12943))+(((-1.0)*x12942*x12949)));
evalcond[8]=((((-1.0)*r01*x12939*x12947))+((r00*x12943))+((r01*x12940))+(((-1.0)*r02*x12936*x12942))+((r00*x12951))+(((-1.0)*x12945))+(((-1.0)*sj1*x12941)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x12954=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x12954.valid){
continue;
}
CheckValue<IkReal> x12955 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*cj6*r00)))),IKFAST_ATAN2_MAGTHRESH);
if(!x12955.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12954.value)))+(x12955.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x12956=IKsin(j5);
IkReal x12957=IKcos(j5);
IkReal x12958=(sj0*sj1);
IkReal x12959=(sj4*sj6);
IkReal x12960=(cj4*cj6);
IkReal x12961=((1.0)*cj0);
IkReal x12962=((1.0)*sj4);
IkReal x12963=(cj4*sj6);
IkReal x12964=(cj6*sj4);
IkReal x12965=(cj1*sj0);
IkReal x12966=(cj1*x12961);
IkReal x12967=((1.0)*x12957);
IkReal x12968=(sj6*x12956);
IkReal x12969=(r22*x12956);
IkReal x12970=(cj4*x12956);
IkReal x12971=(x12957*x12964);
IkReal x12972=(x12957*x12963);
IkReal x12973=((1.0)*cj6*x12956);
evalcond[0]=((((-1.0)*r20*x12973))+(((-1.0)*r22*x12967))+((r21*x12968)));
evalcond[1]=(((r01*x12968))+(((-1.0)*r00*x12973))+(((-1.0)*r02*x12967)));
evalcond[2]=((1.0)+(((-1.0)*r12*x12967))+(((-1.0)*r10*x12973))+((r11*x12968)));
evalcond[3]=(((r10*x12959))+(((-1.0)*r10*x12960*x12967))+((r11*x12964))+((r11*x12972))+((r12*x12970)));
evalcond[4]=((((-1.0)*r11*x12959*x12967))+(((-1.0)*r12*x12956*x12962))+((r11*x12960))+((r10*x12963))+((r10*x12971)));
evalcond[5]=(x12965+(((-1.0)*r20*x12960*x12967))+((cj4*x12969))+((r20*x12959))+((r21*x12972))+((r21*x12964))+((cj0*sj1)));
evalcond[6]=(x12958+((r01*x12972))+((r01*x12964))+(((-1.0)*x12966))+((r02*x12970))+((r00*x12959))+(((-1.0)*r00*x12960*x12967)));
evalcond[7]=(x12958+(((-1.0)*x12966))+(((-1.0)*x12962*x12969))+((r20*x12971))+((r20*x12963))+(((-1.0)*r21*x12959*x12967))+((r21*x12960)));
evalcond[8]=(((r00*x12963))+((r01*x12960))+((r00*x12971))+(((-1.0)*x12965))+(((-1.0)*sj1*x12961))+(((-1.0)*r01*x12959*x12967))+(((-1.0)*r02*x12956*x12962)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x12974=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x12974;
j5eval[1]=IKsign(x12974);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x12975=((1.0)*cj6);
IkReal x12976=((((-1.0)*r21*x12975))+(((-1.0)*r20*sj6)));
j5eval[0]=x12976;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x12975))))));
j5eval[2]=IKsign(x12976);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal x12977=cj6*cj6;
IkReal x12978=(cj4*r21);
IkReal x12979=(cj6*sj6);
IkReal x12980=((1.0)*cj4);
IkReal x12981=(((r11*x12977*x12978))+((cj4*r11*r20*x12979))+(((-1.0)*r12*r22*x12980))+((r10*x12978*x12979))+(((-1.0)*r11*x12978))+(((-1.0)*r10*r20*x12977*x12980)));
j5eval[0]=x12981;
j5eval[1]=IKsign(x12981);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x12982=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x12982;
j5eval[1]=IKsign(x12982);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x12983=((1.0)*cj6);
IkReal x12984=((((-1.0)*r21*x12983))+(((-1.0)*r20*sj6)));
j5eval[0]=x12984;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*r00*x12983))+((r01*sj6))))));
j5eval[2]=IKsign(x12984);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x12985=cj6*cj6;
IkReal x12986=r11*r11;
IkReal x12987=(cj6*r10);
IkReal x12988=(r11*sj6);
IkReal x12989=((((2.0)*x12987*x12988))+(((-1.0)*x12985*(r10*r10)))+(((-1.0)*(r12*r12)))+((x12985*x12986))+(((-1.0)*x12986)));
j5eval[0]=x12989;
j5eval[1]=((IKabs(r12))+(IKabs((x12987+(((-1.0)*x12988))))));
j5eval[2]=IKsign(x12989);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x12990=cj6*cj6;
IkReal x12991=r11*r11;
IkReal x12992=(cj6*r10);
IkReal x12993=(r11*sj6);
CheckValue<IkReal> x12994=IKPowWithIntegerCheck(IKsign(((((2.0)*x12992*x12993))+((x12990*x12991))+(((-1.0)*x12990*(r10*r10)))+(((-1.0)*(r12*r12)))+(((-1.0)*x12991)))),-1);
if(!x12994.valid){
continue;
}
CheckValue<IkReal> x12995 = IKatan2WithCheck(IkReal((x12992+(((-1.0)*x12993)))),IkReal(r12),IKFAST_ATAN2_MAGTHRESH);
if(!x12995.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x12994.value)))+(x12995.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x12996=IKsin(j5);
IkReal x12997=IKcos(j5);
IkReal x12998=(sj6*x12996);
IkReal x12999=((1.0)*x12996);
IkReal x13000=((1.0)*x12997);
IkReal x13001=(cj6*x12997);
IkReal x13002=(sj6*x13000);
IkReal x13003=(cj6*x12999);
evalcond[0]=((((-1.0)*r22*x13000))+((r21*x12998))+(((-1.0)*r20*x13003)));
evalcond[1]=(((r01*x12998))+(((-1.0)*r00*x13003))+(((-1.0)*r02*x13000)));
evalcond[2]=((((-1.0)*r11*x13002))+(((-1.0)*r12*x12999))+((r10*x13001)));
evalcond[3]=((-1.0)+(((-1.0)*r12*x13000))+((r11*x12998))+(((-1.0)*r10*x13003)));
evalcond[4]=(((r00*x13001))+((cj1*sj0))+(((-1.0)*r01*x13002))+(((-1.0)*r02*x12999))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r22*x12999))+((r20*x13001))+(((-1.0)*r21*x13002))+((sj0*sj1))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13004=((1.0)*cj6);
CheckValue<IkReal> x13005 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*r00*x13004)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13005.valid){
continue;
}
CheckValue<IkReal> x13006=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x13004))+(((-1.0)*r20*sj6)))),-1);
if(!x13006.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13005.value)+(((1.5707963267949)*(x13006.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13007=IKsin(j5);
IkReal x13008=IKcos(j5);
IkReal x13009=(sj6*x13007);
IkReal x13010=((1.0)*x13007);
IkReal x13011=((1.0)*x13008);
IkReal x13012=(cj6*x13008);
IkReal x13013=(sj6*x13011);
IkReal x13014=(cj6*x13010);
evalcond[0]=((((-1.0)*r22*x13011))+(((-1.0)*r20*x13014))+((r21*x13009)));
evalcond[1]=((((-1.0)*r00*x13014))+((r01*x13009))+(((-1.0)*r02*x13011)));
evalcond[2]=(((r10*x13012))+(((-1.0)*r12*x13010))+(((-1.0)*r11*x13013)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x13014))+((r11*x13009))+(((-1.0)*r12*x13011)));
evalcond[4]=(((r00*x13012))+((cj1*sj0))+(((-1.0)*r01*x13013))+((cj0*sj1))+(((-1.0)*r02*x13010)));
evalcond[5]=((((-1.0)*r22*x13010))+((r20*x13012))+((sj0*sj1))+(((-1.0)*r21*x13013))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x13015=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x13015.valid){
continue;
}
CheckValue<IkReal> x13016 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13016.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13015.value)))+(x13016.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13017=IKsin(j5);
IkReal x13018=IKcos(j5);
IkReal x13019=(sj6*x13017);
IkReal x13020=((1.0)*x13017);
IkReal x13021=((1.0)*x13018);
IkReal x13022=(cj6*x13018);
IkReal x13023=(sj6*x13021);
IkReal x13024=(cj6*x13020);
evalcond[0]=((((-1.0)*r22*x13021))+((r21*x13019))+(((-1.0)*r20*x13024)));
evalcond[1]=(((r01*x13019))+(((-1.0)*r00*x13024))+(((-1.0)*r02*x13021)));
evalcond[2]=((((-1.0)*r11*x13023))+(((-1.0)*r12*x13020))+((r10*x13022)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x13024))+((r11*x13019))+(((-1.0)*r12*x13021)));
evalcond[4]=(((r00*x13022))+((cj1*sj0))+(((-1.0)*r01*x13023))+(((-1.0)*r02*x13020))+((cj0*sj1)));
evalcond[5]=((((-1.0)*r22*x13020))+((r20*x13022))+((sj0*sj1))+(((-1.0)*r21*x13023))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x13025=(((r00*sj6))+((cj6*r01)));
j5eval[0]=x13025;
j5eval[1]=IKsign(x13025);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x13026=((1.0)*cj6);
IkReal x13027=((((-1.0)*r21*x13026))+(((-1.0)*r20*sj6)));
j5eval[0]=x13027;
j5eval[1]=((IKabs(r02))+(IKabs((((r01*sj6))+(((-1.0)*r00*x13026))))));
j5eval[2]=IKsign(x13027);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x13028=cj6*cj6;
IkReal x13029=r11*r11;
IkReal x13030=(r11*sj6);
IkReal x13031=(cj6*r10);
IkReal x13032=(((x13028*(r10*r10)))+(((-1.0)*x13028*x13029))+(r12*r12)+(((-2.0)*x13030*x13031))+x13029);
j5eval[0]=x13032;
j5eval[1]=IKsign(x13032);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*x13031))+x13030))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13033=cj6*cj6;
IkReal x13034=r11*r11;
IkReal x13035=(r11*sj6);
IkReal x13036=(cj6*r10);
CheckValue<IkReal> x13037 = IKatan2WithCheck(IkReal(((((-1.0)*x13036))+x13035)),IkReal(((-1.0)*r12)),IKFAST_ATAN2_MAGTHRESH);
if(!x13037.valid){
continue;
}
CheckValue<IkReal> x13038=IKPowWithIntegerCheck(IKsign(((r12*r12)+(((-1.0)*x13033*x13034))+((x13033*(r10*r10)))+(((-2.0)*x13035*x13036))+x13034)),-1);
if(!x13038.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13037.value)+(((1.5707963267949)*(x13038.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13039=IKcos(j5);
IkReal x13040=IKsin(j5);
IkReal x13041=(sj6*x13040);
IkReal x13042=((1.0)*x13039);
IkReal x13043=(sj6*x13039);
IkReal x13044=((1.0)*cj6*x13040);
evalcond[0]=(((r11*x13043))+(((-1.0)*cj6*r10*x13042))+((r12*x13040)));
evalcond[1]=((((-1.0)*r20*x13044))+((r21*x13041))+(((-1.0)*r22*x13042)));
evalcond[2]=((((-1.0)*r02*x13042))+((r01*x13041))+(((-1.0)*r00*x13044)));
evalcond[3]=((-1.0)+((r11*x13041))+(((-1.0)*r10*x13044))+(((-1.0)*r12*x13042)));
evalcond[4]=((((-1.0)*cj6*r00*x13042))+((r02*x13040))+((cj1*sj0))+((r01*x13043))+((cj0*sj1)));
evalcond[5]=(((r21*x13043))+(((-1.0)*cj6*r20*x13042))+((sj0*sj1))+((r22*x13040))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13045=((1.0)*cj6);
CheckValue<IkReal> x13046 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*r00*x13045)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13046.valid){
continue;
}
CheckValue<IkReal> x13047=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x13045))+(((-1.0)*r20*sj6)))),-1);
if(!x13047.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13046.value)+(((1.5707963267949)*(x13047.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13048=IKcos(j5);
IkReal x13049=IKsin(j5);
IkReal x13050=(sj6*x13049);
IkReal x13051=((1.0)*x13048);
IkReal x13052=(sj6*x13048);
IkReal x13053=((1.0)*cj6*x13049);
evalcond[0]=((((-1.0)*cj6*r10*x13051))+((r12*x13049))+((r11*x13052)));
evalcond[1]=((((-1.0)*r20*x13053))+((r21*x13050))+(((-1.0)*r22*x13051)));
evalcond[2]=((((-1.0)*r00*x13053))+(((-1.0)*r02*x13051))+((r01*x13050)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x13053))+(((-1.0)*r12*x13051))+((r11*x13050)));
evalcond[4]=(((r02*x13049))+((cj1*sj0))+((r01*x13052))+((cj0*sj1))+(((-1.0)*cj6*r00*x13051)));
evalcond[5]=(((r21*x13052))+((sj0*sj1))+((r22*x13049))+(((-1.0)*cj6*r20*x13051))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x13054=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x13054.valid){
continue;
}
CheckValue<IkReal> x13055 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13055.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13054.value)))+(x13055.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13056=IKcos(j5);
IkReal x13057=IKsin(j5);
IkReal x13058=(sj6*x13057);
IkReal x13059=((1.0)*x13056);
IkReal x13060=(sj6*x13056);
IkReal x13061=((1.0)*cj6*x13057);
evalcond[0]=(((r12*x13057))+(((-1.0)*cj6*r10*x13059))+((r11*x13060)));
evalcond[1]=((((-1.0)*r20*x13061))+((r21*x13058))+(((-1.0)*r22*x13059)));
evalcond[2]=((((-1.0)*r00*x13061))+(((-1.0)*r02*x13059))+((r01*x13058)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x13061))+(((-1.0)*r12*x13059))+((r11*x13058)));
evalcond[4]=(((r02*x13057))+((cj1*sj0))+((r01*x13060))+((cj0*sj1))+(((-1.0)*cj6*r00*x13059)));
evalcond[5]=(((r22*x13057))+((r21*x13060))+((sj0*sj1))+(((-1.0)*cj6*r20*x13059))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13063 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x13063)==0){
continue;
}
IkReal x13062=pow(x13063,-0.5);
CheckValue<IkReal> x13064 = IKatan2WithCheck(IkReal(r01),IkReal(r00),IKFAST_ATAN2_MAGTHRESH);
if(!x13064.valid){
continue;
}
IkReal gconst36=((-1.0)*(x13064.value));
IkReal gconst37=((-1.0)*r01*x13062);
IkReal gconst38=(r00*x13062);
CheckValue<IkReal> x13065 = IKatan2WithCheck(IkReal(r01),IkReal(r00),IKFAST_ATAN2_MAGTHRESH);
if(!x13065.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x13065.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
CheckValue<IkReal> x13068 = IKatan2WithCheck(IkReal(r01),IkReal(r00),IKFAST_ATAN2_MAGTHRESH);
if(!x13068.valid){
continue;
}
IkReal x13066=((-1.0)*(x13068.value));
IkReal x13067=x13062;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj6=gconst37;
cj6=gconst38;
j6=x13066;
IkReal gconst36=x13066;
IkReal gconst37=((-1.0)*r01*x13067);
IkReal gconst38=(r00*x13067);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x13071 = IKatan2WithCheck(IkReal(r01),IkReal(r00),IKFAST_ATAN2_MAGTHRESH);
if(!x13071.valid){
continue;
}
IkReal x13069=((-1.0)*(x13071.value));
IkReal x13070=x13062;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj6=gconst37;
cj6=gconst38;
j6=x13069;
IkReal gconst36=x13069;
IkReal gconst37=((-1.0)*r01*x13070);
IkReal gconst38=(r00*x13070);
CheckValue<IkReal> x13079=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r02*r02)))),-1);
if(!x13079.valid){
continue;
}
IkReal x13072=x13079.value;
IkReal x13073=(sj4*x13072);
IkReal x13074=(r20*x13073);
IkReal x13075=(r10*x13073);
IkReal x13076=(r11*x13073);
IkReal x13077=(r21*x13073);
IkReal x13078=(r00*r01*x13073);
j5eval[0]=IKsign((((r00*r01*r21*x13075))+((r12*r22*sj4))+((r00*r01*r11*x13074))+((r21*x13076*(r01*r01)))+((r10*x13074*(r00*r00)))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13080=gconst37*gconst37;
IkReal x13081=gconst38*gconst38;
IkReal x13082=(r11*r21);
IkReal x13083=(r10*sj4);
IkReal x13084=(r11*r20);
IkReal x13085=((1.0)*cj4);
IkReal x13086=((1.0)*r10*r20);
IkReal x13087=(gconst37*gconst38*sj4);
IkReal x13088=(cj4*gconst37*gconst38);
CheckValue<IkReal> x13089=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*r20*x13081*x13085))+((x13084*x13088))+((r10*r21*x13088))+(((-1.0)*x13080*x13082*x13085))+(((-1.0)*r12*r22*x13085)))),-1);
if(!x13089.valid){
continue;
}
CheckValue<IkReal> x13090 = IKatan2WithCheck(IkReal((((gconst38*r11*r22*sj4))+((gconst37*r22*x13083)))),IkReal(((((-1.0)*gconst37*gconst38*r20*x13083))+((r21*x13080*x13083))+(((-1.0)*sj4*x13081*x13084))+((x13082*x13087)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13090.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13089.value)))+(x13090.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13091=IKsin(j5);
IkReal x13092=IKcos(j5);
IkReal x13093=(cj1*sj0);
IkReal x13094=(cj0*sj1);
IkReal x13095=(gconst37*r11);
IkReal x13096=(gconst37*r21);
IkReal x13097=(gconst38*r20);
IkReal x13098=(cj0*cj1);
IkReal x13099=(cj4*gconst37);
IkReal x13100=(cj4*gconst38);
IkReal x13101=(r00*sj4);
IkReal x13102=(sj0*sj1);
IkReal x13103=(gconst38*sj4);
IkReal x13104=(gconst37*sj4);
IkReal x13105=(gconst37*r01);
IkReal x13106=((1.0)*x13091);
IkReal x13107=(cj4*x13091);
IkReal x13108=((1.0)*x13092);
IkReal x13109=(cj4*x13092);
IkReal x13110=(x13094+x13093);
IkReal x13111=(sj4*x13108);
evalcond[0]=(((x13091*x13096))+(((-1.0)*x13097*x13106))+(((-1.0)*r22*x13108)));
evalcond[1]=(((x13091*x13105))+(((-1.0)*r02*x13108))+(((-1.0)*gconst38*r00*x13106)));
evalcond[2]=((-1.0)+((x13091*x13095))+(((-1.0)*r12*x13108))+(((-1.0)*gconst38*r10*x13106)));
evalcond[3]=(((x13095*x13109))+(((-1.0)*r10*x13100*x13108))+((r12*x13107))+((r11*x13103))+((r10*x13104)));
evalcond[4]=((((-1.0)*x13095*x13111))+(((-1.0)*r12*sj4*x13106))+((r11*x13100))+((r10*x13099))+((r10*x13092*x13103)));
evalcond[5]=(((x13096*x13109))+(((-1.0)*cj4*x13097*x13108))+((r20*x13104))+((r22*x13107))+x13110+((r21*x13103)));
evalcond[6]=(((r01*x13103))+(((-1.0)*r00*x13100*x13108))+((r01*x13092*x13099))+(((-1.0)*x13102))+((gconst37*x13101))+((r02*x13107))+x13098);
evalcond[7]=(((r01*x13100))+((gconst38*x13092*x13101))+(((-1.0)*r02*sj4*x13106))+(((-1.0)*r01*x13104*x13108))+x13110+((r00*x13099)));
evalcond[8]=((((-1.0)*r22*sj4*x13106))+x13102+((r21*x13100))+((sj4*x13092*x13097))+(((-1.0)*x13098))+(((-1.0)*x13096*x13111))+((r20*x13099)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13112=gconst38*gconst38;
IkReal x13113=gconst37*gconst37;
IkReal x13114=(cj4*r10);
IkReal x13115=(r11*sj4);
IkReal x13116=(gconst37*gconst38);
IkReal x13117=((1.0)*r20);
IkReal x13118=(r10*sj4);
IkReal x13119=(cj4*r11);
IkReal x13120=(r21*x13113);
CheckValue<IkReal> x13121=IKPowWithIntegerCheck(IKsign((((x13115*x13120))+(((-1.0)*x13115*x13116*x13117))+((r20*x13112*x13118))+((r12*r22*sj4))+(((-1.0)*r21*x13116*x13118)))),-1);
if(!x13121.valid){
continue;
}
CheckValue<IkReal> x13122 = IKatan2WithCheck(IkReal((((gconst38*r22*x13119))+((gconst37*r22*x13114)))),IkReal((((x13114*x13120))+(((-1.0)*x13114*x13116*x13117))+(((-1.0)*x13112*x13117*x13119))+((r21*x13116*x13119)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13122.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13121.value)))+(x13122.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13123=IKsin(j5);
IkReal x13124=IKcos(j5);
IkReal x13125=(cj1*sj0);
IkReal x13126=(cj0*sj1);
IkReal x13127=(gconst37*r11);
IkReal x13128=(gconst37*r21);
IkReal x13129=(gconst38*r20);
IkReal x13130=(cj0*cj1);
IkReal x13131=(cj4*gconst37);
IkReal x13132=(cj4*gconst38);
IkReal x13133=(r00*sj4);
IkReal x13134=(sj0*sj1);
IkReal x13135=(gconst38*sj4);
IkReal x13136=(gconst37*sj4);
IkReal x13137=(gconst37*r01);
IkReal x13138=((1.0)*x13123);
IkReal x13139=(cj4*x13123);
IkReal x13140=((1.0)*x13124);
IkReal x13141=(cj4*x13124);
IkReal x13142=(x13125+x13126);
IkReal x13143=(sj4*x13140);
evalcond[0]=((((-1.0)*x13129*x13138))+((x13123*x13128))+(((-1.0)*r22*x13140)));
evalcond[1]=(((x13123*x13137))+(((-1.0)*r02*x13140))+(((-1.0)*gconst38*r00*x13138)));
evalcond[2]=((-1.0)+((x13123*x13127))+(((-1.0)*r12*x13140))+(((-1.0)*gconst38*r10*x13138)));
evalcond[3]=(((r10*x13136))+((x13127*x13141))+((r12*x13139))+(((-1.0)*r10*x13132*x13140))+((r11*x13135)));
evalcond[4]=(((r10*x13131))+(((-1.0)*x13127*x13143))+((r11*x13132))+((r10*x13124*x13135))+(((-1.0)*r12*sj4*x13138)));
evalcond[5]=(((r20*x13136))+(((-1.0)*cj4*x13129*x13140))+((x13128*x13141))+((r21*x13135))+x13142+((r22*x13139)));
evalcond[6]=(((r01*x13135))+((gconst37*x13133))+((r01*x13124*x13131))+(((-1.0)*r00*x13132*x13140))+x13130+((r02*x13139))+(((-1.0)*x13134)));
evalcond[7]=(((r01*x13132))+((r00*x13131))+((gconst38*x13124*x13133))+(((-1.0)*r01*x13136*x13140))+(((-1.0)*r02*sj4*x13138))+x13142);
evalcond[8]=(((r20*x13131))+((sj4*x13124*x13129))+((r21*x13132))+(((-1.0)*x13128*x13143))+x13134+(((-1.0)*r22*sj4*x13138))+(((-1.0)*x13130)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13144=((1.0)*gconst38);
CheckValue<IkReal> x13145=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst37*r20))+(((-1.0)*r21*x13144)))),-1);
if(!x13145.valid){
continue;
}
CheckValue<IkReal> x13146 = IKatan2WithCheck(IkReal(r02),IkReal(((((-1.0)*r00*x13144))+((gconst37*r01)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13146.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13145.value)))+(x13146.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13147=IKsin(j5);
IkReal x13148=IKcos(j5);
IkReal x13149=(cj1*sj0);
IkReal x13150=(cj0*sj1);
IkReal x13151=(gconst37*r11);
IkReal x13152=(gconst37*r21);
IkReal x13153=(gconst38*r20);
IkReal x13154=(cj0*cj1);
IkReal x13155=(cj4*gconst37);
IkReal x13156=(cj4*gconst38);
IkReal x13157=(r00*sj4);
IkReal x13158=(sj0*sj1);
IkReal x13159=(gconst38*sj4);
IkReal x13160=(gconst37*sj4);
IkReal x13161=(gconst37*r01);
IkReal x13162=((1.0)*x13147);
IkReal x13163=(cj4*x13147);
IkReal x13164=((1.0)*x13148);
IkReal x13165=(cj4*x13148);
IkReal x13166=(x13150+x13149);
IkReal x13167=(sj4*x13164);
evalcond[0]=((((-1.0)*x13153*x13162))+((x13147*x13152))+(((-1.0)*r22*x13164)));
evalcond[1]=(((x13147*x13161))+(((-1.0)*gconst38*r00*x13162))+(((-1.0)*r02*x13164)));
evalcond[2]=((-1.0)+((x13147*x13151))+(((-1.0)*r12*x13164))+(((-1.0)*gconst38*r10*x13162)));
evalcond[3]=(((x13151*x13165))+(((-1.0)*r10*x13156*x13164))+((r11*x13159))+((r12*x13163))+((r10*x13160)));
evalcond[4]=(((r10*x13148*x13159))+(((-1.0)*x13151*x13167))+((r11*x13156))+((r10*x13155))+(((-1.0)*r12*sj4*x13162)));
evalcond[5]=(((r20*x13160))+((r21*x13159))+((r22*x13163))+((x13152*x13165))+(((-1.0)*cj4*x13153*x13164))+x13166);
evalcond[6]=(((r02*x13163))+((r01*x13148*x13155))+((r01*x13159))+x13154+(((-1.0)*x13158))+((gconst37*x13157))+(((-1.0)*r00*x13156*x13164)));
evalcond[7]=((((-1.0)*r01*x13160*x13164))+(((-1.0)*r02*sj4*x13162))+((gconst38*x13148*x13157))+((r01*x13156))+x13166+((r00*x13155)));
evalcond[8]=(((r21*x13156))+((sj4*x13148*x13153))+((r20*x13155))+x13158+(((-1.0)*x13154))+(((-1.0)*r22*sj4*x13162))+(((-1.0)*x13152*x13167)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13169 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x13169)==0){
continue;
}
IkReal x13168=pow(x13169,-0.5);
CheckValue<IkReal> x13170 = IKatan2WithCheck(IkReal(r01),IkReal(r00),IKFAST_ATAN2_MAGTHRESH);
if(!x13170.valid){
continue;
}
IkReal gconst39=((3.14159265358979)+(((-1.0)*(x13170.value))));
IkReal gconst40=((1.0)*r01*x13168);
IkReal gconst41=((-1.0)*r00*x13168);
CheckValue<IkReal> x13171 = IKatan2WithCheck(IkReal(r01),IkReal(r00),IKFAST_ATAN2_MAGTHRESH);
if(!x13171.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x13171.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
CheckValue<IkReal> x13174 = IKatan2WithCheck(IkReal(r01),IkReal(r00),IKFAST_ATAN2_MAGTHRESH);
if(!x13174.valid){
continue;
}
IkReal x13172=((1.0)*(x13174.value));
IkReal x13173=x13168;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj6=gconst40;
cj6=gconst41;
j6=((3.14159265)+(((-1.0)*x13172)));
IkReal gconst39=((3.14159265358979)+(((-1.0)*x13172)));
IkReal gconst40=((1.0)*r01*x13173);
IkReal gconst41=((-1.0)*r00*x13173);
j5eval[0]=0;
j5eval[1]=r22;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x13177 = IKatan2WithCheck(IkReal(r01),IkReal(r00),IKFAST_ATAN2_MAGTHRESH);
if(!x13177.valid){
continue;
}
IkReal x13175=((1.0)*(x13177.value));
IkReal x13176=x13168;
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
sj6=gconst40;
cj6=gconst41;
j6=((3.14159265)+(((-1.0)*x13175)));
IkReal gconst39=((3.14159265358979)+(((-1.0)*x13175)));
IkReal gconst40=((1.0)*r01*x13176);
IkReal gconst41=((-1.0)*r00*x13176);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13178=gconst40*gconst40;
IkReal x13179=gconst41*gconst41;
IkReal x13180=(r11*sj4);
IkReal x13181=(cj4*r10);
IkReal x13182=((1.0)*cj4);
IkReal x13183=(gconst41*r20);
IkReal x13184=(gconst40*gconst41*r21);
IkReal x13185=(gconst40*r10*sj4);
IkReal x13186=(r21*x13178);
IkReal x13187=((1.0)*r20*x13179);
CheckValue<IkReal> x13188=IKPowWithIntegerCheck(IKsign(((((-1.0)*r12*r22*x13182))+((cj4*gconst40*r11*x13183))+(((-1.0)*r11*x13182*x13186))+(((-1.0)*x13181*x13187))+((x13181*x13184)))),-1);
if(!x13188.valid){
continue;
}
CheckValue<IkReal> x13189 = IKatan2WithCheck(IkReal((((r22*x13185))+((gconst41*r22*x13180)))),IkReal(((((-1.0)*x13183*x13185))+((r10*sj4*x13186))+(((-1.0)*x13180*x13187))+((x13180*x13184)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13189.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13188.value)))+(x13189.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13190=IKsin(j5);
IkReal x13191=IKcos(j5);
IkReal x13192=(cj1*sj0);
IkReal x13193=(cj0*sj1);
IkReal x13194=(cj0*cj1);
IkReal x13195=(gconst41*sj4);
IkReal x13196=((1.0)*sj4);
IkReal x13197=(cj4*gconst41);
IkReal x13198=(sj0*sj1);
IkReal x13199=(cj4*gconst40);
IkReal x13200=(gconst40*sj4);
IkReal x13201=(r20*x13191);
IkReal x13202=(r22*x13190);
IkReal x13203=(cj4*x13190);
IkReal x13204=(gconst40*x13191);
IkReal x13205=((1.0)*x13191);
IkReal x13206=(gconst40*x13190);
IkReal x13207=(x13193+x13192);
IkReal x13208=(r21*x13204);
IkReal x13209=((1.0)*gconst41*x13190);
evalcond[0]=(((r21*x13206))+(((-1.0)*r20*x13209))+(((-1.0)*r22*x13205)));
evalcond[1]=(((r01*x13206))+(((-1.0)*r02*x13205))+(((-1.0)*r00*x13209)));
evalcond[2]=((-1.0)+(((-1.0)*r10*x13209))+(((-1.0)*r12*x13205))+((r11*x13206)));
evalcond[3]=((((-1.0)*r10*x13197*x13205))+((r10*x13200))+((r11*x13195))+((r12*x13203))+((r11*x13191*x13199)));
evalcond[4]=((((-1.0)*r12*x13190*x13196))+((r10*x13191*x13195))+((r11*x13197))+((r10*x13199))+(((-1.0)*r11*x13196*x13204)));
evalcond[5]=(((cj4*x13202))+((r21*x13195))+((r21*x13191*x13199))+(((-1.0)*x13197*x13201))+x13207+((r20*x13200)));
evalcond[6]=(((r00*x13200))+(((-1.0)*r00*x13197*x13205))+(((-1.0)*x13198))+((r02*x13203))+((r01*x13195))+x13194+((r01*x13191*x13199)));
evalcond[7]=((((-1.0)*r02*x13190*x13196))+(((-1.0)*r01*x13196*x13204))+((r00*x13199))+((r01*x13197))+x13207+((r00*x13191*x13195)));
evalcond[8]=((((-1.0)*x13194))+((r21*x13197))+((x13195*x13201))+((r20*x13199))+x13198+(((-1.0)*x13196*x13202))+(((-1.0)*x13196*x13208)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13210=((1.0)*gconst41);
CheckValue<IkReal> x13211=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst40*r20))+(((-1.0)*r21*x13210)))),-1);
if(!x13211.valid){
continue;
}
CheckValue<IkReal> x13212 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst40*r01))+(((-1.0)*r00*x13210)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13212.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13211.value)))+(x13212.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13213=IKsin(j5);
IkReal x13214=IKcos(j5);
IkReal x13215=(cj1*sj0);
IkReal x13216=(cj0*sj1);
IkReal x13217=(cj0*cj1);
IkReal x13218=(gconst41*sj4);
IkReal x13219=((1.0)*sj4);
IkReal x13220=(cj4*gconst41);
IkReal x13221=(sj0*sj1);
IkReal x13222=(cj4*gconst40);
IkReal x13223=(gconst40*sj4);
IkReal x13224=(r20*x13214);
IkReal x13225=(r22*x13213);
IkReal x13226=(cj4*x13213);
IkReal x13227=(gconst40*x13214);
IkReal x13228=((1.0)*x13214);
IkReal x13229=(gconst40*x13213);
IkReal x13230=(x13216+x13215);
IkReal x13231=(r21*x13227);
IkReal x13232=((1.0)*gconst41*x13213);
evalcond[0]=(((r21*x13229))+(((-1.0)*r22*x13228))+(((-1.0)*r20*x13232)));
evalcond[1]=((((-1.0)*r00*x13232))+(((-1.0)*r02*x13228))+((r01*x13229)));
evalcond[2]=((-1.0)+(((-1.0)*r10*x13232))+(((-1.0)*r12*x13228))+((r11*x13229)));
evalcond[3]=(((r11*x13218))+((r10*x13223))+((r11*x13214*x13222))+((r12*x13226))+(((-1.0)*r10*x13220*x13228)));
evalcond[4]=(((r10*x13214*x13218))+((r10*x13222))+(((-1.0)*r11*x13219*x13227))+((r11*x13220))+(((-1.0)*r12*x13213*x13219)));
evalcond[5]=(((r21*x13218))+((r21*x13214*x13222))+((cj4*x13225))+(((-1.0)*x13220*x13224))+x13230+((r20*x13223)));
evalcond[6]=(((r02*x13226))+(((-1.0)*x13221))+((r01*x13218))+((r01*x13214*x13222))+((r00*x13223))+x13217+(((-1.0)*r00*x13220*x13228)));
evalcond[7]=((((-1.0)*r02*x13213*x13219))+(((-1.0)*r01*x13219*x13227))+((r00*x13222))+((r01*x13220))+x13230+((r00*x13214*x13218)));
evalcond[8]=(((x13218*x13224))+(((-1.0)*x13217))+((r21*x13220))+(((-1.0)*x13219*x13231))+(((-1.0)*x13219*x13225))+x13221+((r20*x13222)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x13233 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst40*r21))+(((-1.0)*gconst41*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13233.valid){
continue;
}
CheckValue<IkReal> x13234=IKPowWithIntegerCheck(IKsign((((gconst41*r01))+((gconst40*r00)))),-1);
if(!x13234.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13233.value)+(((1.5707963267949)*(x13234.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13235=IKsin(j5);
IkReal x13236=IKcos(j5);
IkReal x13237=(cj1*sj0);
IkReal x13238=(cj0*sj1);
IkReal x13239=(cj0*cj1);
IkReal x13240=(gconst41*sj4);
IkReal x13241=((1.0)*sj4);
IkReal x13242=(cj4*gconst41);
IkReal x13243=(sj0*sj1);
IkReal x13244=(cj4*gconst40);
IkReal x13245=(gconst40*sj4);
IkReal x13246=(r20*x13236);
IkReal x13247=(r22*x13235);
IkReal x13248=(cj4*x13235);
IkReal x13249=(gconst40*x13236);
IkReal x13250=((1.0)*x13236);
IkReal x13251=(gconst40*x13235);
IkReal x13252=(x13238+x13237);
IkReal x13253=(r21*x13249);
IkReal x13254=((1.0)*gconst41*x13235);
evalcond[0]=(((r21*x13251))+(((-1.0)*r22*x13250))+(((-1.0)*r20*x13254)));
evalcond[1]=((((-1.0)*r00*x13254))+(((-1.0)*r02*x13250))+((r01*x13251)));
evalcond[2]=((-1.0)+(((-1.0)*r10*x13254))+((r11*x13251))+(((-1.0)*r12*x13250)));
evalcond[3]=(((r10*x13245))+(((-1.0)*r10*x13242*x13250))+((r12*x13248))+((r11*x13240))+((r11*x13236*x13244)));
evalcond[4]=(((r10*x13244))+((r10*x13236*x13240))+(((-1.0)*r11*x13241*x13249))+((r11*x13242))+(((-1.0)*r12*x13235*x13241)));
evalcond[5]=(((r21*x13240))+((r21*x13236*x13244))+((cj4*x13247))+x13252+(((-1.0)*x13242*x13246))+((r20*x13245)));
evalcond[6]=((((-1.0)*x13243))+((r02*x13248))+((r01*x13236*x13244))+((r00*x13245))+(((-1.0)*r00*x13242*x13250))+((r01*x13240))+x13239);
evalcond[7]=(((r00*x13236*x13240))+(((-1.0)*r02*x13235*x13241))+((r00*x13244))+((r01*x13242))+x13252+(((-1.0)*r01*x13241*x13249)));
evalcond[8]=(((r21*x13242))+((x13240*x13246))+x13243+(((-1.0)*x13239))+(((-1.0)*x13241*x13247))+((r20*x13244))+(((-1.0)*x13241*x13253)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x13255=((-1.0)*px);
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x13255);
rxp1_1=(px*r21);
rxp1_2=(r11*x13255);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal x13256=(r11*sj6);
IkReal x13257=((1.0)*cj6*r10);
j5eval[0]=((((-1.0)*x13257))+x13256);
j5eval[1]=((((-1.0)*cj4*x13257))+((cj4*x13256)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x13258=((-1.0)*px);
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x13258);
rxp1_1=(px*r21);
rxp1_2=(r11*x13258);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal x13259=(r11*sj6);
IkReal x13260=(cj6*r10);
j5eval[0]=((((-1.0)*x13260))+x13259);
j5eval[1]=((((-1.0)*sj4*x13259))+((sj4*x13260)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x13261=((-1.0)*px);
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x13261);
rxp1_1=(px*r21);
rxp1_2=(r11*x13261);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=cj4;
j5eval[1]=r02;
j5eval[2]=((((-1.0)*cj4*cj6*r10))+((cj4*r11*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13262=((1.0)*cj6);
CheckValue<IkReal> x13263=IKPowWithIntegerCheck(cj4,-1);
if(!x13263.valid){
continue;
}
CheckValue<IkReal> x13264=IKPowWithIntegerCheck(r02,-1);
if(!x13264.valid){
continue;
}
CheckValue<IkReal> x13265=IKPowWithIntegerCheck((((cj4*r11*sj6))+(((-1.0)*cj4*r10*x13262))),-1);
if(!x13265.valid){
continue;
}
if( IKabs(((x13263.value)*(x13264.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x13265.value)*(((((-1.0)*r11*sj4*x13262))+(((-1.0)*r10*sj4*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x13263.value)*(x13264.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))))+IKsqr(((x13265.value)*(((((-1.0)*r11*sj4*x13262))+(((-1.0)*r10*sj4*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x13263.value)*(x13264.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))), ((x13265.value)*(((((-1.0)*r11*sj4*x13262))+(((-1.0)*r10*sj4*sj6))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13266=IKsin(j5);
IkReal x13267=IKcos(j5);
IkReal x13268=(cj1*sj0);
IkReal x13269=(cj0*sj1);
IkReal x13270=(r21*sj6);
IkReal x13271=(cj4*cj6);
IkReal x13272=(cj6*r10);
IkReal x13273=(cj0*cj1);
IkReal x13274=(r11*sj6);
IkReal x13275=(sj4*sj6);
IkReal x13276=(sj0*sj1);
IkReal x13277=(cj4*sj6);
IkReal x13278=(cj6*r20);
IkReal x13279=(cj6*sj4);
IkReal x13280=(sj4*x13267);
IkReal x13281=(cj4*x13267);
IkReal x13282=(r02*x13266);
IkReal x13283=((1.0)*x13266);
IkReal x13284=((1.0)*x13267);
IkReal x13285=(x13269+x13268);
evalcond[0]=((-1.0)*r02*x13267);
evalcond[1]=(((x13266*x13270))+(((-1.0)*x13278*x13283)));
evalcond[2]=((((-1.0)*x13276))+((cj4*x13282))+x13273);
evalcond[3]=((((-1.0)*sj4*x13282))+x13285);
evalcond[4]=((-1.0)+(((-1.0)*x13272*x13283))+((x13266*x13274)));
evalcond[5]=((((-1.0)*r10*x13271*x13284))+((r11*x13279))+((r10*x13275))+((x13274*x13281)));
evalcond[6]=(((r11*x13271))+((x13272*x13280))+((r10*x13277))+(((-1.0)*x13274*x13280)));
evalcond[7]=(((r21*x13279))+((r20*x13275))+(((-1.0)*r20*x13271*x13284))+((x13270*x13281))+x13285);
evalcond[8]=(((r21*x13271))+((r20*x13277))+(((-1.0)*x13273))+((x13278*x13280))+x13276+(((-1.0)*x13270*x13280)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13286=((1.0)*sj6);
IkReal x13287=(cj6*r10);
CheckValue<IkReal> x13288=IKPowWithIntegerCheck(((((-1.0)*x13287))+((r11*sj6))),-1);
if(!x13288.valid){
continue;
}
CheckValue<IkReal> x13289=IKPowWithIntegerCheck(((((-1.0)*r11*sj4*x13286))+((sj4*x13287))),-1);
if(!x13289.valid){
continue;
}
if( IKabs(x13288.value) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x13289.value)*(((((-1.0)*cj4*cj6*r11))+(((-1.0)*cj4*r10*x13286)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(x13288.value)+IKsqr(((x13289.value)*(((((-1.0)*cj4*cj6*r11))+(((-1.0)*cj4*r10*x13286))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(x13288.value, ((x13289.value)*(((((-1.0)*cj4*cj6*r11))+(((-1.0)*cj4*r10*x13286))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13290=IKsin(j5);
IkReal x13291=IKcos(j5);
IkReal x13292=(cj1*sj0);
IkReal x13293=(cj0*sj1);
IkReal x13294=(r21*sj6);
IkReal x13295=(cj4*cj6);
IkReal x13296=(cj6*r10);
IkReal x13297=(cj0*cj1);
IkReal x13298=(r11*sj6);
IkReal x13299=(sj4*sj6);
IkReal x13300=(sj0*sj1);
IkReal x13301=(cj4*sj6);
IkReal x13302=(cj6*r20);
IkReal x13303=(cj6*sj4);
IkReal x13304=(sj4*x13291);
IkReal x13305=(cj4*x13291);
IkReal x13306=(r02*x13290);
IkReal x13307=((1.0)*x13290);
IkReal x13308=((1.0)*x13291);
IkReal x13309=(x13292+x13293);
evalcond[0]=((-1.0)*r02*x13291);
evalcond[1]=((((-1.0)*x13302*x13307))+((x13290*x13294)));
evalcond[2]=(((cj4*x13306))+x13297+(((-1.0)*x13300)));
evalcond[3]=((((-1.0)*sj4*x13306))+x13309);
evalcond[4]=((-1.0)+(((-1.0)*x13296*x13307))+((x13290*x13298)));
evalcond[5]=((((-1.0)*r10*x13295*x13308))+((r10*x13299))+((x13298*x13305))+((r11*x13303)));
evalcond[6]=(((r11*x13295))+(((-1.0)*x13298*x13304))+((r10*x13301))+((x13296*x13304)));
evalcond[7]=(((r21*x13303))+((r20*x13299))+(((-1.0)*r20*x13295*x13308))+((x13294*x13305))+x13309);
evalcond[8]=((((-1.0)*x13294*x13304))+((r20*x13301))+(((-1.0)*x13297))+((x13302*x13304))+x13300+((r21*x13295)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13310=(r11*sj6);
IkReal x13311=((1.0)*cj6);
CheckValue<IkReal> x13312=IKPowWithIntegerCheck(((((-1.0)*r10*x13311))+x13310),-1);
if(!x13312.valid){
continue;
}
CheckValue<IkReal> x13313=IKPowWithIntegerCheck((((cj4*x13310))+(((-1.0)*cj4*r10*x13311))),-1);
if(!x13313.valid){
continue;
}
if( IKabs(x13312.value) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x13313.value)*(((((-1.0)*r10*sj4*sj6))+(((-1.0)*r11*sj4*x13311)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(x13312.value)+IKsqr(((x13313.value)*(((((-1.0)*r10*sj4*sj6))+(((-1.0)*r11*sj4*x13311))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(x13312.value, ((x13313.value)*(((((-1.0)*r10*sj4*sj6))+(((-1.0)*r11*sj4*x13311))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13314=IKsin(j5);
IkReal x13315=IKcos(j5);
IkReal x13316=(cj1*sj0);
IkReal x13317=(cj0*sj1);
IkReal x13318=(r21*sj6);
IkReal x13319=(cj4*cj6);
IkReal x13320=(cj6*r10);
IkReal x13321=(cj0*cj1);
IkReal x13322=(r11*sj6);
IkReal x13323=(sj4*sj6);
IkReal x13324=(sj0*sj1);
IkReal x13325=(cj4*sj6);
IkReal x13326=(cj6*r20);
IkReal x13327=(cj6*sj4);
IkReal x13328=(sj4*x13315);
IkReal x13329=(cj4*x13315);
IkReal x13330=(r02*x13314);
IkReal x13331=((1.0)*x13314);
IkReal x13332=((1.0)*x13315);
IkReal x13333=(x13317+x13316);
evalcond[0]=((-1.0)*r02*x13315);
evalcond[1]=(((x13314*x13318))+(((-1.0)*x13326*x13331)));
evalcond[2]=((((-1.0)*x13324))+x13321+((cj4*x13330)));
evalcond[3]=((((-1.0)*sj4*x13330))+x13333);
evalcond[4]=((-1.0)+(((-1.0)*x13320*x13331))+((x13314*x13322)));
evalcond[5]=(((r10*x13323))+(((-1.0)*r10*x13319*x13332))+((x13322*x13329))+((r11*x13327)));
evalcond[6]=(((r11*x13319))+((r10*x13325))+((x13320*x13328))+(((-1.0)*x13322*x13328)));
evalcond[7]=(((r20*x13323))+((x13318*x13329))+(((-1.0)*r20*x13319*x13332))+((r21*x13327))+x13333);
evalcond[8]=(((x13326*x13328))+(((-1.0)*x13321))+(((-1.0)*x13318*x13328))+((r20*x13325))+((r21*x13319))+x13324);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13334=cj6*cj6;
IkReal x13335=(r10*sj6);
IkReal x13336=(cj4*r21);
IkReal x13337=(r22*sj4);
IkReal x13338=(cj6*r11);
IkReal x13339=((1.0)*r11);
IkReal x13340=(r21*sj4);
IkReal x13341=(cj4*r20);
IkReal x13342=(r20*sj4);
IkReal x13343=((1.0)*r10*x13334);
CheckValue<IkReal> x13344 = IKatan2WithCheck(IkReal((((x13337*x13338))+((x13335*x13337)))),IkReal((((sj6*x13338*x13340))+(((-1.0)*x13340*x13343))+(((-1.0)*x13334*x13339*x13342))+((r10*x13340))+(((-1.0)*cj6*x13335*x13342)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13344.valid){
continue;
}
CheckValue<IkReal> x13345=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj4*r12*r22))+((r11*x13334*x13336))+((sj6*x13338*x13341))+(((-1.0)*x13341*x13343))+(((-1.0)*x13336*x13339))+((cj6*x13335*x13336)))),-1);
if(!x13345.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13344.value)+(((1.5707963267949)*(x13345.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13346=IKsin(j5);
IkReal x13347=IKcos(j5);
IkReal x13348=(cj1*sj0);
IkReal x13349=(cj0*sj1);
IkReal x13350=(sj4*sj6);
IkReal x13351=(cj4*cj6);
IkReal x13352=(cj0*cj1);
IkReal x13353=(sj0*sj1);
IkReal x13354=((1.0)*sj4);
IkReal x13355=(cj4*sj6);
IkReal x13356=(cj6*sj4);
IkReal x13357=((1.0)*x13347);
IkReal x13358=(sj6*x13346);
IkReal x13359=(r22*x13346);
IkReal x13360=(cj4*x13346);
IkReal x13361=(x13348+x13349);
IkReal x13362=(x13347*x13356);
IkReal x13363=(x13347*x13355);
IkReal x13364=((1.0)*cj6*x13346);
evalcond[0]=((((-1.0)*r22*x13357))+(((-1.0)*r20*x13364))+((r21*x13358)));
evalcond[1]=((((-1.0)*r02*x13357))+(((-1.0)*r00*x13364))+((r01*x13358)));
evalcond[2]=((-1.0)+(((-1.0)*r10*x13364))+(((-1.0)*r12*x13357))+((r11*x13358)));
evalcond[3]=(((r12*x13360))+((r11*x13363))+((r10*x13350))+(((-1.0)*r10*x13351*x13357))+((r11*x13356)));
evalcond[4]=(((r10*x13362))+((r10*x13355))+(((-1.0)*r12*x13346*x13354))+((r11*x13351))+(((-1.0)*r11*x13350*x13357)));
evalcond[5]=((((-1.0)*r20*x13351*x13357))+((r20*x13350))+((r21*x13356))+((cj4*x13359))+((r21*x13363))+x13361);
evalcond[6]=(((r01*x13363))+(((-1.0)*x13353))+((r01*x13356))+((r00*x13350))+x13352+(((-1.0)*r00*x13351*x13357))+((r02*x13360)));
evalcond[7]=(((r00*x13362))+(((-1.0)*r01*x13350*x13357))+((r01*x13351))+((r00*x13355))+x13361+(((-1.0)*r02*x13346*x13354)));
evalcond[8]=((((-1.0)*x13354*x13359))+((r20*x13362))+((r20*x13355))+(((-1.0)*x13352))+((r21*x13351))+x13353+(((-1.0)*r21*x13350*x13357)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13365=((1.0)*cj6);
CheckValue<IkReal> x13366=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x13365))+(((-1.0)*r20*sj6)))),-1);
if(!x13366.valid){
continue;
}
CheckValue<IkReal> x13367 = IKatan2WithCheck(IkReal(r02),IkReal((((r01*sj6))+(((-1.0)*r00*x13365)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13367.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13366.value)))+(x13367.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13368=IKsin(j5);
IkReal x13369=IKcos(j5);
IkReal x13370=(cj1*sj0);
IkReal x13371=(cj0*sj1);
IkReal x13372=(sj4*sj6);
IkReal x13373=(cj4*cj6);
IkReal x13374=(cj0*cj1);
IkReal x13375=(sj0*sj1);
IkReal x13376=((1.0)*sj4);
IkReal x13377=(cj4*sj6);
IkReal x13378=(cj6*sj4);
IkReal x13379=((1.0)*x13369);
IkReal x13380=(sj6*x13368);
IkReal x13381=(r22*x13368);
IkReal x13382=(cj4*x13368);
IkReal x13383=(x13371+x13370);
IkReal x13384=(x13369*x13378);
IkReal x13385=(x13369*x13377);
IkReal x13386=((1.0)*cj6*x13368);
evalcond[0]=((((-1.0)*r22*x13379))+(((-1.0)*r20*x13386))+((r21*x13380)));
evalcond[1]=(((r01*x13380))+(((-1.0)*r00*x13386))+(((-1.0)*r02*x13379)));
evalcond[2]=((-1.0)+((r11*x13380))+(((-1.0)*r10*x13386))+(((-1.0)*r12*x13379)));
evalcond[3]=(((r10*x13372))+((r11*x13385))+((r11*x13378))+((r12*x13382))+(((-1.0)*r10*x13373*x13379)));
evalcond[4]=(((r10*x13377))+((r11*x13373))+((r10*x13384))+(((-1.0)*r12*x13368*x13376))+(((-1.0)*r11*x13372*x13379)));
evalcond[5]=((((-1.0)*r20*x13373*x13379))+((r20*x13372))+((r21*x13378))+x13383+((cj4*x13381))+((r21*x13385)));
evalcond[6]=(((r00*x13372))+((r01*x13378))+(((-1.0)*r00*x13373*x13379))+((r01*x13385))+((r02*x13382))+x13374+(((-1.0)*x13375)));
evalcond[7]=((((-1.0)*r01*x13372*x13379))+((r00*x13377))+((r01*x13373))+((r00*x13384))+(((-1.0)*r02*x13368*x13376))+x13383);
evalcond[8]=(((r20*x13384))+(((-1.0)*r21*x13372*x13379))+((r20*x13377))+(((-1.0)*x13376*x13381))+((r21*x13373))+x13375+(((-1.0)*x13374)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x13387=IKPowWithIntegerCheck(IKsign((((r00*sj6))+((cj6*r01)))),-1);
if(!x13387.valid){
continue;
}
CheckValue<IkReal> x13388 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13388.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13387.value)))+(x13388.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13389=IKsin(j5);
IkReal x13390=IKcos(j5);
IkReal x13391=(cj1*sj0);
IkReal x13392=(cj0*sj1);
IkReal x13393=(sj4*sj6);
IkReal x13394=(cj4*cj6);
IkReal x13395=(cj0*cj1);
IkReal x13396=(sj0*sj1);
IkReal x13397=((1.0)*sj4);
IkReal x13398=(cj4*sj6);
IkReal x13399=(cj6*sj4);
IkReal x13400=((1.0)*x13390);
IkReal x13401=(sj6*x13389);
IkReal x13402=(r22*x13389);
IkReal x13403=(cj4*x13389);
IkReal x13404=(x13392+x13391);
IkReal x13405=(x13390*x13399);
IkReal x13406=(x13390*x13398);
IkReal x13407=((1.0)*cj6*x13389);
evalcond[0]=(((r21*x13401))+(((-1.0)*r20*x13407))+(((-1.0)*r22*x13400)));
evalcond[1]=((((-1.0)*r02*x13400))+((r01*x13401))+(((-1.0)*r00*x13407)));
evalcond[2]=((-1.0)+((r11*x13401))+(((-1.0)*r10*x13407))+(((-1.0)*r12*x13400)));
evalcond[3]=(((r11*x13399))+(((-1.0)*r10*x13394*x13400))+((r10*x13393))+((r11*x13406))+((r12*x13403)));
evalcond[4]=(((r11*x13394))+((r10*x13398))+((r10*x13405))+(((-1.0)*r11*x13393*x13400))+(((-1.0)*r12*x13389*x13397)));
evalcond[5]=(x13404+((r21*x13399))+((r20*x13393))+((r21*x13406))+((cj4*x13402))+(((-1.0)*r20*x13394*x13400)));
evalcond[6]=(((r01*x13406))+(((-1.0)*x13396))+(((-1.0)*r00*x13394*x13400))+((r00*x13393))+((r01*x13399))+((r02*x13403))+x13395);
evalcond[7]=(x13404+((r00*x13405))+((r00*x13398))+(((-1.0)*r02*x13389*x13397))+((r01*x13394))+(((-1.0)*r01*x13393*x13400)));
evalcond[8]=((((-1.0)*x13395))+((r21*x13394))+((r20*x13398))+(((-1.0)*x13397*x13402))+(((-1.0)*r21*x13393*x13400))+((r20*x13405))+x13396);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13408=((-1.0)*r00);
IkReal x13410 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x13410)==0){
continue;
}
IkReal x13409=pow(x13410,-0.5);
CheckValue<IkReal> x13411 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x13408),IKFAST_ATAN2_MAGTHRESH);
if(!x13411.valid){
continue;
}
IkReal gconst12=((-1.0)*(x13411.value));
IkReal gconst13=(r01*x13409);
IkReal gconst14=(x13408*x13409);
CheckValue<IkReal> x13412 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x13412.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x13412.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
IkReal x13413=((-1.0)*r00);
IkReal x13414=x13409;
CheckValue<IkReal> x13416 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(x13413),IKFAST_ATAN2_MAGTHRESH);
if(!x13416.valid){
continue;
}
IkReal x13415=((-1.0)*(x13416.value));
sj6=gconst13;
cj6=gconst14;
j6=x13415;
IkReal gconst12=x13415;
IkReal gconst13=(r01*x13414);
IkReal gconst14=(x13413*x13414);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13417=((1.0)*sj2);
IkReal x13418=((1.0)*cj2);
CheckValue<IkReal> x13419=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst13*r20))+(((-1.0)*gconst14*r21)))),-1);
if(!x13419.valid){
continue;
}
CheckValue<IkReal> x13420 = IKatan2WithCheck(IkReal(((((-1.0)*r12*x13417))+(((-1.0)*r02*x13418)))),IkReal((((cj2*gconst14*r00))+((gconst14*r10*sj2))+(((-1.0)*gconst13*r01*x13418))+(((-1.0)*gconst13*r11*x13417)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13420.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13419.value)))+(x13420.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13421=IKsin(j5);
IkReal x13422=IKcos(j5);
IkReal x13423=(cj4*gconst13);
IkReal x13424=(gconst14*r00);
IkReal x13425=(cj2*sj0);
IkReal x13426=(gconst13*sj4);
IkReal x13427=((1.0)*cj1);
IkReal x13428=(gconst14*sj4);
IkReal x13429=(cj4*gconst14);
IkReal x13430=(cj0*cj2);
IkReal x13431=((1.0)*sj1);
IkReal x13432=(sj0*sj1);
IkReal x13433=(cj0*sj2);
IkReal x13434=(r21*x13422);
IkReal x13435=((1.0)*x13421);
IkReal x13436=(cj4*x13421);
IkReal x13437=(r01*x13422);
IkReal x13438=(r20*x13422);
IkReal x13439=(gconst13*x13421);
IkReal x13440=(r11*x13422);
IkReal x13441=((1.0)*x13422);
evalcond[0]=((((-1.0)*gconst14*r20*x13435))+((r21*x13439))+(((-1.0)*r22*x13441)));
evalcond[1]=(cj2+(((-1.0)*r12*x13441))+((r11*x13439))+(((-1.0)*gconst14*r10*x13435)));
evalcond[2]=(((r01*x13439))+(((-1.0)*sj2))+(((-1.0)*r02*x13441))+(((-1.0)*x13424*x13435)));
evalcond[3]=(((cj1*sj0))+((r22*x13436))+((r21*x13428))+(((-1.0)*x13429*x13438))+((r20*x13426))+((cj0*sj1))+((x13423*x13434)));
evalcond[4]=(x13432+((x13428*x13438))+(((-1.0)*r22*sj4*x13435))+(((-1.0)*x13426*x13434))+(((-1.0)*cj0*x13427))+((r21*x13429))+((r20*x13423)));
evalcond[5]=((((-1.0)*cj4*x13424*x13441))+(((-1.0)*x13427*x13430))+((r02*x13436))+((sj1*x13425))+((r00*x13426))+((r01*x13428))+((x13423*x13437)));
evalcond[6]=((((-1.0)*x13427*x13433))+((x13423*x13440))+(((-1.0)*r10*x13429*x13441))+((r11*x13428))+((r12*x13436))+((sj2*x13432))+((r10*x13426)));
evalcond[7]=((((-1.0)*r02*sj4*x13435))+(((-1.0)*x13426*x13437))+(((-1.0)*x13430*x13431))+((sj4*x13422*x13424))+(((-1.0)*x13425*x13427))+((r00*x13423))+((r01*x13429)));
evalcond[8]=(((r10*x13422*x13428))+(((-1.0)*x13431*x13433))+(((-1.0)*r12*sj4*x13435))+(((-1.0)*x13426*x13440))+((r11*x13429))+(((-1.0)*sj0*sj2*x13427))+((r10*x13423)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13442=((1.0)*gconst14);
CheckValue<IkReal> x13443 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst13*r21*sj2))+(((-1.0)*r20*sj2*x13442)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13443.valid){
continue;
}
CheckValue<IkReal> x13444=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst13*r10))+(((-1.0)*r11*x13442)))),-1);
if(!x13444.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13443.value)+(((1.5707963267949)*(x13444.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13445=IKsin(j5);
IkReal x13446=IKcos(j5);
IkReal x13447=(cj4*gconst13);
IkReal x13448=(gconst14*r00);
IkReal x13449=(cj2*sj0);
IkReal x13450=(gconst13*sj4);
IkReal x13451=((1.0)*cj1);
IkReal x13452=(gconst14*sj4);
IkReal x13453=(cj4*gconst14);
IkReal x13454=(cj0*cj2);
IkReal x13455=((1.0)*sj1);
IkReal x13456=(sj0*sj1);
IkReal x13457=(cj0*sj2);
IkReal x13458=(r21*x13446);
IkReal x13459=((1.0)*x13445);
IkReal x13460=(cj4*x13445);
IkReal x13461=(r01*x13446);
IkReal x13462=(r20*x13446);
IkReal x13463=(gconst13*x13445);
IkReal x13464=(r11*x13446);
IkReal x13465=((1.0)*x13446);
evalcond[0]=((((-1.0)*r22*x13465))+((r21*x13463))+(((-1.0)*gconst14*r20*x13459)));
evalcond[1]=(cj2+((r11*x13463))+(((-1.0)*gconst14*r10*x13459))+(((-1.0)*r12*x13465)));
evalcond[2]=((((-1.0)*sj2))+(((-1.0)*x13448*x13459))+(((-1.0)*r02*x13465))+((r01*x13463)));
evalcond[3]=(((r20*x13450))+((r21*x13452))+(((-1.0)*x13453*x13462))+((cj1*sj0))+((r22*x13460))+((x13447*x13458))+((cj0*sj1)));
evalcond[4]=(x13456+(((-1.0)*r22*sj4*x13459))+((r21*x13453))+(((-1.0)*x13450*x13458))+(((-1.0)*cj0*x13451))+((x13452*x13462))+((r20*x13447)));
evalcond[5]=((((-1.0)*cj4*x13448*x13465))+((r02*x13460))+((sj1*x13449))+((x13447*x13461))+(((-1.0)*x13451*x13454))+((r01*x13452))+((r00*x13450)));
evalcond[6]=(((r10*x13450))+((sj2*x13456))+((r12*x13460))+((r11*x13452))+((x13447*x13464))+(((-1.0)*x13451*x13457))+(((-1.0)*r10*x13453*x13465)));
evalcond[7]=((((-1.0)*x13450*x13461))+(((-1.0)*x13449*x13451))+((r00*x13447))+(((-1.0)*x13454*x13455))+((sj4*x13446*x13448))+(((-1.0)*r02*sj4*x13459))+((r01*x13453)));
evalcond[8]=(((r10*x13446*x13452))+(((-1.0)*sj0*sj2*x13451))+(((-1.0)*x13450*x13464))+((r11*x13453))+(((-1.0)*r12*sj4*x13459))+(((-1.0)*x13455*x13457))+((r10*x13447)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13466=((-1.0)*r01);
IkReal x13468 = ((1.0)+(((-1.0)*(r02*r02))));
if(IKabs(x13468)==0){
continue;
}
IkReal x13467=pow(x13468,-0.5);
CheckValue<IkReal> x13469 = IKatan2WithCheck(IkReal(x13466),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x13469.valid){
continue;
}
IkReal gconst15=((3.14159265358979)+(((-1.0)*(x13469.value))));
IkReal gconst16=(x13466*x13467);
IkReal gconst17=((1.0)*r00*x13467);
CheckValue<IkReal> x13470 = IKatan2WithCheck(IkReal(((-1.0)*r01)),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x13470.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x13470.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x13471=((-1.0)*r01);
CheckValue<IkReal> x13474 = IKatan2WithCheck(IkReal(x13471),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x13474.valid){
continue;
}
IkReal x13472=((1.0)*(x13474.value));
IkReal x13473=x13467;
sj6=gconst16;
cj6=gconst17;
j6=((3.14159265)+(((-1.0)*x13472)));
IkReal gconst15=((3.14159265358979)+(((-1.0)*x13472)));
IkReal gconst16=(x13471*x13473);
IkReal gconst17=((1.0)*r00*x13473);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=cj2;
j5eval[3]=r22;
j5eval[4]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x13475=((-1.0)*r01);
CheckValue<IkReal> x13478 = IKatan2WithCheck(IkReal(x13475),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x13478.valid){
continue;
}
IkReal x13476=((1.0)*(x13478.value));
IkReal x13477=x13467;
sj6=gconst16;
cj6=gconst17;
j6=((3.14159265)+(((-1.0)*x13476)));
IkReal gconst15=((3.14159265358979)+(((-1.0)*x13476)));
IkReal gconst16=(x13475*x13477);
IkReal gconst17=((1.0)*r00*x13477);
j5eval[0]=r22;
j5eval[1]=sj2;
j5eval[2]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x13479=((-1.0)*r01);
CheckValue<IkReal> x13482 = IKatan2WithCheck(IkReal(x13479),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x13482.valid){
continue;
}
IkReal x13480=((1.0)*(x13482.value));
IkReal x13481=x13467;
sj6=gconst16;
cj6=gconst17;
j6=((3.14159265)+(((-1.0)*x13480)));
IkReal gconst15=((3.14159265358979)+(((-1.0)*x13480)));
IkReal gconst16=(x13479*x13481);
IkReal gconst17=((1.0)*r00*x13481);
IkReal x13483=r02*r02;
IkReal x13484=(r12*sj2);
IkReal x13485=((1.0)*cj2);
IkReal x13486=x13467;
j5eval[0]=((IKabs(((((-1.0)*x13485*x13486))+((cj2*x13483*x13486))+((r02*x13484*x13486)))))+(IKabs(((((-1.0)*x13484))+(((-1.0)*r02*x13485))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
IkReal x13487=((-1.0)*r01);
CheckValue<IkReal> x13490 = IKatan2WithCheck(IkReal(x13487),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x13490.valid){
continue;
}
IkReal x13488=((1.0)*(x13490.value));
IkReal x13489=x13467;
sj6=gconst16;
cj6=gconst17;
j6=((3.14159265)+(((-1.0)*x13488)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst15=((3.14159265358979)+(((-1.0)*x13488)));
IkReal gconst16=(x13487*x13489);
IkReal gconst17=((1.0)*r00*x13489);
j5eval[0]=0;
j5eval[1]=0;
j5eval[2]=r22;
j5eval[3]=((1.0)+(((-1.0)*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x13491=((-1.0)*r01);
CheckValue<IkReal> x13494 = IKatan2WithCheck(IkReal(x13491),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x13494.valid){
continue;
}
IkReal x13492=((1.0)*(x13494.value));
IkReal x13493=x13467;
sj6=gconst16;
cj6=gconst17;
j6=((3.14159265)+(((-1.0)*x13492)));
sj2=0;
cj2=-1.0;
j2=3.14159265358979;
IkReal gconst15=((3.14159265358979)+(((-1.0)*x13492)));
IkReal gconst16=(x13491*x13493);
IkReal gconst17=((1.0)*r00*x13493);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13495=gconst16*gconst16;
IkReal x13496=gconst17*gconst17;
IkReal x13497=(cj4*r10);
IkReal x13498=(gconst16*sj4);
IkReal x13499=(r11*sj4);
IkReal x13500=(r11*r21);
IkReal x13501=((1.0)*cj4);
IkReal x13502=(gconst17*r20);
IkReal x13503=((1.0)*r20*x13496);
CheckValue<IkReal> x13504=IKPowWithIntegerCheck(IKsign(((((-1.0)*r12*r22*x13501))+((cj4*gconst16*r11*x13502))+(((-1.0)*x13497*x13503))+(((-1.0)*x13495*x13500*x13501))+((gconst16*gconst17*r21*x13497)))),-1);
if(!x13504.valid){
continue;
}
CheckValue<IkReal> x13505 = IKatan2WithCheck(IkReal((((r10*r22*x13498))+((gconst17*r22*x13499)))),IkReal((((gconst17*x13498*x13500))+(((-1.0)*x13499*x13503))+(((-1.0)*r10*x13498*x13502))+((r10*r21*sj4*x13495)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13505.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13504.value)))+(x13505.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13506=IKsin(j5);
IkReal x13507=IKcos(j5);
IkReal x13508=(cj1*sj0);
IkReal x13509=(cj0*sj1);
IkReal x13510=(cj4*r20);
IkReal x13511=(r10*sj4);
IkReal x13512=(sj0*sj1);
IkReal x13513=(gconst16*sj4);
IkReal x13514=(cj4*gconst16);
IkReal x13515=((1.0)*r10);
IkReal x13516=(gconst17*sj4);
IkReal x13517=(cj0*cj1);
IkReal x13518=(cj4*gconst17);
IkReal x13519=((1.0)*r00);
IkReal x13520=(gconst17*x13507);
IkReal x13521=((1.0)*x13507);
IkReal x13522=(cj4*x13506);
IkReal x13523=(gconst16*x13506);
IkReal x13524=(gconst17*x13506);
IkReal x13525=(x13508+x13509);
IkReal x13526=((1.0)*sj4*x13506);
evalcond[0]=(((r21*x13523))+(((-1.0)*r22*x13521))+(((-1.0)*r20*x13524)));
evalcond[1]=(((r01*x13523))+(((-1.0)*r02*x13521))+(((-1.0)*x13519*x13524)));
evalcond[2]=((-1.0)+(((-1.0)*r12*x13521))+(((-1.0)*x13515*x13524))+((r11*x13523)));
evalcond[3]=(((gconst16*x13511))+((r11*x13507*x13514))+((r11*x13516))+(((-1.0)*x13507*x13515*x13518))+((r12*x13522)));
evalcond[4]=((((-1.0)*r12*x13526))+((r11*x13518))+(((-1.0)*r11*x13513*x13521))+((x13511*x13520))+((r10*x13514)));
evalcond[5]=(((r21*x13516))+x13525+((r20*x13513))+((r21*x13507*x13514))+(((-1.0)*x13510*x13520))+((r22*x13522)));
evalcond[6]=(x13517+((r02*x13522))+(((-1.0)*x13512))+(((-1.0)*x13507*x13518*x13519))+((r01*x13507*x13514))+((r00*x13513))+((r01*x13516)));
evalcond[7]=(x13525+((r00*x13507*x13516))+(((-1.0)*r01*x13513*x13521))+((r00*x13514))+(((-1.0)*r02*x13526))+((r01*x13518)));
evalcond[8]=(((r21*x13518))+x13512+((gconst16*x13510))+(((-1.0)*r22*x13526))+((r20*x13507*x13516))+(((-1.0)*x13517))+(((-1.0)*r21*x13513*x13521)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13527=((1.0)*gconst17);
CheckValue<IkReal> x13528 = IKatan2WithCheck(IkReal(r02),IkReal((((gconst16*r01))+(((-1.0)*r00*x13527)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13528.valid){
continue;
}
CheckValue<IkReal> x13529=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst16*r20))+(((-1.0)*r21*x13527)))),-1);
if(!x13529.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13528.value)+(((1.5707963267949)*(x13529.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13530=IKsin(j5);
IkReal x13531=IKcos(j5);
IkReal x13532=(cj1*sj0);
IkReal x13533=(cj0*sj1);
IkReal x13534=(cj4*r20);
IkReal x13535=(r10*sj4);
IkReal x13536=(sj0*sj1);
IkReal x13537=(gconst16*sj4);
IkReal x13538=(cj4*gconst16);
IkReal x13539=((1.0)*r10);
IkReal x13540=(gconst17*sj4);
IkReal x13541=(cj0*cj1);
IkReal x13542=(cj4*gconst17);
IkReal x13543=((1.0)*r00);
IkReal x13544=(gconst17*x13531);
IkReal x13545=((1.0)*x13531);
IkReal x13546=(cj4*x13530);
IkReal x13547=(gconst16*x13530);
IkReal x13548=(gconst17*x13530);
IkReal x13549=(x13533+x13532);
IkReal x13550=((1.0)*sj4*x13530);
evalcond[0]=(((r21*x13547))+(((-1.0)*r22*x13545))+(((-1.0)*r20*x13548)));
evalcond[1]=(((r01*x13547))+(((-1.0)*r02*x13545))+(((-1.0)*x13543*x13548)));
evalcond[2]=((-1.0)+(((-1.0)*x13539*x13548))+((r11*x13547))+(((-1.0)*r12*x13545)));
evalcond[3]=(((r12*x13546))+((gconst16*x13535))+((r11*x13540))+(((-1.0)*x13531*x13539*x13542))+((r11*x13531*x13538)));
evalcond[4]=(((r11*x13542))+(((-1.0)*r11*x13537*x13545))+(((-1.0)*r12*x13550))+((r10*x13538))+((x13535*x13544)));
evalcond[5]=(x13549+((r22*x13546))+((r21*x13540))+((r20*x13537))+(((-1.0)*x13534*x13544))+((r21*x13531*x13538)));
evalcond[6]=(x13541+((r01*x13540))+(((-1.0)*x13536))+((r01*x13531*x13538))+((r00*x13537))+(((-1.0)*x13531*x13542*x13543))+((r02*x13546)));
evalcond[7]=(x13549+(((-1.0)*r01*x13537*x13545))+((r01*x13542))+(((-1.0)*r02*x13550))+((r00*x13531*x13540))+((r00*x13538)));
evalcond[8]=(x13536+((gconst16*x13534))+((r21*x13542))+(((-1.0)*r21*x13537*x13545))+(((-1.0)*r22*x13550))+(((-1.0)*x13541))+((r20*x13531*x13540)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x13551=IKPowWithIntegerCheck(IKsign((((gconst17*r01))+((gconst16*r00)))),-1);
if(!x13551.valid){
continue;
}
CheckValue<IkReal> x13552 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*gconst17*r20))+((gconst16*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13552.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13551.value)))+(x13552.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13553=IKsin(j5);
IkReal x13554=IKcos(j5);
IkReal x13555=(cj1*sj0);
IkReal x13556=(cj0*sj1);
IkReal x13557=(cj4*r20);
IkReal x13558=(r10*sj4);
IkReal x13559=(sj0*sj1);
IkReal x13560=(gconst16*sj4);
IkReal x13561=(cj4*gconst16);
IkReal x13562=((1.0)*r10);
IkReal x13563=(gconst17*sj4);
IkReal x13564=(cj0*cj1);
IkReal x13565=(cj4*gconst17);
IkReal x13566=((1.0)*r00);
IkReal x13567=(gconst17*x13554);
IkReal x13568=((1.0)*x13554);
IkReal x13569=(cj4*x13553);
IkReal x13570=(gconst16*x13553);
IkReal x13571=(gconst17*x13553);
IkReal x13572=(x13555+x13556);
IkReal x13573=((1.0)*sj4*x13553);
evalcond[0]=((((-1.0)*r20*x13571))+((r21*x13570))+(((-1.0)*r22*x13568)));
evalcond[1]=((((-1.0)*r02*x13568))+(((-1.0)*x13566*x13571))+((r01*x13570)));
evalcond[2]=((-1.0)+(((-1.0)*x13562*x13571))+(((-1.0)*r12*x13568))+((r11*x13570)));
evalcond[3]=(((r11*x13563))+((r11*x13554*x13561))+((r12*x13569))+((gconst16*x13558))+(((-1.0)*x13554*x13562*x13565)));
evalcond[4]=(((r10*x13561))+((r11*x13565))+(((-1.0)*r11*x13560*x13568))+(((-1.0)*r12*x13573))+((x13558*x13567)));
evalcond[5]=(x13572+(((-1.0)*x13557*x13567))+((r20*x13560))+((r22*x13569))+((r21*x13554*x13561))+((r21*x13563)));
evalcond[6]=(x13564+((r00*x13560))+((r01*x13563))+((r02*x13569))+(((-1.0)*x13554*x13565*x13566))+(((-1.0)*x13559))+((r01*x13554*x13561)));
evalcond[7]=((((-1.0)*r02*x13573))+x13572+((r00*x13561))+((r01*x13565))+(((-1.0)*r01*x13560*x13568))+((r00*x13554*x13563)));
evalcond[8]=((((-1.0)*r22*x13573))+x13559+((r20*x13554*x13563))+(((-1.0)*x13564))+((gconst16*x13557))+((r21*x13565))+(((-1.0)*r21*x13560*x13568)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
j5array[0]=0;
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
j5array[0]=0;
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(r22);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x13574=((-1.0)*r01);
CheckValue<IkReal> x13577 = IKatan2WithCheck(IkReal(x13574),IkReal(((-1.0)*r00)),IKFAST_ATAN2_MAGTHRESH);
if(!x13577.valid){
continue;
}
IkReal x13575=((1.0)*(x13577.value));
IkReal x13576=x13467;
sj6=gconst16;
cj6=gconst17;
j6=((3.14159265)+(((-1.0)*x13575)));
r22=0;
npz=(((px*r02))+((py*r12)));
rxp2_0=(pz*r12);
rxp2_1=((-1.0)*pz*r02);
IkReal gconst15=((3.14159265358979)+(((-1.0)*x13575)));
IkReal gconst16=(x13574*x13576);
IkReal gconst17=((1.0)*r00*x13576);
IkReal x13578=r02*r02;
IkReal x13579=(r12*sj2);
IkReal x13580=((1.0)*cj2);
IkReal x13581=x13467;
j5eval[0]=((IKabs(((((-1.0)*r02*x13580))+(((-1.0)*x13579)))))+(IKabs(((((-1.0)*x13580*x13581))+((cj2*x13578*x13581))+((r02*x13579*x13581))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13582=(cj0*cj1);
IkReal x13583=(gconst16*r20);
IkReal x13584=(gconst17*sj4);
IkReal x13585=((1.0)*cj4);
IkReal x13586=(gconst16*r21);
IkReal x13587=((1.0)*sj4);
IkReal x13588=(gconst17*r21);
IkReal x13589=((1.0)*sj0*sj1);
CheckValue<IkReal> x13590=IKPowWithIntegerCheck((((r11*x13583*x13584))+(((-1.0)*gconst16*r11*x13586*x13587))+((r10*x13584*x13586))+(((-1.0)*gconst17*r10*r20*x13584))),-1);
if(!x13590.valid){
continue;
}
CheckValue<IkReal> x13591=IKPowWithIntegerCheck(((((-1.0)*x13586*x13587))+((r20*x13584))),-1);
if(!x13591.valid){
continue;
}
if( IKabs(((x13590.value)*((((r12*x13582))+((cj2*sj4*x13586))+(((-1.0)*r12*x13589))+(((-1.0)*r12*x13583*x13585))+(((-1.0)*r12*x13585*x13588))+(((-1.0)*cj2*r20*x13584)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x13591.value)*((x13582+(((-1.0)*x13585*x13588))+(((-1.0)*x13583*x13585))+(((-1.0)*x13589)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x13590.value)*((((r12*x13582))+((cj2*sj4*x13586))+(((-1.0)*r12*x13589))+(((-1.0)*r12*x13583*x13585))+(((-1.0)*r12*x13585*x13588))+(((-1.0)*cj2*r20*x13584))))))+IKsqr(((x13591.value)*((x13582+(((-1.0)*x13585*x13588))+(((-1.0)*x13583*x13585))+(((-1.0)*x13589))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x13590.value)*((((r12*x13582))+((cj2*sj4*x13586))+(((-1.0)*r12*x13589))+(((-1.0)*r12*x13583*x13585))+(((-1.0)*r12*x13585*x13588))+(((-1.0)*cj2*r20*x13584))))), ((x13591.value)*((x13582+(((-1.0)*x13585*x13588))+(((-1.0)*x13583*x13585))+(((-1.0)*x13589))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13592=IKsin(j5);
IkReal x13593=IKcos(j5);
IkReal x13594=(cj4*r20);
IkReal x13595=(r10*sj4);
IkReal x13596=((1.0)*sj4);
IkReal x13597=(cj2*sj1);
IkReal x13598=(r20*sj4);
IkReal x13599=(cj4*r11);
IkReal x13600=(cj4*r01);
IkReal x13601=((1.0)*sj2);
IkReal x13602=(cj4*r10);
IkReal x13603=(sj0*sj1);
IkReal x13604=(gconst17*sj4);
IkReal x13605=(cj4*r21);
IkReal x13606=(cj1*sj0);
IkReal x13607=(r00*sj4);
IkReal x13608=(cj4*r00);
IkReal x13609=(cj0*sj1);
IkReal x13610=(gconst17*x13593);
IkReal x13611=((1.0)*cj0*cj1);
IkReal x13612=(r02*x13592);
IkReal x13613=(gconst16*x13593);
IkReal x13614=(gconst16*x13592);
IkReal x13615=(r12*x13592);
IkReal x13616=((1.0)*x13593);
IkReal x13617=((1.0)*gconst17*x13592);
evalcond[0]=(((r21*x13614))+(((-1.0)*r20*x13617)));
evalcond[1]=(cj2+(((-1.0)*r10*x13617))+((r11*x13614))+(((-1.0)*r12*x13616)));
evalcond[2]=((((-1.0)*r02*x13616))+((r01*x13614))+(((-1.0)*x13601))+(((-1.0)*r00*x13617)));
evalcond[3]=(x13606+x13609+((gconst16*x13598))+(((-1.0)*x13594*x13610))+((r21*x13604))+((x13605*x13613)));
evalcond[4]=((((-1.0)*x13611))+x13603+((gconst16*x13594))+((gconst17*x13605))+((x13598*x13610))+(((-1.0)*r21*x13596*x13613)));
evalcond[5]=(((sj0*x13597))+((x13600*x13613))+((gconst16*x13607))+((cj4*x13612))+(((-1.0)*cj2*x13611))+(((-1.0)*x13608*x13610))+((r01*x13604)));
evalcond[6]=(((r11*x13604))+(((-1.0)*x13602*x13610))+((gconst16*x13595))+((x13599*x13613))+((sj2*x13603))+((cj4*x13615))+(((-1.0)*cj0*cj1*x13601)));
evalcond[7]=((((-1.0)*r01*x13596*x13613))+((r00*x13593*x13604))+((gconst17*x13600))+(((-1.0)*cj0*x13597))+((gconst16*x13608))+(((-1.0)*x13596*x13612))+(((-1.0)*cj2*x13606)));
evalcond[8]=(((gconst17*x13599))+(((-1.0)*r11*x13596*x13613))+((x13595*x13610))+((gconst16*x13602))+(((-1.0)*x13596*x13615))+(((-1.0)*x13601*x13609))+(((-1.0)*x13601*x13606)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13618=((1.0)*gconst16);
CheckValue<IkReal> x13619 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal(((((-1.0)*cj2*r01*x13618))+((cj2*gconst17*r00))+(((-1.0)*r11*sj2*x13618))+((gconst17*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13619.valid){
continue;
}
CheckValue<IkReal> x13620=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst17*r21))+(((-1.0)*r20*x13618)))),-1);
if(!x13620.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13619.value)+(((1.5707963267949)*(x13620.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13621=IKsin(j5);
IkReal x13622=IKcos(j5);
IkReal x13623=(cj4*r20);
IkReal x13624=(r10*sj4);
IkReal x13625=((1.0)*sj4);
IkReal x13626=(cj2*sj1);
IkReal x13627=(r20*sj4);
IkReal x13628=(cj4*r11);
IkReal x13629=(cj4*r01);
IkReal x13630=((1.0)*sj2);
IkReal x13631=(cj4*r10);
IkReal x13632=(sj0*sj1);
IkReal x13633=(gconst17*sj4);
IkReal x13634=(cj4*r21);
IkReal x13635=(cj1*sj0);
IkReal x13636=(r00*sj4);
IkReal x13637=(cj4*r00);
IkReal x13638=(cj0*sj1);
IkReal x13639=(gconst17*x13622);
IkReal x13640=((1.0)*cj0*cj1);
IkReal x13641=(r02*x13621);
IkReal x13642=(gconst16*x13622);
IkReal x13643=(gconst16*x13621);
IkReal x13644=(r12*x13621);
IkReal x13645=((1.0)*x13622);
IkReal x13646=((1.0)*gconst17*x13621);
evalcond[0]=((((-1.0)*r20*x13646))+((r21*x13643)));
evalcond[1]=((((-1.0)*r10*x13646))+(((-1.0)*r12*x13645))+cj2+((r11*x13643)));
evalcond[2]=((((-1.0)*x13630))+(((-1.0)*r00*x13646))+((r01*x13643))+(((-1.0)*r02*x13645)));
evalcond[3]=(x13635+x13638+(((-1.0)*x13623*x13639))+((r21*x13633))+((x13634*x13642))+((gconst16*x13627)));
evalcond[4]=(x13632+(((-1.0)*r21*x13625*x13642))+(((-1.0)*x13640))+((gconst17*x13634))+((gconst16*x13623))+((x13627*x13639)));
evalcond[5]=((((-1.0)*x13637*x13639))+((sj0*x13626))+((x13629*x13642))+((gconst16*x13636))+((cj4*x13641))+(((-1.0)*cj2*x13640))+((r01*x13633)));
evalcond[6]=(((r11*x13633))+((cj4*x13644))+((sj2*x13632))+((gconst16*x13624))+((x13628*x13642))+(((-1.0)*cj0*cj1*x13630))+(((-1.0)*x13631*x13639)));
evalcond[7]=((((-1.0)*cj0*x13626))+((gconst17*x13629))+((r00*x13622*x13633))+((gconst16*x13637))+(((-1.0)*cj2*x13635))+(((-1.0)*x13625*x13641))+(((-1.0)*r01*x13625*x13642)));
evalcond[8]=((((-1.0)*r11*x13625*x13642))+((x13624*x13639))+(((-1.0)*x13630*x13638))+(((-1.0)*x13630*x13635))+((gconst17*x13628))+((gconst16*x13631))+(((-1.0)*x13625*x13644)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13647=((1.0)*gconst16);
CheckValue<IkReal> x13648=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst17*r21))+(((-1.0)*r20*x13647)))),-1);
if(!x13648.valid){
continue;
}
CheckValue<IkReal> x13649 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal(((((-1.0)*cj2*r01*x13647))+(((-1.0)*r11*sj2*x13647))+((cj2*gconst17*r00))+((gconst17*r10*sj2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13649.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13648.value)))+(x13649.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13650=IKsin(j5);
IkReal x13651=IKcos(j5);
IkReal x13652=(cj4*r20);
IkReal x13653=(r10*sj4);
IkReal x13654=((1.0)*sj4);
IkReal x13655=(cj2*sj1);
IkReal x13656=(r20*sj4);
IkReal x13657=(cj4*r11);
IkReal x13658=(cj4*r01);
IkReal x13659=((1.0)*sj2);
IkReal x13660=(cj4*r10);
IkReal x13661=(sj0*sj1);
IkReal x13662=(gconst17*sj4);
IkReal x13663=(cj4*r21);
IkReal x13664=(cj4*r00);
IkReal x13665=(cj1*sj0);
IkReal x13666=(r00*sj4);
IkReal x13667=(cj0*sj1);
IkReal x13668=(gconst17*x13651);
IkReal x13669=((1.0)*cj0*cj1);
IkReal x13670=(r02*x13650);
IkReal x13671=(gconst16*x13651);
IkReal x13672=(r22*x13650);
IkReal x13673=(gconst16*x13650);
IkReal x13674=(r12*x13650);
IkReal x13675=((1.0)*x13651);
IkReal x13676=((1.0)*gconst17*x13650);
evalcond[0]=((((-1.0)*r20*x13676))+((r21*x13673))+(((-1.0)*r22*x13675)));
evalcond[1]=(cj2+(((-1.0)*r12*x13675))+((r11*x13673))+(((-1.0)*r10*x13676)));
evalcond[2]=(((r01*x13673))+(((-1.0)*r00*x13676))+(((-1.0)*r02*x13675))+(((-1.0)*x13659)));
evalcond[3]=(x13667+x13665+((gconst16*x13656))+(((-1.0)*x13652*x13668))+((x13663*x13671))+((r21*x13662))+((cj4*x13672)));
evalcond[4]=(((gconst17*x13663))+x13661+(((-1.0)*r21*x13654*x13671))+((gconst16*x13652))+(((-1.0)*x13669))+((x13656*x13668))+(((-1.0)*x13654*x13672)));
evalcond[5]=((((-1.0)*cj2*x13669))+(((-1.0)*x13664*x13668))+((gconst16*x13666))+((sj0*x13655))+((r01*x13662))+((cj4*x13670))+((x13658*x13671)));
evalcond[6]=((((-1.0)*cj0*cj1*x13659))+((r11*x13662))+((gconst16*x13653))+((sj2*x13661))+((x13657*x13671))+((cj4*x13674))+(((-1.0)*x13660*x13668)));
evalcond[7]=(((gconst16*x13664))+(((-1.0)*r01*x13654*x13671))+((r00*x13651*x13662))+(((-1.0)*cj2*x13665))+(((-1.0)*x13654*x13670))+(((-1.0)*cj0*x13655))+((gconst17*x13658)));
evalcond[8]=(((gconst16*x13660))+((x13653*x13668))+(((-1.0)*r11*x13654*x13671))+(((-1.0)*x13654*x13674))+((gconst17*x13657))+(((-1.0)*x13659*x13667))+(((-1.0)*x13659*x13665)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13677=((1.0)*gconst17);
CheckValue<IkReal> x13678=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst16*r10))+(((-1.0)*r11*x13677)))),-1);
if(!x13678.valid){
continue;
}
CheckValue<IkReal> x13679 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal((((gconst16*r21*sj2))+(((-1.0)*r20*sj2*x13677)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13679.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13678.value)))+(x13679.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13680=IKsin(j5);
IkReal x13681=IKcos(j5);
IkReal x13682=(cj4*r20);
IkReal x13683=(r10*sj4);
IkReal x13684=((1.0)*sj4);
IkReal x13685=(cj2*sj1);
IkReal x13686=(r20*sj4);
IkReal x13687=(cj4*r11);
IkReal x13688=(cj4*r01);
IkReal x13689=((1.0)*sj2);
IkReal x13690=(cj4*r10);
IkReal x13691=(sj0*sj1);
IkReal x13692=(gconst17*sj4);
IkReal x13693=(cj4*r21);
IkReal x13694=(cj4*r00);
IkReal x13695=(cj1*sj0);
IkReal x13696=(r00*sj4);
IkReal x13697=(cj0*sj1);
IkReal x13698=(gconst17*x13681);
IkReal x13699=((1.0)*cj0*cj1);
IkReal x13700=(r02*x13680);
IkReal x13701=(gconst16*x13681);
IkReal x13702=(r22*x13680);
IkReal x13703=(gconst16*x13680);
IkReal x13704=(r12*x13680);
IkReal x13705=((1.0)*x13681);
IkReal x13706=((1.0)*gconst17*x13680);
evalcond[0]=((((-1.0)*r22*x13705))+((r21*x13703))+(((-1.0)*r20*x13706)));
evalcond[1]=(cj2+(((-1.0)*r12*x13705))+(((-1.0)*r10*x13706))+((r11*x13703)));
evalcond[2]=((((-1.0)*r00*x13706))+((r01*x13703))+(((-1.0)*x13689))+(((-1.0)*r02*x13705)));
evalcond[3]=(x13697+x13695+((x13693*x13701))+((r21*x13692))+(((-1.0)*x13682*x13698))+((cj4*x13702))+((gconst16*x13686)));
evalcond[4]=(x13691+(((-1.0)*x13699))+((gconst17*x13693))+(((-1.0)*r21*x13684*x13701))+((x13686*x13698))+(((-1.0)*x13684*x13702))+((gconst16*x13682)));
evalcond[5]=(((r01*x13692))+((gconst16*x13696))+(((-1.0)*cj2*x13699))+(((-1.0)*x13694*x13698))+((x13688*x13701))+((sj0*x13685))+((cj4*x13700)));
evalcond[6]=(((x13687*x13701))+((sj2*x13691))+(((-1.0)*cj0*cj1*x13689))+(((-1.0)*x13690*x13698))+((r11*x13692))+((cj4*x13704))+((gconst16*x13683)));
evalcond[7]=((((-1.0)*cj0*x13685))+(((-1.0)*cj2*x13695))+((gconst16*x13694))+((r00*x13681*x13692))+(((-1.0)*r01*x13684*x13701))+(((-1.0)*x13684*x13700))+((gconst17*x13688)));
evalcond[8]=(((x13683*x13698))+((gconst16*x13690))+(((-1.0)*x13689*x13695))+(((-1.0)*x13689*x13697))+(((-1.0)*x13684*x13704))+(((-1.0)*r11*x13684*x13701))+((gconst17*x13687)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13707=((1.0)*gconst17);
CheckValue<IkReal> x13708 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal((((cj2*gconst16*r21))+(((-1.0)*cj2*r20*x13707)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13708.valid){
continue;
}
CheckValue<IkReal> x13709=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst16*r00))+(((-1.0)*r01*x13707)))),-1);
if(!x13709.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13708.value)+(((1.5707963267949)*(x13709.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13710=IKsin(j5);
IkReal x13711=IKcos(j5);
IkReal x13712=(cj4*r20);
IkReal x13713=(r10*sj4);
IkReal x13714=((1.0)*sj4);
IkReal x13715=(cj2*sj1);
IkReal x13716=(r20*sj4);
IkReal x13717=(cj4*r11);
IkReal x13718=(cj4*r01);
IkReal x13719=((1.0)*sj2);
IkReal x13720=(cj4*r10);
IkReal x13721=(sj0*sj1);
IkReal x13722=(gconst17*sj4);
IkReal x13723=(cj4*r21);
IkReal x13724=(cj4*r00);
IkReal x13725=(cj1*sj0);
IkReal x13726=(r00*sj4);
IkReal x13727=(cj0*sj1);
IkReal x13728=(gconst17*x13711);
IkReal x13729=((1.0)*cj0*cj1);
IkReal x13730=(r02*x13710);
IkReal x13731=(gconst16*x13711);
IkReal x13732=(r22*x13710);
IkReal x13733=(gconst16*x13710);
IkReal x13734=(r12*x13710);
IkReal x13735=((1.0)*x13711);
IkReal x13736=((1.0)*gconst17*x13710);
evalcond[0]=((((-1.0)*r22*x13735))+((r21*x13733))+(((-1.0)*r20*x13736)));
evalcond[1]=((((-1.0)*r12*x13735))+(((-1.0)*r10*x13736))+cj2+((r11*x13733)));
evalcond[2]=((((-1.0)*r02*x13735))+(((-1.0)*r00*x13736))+((r01*x13733))+(((-1.0)*x13719)));
evalcond[3]=((((-1.0)*x13712*x13728))+x13727+x13725+((gconst16*x13716))+((r21*x13722))+((cj4*x13732))+((x13723*x13731)));
evalcond[4]=(((x13716*x13728))+x13721+(((-1.0)*r21*x13714*x13731))+((gconst16*x13712))+(((-1.0)*x13714*x13732))+((gconst17*x13723))+(((-1.0)*x13729)));
evalcond[5]=((((-1.0)*cj2*x13729))+((sj0*x13715))+(((-1.0)*x13724*x13728))+((r01*x13722))+((cj4*x13730))+((x13718*x13731))+((gconst16*x13726)));
evalcond[6]=(((sj2*x13721))+((gconst16*x13713))+((r11*x13722))+(((-1.0)*cj0*cj1*x13719))+((cj4*x13734))+(((-1.0)*x13720*x13728))+((x13717*x13731)));
evalcond[7]=((((-1.0)*x13714*x13730))+(((-1.0)*cj2*x13725))+((r00*x13711*x13722))+((gconst16*x13724))+(((-1.0)*r01*x13714*x13731))+(((-1.0)*cj0*x13715))+((gconst17*x13718)));
evalcond[8]=((((-1.0)*x13714*x13734))+(((-1.0)*x13719*x13725))+(((-1.0)*x13719*x13727))+(((-1.0)*r11*x13714*x13731))+((gconst16*x13720))+((x13713*x13728))+((gconst17*x13717)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x13737=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x13737;
j5eval[1]=IKsign(x13737);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x13738=((1.0)*cj6);
IkReal x13739=((((-1.0)*r10*sj6))+(((-1.0)*r11*x13738)));
j5eval[0]=x13739;
j5eval[1]=IKsign(x13739);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x13738))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
IkReal x13740=cj6*cj6;
IkReal x13741=(cj4*r20);
IkReal x13742=(cj6*sj6);
IkReal x13743=(cj4*r01*r21);
IkReal x13744=((((-1.0)*cj4*r02*r22))+(((-1.0)*x13743))+((x13740*x13743))+((r01*x13741*x13742))+(((-1.0)*r00*x13740*x13741))+((cj4*r00*r21*x13742)));
j5eval[0]=x13744;
j5eval[1]=IKsign(x13744);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x13745=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x13745;
j5eval[1]=IKsign(x13745);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x13746=((1.0)*cj6);
IkReal x13747=((((-1.0)*r11*x13746))+(((-1.0)*r10*sj6)));
j5eval[0]=x13747;
j5eval[1]=IKsign(x13747);
j5eval[2]=((IKabs(r22))+(IKabs(((((-1.0)*r20*x13746))+((r21*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x13748=r01*r01;
IkReal x13749=cj6*cj6;
IkReal x13750=(cj6*r00);
IkReal x13751=(r01*sj6);
IkReal x13752=((((-1.0)*(r02*r02)))+(((-1.0)*x13749*(r00*r00)))+(((-1.0)*x13748))+((x13748*x13749))+(((2.0)*x13750*x13751)));
j5eval[0]=x13752;
j5eval[1]=((IKabs(r02))+(IKabs((x13750+(((-1.0)*x13751))))));
j5eval[2]=IKsign(x13752);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13753=r01*r01;
IkReal x13754=cj6*cj6;
IkReal x13755=(cj6*r00);
IkReal x13756=(r01*sj6);
CheckValue<IkReal> x13757 = IKatan2WithCheck(IkReal((x13755+(((-1.0)*x13756)))),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x13757.valid){
continue;
}
CheckValue<IkReal> x13758=IKPowWithIntegerCheck(IKsign(((((2.0)*x13755*x13756))+(((-1.0)*x13753))+(((-1.0)*x13754*(r00*r00)))+(((-1.0)*(r02*r02)))+((x13753*x13754)))),-1);
if(!x13758.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13757.value)+(((1.5707963267949)*(x13758.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13759=IKsin(j5);
IkReal x13760=IKcos(j5);
IkReal x13761=(r01*sj6);
IkReal x13762=(r21*sj6);
IkReal x13763=((1.0)*cj0);
IkReal x13764=(r11*sj6);
IkReal x13765=((1.0)*x13760);
IkReal x13766=((1.0)*x13759);
IkReal x13767=(cj6*x13760);
IkReal x13768=(cj6*x13766);
evalcond[0]=((((-1.0)*r22*x13765))+(((-1.0)*r20*x13768))+((x13759*x13762)));
evalcond[1]=((((-1.0)*r10*x13768))+(((-1.0)*r12*x13765))+((x13759*x13764)));
evalcond[2]=((((-1.0)*r02*x13766))+((r00*x13767))+(((-1.0)*x13761*x13765)));
evalcond[3]=((-1.0)+(((-1.0)*r00*x13768))+(((-1.0)*r02*x13765))+((x13759*x13761)));
evalcond[4]=((((-1.0)*cj1*x13763))+(((-1.0)*r22*x13766))+((r20*x13767))+((sj0*sj1))+(((-1.0)*x13762*x13765)));
evalcond[5]=((((-1.0)*sj1*x13763))+(((-1.0)*cj1*sj0))+(((-1.0)*x13764*x13765))+((r10*x13767))+(((-1.0)*r12*x13766)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13769=((1.0)*cj6);
CheckValue<IkReal> x13770 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x13769)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13770.valid){
continue;
}
CheckValue<IkReal> x13771=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x13769)))),-1);
if(!x13771.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13770.value)+(((1.5707963267949)*(x13771.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13772=IKsin(j5);
IkReal x13773=IKcos(j5);
IkReal x13774=(r01*sj6);
IkReal x13775=(r21*sj6);
IkReal x13776=((1.0)*cj0);
IkReal x13777=(r11*sj6);
IkReal x13778=((1.0)*x13773);
IkReal x13779=((1.0)*x13772);
IkReal x13780=(cj6*x13773);
IkReal x13781=(cj6*x13779);
evalcond[0]=(((x13772*x13775))+(((-1.0)*r22*x13778))+(((-1.0)*r20*x13781)));
evalcond[1]=(((x13772*x13777))+(((-1.0)*r10*x13781))+(((-1.0)*r12*x13778)));
evalcond[2]=(((r00*x13780))+(((-1.0)*r02*x13779))+(((-1.0)*x13774*x13778)));
evalcond[3]=((-1.0)+((x13772*x13774))+(((-1.0)*r02*x13778))+(((-1.0)*r00*x13781)));
evalcond[4]=((((-1.0)*cj1*x13776))+(((-1.0)*r22*x13779))+((sj0*sj1))+(((-1.0)*x13775*x13778))+((r20*x13780)));
evalcond[5]=((((-1.0)*x13777*x13778))+(((-1.0)*sj1*x13776))+(((-1.0)*cj1*sj0))+(((-1.0)*r12*x13779))+((r10*x13780)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x13782=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x13782.valid){
continue;
}
CheckValue<IkReal> x13783 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13783.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13782.value)))+(x13783.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13784=IKsin(j5);
IkReal x13785=IKcos(j5);
IkReal x13786=(r01*sj6);
IkReal x13787=(r21*sj6);
IkReal x13788=((1.0)*cj0);
IkReal x13789=(r11*sj6);
IkReal x13790=((1.0)*x13785);
IkReal x13791=((1.0)*x13784);
IkReal x13792=(cj6*x13785);
IkReal x13793=(cj6*x13791);
evalcond[0]=(((x13784*x13787))+(((-1.0)*r20*x13793))+(((-1.0)*r22*x13790)));
evalcond[1]=(((x13784*x13789))+(((-1.0)*r10*x13793))+(((-1.0)*r12*x13790)));
evalcond[2]=((((-1.0)*r02*x13791))+((r00*x13792))+(((-1.0)*x13786*x13790)));
evalcond[3]=((-1.0)+(((-1.0)*r02*x13790))+((x13784*x13786))+(((-1.0)*r00*x13793)));
evalcond[4]=((((-1.0)*cj1*x13788))+(((-1.0)*x13787*x13790))+((sj0*sj1))+((r20*x13792))+(((-1.0)*r22*x13791)));
evalcond[5]=((((-1.0)*sj1*x13788))+(((-1.0)*cj1*sj0))+(((-1.0)*x13789*x13790))+((r10*x13792))+(((-1.0)*r12*x13791)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x13794=(((cj6*r21))+((r20*sj6)));
j5eval[0]=x13794;
j5eval[1]=IKsign(x13794);
j5eval[2]=((IKabs(r12))+(IKabs(((((-1.0)*cj6*r10))+((r11*sj6))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x13795=((1.0)*cj6);
IkReal x13796=((((-1.0)*r10*sj6))+(((-1.0)*r11*x13795)));
j5eval[0]=x13796;
j5eval[1]=IKsign(x13796);
j5eval[2]=((IKabs(r22))+(IKabs((((r21*sj6))+(((-1.0)*r20*x13795))))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x13797=cj6*cj6;
IkReal x13798=r01*r01;
IkReal x13799=(r01*sj6);
IkReal x13800=(cj6*r00);
IkReal x13801=((((-2.0)*x13799*x13800))+x13798+((x13797*(r00*r00)))+(r02*r02)+(((-1.0)*x13797*x13798)));
j5eval[0]=x13801;
j5eval[1]=((IKabs(r02))+(IKabs((x13799+(((-1.0)*x13800))))));
j5eval[2]=IKsign(x13801);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13802=cj6*cj6;
IkReal x13803=r01*r01;
IkReal x13804=(r01*sj6);
IkReal x13805=(cj6*r00);
CheckValue<IkReal> x13806 = IKatan2WithCheck(IkReal((x13804+(((-1.0)*x13805)))),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x13806.valid){
continue;
}
CheckValue<IkReal> x13807=IKPowWithIntegerCheck(IKsign((((x13802*(r00*r00)))+x13803+(((-2.0)*x13804*x13805))+(((-1.0)*x13802*x13803))+(r02*r02))),-1);
if(!x13807.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13806.value)+(((1.5707963267949)*(x13807.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13808=IKcos(j5);
IkReal x13809=IKsin(j5);
IkReal x13810=((1.0)*cj0);
IkReal x13811=(sj6*x13809);
IkReal x13812=((1.0)*x13808);
IkReal x13813=(sj6*x13808);
IkReal x13814=((1.0)*cj6*x13809);
evalcond[0]=((((-1.0)*cj6*r00*x13812))+((r01*x13813))+((r02*x13809)));
evalcond[1]=((((-1.0)*r20*x13814))+(((-1.0)*r22*x13812))+((r21*x13811)));
evalcond[2]=(((r11*x13811))+(((-1.0)*r10*x13814))+(((-1.0)*r12*x13812)));
evalcond[3]=((-1.0)+((r01*x13811))+(((-1.0)*r00*x13814))+(((-1.0)*r02*x13812)));
evalcond[4]=((((-1.0)*cj6*r20*x13812))+((r21*x13813))+((sj0*sj1))+((r22*x13809))+(((-1.0)*cj1*x13810)));
evalcond[5]=(((r11*x13813))+((r12*x13809))+(((-1.0)*cj6*r10*x13812))+(((-1.0)*cj1*sj0))+(((-1.0)*sj1*x13810)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13815=((1.0)*cj6);
CheckValue<IkReal> x13816 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*r20*x13815))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13816.valid){
continue;
}
CheckValue<IkReal> x13817=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x13815)))),-1);
if(!x13817.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13816.value)+(((1.5707963267949)*(x13817.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13818=IKcos(j5);
IkReal x13819=IKsin(j5);
IkReal x13820=((1.0)*cj0);
IkReal x13821=(sj6*x13819);
IkReal x13822=((1.0)*x13818);
IkReal x13823=(sj6*x13818);
IkReal x13824=((1.0)*cj6*x13819);
evalcond[0]=((((-1.0)*cj6*r00*x13822))+((r01*x13823))+((r02*x13819)));
evalcond[1]=((((-1.0)*r20*x13824))+(((-1.0)*r22*x13822))+((r21*x13821)));
evalcond[2]=(((r11*x13821))+(((-1.0)*r10*x13824))+(((-1.0)*r12*x13822)));
evalcond[3]=((-1.0)+((r01*x13821))+(((-1.0)*r02*x13822))+(((-1.0)*r00*x13824)));
evalcond[4]=(((r21*x13823))+((r22*x13819))+((sj0*sj1))+(((-1.0)*cj1*x13820))+(((-1.0)*cj6*r20*x13822)));
evalcond[5]=((((-1.0)*cj6*r10*x13822))+((r11*x13823))+((r12*x13819))+(((-1.0)*sj1*x13820))+(((-1.0)*cj1*sj0)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x13825=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x13825.valid){
continue;
}
CheckValue<IkReal> x13826 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13826.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13825.value)))+(x13826.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x13827=IKcos(j5);
IkReal x13828=IKsin(j5);
IkReal x13829=((1.0)*cj0);
IkReal x13830=(sj6*x13828);
IkReal x13831=((1.0)*x13827);
IkReal x13832=(sj6*x13827);
IkReal x13833=((1.0)*cj6*x13828);
evalcond[0]=(((r01*x13832))+(((-1.0)*cj6*r00*x13831))+((r02*x13828)));
evalcond[1]=(((r21*x13830))+(((-1.0)*r22*x13831))+(((-1.0)*r20*x13833)));
evalcond[2]=((((-1.0)*r12*x13831))+(((-1.0)*r10*x13833))+((r11*x13830)));
evalcond[3]=((-1.0)+((r01*x13830))+(((-1.0)*r02*x13831))+(((-1.0)*r00*x13833)));
evalcond[4]=(((r21*x13832))+((r22*x13828))+((sj0*sj1))+(((-1.0)*cj1*x13829))+(((-1.0)*cj6*r20*x13831)));
evalcond[5]=(((r12*x13828))+(((-1.0)*sj1*x13829))+(((-1.0)*cj1*sj0))+((r11*x13832))+(((-1.0)*cj6*r10*x13831)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13835 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x13835)==0){
continue;
}
IkReal x13834=pow(x13835,-0.5);
CheckValue<IkReal> x13836 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x13836.valid){
continue;
}
IkReal gconst48=((-1.0)*(x13836.value));
IkReal gconst49=((-1.0)*r21*x13834);
IkReal gconst50=(r20*x13834);
CheckValue<IkReal> x13837 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x13837.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x13837.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
CheckValue<IkReal> x13840 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x13840.valid){
continue;
}
IkReal x13838=((-1.0)*(x13840.value));
IkReal x13839=x13834;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj6=gconst49;
cj6=gconst50;
j6=x13838;
IkReal gconst48=x13838;
IkReal gconst49=((-1.0)*r21*x13839);
IkReal gconst50=(r20*x13839);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x13843 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x13843.valid){
continue;
}
IkReal x13841=((-1.0)*(x13843.value));
IkReal x13842=x13834;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj6=gconst49;
cj6=gconst50;
j6=x13841;
IkReal gconst48=x13841;
IkReal gconst49=((-1.0)*r21*x13842);
IkReal gconst50=(r20*x13842);
CheckValue<IkReal> x13851=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r22*r22)))),-1);
if(!x13851.valid){
continue;
}
IkReal x13844=x13851.value;
IkReal x13845=(sj4*x13844);
IkReal x13846=(r10*x13845);
IkReal x13847=(r01*x13845);
IkReal x13848=(r00*x13845);
IkReal x13849=(r11*x13845);
IkReal x13850=(r20*r21*x13845);
j5eval[0]=IKsign((((r02*r12*sj4))+((r01*r20*r21*x13846))+((r00*x13846*(r20*r20)))+((r11*r20*r21*x13848))+((r11*x13847*(r21*r21)))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13852=gconst49*gconst49;
IkReal x13853=gconst50*gconst50;
IkReal x13854=(gconst50*sj4);
IkReal x13855=(r01*r10);
IkReal x13856=(gconst49*r11);
IkReal x13857=(cj4*gconst50);
IkReal x13858=(r00*sj4);
IkReal x13859=((1.0)*cj4);
IkReal x13860=((1.0)*r00*r10);
IkReal x13861=(r11*x13852);
CheckValue<IkReal> x13862 = IKatan2WithCheck(IkReal((((r01*r12*x13854))+((gconst49*r12*x13858)))),IkReal((((r01*x13854*x13856))+((x13858*x13861))+(((-1.0)*sj4*x13853*x13855))+(((-1.0)*gconst49*x13854*x13860)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13862.valid){
continue;
}
CheckValue<IkReal> x13863=IKPowWithIntegerCheck(IKsign(((((-1.0)*r02*r12*x13859))+((r00*x13856*x13857))+(((-1.0)*r01*x13859*x13861))+(((-1.0)*r00*r10*x13853*x13859))+((gconst49*x13855*x13857)))),-1);
if(!x13863.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13862.value)+(((1.5707963267949)*(x13863.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13864=IKsin(j5);
IkReal x13865=IKcos(j5);
IkReal x13866=(sj0*sj1);
IkReal x13867=(gconst50*r20);
IkReal x13868=(cj4*gconst49);
IkReal x13869=((1.0)*gconst49);
IkReal x13870=((1.0)*cj0);
IkReal x13871=(cj4*gconst50);
IkReal x13872=(gconst50*r00);
IkReal x13873=(gconst50*r10);
IkReal x13874=(gconst50*sj4);
IkReal x13875=(gconst49*sj4);
IkReal x13876=(cj1*sj0);
IkReal x13877=(cj1*x13870);
IkReal x13878=(sj4*x13865);
IkReal x13879=(gconst49*x13864);
IkReal x13880=(r22*x13864);
IkReal x13881=((1.0)*x13864);
IkReal x13882=(cj4*x13864);
IkReal x13883=((1.0)*x13865);
evalcond[0]=(((r21*x13879))+(((-1.0)*x13867*x13881))+(((-1.0)*r22*x13883)));
evalcond[1]=((((-1.0)*x13873*x13881))+((r11*x13879))+(((-1.0)*r12*x13883)));
evalcond[2]=((-1.0)+(((-1.0)*r02*x13883))+((r01*x13879))+(((-1.0)*x13872*x13881)));
evalcond[3]=(((r02*x13882))+((r01*x13874))+((r01*x13865*x13868))+((r00*x13875))+(((-1.0)*r00*x13871*x13883)));
evalcond[4]=((((-1.0)*r02*sj4*x13881))+((r00*x13868))+((x13872*x13878))+((r01*x13871))+(((-1.0)*r01*x13869*x13878)));
evalcond[5]=(((r21*x13865*x13868))+x13876+((r21*x13874))+(((-1.0)*cj4*x13867*x13883))+((r20*x13875))+((cj4*x13880))+((cj0*sj1)));
evalcond[6]=((((-1.0)*r10*x13871*x13883))+x13866+(((-1.0)*x13877))+((r11*x13874))+((r12*x13882))+((r10*x13875))+((r11*x13865*x13868)));
evalcond[7]=((((-1.0)*sj4*x13880))+x13866+(((-1.0)*x13877))+((x13867*x13878))+(((-1.0)*r21*x13869*x13878))+((r21*x13871))+((r20*x13868)));
evalcond[8]=((((-1.0)*r11*x13869*x13878))+(((-1.0)*x13876))+(((-1.0)*sj1*x13870))+((r11*x13871))+((x13873*x13878))+(((-1.0)*r12*sj4*x13881))+((r10*x13868)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13884=gconst50*gconst50;
IkReal x13885=gconst49*gconst49;
IkReal x13886=(gconst49*r00);
IkReal x13887=(cj4*r12);
IkReal x13888=(r01*r10);
IkReal x13889=((1.0)*cj4);
IkReal x13890=(gconst50*r01);
IkReal x13891=((1.0)*gconst50*sj4);
IkReal x13892=(r11*x13885);
CheckValue<IkReal> x13893 = IKatan2WithCheck(IkReal((((x13886*x13887))+((x13887*x13890)))),IkReal(((((-1.0)*gconst50*r10*x13886*x13889))+((cj4*r00*x13892))+(((-1.0)*x13884*x13888*x13889))+((cj4*gconst49*r11*x13890)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13893.valid){
continue;
}
CheckValue<IkReal> x13894=IKPowWithIntegerCheck(IKsign((((r02*r12*sj4))+((r00*r10*sj4*x13884))+(((-1.0)*gconst49*x13888*x13891))+((r01*sj4*x13892))+(((-1.0)*r11*x13886*x13891)))),-1);
if(!x13894.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13893.value)+(((1.5707963267949)*(x13894.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13895=IKsin(j5);
IkReal x13896=IKcos(j5);
IkReal x13897=(sj0*sj1);
IkReal x13898=(gconst50*r20);
IkReal x13899=(cj4*gconst49);
IkReal x13900=((1.0)*gconst49);
IkReal x13901=((1.0)*cj0);
IkReal x13902=(cj4*gconst50);
IkReal x13903=(gconst50*r00);
IkReal x13904=(gconst50*r10);
IkReal x13905=(gconst50*sj4);
IkReal x13906=(gconst49*sj4);
IkReal x13907=(cj1*sj0);
IkReal x13908=(cj1*x13901);
IkReal x13909=(sj4*x13896);
IkReal x13910=(gconst49*x13895);
IkReal x13911=(r22*x13895);
IkReal x13912=((1.0)*x13895);
IkReal x13913=(cj4*x13895);
IkReal x13914=((1.0)*x13896);
evalcond[0]=((((-1.0)*x13898*x13912))+(((-1.0)*r22*x13914))+((r21*x13910)));
evalcond[1]=((((-1.0)*r12*x13914))+(((-1.0)*x13904*x13912))+((r11*x13910)));
evalcond[2]=((-1.0)+((r01*x13910))+(((-1.0)*r02*x13914))+(((-1.0)*x13903*x13912)));
evalcond[3]=(((r02*x13913))+((r01*x13896*x13899))+(((-1.0)*r00*x13902*x13914))+((r01*x13905))+((r00*x13906)));
evalcond[4]=((((-1.0)*r01*x13900*x13909))+((x13903*x13909))+((r01*x13902))+((r00*x13899))+(((-1.0)*r02*sj4*x13912)));
evalcond[5]=((((-1.0)*cj4*x13898*x13914))+((cj4*x13911))+((r21*x13896*x13899))+x13907+((r20*x13906))+((r21*x13905))+((cj0*sj1)));
evalcond[6]=(((r11*x13896*x13899))+((r10*x13906))+x13897+((r12*x13913))+(((-1.0)*r10*x13902*x13914))+((r11*x13905))+(((-1.0)*x13908)));
evalcond[7]=(x13897+((r20*x13899))+((x13898*x13909))+((r21*x13902))+(((-1.0)*r21*x13900*x13909))+(((-1.0)*x13908))+(((-1.0)*sj4*x13911)));
evalcond[8]=((((-1.0)*sj1*x13901))+(((-1.0)*x13907))+((r10*x13899))+(((-1.0)*r12*sj4*x13912))+(((-1.0)*r11*x13900*x13909))+((r11*x13902))+((x13904*x13909)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13915=((1.0)*gconst50);
CheckValue<IkReal> x13916=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst49*r10))+(((-1.0)*r11*x13915)))),-1);
if(!x13916.valid){
continue;
}
CheckValue<IkReal> x13917 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst49*r21))+(((-1.0)*r20*x13915)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13917.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x13916.value)))+(x13917.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13918=IKsin(j5);
IkReal x13919=IKcos(j5);
IkReal x13920=(sj0*sj1);
IkReal x13921=(gconst50*r20);
IkReal x13922=(cj4*gconst49);
IkReal x13923=((1.0)*gconst49);
IkReal x13924=((1.0)*cj0);
IkReal x13925=(cj4*gconst50);
IkReal x13926=(gconst50*r00);
IkReal x13927=(gconst50*r10);
IkReal x13928=(gconst50*sj4);
IkReal x13929=(gconst49*sj4);
IkReal x13930=(cj1*sj0);
IkReal x13931=(cj1*x13924);
IkReal x13932=(sj4*x13919);
IkReal x13933=(gconst49*x13918);
IkReal x13934=(r22*x13918);
IkReal x13935=((1.0)*x13918);
IkReal x13936=(cj4*x13918);
IkReal x13937=((1.0)*x13919);
evalcond[0]=(((r21*x13933))+(((-1.0)*r22*x13937))+(((-1.0)*x13921*x13935)));
evalcond[1]=(((r11*x13933))+(((-1.0)*x13927*x13935))+(((-1.0)*r12*x13937)));
evalcond[2]=((-1.0)+(((-1.0)*x13926*x13935))+((r01*x13933))+(((-1.0)*r02*x13937)));
evalcond[3]=((((-1.0)*r00*x13925*x13937))+((r01*x13928))+((r00*x13929))+((r02*x13936))+((r01*x13919*x13922)));
evalcond[4]=((((-1.0)*r01*x13923*x13932))+((x13926*x13932))+((r01*x13925))+(((-1.0)*r02*sj4*x13935))+((r00*x13922)));
evalcond[5]=(((r21*x13928))+((r20*x13929))+x13930+(((-1.0)*cj4*x13921*x13937))+((cj4*x13934))+((cj0*sj1))+((r21*x13919*x13922)));
evalcond[6]=(((r10*x13929))+((r11*x13919*x13922))+x13920+(((-1.0)*x13931))+((r11*x13928))+(((-1.0)*r10*x13925*x13937))+((r12*x13936)));
evalcond[7]=(((r21*x13925))+((r20*x13922))+x13920+(((-1.0)*x13931))+(((-1.0)*sj4*x13934))+(((-1.0)*r21*x13923*x13932))+((x13921*x13932)));
evalcond[8]=((((-1.0)*sj1*x13924))+((r10*x13922))+((x13927*x13932))+(((-1.0)*r12*sj4*x13935))+(((-1.0)*x13930))+((r11*x13925))+(((-1.0)*r11*x13923*x13932)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x13939 = ((1.0)+(((-1.0)*(r22*r22))));
if(IKabs(x13939)==0){
continue;
}
IkReal x13938=pow(x13939,-0.5);
CheckValue<IkReal> x13940 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x13940.valid){
continue;
}
IkReal gconst51=((3.14159265358979)+(((-1.0)*(x13940.value))));
IkReal gconst52=((1.0)*r21*x13938);
IkReal gconst53=((-1.0)*r20*x13938);
CheckValue<IkReal> x13941 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x13941.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x13941.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[4];
CheckValue<IkReal> x13944 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x13944.valid){
continue;
}
IkReal x13942=((1.0)*(x13944.value));
IkReal x13943=x13938;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj6=gconst52;
cj6=gconst53;
j6=((3.14159265)+(((-1.0)*x13942)));
IkReal gconst51=((3.14159265358979)+(((-1.0)*x13942)));
IkReal gconst52=((1.0)*r21*x13943);
IkReal gconst53=((-1.0)*r20*x13943);
j5eval[0]=0;
j5eval[1]=r12;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[3]=0;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x13947 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x13947.valid){
continue;
}
IkReal x13945=((1.0)*(x13947.value));
IkReal x13946=x13938;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj6=gconst52;
cj6=gconst53;
j6=((3.14159265)+(((-1.0)*x13945)));
IkReal gconst51=((3.14159265358979)+(((-1.0)*x13945)));
IkReal gconst52=((1.0)*r21*x13946);
IkReal gconst53=((-1.0)*r20*x13946);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
CheckValue<IkReal> x13950 = IKatan2WithCheck(IkReal(r21),IkReal(r20),IKFAST_ATAN2_MAGTHRESH);
if(!x13950.valid){
continue;
}
IkReal x13948=((1.0)*(x13950.value));
IkReal x13949=x13938;
sj2=1.0;
cj2=0;
j2=1.5707963267949;
sj6=gconst52;
cj6=gconst53;
j6=((3.14159265)+(((-1.0)*x13948)));
IkReal gconst51=((3.14159265358979)+(((-1.0)*x13948)));
IkReal gconst52=((1.0)*r21*x13949);
IkReal gconst53=((-1.0)*r20*x13949);
j5eval[0]=r12;
j5eval[1]=sj4;
j5eval[2]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13951=gconst52*gconst52;
IkReal x13952=gconst53*gconst53;
IkReal x13953=(cj4*r01);
IkReal x13954=(r00*sj4);
IkReal x13955=(gconst52*r21);
IkReal x13956=(cj4*r00);
IkReal x13957=(r21*x13951);
IkReal x13958=(gconst52*gconst53*r20);
IkReal x13959=(gconst53*r01*sj4);
IkReal x13960=((1.0)*r20*x13952);
CheckValue<IkReal> x13961 = IKatan2WithCheck(IkReal((((r22*x13959))+((gconst52*r22*x13954)))),IkReal(((((-1.0)*r01*sj4*x13960))+(((-1.0)*x13954*x13958))+((x13954*x13957))+((x13955*x13959)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13961.valid){
continue;
}
CheckValue<IkReal> x13962=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj4*r02*r22))+((x13953*x13958))+((gconst53*x13955*x13956))+(((-1.0)*x13953*x13957))+(((-1.0)*x13956*x13960)))),-1);
if(!x13962.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13961.value)+(((1.5707963267949)*(x13962.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13963=IKsin(j5);
IkReal x13964=IKcos(j5);
IkReal x13965=(sj0*sj1);
IkReal x13966=((1.0)*gconst52);
IkReal x13967=(cj4*r21);
IkReal x13968=(gconst53*r20);
IkReal x13969=(cj4*gconst52);
IkReal x13970=(gconst53*r10);
IkReal x13971=(gconst52*sj4);
IkReal x13972=(cj4*gconst53);
IkReal x13973=(gconst53*r00);
IkReal x13974=((1.0)*cj0);
IkReal x13975=(cj1*sj0);
IkReal x13976=(gconst53*sj4);
IkReal x13977=(cj1*x13974);
IkReal x13978=(sj4*x13964);
IkReal x13979=(gconst52*x13964);
IkReal x13980=(r22*x13963);
IkReal x13981=((1.0)*x13963);
IkReal x13982=(cj4*x13963);
IkReal x13983=((1.0)*x13964);
IkReal x13984=(gconst52*x13963);
evalcond[0]=(((r21*x13984))+(((-1.0)*r22*x13983))+(((-1.0)*x13968*x13981)));
evalcond[1]=(((r11*x13984))+(((-1.0)*x13970*x13981))+(((-1.0)*r12*x13983)));
evalcond[2]=((-1.0)+((r01*x13984))+(((-1.0)*r02*x13983))+(((-1.0)*x13973*x13981)));
evalcond[3]=(((r01*x13964*x13969))+(((-1.0)*r00*x13972*x13983))+((r02*x13982))+((r00*x13971))+((r01*x13976)));
evalcond[4]=((((-1.0)*r02*sj4*x13981))+((r01*x13972))+((r00*x13969))+((x13973*x13978))+(((-1.0)*r01*x13966*x13978)));
evalcond[5]=(x13975+(((-1.0)*cj4*x13968*x13983))+((r20*x13971))+((cj4*x13980))+((x13967*x13979))+((r21*x13976))+((cj0*sj1)));
evalcond[6]=(((r12*x13982))+(((-1.0)*cj4*x13970*x13983))+((r10*x13971))+x13965+((r11*x13976))+((r11*x13964*x13969))+(((-1.0)*x13977)));
evalcond[7]=((((-1.0)*r21*x13966*x13978))+x13965+((r20*x13969))+(((-1.0)*sj4*x13980))+((x13968*x13978))+(((-1.0)*x13977))+((gconst53*x13967)));
evalcond[8]=((((-1.0)*r12*sj4*x13981))+(((-1.0)*sj1*x13974))+((r10*x13969))+((r11*x13972))+(((-1.0)*x13975))+((x13970*x13978))+(((-1.0)*r11*x13966*x13978)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x13985=((1.0)*gconst53);
CheckValue<IkReal> x13986 = IKatan2WithCheck(IkReal(r22),IkReal((((gconst52*r21))+(((-1.0)*r20*x13985)))),IKFAST_ATAN2_MAGTHRESH);
if(!x13986.valid){
continue;
}
CheckValue<IkReal> x13987=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst52*r10))+(((-1.0)*r11*x13985)))),-1);
if(!x13987.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x13986.value)+(((1.5707963267949)*(x13987.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x13988=IKsin(j5);
IkReal x13989=IKcos(j5);
IkReal x13990=(sj0*sj1);
IkReal x13991=((1.0)*gconst52);
IkReal x13992=(cj4*r21);
IkReal x13993=(gconst53*r20);
IkReal x13994=(cj4*gconst52);
IkReal x13995=(gconst53*r10);
IkReal x13996=(gconst52*sj4);
IkReal x13997=(cj4*gconst53);
IkReal x13998=(gconst53*r00);
IkReal x13999=((1.0)*cj0);
IkReal x14000=(cj1*sj0);
IkReal x14001=(gconst53*sj4);
IkReal x14002=(cj1*x13999);
IkReal x14003=(sj4*x13989);
IkReal x14004=(gconst52*x13989);
IkReal x14005=(r22*x13988);
IkReal x14006=((1.0)*x13988);
IkReal x14007=(cj4*x13988);
IkReal x14008=((1.0)*x13989);
IkReal x14009=(gconst52*x13988);
evalcond[0]=(((r21*x14009))+(((-1.0)*x13993*x14006))+(((-1.0)*r22*x14008)));
evalcond[1]=(((r11*x14009))+(((-1.0)*x13995*x14006))+(((-1.0)*r12*x14008)));
evalcond[2]=((-1.0)+(((-1.0)*r02*x14008))+(((-1.0)*x13998*x14006))+((r01*x14009)));
evalcond[3]=(((r02*x14007))+((r01*x13989*x13994))+((r01*x14001))+(((-1.0)*r00*x13997*x14008))+((r00*x13996)));
evalcond[4]=((((-1.0)*r01*x13991*x14003))+((x13998*x14003))+((r01*x13997))+(((-1.0)*r02*sj4*x14006))+((r00*x13994)));
evalcond[5]=(((x13992*x14004))+((r21*x14001))+((cj4*x14005))+((r20*x13996))+x14000+(((-1.0)*cj4*x13993*x14008))+((cj0*sj1)));
evalcond[6]=((((-1.0)*cj4*x13995*x14008))+x13990+((r10*x13996))+((r11*x14001))+((r11*x13989*x13994))+((r12*x14007))+(((-1.0)*x14002)));
evalcond[7]=(x13990+((x13993*x14003))+(((-1.0)*sj4*x14005))+((r20*x13994))+(((-1.0)*r21*x13991*x14003))+((gconst53*x13992))+(((-1.0)*x14002)));
evalcond[8]=(((x13995*x14003))+(((-1.0)*r11*x13991*x14003))+((r11*x13997))+((r10*x13994))+(((-1.0)*sj1*x13999))+(((-1.0)*r12*sj4*x14006))+(((-1.0)*x14000)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14010 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*gconst53*r10))+((gconst52*r11)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14010.valid){
continue;
}
CheckValue<IkReal> x14011=IKPowWithIntegerCheck(IKsign((((gconst53*r21))+((gconst52*r20)))),-1);
if(!x14011.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14010.value)+(((1.5707963267949)*(x14011.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14012=IKsin(j5);
IkReal x14013=IKcos(j5);
IkReal x14014=(sj0*sj1);
IkReal x14015=((1.0)*gconst52);
IkReal x14016=(cj4*r21);
IkReal x14017=(gconst53*r20);
IkReal x14018=(cj4*gconst52);
IkReal x14019=(gconst53*r10);
IkReal x14020=(gconst52*sj4);
IkReal x14021=(cj4*gconst53);
IkReal x14022=(gconst53*r00);
IkReal x14023=((1.0)*cj0);
IkReal x14024=(cj1*sj0);
IkReal x14025=(gconst53*sj4);
IkReal x14026=(cj1*x14023);
IkReal x14027=(sj4*x14013);
IkReal x14028=(gconst52*x14013);
IkReal x14029=(r22*x14012);
IkReal x14030=((1.0)*x14012);
IkReal x14031=(cj4*x14012);
IkReal x14032=((1.0)*x14013);
IkReal x14033=(gconst52*x14012);
evalcond[0]=(((r21*x14033))+(((-1.0)*r22*x14032))+(((-1.0)*x14017*x14030)));
evalcond[1]=(((r11*x14033))+(((-1.0)*x14019*x14030))+(((-1.0)*r12*x14032)));
evalcond[2]=((-1.0)+((r01*x14033))+(((-1.0)*r02*x14032))+(((-1.0)*x14022*x14030)));
evalcond[3]=(((r01*x14025))+((r00*x14020))+(((-1.0)*r00*x14021*x14032))+((r01*x14013*x14018))+((r02*x14031)));
evalcond[4]=(((r01*x14021))+((x14022*x14027))+(((-1.0)*r01*x14015*x14027))+((r00*x14018))+(((-1.0)*r02*sj4*x14030)));
evalcond[5]=(((cj4*x14029))+((r20*x14020))+((x14016*x14028))+((r21*x14025))+x14024+((cj0*sj1))+(((-1.0)*cj4*x14017*x14032)));
evalcond[6]=(((r11*x14025))+(((-1.0)*cj4*x14019*x14032))+((r11*x14013*x14018))+((r10*x14020))+(((-1.0)*x14026))+x14014+((r12*x14031)));
evalcond[7]=(((gconst53*x14016))+((x14017*x14027))+(((-1.0)*x14026))+x14014+((r20*x14018))+(((-1.0)*r21*x14015*x14027))+(((-1.0)*sj4*x14029)));
evalcond[8]=(((r11*x14021))+(((-1.0)*x14024))+(((-1.0)*r12*sj4*x14030))+((x14019*x14027))+(((-1.0)*r11*x14015*x14027))+(((-1.0)*sj1*x14023))+((r10*x14018)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r21))+(IKabs(r20)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x14034=((-1.0)*pz);
sj2=1.0;
cj2=0;
j2=1.5707963267949;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x14034);
rxp1_0=(pz*r11);
rxp1_1=(r01*x14034);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
IkReal x14035=(r01*sj6);
IkReal x14036=((1.0)*cj6*r00);
j5eval[0]=((((-1.0)*x14036))+x14035);
j5eval[1]=(((cj4*x14035))+(((-1.0)*cj4*x14036)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x14037=((-1.0)*pz);
sj2=1.0;
cj2=0;
j2=1.5707963267949;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x14037);
rxp1_0=(pz*r11);
rxp1_1=(r01*x14037);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
IkReal x14038=(cj6*r00);
IkReal x14039=(r01*sj6);
j5eval[0]=((((-1.0)*x14038))+x14039);
j5eval[1]=((((-1.0)*sj4*x14039))+((sj4*x14038)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x14040=((-1.0)*pz);
sj2=1.0;
cj2=0;
j2=1.5707963267949;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x14040);
rxp1_0=(pz*r11);
rxp1_1=(r01*x14040);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=cj4;
j5eval[1]=r22;
j5eval[2]=((((-1.0)*cj4*cj6*r00))+((cj4*r01*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14041=((1.0)*cj6);
CheckValue<IkReal> x14042=IKPowWithIntegerCheck(cj4,-1);
if(!x14042.valid){
continue;
}
CheckValue<IkReal> x14043=IKPowWithIntegerCheck(r22,-1);
if(!x14043.valid){
continue;
}
CheckValue<IkReal> x14044=IKPowWithIntegerCheck(((((-1.0)*cj4*r00*x14041))+((cj4*r01*sj6))),-1);
if(!x14044.valid){
continue;
}
if( IKabs(((x14042.value)*(x14043.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14044.value)*(((((-1.0)*r01*sj4*x14041))+(((-1.0)*r00*sj4*sj6)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x14042.value)*(x14043.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1))))))+IKsqr(((x14044.value)*(((((-1.0)*r01*sj4*x14041))+(((-1.0)*r00*sj4*sj6))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x14042.value)*(x14043.value)*(((((-1.0)*cj1*sj0))+(((-1.0)*cj0*sj1))))), ((x14044.value)*(((((-1.0)*r01*sj4*x14041))+(((-1.0)*r00*sj4*sj6))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14045=IKsin(j5);
IkReal x14046=IKcos(j5);
IkReal x14047=(sj0*sj1);
IkReal x14048=(cj4*cj6);
IkReal x14049=(cj6*r10);
IkReal x14050=((1.0)*cj0);
IkReal x14051=(r11*sj6);
IkReal x14052=(cj6*r00);
IkReal x14053=(sj4*sj6);
IkReal x14054=(cj4*sj6);
IkReal x14055=(cj6*sj4);
IkReal x14056=(r01*sj6);
IkReal x14057=(cj1*sj0);
IkReal x14058=(cj1*x14050);
IkReal x14059=(sj6*x14045);
IkReal x14060=((1.0)*x14045);
IkReal x14061=(sj4*x14046);
IkReal x14062=((1.0)*x14046);
IkReal x14063=(cj4*x14046);
evalcond[0]=((-1.0)*r22*x14046);
evalcond[1]=(((cj4*r22*x14045))+x14057+((cj0*sj1)));
evalcond[2]=((((-1.0)*x14049*x14060))+((x14045*x14051)));
evalcond[3]=((-1.0)+(((-1.0)*x14052*x14060))+((x14045*x14056)));
evalcond[4]=((((-1.0)*x14058))+(((-1.0)*r22*sj4*x14060))+x14047);
evalcond[5]=(((r00*x14053))+(((-1.0)*r00*x14048*x14062))+((r01*x14046*x14054))+((r01*x14055)));
evalcond[6]=(((r00*x14054))+((r01*x14048))+(((-1.0)*r01*x14053*x14062))+((x14052*x14061)));
evalcond[7]=(((r11*x14055))+(((-1.0)*x14058))+((r10*x14053))+(((-1.0)*r10*x14048*x14062))+((x14051*x14063))+x14047);
evalcond[8]=(((r11*x14048))+(((-1.0)*x14057))+(((-1.0)*x14051*x14061))+((r10*x14054))+((x14049*x14061))+(((-1.0)*sj1*x14050)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14064=((1.0)*r00);
IkReal x14065=(r01*sj6);
CheckValue<IkReal> x14066=IKPowWithIntegerCheck(((((-1.0)*cj6*x14064))+x14065),-1);
if(!x14066.valid){
continue;
}
CheckValue<IkReal> x14067=IKPowWithIntegerCheck((((cj6*r00*sj4))+(((-1.0)*sj4*x14065))),-1);
if(!x14067.valid){
continue;
}
if( IKabs(x14066.value) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14067.value)*(((((-1.0)*cj4*sj6*x14064))+(((-1.0)*cj4*cj6*r01)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(x14066.value)+IKsqr(((x14067.value)*(((((-1.0)*cj4*sj6*x14064))+(((-1.0)*cj4*cj6*r01))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(x14066.value, ((x14067.value)*(((((-1.0)*cj4*sj6*x14064))+(((-1.0)*cj4*cj6*r01))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14068=IKsin(j5);
IkReal x14069=IKcos(j5);
IkReal x14070=(sj0*sj1);
IkReal x14071=(cj4*cj6);
IkReal x14072=(cj6*r10);
IkReal x14073=((1.0)*cj0);
IkReal x14074=(r11*sj6);
IkReal x14075=(cj6*r00);
IkReal x14076=(sj4*sj6);
IkReal x14077=(cj4*sj6);
IkReal x14078=(cj6*sj4);
IkReal x14079=(r01*sj6);
IkReal x14080=(cj1*sj0);
IkReal x14081=(cj1*x14073);
IkReal x14082=(sj6*x14068);
IkReal x14083=((1.0)*x14068);
IkReal x14084=(sj4*x14069);
IkReal x14085=((1.0)*x14069);
IkReal x14086=(cj4*x14069);
evalcond[0]=((-1.0)*r22*x14069);
evalcond[1]=(((cj4*r22*x14068))+x14080+((cj0*sj1)));
evalcond[2]=((((-1.0)*x14072*x14083))+((x14068*x14074)));
evalcond[3]=((-1.0)+(((-1.0)*x14075*x14083))+((x14068*x14079)));
evalcond[4]=((((-1.0)*x14081))+(((-1.0)*r22*sj4*x14083))+x14070);
evalcond[5]=(((r01*x14069*x14077))+(((-1.0)*r00*x14071*x14085))+((r00*x14076))+((r01*x14078)));
evalcond[6]=((((-1.0)*r01*x14076*x14085))+((x14075*x14084))+((r00*x14077))+((r01*x14071)));
evalcond[7]=((((-1.0)*x14081))+(((-1.0)*r10*x14071*x14085))+((r11*x14078))+((r10*x14076))+x14070+((x14074*x14086)));
evalcond[8]=((((-1.0)*sj1*x14073))+((x14072*x14084))+(((-1.0)*x14080))+((r11*x14071))+((r10*x14077))+(((-1.0)*x14074*x14084)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14087=(r01*sj6);
IkReal x14088=((1.0)*sj4);
IkReal x14089=((1.0)*cj6*r00);
CheckValue<IkReal> x14090=IKPowWithIntegerCheck(((((-1.0)*x14089))+x14087),-1);
if(!x14090.valid){
continue;
}
CheckValue<IkReal> x14091=IKPowWithIntegerCheck((((cj4*x14087))+(((-1.0)*cj4*x14089))),-1);
if(!x14091.valid){
continue;
}
if( IKabs(x14090.value) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14091.value)*(((((-1.0)*r00*sj6*x14088))+(((-1.0)*cj6*r01*x14088)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(x14090.value)+IKsqr(((x14091.value)*(((((-1.0)*r00*sj6*x14088))+(((-1.0)*cj6*r01*x14088))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(x14090.value, ((x14091.value)*(((((-1.0)*r00*sj6*x14088))+(((-1.0)*cj6*r01*x14088))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14092=IKsin(j5);
IkReal x14093=IKcos(j5);
IkReal x14094=(sj0*sj1);
IkReal x14095=(cj4*cj6);
IkReal x14096=(cj6*r10);
IkReal x14097=((1.0)*cj0);
IkReal x14098=(r11*sj6);
IkReal x14099=(cj6*r00);
IkReal x14100=(sj4*sj6);
IkReal x14101=(cj4*sj6);
IkReal x14102=(cj6*sj4);
IkReal x14103=(r01*sj6);
IkReal x14104=(cj1*sj0);
IkReal x14105=(cj1*x14097);
IkReal x14106=(sj6*x14092);
IkReal x14107=((1.0)*x14092);
IkReal x14108=(sj4*x14093);
IkReal x14109=((1.0)*x14093);
IkReal x14110=(cj4*x14093);
evalcond[0]=((-1.0)*r22*x14093);
evalcond[1]=(x14104+((cj0*sj1))+((cj4*r22*x14092)));
evalcond[2]=((((-1.0)*x14096*x14107))+((x14092*x14098)));
evalcond[3]=((-1.0)+(((-1.0)*x14099*x14107))+((x14092*x14103)));
evalcond[4]=((((-1.0)*r22*sj4*x14107))+(((-1.0)*x14105))+x14094);
evalcond[5]=((((-1.0)*r00*x14095*x14109))+((r00*x14100))+((r01*x14102))+((r01*x14093*x14101)));
evalcond[6]=(((r00*x14101))+((x14099*x14108))+(((-1.0)*r01*x14100*x14109))+((r01*x14095)));
evalcond[7]=((((-1.0)*x14105))+((x14098*x14110))+((r10*x14100))+(((-1.0)*r10*x14095*x14109))+x14094+((r11*x14102)));
evalcond[8]=((((-1.0)*sj1*x14097))+(((-1.0)*x14098*x14108))+((x14096*x14108))+(((-1.0)*x14104))+((r10*x14101))+((r11*x14095)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14111=cj6*cj6;
IkReal x14112=(r01*sj4);
IkReal x14113=(cj4*r00);
IkReal x14114=(cj4*r01);
IkReal x14115=(cj6*sj6);
IkReal x14116=(r00*sj4);
IkReal x14117=(r21*x14111);
IkReal x14118=((1.0)*r20*x14111);
CheckValue<IkReal> x14119 = IKatan2WithCheck(IkReal((((r22*sj6*x14116))+((cj6*r22*x14112)))),IkReal((((r21*x14112*x14115))+(((-1.0)*r20*x14115*x14116))+(((-1.0)*x14116*x14117))+(((-1.0)*x14112*x14118))+((r21*x14116)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14119.valid){
continue;
}
CheckValue<IkReal> x14120=IKPowWithIntegerCheck(IKsign((((r20*x14114*x14115))+(((-1.0)*r21*x14114))+((r21*x14113*x14115))+(((-1.0)*cj4*r02*r22))+((x14114*x14117))+(((-1.0)*x14113*x14118)))),-1);
if(!x14120.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14119.value)+(((1.5707963267949)*(x14120.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14121=IKsin(j5);
IkReal x14122=IKcos(j5);
IkReal x14123=(sj0*sj1);
IkReal x14124=(cj4*cj6);
IkReal x14125=(sj4*sj6);
IkReal x14126=(cj6*r10);
IkReal x14127=((1.0)*cj0);
IkReal x14128=(cj6*r00);
IkReal x14129=(cj4*sj6);
IkReal x14130=(cj6*r20);
IkReal x14131=(cj6*sj4);
IkReal x14132=(cj1*sj0);
IkReal x14133=(cj1*x14127);
IkReal x14134=((1.0)*x14122);
IkReal x14135=(sj6*x14121);
IkReal x14136=((1.0)*x14121);
IkReal x14137=(sj4*x14122);
IkReal x14138=(cj4*x14121);
evalcond[0]=(((r21*x14135))+(((-1.0)*r22*x14134))+(((-1.0)*x14130*x14136)));
evalcond[1]=(((r11*x14135))+(((-1.0)*r12*x14134))+(((-1.0)*x14126*x14136)));
evalcond[2]=((-1.0)+(((-1.0)*r02*x14134))+(((-1.0)*x14128*x14136))+((r01*x14135)));
evalcond[3]=(((r00*x14125))+((r02*x14138))+((r01*x14122*x14129))+(((-1.0)*r00*x14124*x14134))+((r01*x14131)));
evalcond[4]=(((x14128*x14137))+(((-1.0)*r02*sj4*x14136))+(((-1.0)*r01*x14125*x14134))+((r00*x14129))+((r01*x14124)));
evalcond[5]=(((r21*x14131))+((r20*x14125))+((r22*x14138))+x14132+(((-1.0)*r20*x14124*x14134))+((r21*x14122*x14129))+((cj0*sj1)));
evalcond[6]=(((r11*x14131))+((r11*x14122*x14129))+((r12*x14138))+x14123+((r10*x14125))+(((-1.0)*r10*x14124*x14134))+(((-1.0)*x14133)));
evalcond[7]=(((r21*x14124))+(((-1.0)*r21*x14125*x14134))+((r20*x14129))+x14123+((x14130*x14137))+(((-1.0)*r22*sj4*x14136))+(((-1.0)*x14133)));
evalcond[8]=(((x14126*x14137))+(((-1.0)*x14132))+(((-1.0)*r11*x14125*x14134))+(((-1.0)*r12*sj4*x14136))+(((-1.0)*sj1*x14127))+((r10*x14129))+((r11*x14124)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14139=((1.0)*cj6);
CheckValue<IkReal> x14140=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x14139)))),-1);
if(!x14140.valid){
continue;
}
CheckValue<IkReal> x14141 = IKatan2WithCheck(IkReal(r22),IkReal((((r21*sj6))+(((-1.0)*r20*x14139)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14141.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14140.value)))+(x14141.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14142=IKsin(j5);
IkReal x14143=IKcos(j5);
IkReal x14144=(sj0*sj1);
IkReal x14145=(cj4*cj6);
IkReal x14146=(sj4*sj6);
IkReal x14147=(cj6*r10);
IkReal x14148=((1.0)*cj0);
IkReal x14149=(cj6*r00);
IkReal x14150=(cj4*sj6);
IkReal x14151=(cj6*r20);
IkReal x14152=(cj6*sj4);
IkReal x14153=(cj1*sj0);
IkReal x14154=(cj1*x14148);
IkReal x14155=((1.0)*x14143);
IkReal x14156=(sj6*x14142);
IkReal x14157=((1.0)*x14142);
IkReal x14158=(sj4*x14143);
IkReal x14159=(cj4*x14142);
evalcond[0]=((((-1.0)*x14151*x14157))+(((-1.0)*r22*x14155))+((r21*x14156)));
evalcond[1]=(((r11*x14156))+(((-1.0)*r12*x14155))+(((-1.0)*x14147*x14157)));
evalcond[2]=((-1.0)+(((-1.0)*r02*x14155))+(((-1.0)*x14149*x14157))+((r01*x14156)));
evalcond[3]=(((r02*x14159))+((r01*x14143*x14150))+((r00*x14146))+((r01*x14152))+(((-1.0)*r00*x14145*x14155)));
evalcond[4]=((((-1.0)*r02*sj4*x14157))+((x14149*x14158))+(((-1.0)*r01*x14146*x14155))+((r01*x14145))+((r00*x14150)));
evalcond[5]=((((-1.0)*r20*x14145*x14155))+((r22*x14159))+((r21*x14143*x14150))+x14153+((r21*x14152))+((cj0*sj1))+((r20*x14146)));
evalcond[6]=(((r10*x14146))+((r11*x14143*x14150))+((r11*x14152))+(((-1.0)*x14154))+x14144+((r12*x14159))+(((-1.0)*r10*x14145*x14155)));
evalcond[7]=(((r21*x14145))+(((-1.0)*r22*sj4*x14157))+(((-1.0)*x14154))+(((-1.0)*r21*x14146*x14155))+x14144+((x14151*x14158))+((r20*x14150)));
evalcond[8]=(((r10*x14150))+((x14147*x14158))+(((-1.0)*r12*sj4*x14157))+((r11*x14145))+(((-1.0)*r11*x14146*x14155))+(((-1.0)*sj1*x14148))+(((-1.0)*x14153)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14160=IKPowWithIntegerCheck(IKsign((((cj6*r21))+((r20*sj6)))),-1);
if(!x14160.valid){
continue;
}
CheckValue<IkReal> x14161 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*cj6*r10))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14161.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14160.value)))+(x14161.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14162=IKsin(j5);
IkReal x14163=IKcos(j5);
IkReal x14164=(sj0*sj1);
IkReal x14165=(cj4*cj6);
IkReal x14166=(sj4*sj6);
IkReal x14167=(cj6*r10);
IkReal x14168=((1.0)*cj0);
IkReal x14169=(cj6*r00);
IkReal x14170=(cj4*sj6);
IkReal x14171=(cj6*r20);
IkReal x14172=(cj6*sj4);
IkReal x14173=(cj1*sj0);
IkReal x14174=(cj1*x14168);
IkReal x14175=((1.0)*x14163);
IkReal x14176=(sj6*x14162);
IkReal x14177=((1.0)*x14162);
IkReal x14178=(sj4*x14163);
IkReal x14179=(cj4*x14162);
evalcond[0]=(((r21*x14176))+(((-1.0)*r22*x14175))+(((-1.0)*x14171*x14177)));
evalcond[1]=((((-1.0)*x14167*x14177))+((r11*x14176))+(((-1.0)*r12*x14175)));
evalcond[2]=((-1.0)+(((-1.0)*x14169*x14177))+((r01*x14176))+(((-1.0)*r02*x14175)));
evalcond[3]=((((-1.0)*r00*x14165*x14175))+((r01*x14172))+((r02*x14179))+((r00*x14166))+((r01*x14163*x14170)));
evalcond[4]=(((r00*x14170))+(((-1.0)*r02*sj4*x14177))+((r01*x14165))+((x14169*x14178))+(((-1.0)*r01*x14166*x14175)));
evalcond[5]=(((r22*x14179))+(((-1.0)*r20*x14165*x14175))+((r21*x14172))+x14173+((r20*x14166))+((cj0*sj1))+((r21*x14163*x14170)));
evalcond[6]=((((-1.0)*x14174))+((r10*x14166))+((r11*x14163*x14170))+((r11*x14172))+((r12*x14179))+(((-1.0)*r10*x14165*x14175))+x14164);
evalcond[7]=((((-1.0)*x14174))+((x14171*x14178))+(((-1.0)*r21*x14166*x14175))+(((-1.0)*r22*sj4*x14177))+((r20*x14170))+x14164+((r21*x14165)));
evalcond[8]=(((x14167*x14178))+(((-1.0)*x14173))+(((-1.0)*r11*x14166*x14175))+((r11*x14165))+(((-1.0)*r12*sj4*x14177))+((r10*x14170))+(((-1.0)*sj1*x14168)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j2)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x14180=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x14180;
j5eval[1]=IKsign(x14180);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x14181=((1.0)*cj6);
IkReal x14182=((((-1.0)*r21*x14181))+(((-1.0)*r20*sj6)));
j5eval[0]=x14182;
j5eval[1]=((IKabs(r12))+(IKabs(((((-1.0)*r10*x14181))+((r11*sj6))))));
j5eval[2]=IKsign(x14182);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
IkReal x14183=cj6*cj6;
IkReal x14184=(cj4*r20);
IkReal x14185=(cj6*sj6);
IkReal x14186=(cj4*r01*r21);
IkReal x14187=((((-1.0)*cj4*r02*r22))+(((-1.0)*r00*x14183*x14184))+((r01*x14184*x14185))+((cj4*r00*r21*x14185))+((x14183*x14186))+(((-1.0)*x14186)));
j5eval[0]=x14187;
j5eval[1]=IKsign(x14187);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x14188=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x14188;
j5eval[1]=IKsign(x14188);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x14189=((1.0)*cj6);
IkReal x14190=((((-1.0)*r21*x14189))+(((-1.0)*r20*sj6)));
j5eval[0]=x14190;
j5eval[1]=((IKabs(((((-1.0)*r10*x14189))+((r11*sj6)))))+(IKabs(r12)));
j5eval[2]=IKsign(x14190);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=1.0;
cj4=0;
j4=1.5707963267949;
IkReal x14191=cj6*cj6;
IkReal x14192=r01*r01;
IkReal x14193=(cj6*r00);
IkReal x14194=(r01*sj6);
IkReal x14195=(((x14191*(r00*r00)))+(((-1.0)*x14191*x14192))+x14192+(r02*r02)+(((-2.0)*x14193*x14194)));
j5eval[0]=x14195;
j5eval[1]=((IKabs(r02))+(IKabs(((((-1.0)*x14194))+x14193))));
j5eval[2]=IKsign(x14195);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14196=cj6*cj6;
IkReal x14197=r01*r01;
IkReal x14198=(cj6*r00);
IkReal x14199=(r01*sj6);
CheckValue<IkReal> x14200=IKPowWithIntegerCheck(IKsign(((((-2.0)*x14198*x14199))+x14197+(((-1.0)*x14196*x14197))+(r02*r02)+((x14196*(r00*r00))))),-1);
if(!x14200.valid){
continue;
}
CheckValue<IkReal> x14201 = IKatan2WithCheck(IkReal(((((-1.0)*x14199))+x14198)),IkReal(r02),IKFAST_ATAN2_MAGTHRESH);
if(!x14201.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14200.value)))+(x14201.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x14202=IKsin(j5);
IkReal x14203=IKcos(j5);
IkReal x14204=(r01*sj6);
IkReal x14205=(r21*sj6);
IkReal x14206=(r11*sj6);
IkReal x14207=((1.0)*x14203);
IkReal x14208=((1.0)*x14202);
IkReal x14209=(cj6*x14203);
IkReal x14210=(cj6*x14208);
evalcond[0]=((((-1.0)*r20*x14210))+((x14202*x14205))+(((-1.0)*r22*x14207)));
evalcond[1]=((((-1.0)*r10*x14210))+(((-1.0)*r12*x14207))+((x14202*x14206)));
evalcond[2]=((((-1.0)*x14204*x14207))+((r00*x14209))+(((-1.0)*r02*x14208)));
evalcond[3]=((1.0)+(((-1.0)*r00*x14210))+((x14202*x14204))+(((-1.0)*r02*x14207)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*x14206*x14207))+((r10*x14209))+(((-1.0)*r12*x14208))+((cj0*sj1)));
evalcond[5]=((((-1.0)*x14205*x14207))+((r20*x14209))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*r22*x14208)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14211=((1.0)*cj6);
CheckValue<IkReal> x14212=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x14211))+(((-1.0)*r20*sj6)))),-1);
if(!x14212.valid){
continue;
}
CheckValue<IkReal> x14213 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*r10*x14211))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14213.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14212.value)))+(x14213.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x14214=IKsin(j5);
IkReal x14215=IKcos(j5);
IkReal x14216=(r01*sj6);
IkReal x14217=(r21*sj6);
IkReal x14218=(r11*sj6);
IkReal x14219=((1.0)*x14215);
IkReal x14220=((1.0)*x14214);
IkReal x14221=(cj6*x14215);
IkReal x14222=(cj6*x14220);
evalcond[0]=(((x14214*x14217))+(((-1.0)*r20*x14222))+(((-1.0)*r22*x14219)));
evalcond[1]=((((-1.0)*r12*x14219))+(((-1.0)*r10*x14222))+((x14214*x14218)));
evalcond[2]=((((-1.0)*x14216*x14219))+((r00*x14221))+(((-1.0)*r02*x14220)));
evalcond[3]=((1.0)+(((-1.0)*r00*x14222))+((x14214*x14216))+(((-1.0)*r02*x14219)));
evalcond[4]=((((-1.0)*r12*x14220))+((cj1*sj0))+((r10*x14221))+(((-1.0)*x14218*x14219))+((cj0*sj1)));
evalcond[5]=(((r20*x14221))+(((-1.0)*x14217*x14219))+((sj0*sj1))+(((-1.0)*r22*x14220))+(((-1.0)*cj0*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14223 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14223.valid){
continue;
}
CheckValue<IkReal> x14224=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x14224.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14223.value)+(((1.5707963267949)*(x14224.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x14225=IKsin(j5);
IkReal x14226=IKcos(j5);
IkReal x14227=(r01*sj6);
IkReal x14228=(r21*sj6);
IkReal x14229=(r11*sj6);
IkReal x14230=((1.0)*x14226);
IkReal x14231=((1.0)*x14225);
IkReal x14232=(cj6*x14226);
IkReal x14233=(cj6*x14231);
evalcond[0]=((((-1.0)*r20*x14233))+((x14225*x14228))+(((-1.0)*r22*x14230)));
evalcond[1]=(((x14225*x14229))+(((-1.0)*r12*x14230))+(((-1.0)*r10*x14233)));
evalcond[2]=((((-1.0)*x14227*x14230))+(((-1.0)*r02*x14231))+((r00*x14232)));
evalcond[3]=((1.0)+(((-1.0)*r00*x14233))+((x14225*x14227))+(((-1.0)*r02*x14230)));
evalcond[4]=(((cj1*sj0))+(((-1.0)*x14229*x14230))+((r10*x14232))+(((-1.0)*r12*x14231))+((cj0*sj1)));
evalcond[5]=(((r20*x14232))+(((-1.0)*x14228*x14230))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*r22*x14231)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x14234=(((r10*sj6))+((cj6*r11)));
j5eval[0]=x14234;
j5eval[1]=IKsign(x14234);
j5eval[2]=((IKabs(((((-1.0)*cj6*r20))+((r21*sj6)))))+(IKabs(r22)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x14235=((1.0)*cj6);
IkReal x14236=((((-1.0)*r21*x14235))+(((-1.0)*r20*sj6)));
j5eval[0]=x14236;
j5eval[1]=((IKabs(r12))+(IKabs((((r11*sj6))+(((-1.0)*r10*x14235))))));
j5eval[2]=IKsign(x14236);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
IkReal x14237=r01*r01;
IkReal x14238=cj6*cj6;
IkReal x14239=(r01*sj6);
IkReal x14240=(cj6*r00);
IkReal x14241=((((-1.0)*(r02*r02)))+(((-1.0)*x14237))+((x14237*x14238))+(((-1.0)*x14238*(r00*r00)))+(((2.0)*x14239*x14240)));
j5eval[0]=x14241;
j5eval[1]=IKsign(x14241);
j5eval[2]=((IKabs(r02))+(IKabs(((((-1.0)*x14240))+x14239))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14242=r01*r01;
IkReal x14243=cj6*cj6;
IkReal x14244=(r01*sj6);
IkReal x14245=(cj6*r00);
CheckValue<IkReal> x14246 = IKatan2WithCheck(IkReal(((((-1.0)*x14245))+x14244)),IkReal(((-1.0)*r02)),IKFAST_ATAN2_MAGTHRESH);
if(!x14246.valid){
continue;
}
CheckValue<IkReal> x14247=IKPowWithIntegerCheck(IKsign(((((-1.0)*x14242))+(((-1.0)*(r02*r02)))+(((-1.0)*x14243*(r00*r00)))+(((2.0)*x14244*x14245))+((x14242*x14243)))),-1);
if(!x14247.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14246.value)+(((1.5707963267949)*(x14247.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x14248=IKcos(j5);
IkReal x14249=IKsin(j5);
IkReal x14250=(sj6*x14249);
IkReal x14251=((1.0)*x14248);
IkReal x14252=(sj6*x14248);
IkReal x14253=((1.0)*cj6*x14249);
evalcond[0]=(((r02*x14249))+(((-1.0)*cj6*r00*x14251))+((r01*x14252)));
evalcond[1]=(((r21*x14250))+(((-1.0)*r22*x14251))+(((-1.0)*r20*x14253)));
evalcond[2]=(((r11*x14250))+(((-1.0)*r12*x14251))+(((-1.0)*r10*x14253)));
evalcond[3]=((1.0)+(((-1.0)*r00*x14253))+(((-1.0)*r02*x14251))+((r01*x14250)));
evalcond[4]=(((cj1*sj0))+((r12*x14249))+((r11*x14252))+(((-1.0)*cj6*r10*x14251))+((cj0*sj1)));
evalcond[5]=(((r21*x14252))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r22*x14249))+(((-1.0)*cj6*r20*x14251)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14254=((1.0)*cj6);
CheckValue<IkReal> x14255=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x14254))+(((-1.0)*r20*sj6)))),-1);
if(!x14255.valid){
continue;
}
CheckValue<IkReal> x14256 = IKatan2WithCheck(IkReal(r12),IkReal((((r11*sj6))+(((-1.0)*r10*x14254)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14256.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14255.value)))+(x14256.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x14257=IKcos(j5);
IkReal x14258=IKsin(j5);
IkReal x14259=(sj6*x14258);
IkReal x14260=((1.0)*x14257);
IkReal x14261=(sj6*x14257);
IkReal x14262=((1.0)*cj6*x14258);
evalcond[0]=((((-1.0)*cj6*r00*x14260))+((r02*x14258))+((r01*x14261)));
evalcond[1]=(((r21*x14259))+(((-1.0)*r22*x14260))+(((-1.0)*r20*x14262)));
evalcond[2]=(((r11*x14259))+(((-1.0)*r12*x14260))+(((-1.0)*r10*x14262)));
evalcond[3]=((1.0)+(((-1.0)*r02*x14260))+(((-1.0)*r00*x14262))+((r01*x14259)));
evalcond[4]=(((cj1*sj0))+((r11*x14261))+((r12*x14258))+(((-1.0)*cj6*r10*x14260))+((cj0*sj1)));
evalcond[5]=((((-1.0)*cj6*r20*x14260))+((r21*x14261))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r22*x14258)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14263 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14263.valid){
continue;
}
CheckValue<IkReal> x14264=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x14264.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14263.value)+(((1.5707963267949)*(x14264.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x14265=IKcos(j5);
IkReal x14266=IKsin(j5);
IkReal x14267=(sj6*x14266);
IkReal x14268=((1.0)*x14265);
IkReal x14269=(sj6*x14265);
IkReal x14270=((1.0)*cj6*x14266);
evalcond[0]=(((r02*x14266))+(((-1.0)*cj6*r00*x14268))+((r01*x14269)));
evalcond[1]=(((r21*x14267))+(((-1.0)*r22*x14268))+(((-1.0)*r20*x14270)));
evalcond[2]=(((r11*x14267))+(((-1.0)*r12*x14268))+(((-1.0)*r10*x14270)));
evalcond[3]=((1.0)+(((-1.0)*r02*x14268))+(((-1.0)*r00*x14270))+((r01*x14267)));
evalcond[4]=(((cj1*sj0))+((r11*x14269))+((r12*x14266))+(((-1.0)*cj6*r10*x14268))+((cj0*sj1)));
evalcond[5]=((((-1.0)*cj6*r20*x14268))+((r21*x14269))+((sj0*sj1))+(((-1.0)*cj0*cj1))+((r22*x14266)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14272 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x14272)==0){
continue;
}
IkReal x14271=pow(x14272,-0.5);
CheckValue<IkReal> x14273 = IKatan2WithCheck(IkReal(r11),IkReal(r10),IKFAST_ATAN2_MAGTHRESH);
if(!x14273.valid){
continue;
}
IkReal gconst60=((-1.0)*(x14273.value));
IkReal gconst61=((-1.0)*r11*x14271);
IkReal gconst62=(r10*x14271);
CheckValue<IkReal> x14274 = IKatan2WithCheck(IkReal(r11),IkReal(r10),IKFAST_ATAN2_MAGTHRESH);
if(!x14274.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x14274.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
CheckValue<IkReal> x14277 = IKatan2WithCheck(IkReal(r11),IkReal(r10),IKFAST_ATAN2_MAGTHRESH);
if(!x14277.valid){
continue;
}
IkReal x14275=((-1.0)*(x14277.value));
IkReal x14276=x14271;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj6=gconst61;
cj6=gconst62;
j6=x14275;
IkReal gconst60=x14275;
IkReal gconst61=((-1.0)*r11*x14276);
IkReal gconst62=(r10*x14276);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
CheckValue<IkReal> x14280 = IKatan2WithCheck(IkReal(r11),IkReal(r10),IKFAST_ATAN2_MAGTHRESH);
if(!x14280.valid){
continue;
}
IkReal x14278=((-1.0)*(x14280.value));
IkReal x14279=x14271;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj6=gconst61;
cj6=gconst62;
j6=x14278;
IkReal gconst60=x14278;
IkReal gconst61=((-1.0)*r11*x14279);
IkReal gconst62=(r10*x14279);
CheckValue<IkReal> x14288=IKPowWithIntegerCheck(((1.0)+(((-1.0)*(r12*r12)))),-1);
if(!x14288.valid){
continue;
}
IkReal x14281=x14288.value;
IkReal x14282=(sj4*x14281);
IkReal x14283=(r00*x14282);
IkReal x14284=(r21*x14282);
IkReal x14285=(r20*x14282);
IkReal x14286=(r01*x14282);
IkReal x14287=(r10*r11*x14282);
j5eval[0]=IKsign((((r10*r11*r21*x14283))+((r20*x14283*(r10*r10)))+((r01*x14284*(r11*r11)))+((r01*r10*r11*x14285))+((r02*r22*sj4))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14289=gconst61*gconst61;
IkReal x14290=gconst62*gconst62;
IkReal x14291=(r00*sj4);
IkReal x14292=(cj4*r01);
IkReal x14293=(gconst61*r21);
IkReal x14294=(cj4*r00);
IkReal x14295=(r21*x14289);
IkReal x14296=(gconst61*gconst62*r20);
IkReal x14297=(gconst62*r01*sj4);
IkReal x14298=((1.0)*r20*x14290);
CheckValue<IkReal> x14299=IKPowWithIntegerCheck(IKsign((((x14292*x14296))+(((-1.0)*cj4*r02*r22))+(((-1.0)*x14292*x14295))+((gconst62*x14293*x14294))+(((-1.0)*x14294*x14298)))),-1);
if(!x14299.valid){
continue;
}
CheckValue<IkReal> x14300 = IKatan2WithCheck(IkReal((((gconst61*r22*x14291))+((r22*x14297)))),IkReal((((x14291*x14295))+(((-1.0)*r01*sj4*x14298))+(((-1.0)*x14291*x14296))+((x14293*x14297)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14300.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14299.value)))+(x14300.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14301=IKsin(j5);
IkReal x14302=IKcos(j5);
IkReal x14303=(cj1*sj0);
IkReal x14304=(cj0*sj1);
IkReal x14305=(sj0*sj1);
IkReal x14306=(gconst61*r01);
IkReal x14307=(cj4*gconst62);
IkReal x14308=(gconst62*sj4);
IkReal x14309=(cj0*cj1);
IkReal x14310=(gconst61*sj4);
IkReal x14311=(cj4*gconst61);
IkReal x14312=((1.0)*x14301);
IkReal x14313=(cj4*x14301);
IkReal x14314=(r00*x14302);
IkReal x14315=((1.0)*x14302);
IkReal x14316=(gconst61*x14301);
IkReal x14317=(x14303+x14304);
evalcond[0]=((((-1.0)*gconst62*r20*x14312))+(((-1.0)*r22*x14315))+((r21*x14316)));
evalcond[1]=(((r11*x14316))+(((-1.0)*gconst62*r10*x14312))+(((-1.0)*r12*x14315)));
evalcond[2]=((1.0)+((x14301*x14306))+(((-1.0)*r02*x14315))+(((-1.0)*gconst62*r00*x14312)));
evalcond[3]=(((cj4*x14302*x14306))+((r02*x14313))+((r01*x14308))+((r00*x14310))+(((-1.0)*x14307*x14314)));
evalcond[4]=(((x14308*x14314))+((r01*x14307))+((r00*x14311))+(((-1.0)*sj4*x14306*x14315))+(((-1.0)*r02*sj4*x14312)));
evalcond[5]=((((-1.0)*r20*x14307*x14315))+((r21*x14302*x14311))+((r20*x14310))+x14317+((r21*x14308))+((r22*x14313)));
evalcond[6]=(((r11*x14302*x14311))+(((-1.0)*r10*x14307*x14315))+((r11*x14308))+(((-1.0)*x14305))+x14309+((r12*x14313))+((r10*x14310)));
evalcond[7]=((((-1.0)*r11*x14310*x14315))+((r11*x14307))+((r10*x14302*x14308))+(((-1.0)*r12*sj4*x14312))+x14317+((r10*x14311)));
evalcond[8]=(((r20*x14311))+(((-1.0)*x14309))+(((-1.0)*r22*sj4*x14312))+((r20*x14302*x14308))+x14305+((r21*x14307))+(((-1.0)*r21*x14310*x14315)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14318=gconst62*gconst62;
IkReal x14319=gconst61*gconst61;
IkReal x14320=(r21*sj4);
IkReal x14321=(cj4*r00);
IkReal x14322=(r20*sj4);
IkReal x14323=((1.0)*cj4*r20);
IkReal x14324=(gconst61*gconst62*r00);
IkReal x14325=(gconst61*gconst62*r01);
CheckValue<IkReal> x14326=IKPowWithIntegerCheck(IKsign((((r00*x14318*x14322))+(((-1.0)*x14320*x14324))+((r01*x14319*x14320))+((r02*r22*sj4))+(((-1.0)*x14322*x14325)))),-1);
if(!x14326.valid){
continue;
}
CheckValue<IkReal> x14327 = IKatan2WithCheck(IkReal((((gconst61*r22*x14321))+((cj4*gconst62*r01*r22)))),IkReal(((((-1.0)*r01*x14318*x14323))+((r21*x14319*x14321))+((cj4*r21*x14325))+(((-1.0)*gconst61*gconst62*r20*x14321)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14327.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14326.value)))+(x14327.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14328=IKsin(j5);
IkReal x14329=IKcos(j5);
IkReal x14330=(cj1*sj0);
IkReal x14331=(cj0*sj1);
IkReal x14332=(sj0*sj1);
IkReal x14333=(gconst61*r01);
IkReal x14334=(cj4*gconst62);
IkReal x14335=(gconst62*sj4);
IkReal x14336=(cj0*cj1);
IkReal x14337=(gconst61*sj4);
IkReal x14338=(cj4*gconst61);
IkReal x14339=((1.0)*x14328);
IkReal x14340=(cj4*x14328);
IkReal x14341=(r00*x14329);
IkReal x14342=((1.0)*x14329);
IkReal x14343=(gconst61*x14328);
IkReal x14344=(x14330+x14331);
evalcond[0]=(((r21*x14343))+(((-1.0)*r22*x14342))+(((-1.0)*gconst62*r20*x14339)));
evalcond[1]=((((-1.0)*r12*x14342))+((r11*x14343))+(((-1.0)*gconst62*r10*x14339)));
evalcond[2]=((1.0)+(((-1.0)*gconst62*r00*x14339))+(((-1.0)*r02*x14342))+((x14328*x14333)));
evalcond[3]=(((cj4*x14329*x14333))+(((-1.0)*x14334*x14341))+((r00*x14337))+((r01*x14335))+((r02*x14340)));
evalcond[4]=((((-1.0)*sj4*x14333*x14342))+((r00*x14338))+((r01*x14334))+((x14335*x14341))+(((-1.0)*r02*sj4*x14339)));
evalcond[5]=(((r20*x14337))+(((-1.0)*r20*x14334*x14342))+((r21*x14329*x14338))+((r22*x14340))+x14344+((r21*x14335)));
evalcond[6]=(((r11*x14335))+(((-1.0)*r10*x14334*x14342))+(((-1.0)*x14332))+((r11*x14329*x14338))+((r12*x14340))+((r10*x14337))+x14336);
evalcond[7]=(((r11*x14334))+(((-1.0)*r11*x14337*x14342))+((r10*x14338))+(((-1.0)*r12*sj4*x14339))+x14344+((r10*x14329*x14335)));
evalcond[8]=(((r20*x14338))+(((-1.0)*r22*sj4*x14339))+(((-1.0)*x14336))+(((-1.0)*r21*x14337*x14342))+x14332+((r21*x14334))+((r20*x14329*x14335)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14345=((1.0)*gconst62);
CheckValue<IkReal> x14346 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst61*r11))+(((-1.0)*r10*x14345)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14346.valid){
continue;
}
CheckValue<IkReal> x14347=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst61*r20))+(((-1.0)*r21*x14345)))),-1);
if(!x14347.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14346.value)+(((1.5707963267949)*(x14347.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14348=IKsin(j5);
IkReal x14349=IKcos(j5);
IkReal x14350=(cj1*sj0);
IkReal x14351=(cj0*sj1);
IkReal x14352=(sj0*sj1);
IkReal x14353=(gconst61*r01);
IkReal x14354=(cj4*gconst62);
IkReal x14355=(gconst62*sj4);
IkReal x14356=(cj0*cj1);
IkReal x14357=(gconst61*sj4);
IkReal x14358=(cj4*gconst61);
IkReal x14359=((1.0)*x14348);
IkReal x14360=(cj4*x14348);
IkReal x14361=(r00*x14349);
IkReal x14362=((1.0)*x14349);
IkReal x14363=(gconst61*x14348);
IkReal x14364=(x14350+x14351);
evalcond[0]=((((-1.0)*r22*x14362))+(((-1.0)*gconst62*r20*x14359))+((r21*x14363)));
evalcond[1]=((((-1.0)*gconst62*r10*x14359))+((r11*x14363))+(((-1.0)*r12*x14362)));
evalcond[2]=((1.0)+((x14348*x14353))+(((-1.0)*r02*x14362))+(((-1.0)*gconst62*r00*x14359)));
evalcond[3]=(((cj4*x14349*x14353))+((r02*x14360))+((r00*x14357))+((r01*x14355))+(((-1.0)*x14354*x14361)));
evalcond[4]=((((-1.0)*r02*sj4*x14359))+(((-1.0)*sj4*x14353*x14362))+((r00*x14358))+((r01*x14354))+((x14355*x14361)));
evalcond[5]=(((r20*x14357))+((r21*x14349*x14358))+((r21*x14355))+(((-1.0)*r20*x14354*x14362))+x14364+((r22*x14360)));
evalcond[6]=(((r11*x14355))+(((-1.0)*x14352))+((r11*x14349*x14358))+((r10*x14357))+x14356+((r12*x14360))+(((-1.0)*r10*x14354*x14362)));
evalcond[7]=(((r10*x14349*x14355))+((r11*x14354))+((r10*x14358))+(((-1.0)*r12*sj4*x14359))+x14364+(((-1.0)*r11*x14357*x14362)));
evalcond[8]=((((-1.0)*r22*sj4*x14359))+((r20*x14358))+(((-1.0)*x14356))+((r21*x14354))+((r20*x14349*x14355))+x14352+(((-1.0)*r21*x14357*x14362)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14366 = ((1.0)+(((-1.0)*(r12*r12))));
if(IKabs(x14366)==0){
continue;
}
IkReal x14365=pow(x14366,-0.5);
CheckValue<IkReal> x14367 = IKatan2WithCheck(IkReal(r11),IkReal(r10),IKFAST_ATAN2_MAGTHRESH);
if(!x14367.valid){
continue;
}
IkReal gconst63=((3.14159265358979)+(((-1.0)*(x14367.value))));
IkReal gconst64=((1.0)*r11*x14365);
IkReal gconst65=((-1.0)*r10*x14365);
CheckValue<IkReal> x14368 = IKatan2WithCheck(IkReal(r11),IkReal(r10),IKFAST_ATAN2_MAGTHRESH);
if(!x14368.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x14368.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
CheckValue<IkReal> x14371 = IKatan2WithCheck(IkReal(r11),IkReal(r10),IKFAST_ATAN2_MAGTHRESH);
if(!x14371.valid){
continue;
}
IkReal x14369=((1.0)*(x14371.value));
IkReal x14370=x14365;
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
sj6=gconst64;
cj6=gconst65;
j6=((3.14159265)+(((-1.0)*x14369)));
IkReal gconst63=((3.14159265358979)+(((-1.0)*x14369)));
IkReal gconst64=((1.0)*r11*x14370);
IkReal gconst65=((-1.0)*r10*x14370);
j5eval[0]=1.0;
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14372=gconst64*gconst64;
IkReal x14373=gconst65*gconst65;
IkReal x14374=(r00*sj4);
IkReal x14375=((1.0)*r01);
IkReal x14376=(gconst64*gconst65);
IkReal x14377=(cj4*r00);
IkReal x14378=(cj4*r01);
IkReal x14379=(r20*x14373);
IkReal x14380=(r21*x14372);
CheckValue<IkReal> x14381=IKPowWithIntegerCheck(IKsign((((r01*sj4*x14380))+((x14374*x14379))+(((-1.0)*r20*sj4*x14375*x14376))+(((-1.0)*r21*x14374*x14376))+((r02*r22*sj4)))),-1);
if(!x14381.valid){
continue;
}
CheckValue<IkReal> x14382 = IKatan2WithCheck(IkReal((((gconst64*r22*x14377))+((gconst65*r22*x14378)))),IkReal((((r21*x14376*x14378))+(((-1.0)*cj4*x14375*x14379))+((x14377*x14380))+(((-1.0)*r20*x14376*x14377)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14382.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14381.value)))+(x14382.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14383=IKsin(j5);
IkReal x14384=IKcos(j5);
IkReal x14385=(cj1*sj0);
IkReal x14386=(cj0*sj1);
IkReal x14387=(gconst64*r01);
IkReal x14388=(gconst65*sj4);
IkReal x14389=(cj4*gconst65);
IkReal x14390=(sj0*sj1);
IkReal x14391=(cj0*cj1);
IkReal x14392=(gconst64*sj4);
IkReal x14393=((1.0)*sj4);
IkReal x14394=(cj4*gconst64);
IkReal x14395=(r22*x14383);
IkReal x14396=(r00*x14384);
IkReal x14397=(cj4*x14383);
IkReal x14398=((1.0)*x14384);
IkReal x14399=(gconst64*x14383);
IkReal x14400=(x14385+x14386);
IkReal x14401=((1.0)*gconst65*x14383);
evalcond[0]=(((r21*x14399))+(((-1.0)*r22*x14398))+(((-1.0)*r20*x14401)));
evalcond[1]=((((-1.0)*r10*x14401))+(((-1.0)*r12*x14398))+((r11*x14399)));
evalcond[2]=((1.0)+((x14383*x14387))+(((-1.0)*r00*x14401))+(((-1.0)*r02*x14398)));
evalcond[3]=((((-1.0)*x14389*x14396))+((r01*x14388))+((r00*x14392))+((r02*x14397))+((cj4*x14384*x14387)));
evalcond[4]=((((-1.0)*r02*x14383*x14393))+((r01*x14389))+((r00*x14394))+((x14388*x14396))+(((-1.0)*x14384*x14387*x14393)));
evalcond[5]=(((r21*x14388))+x14400+((r21*x14384*x14394))+(((-1.0)*r20*x14389*x14398))+((cj4*x14395))+((r20*x14392)));
evalcond[6]=((((-1.0)*x14390))+((r12*x14397))+((r11*x14388))+(((-1.0)*r10*x14389*x14398))+((r10*x14392))+x14391+((r11*x14384*x14394)));
evalcond[7]=((((-1.0)*r12*x14383*x14393))+((r11*x14389))+((r10*x14394))+x14400+(((-1.0)*r11*x14392*x14398))+((r10*x14384*x14388)));
evalcond[8]=(((r20*x14384*x14388))+(((-1.0)*x14391))+((r21*x14389))+(((-1.0)*x14393*x14395))+x14390+(((-1.0)*r21*x14392*x14398))+((r20*x14394)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14402=((1.0)*gconst65);
CheckValue<IkReal> x14403=IKPowWithIntegerCheck(IKsign(((((-1.0)*gconst64*r20))+(((-1.0)*r21*x14402)))),-1);
if(!x14403.valid){
continue;
}
CheckValue<IkReal> x14404 = IKatan2WithCheck(IkReal(r12),IkReal((((gconst64*r11))+(((-1.0)*r10*x14402)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14404.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14403.value)))+(x14404.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14405=IKsin(j5);
IkReal x14406=IKcos(j5);
IkReal x14407=(cj1*sj0);
IkReal x14408=(cj0*sj1);
IkReal x14409=(gconst64*r01);
IkReal x14410=(gconst65*sj4);
IkReal x14411=(cj4*gconst65);
IkReal x14412=(sj0*sj1);
IkReal x14413=(cj0*cj1);
IkReal x14414=(gconst64*sj4);
IkReal x14415=((1.0)*sj4);
IkReal x14416=(cj4*gconst64);
IkReal x14417=(r22*x14405);
IkReal x14418=(r00*x14406);
IkReal x14419=(cj4*x14405);
IkReal x14420=((1.0)*x14406);
IkReal x14421=(gconst64*x14405);
IkReal x14422=(x14408+x14407);
IkReal x14423=((1.0)*gconst65*x14405);
evalcond[0]=((((-1.0)*r22*x14420))+((r21*x14421))+(((-1.0)*r20*x14423)));
evalcond[1]=((((-1.0)*r10*x14423))+((r11*x14421))+(((-1.0)*r12*x14420)));
evalcond[2]=((1.0)+((x14405*x14409))+(((-1.0)*r02*x14420))+(((-1.0)*r00*x14423)));
evalcond[3]=(((r02*x14419))+((r00*x14414))+((r01*x14410))+((cj4*x14406*x14409))+(((-1.0)*x14411*x14418)));
evalcond[4]=((((-1.0)*r02*x14405*x14415))+((r00*x14416))+((r01*x14411))+(((-1.0)*x14406*x14409*x14415))+((x14410*x14418)));
evalcond[5]=(((r21*x14410))+((cj4*x14417))+x14422+((r21*x14406*x14416))+(((-1.0)*r20*x14411*x14420))+((r20*x14414)));
evalcond[6]=((((-1.0)*r10*x14411*x14420))+((r11*x14406*x14416))+(((-1.0)*x14412))+((r12*x14419))+((r11*x14410))+x14413+((r10*x14414)));
evalcond[7]=((((-1.0)*r11*x14414*x14420))+((r11*x14411))+x14422+(((-1.0)*r12*x14405*x14415))+((r10*x14416))+((r10*x14406*x14410)));
evalcond[8]=(((r21*x14411))+((r20*x14406*x14410))+(((-1.0)*x14413))+x14412+(((-1.0)*x14415*x14417))+(((-1.0)*r21*x14414*x14420))+((r20*x14416)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r10))+(IKabs(r11)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x14424=((-1.0)*py);
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
r10=0;
r11=0;
r22=0;
r02=0;
npx=(((px*r00))+((pz*r20)));
npy=(((px*r01))+((pz*r21)));
npz=(py*r12);
rxp0_0=(r20*x14424);
rxp0_2=(py*r00);
rxp1_0=(r21*x14424);
rxp1_2=(py*r01);
rxp2_0=(pz*r12);
rxp2_1=0;
rxp2_2=((-1.0)*px*r12);
IkReal x14425=(r01*sj6);
IkReal x14426=((1.0)*cj6*r00);
j5eval[0]=(x14425+(((-1.0)*x14426)));
j5eval[1]=((((-1.0)*cj4*x14426))+((cj4*x14425)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x14427=((-1.0)*py);
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
r10=0;
r11=0;
r22=0;
r02=0;
npx=(((px*r00))+((pz*r20)));
npy=(((px*r01))+((pz*r21)));
npz=(py*r12);
rxp0_0=(r20*x14427);
rxp0_2=(py*r00);
rxp1_0=(r21*x14427);
rxp1_2=(py*r01);
rxp2_0=(pz*r12);
rxp2_1=0;
rxp2_2=((-1.0)*px*r12);
IkReal x14428=(cj6*r00);
IkReal x14429=(r01*sj6);
j5eval[0]=(x14429+(((-1.0)*x14428)));
j5eval[1]=(((sj4*x14428))+(((-1.0)*sj4*x14429)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x14430=((-1.0)*py);
sj2=-1.0;
cj2=0;
j2=-1.5707963267949;
r10=0;
r11=0;
r22=0;
r02=0;
npx=(((px*r00))+((pz*r20)));
npy=(((px*r01))+((pz*r21)));
npz=(py*r12);
rxp0_0=(r20*x14430);
rxp0_2=(py*r00);
rxp1_0=(r21*x14430);
rxp1_2=(py*r01);
rxp2_0=(pz*r12);
rxp2_1=0;
rxp2_2=((-1.0)*px*r12);
j5eval[0]=cj4;
j5eval[1]=r12;
j5eval[2]=((((-1.0)*cj4*cj6*r00))+((cj4*r01*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14431=((1.0)*r00);
CheckValue<IkReal> x14432=IKPowWithIntegerCheck(cj4,-1);
if(!x14432.valid){
continue;
}
CheckValue<IkReal> x14433=IKPowWithIntegerCheck(r12,-1);
if(!x14433.valid){
continue;
}
CheckValue<IkReal> x14434=IKPowWithIntegerCheck((((cj4*r01*sj6))+(((-1.0)*cj4*cj6*x14431))),-1);
if(!x14434.valid){
continue;
}
if( IKabs(((x14432.value)*(x14433.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14434.value)*(((((-1.0)*sj4*sj6*x14431))+(((-1.0)*cj6*r01*sj4)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x14432.value)*(x14433.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))))+IKsqr(((x14434.value)*(((((-1.0)*sj4*sj6*x14431))+(((-1.0)*cj6*r01*sj4))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x14432.value)*(x14433.value)*((((sj0*sj1))+(((-1.0)*cj0*cj1))))), ((x14434.value)*(((((-1.0)*sj4*sj6*x14431))+(((-1.0)*cj6*r01*sj4))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14435=IKsin(j5);
IkReal x14436=IKcos(j5);
IkReal x14437=(cj1*sj0);
IkReal x14438=(cj0*sj1);
IkReal x14439=(r21*sj6);
IkReal x14440=(cj6*r00);
IkReal x14441=(cj6*r21);
IkReal x14442=(cj0*cj1);
IkReal x14443=(sj4*sj6);
IkReal x14444=(sj0*sj1);
IkReal x14445=(cj6*r20);
IkReal x14446=(cj6*r01);
IkReal x14447=(r01*sj6);
IkReal x14448=(cj4*sj6);
IkReal x14449=(sj4*x14436);
IkReal x14450=(r12*x14435);
IkReal x14451=((1.0)*x14435);
IkReal x14452=(cj4*x14436);
IkReal x14453=(x14437+x14438);
IkReal x14454=((1.0)*x14452);
evalcond[0]=((-1.0)*r12*x14436);
evalcond[1]=(((x14435*x14439))+(((-1.0)*x14445*x14451)));
evalcond[2]=(((cj4*x14450))+(((-1.0)*x14444))+x14442);
evalcond[3]=((((-1.0)*sj4*x14450))+x14453);
evalcond[4]=((1.0)+(((-1.0)*x14440*x14451))+((x14435*x14447)));
evalcond[5]=(((sj4*x14446))+(((-1.0)*x14440*x14454))+((r00*x14443))+((x14447*x14452)));
evalcond[6]=(((cj4*x14446))+((r00*x14448))+((x14440*x14449))+(((-1.0)*r01*x14436*x14443)));
evalcond[7]=(((sj4*x14441))+((r20*x14443))+x14453+(((-1.0)*x14445*x14454))+((x14439*x14452)));
evalcond[8]=(((cj4*x14441))+((r20*x14448))+(((-1.0)*x14442))+x14444+((x14445*x14449))+(((-1.0)*x14439*x14449)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14455=((1.0)*r00);
IkReal x14456=(r01*sj6);
CheckValue<IkReal> x14457=IKPowWithIntegerCheck((x14456+(((-1.0)*cj6*x14455))),-1);
if(!x14457.valid){
continue;
}
CheckValue<IkReal> x14458=IKPowWithIntegerCheck(((((-1.0)*sj4*x14456))+((cj6*r00*sj4))),-1);
if(!x14458.valid){
continue;
}
if( IKabs(((-1.0)*(x14457.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14458.value)*(((((-1.0)*cj4*cj6*r01))+(((-1.0)*cj4*sj6*x14455)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x14457.value)))+IKsqr(((x14458.value)*(((((-1.0)*cj4*cj6*r01))+(((-1.0)*cj4*sj6*x14455))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x14457.value)), ((x14458.value)*(((((-1.0)*cj4*cj6*r01))+(((-1.0)*cj4*sj6*x14455))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14459=IKsin(j5);
IkReal x14460=IKcos(j5);
IkReal x14461=(cj1*sj0);
IkReal x14462=(cj0*sj1);
IkReal x14463=(r21*sj6);
IkReal x14464=(cj6*r00);
IkReal x14465=(cj6*r21);
IkReal x14466=(cj0*cj1);
IkReal x14467=(sj4*sj6);
IkReal x14468=(sj0*sj1);
IkReal x14469=(cj6*r20);
IkReal x14470=(cj6*r01);
IkReal x14471=(r01*sj6);
IkReal x14472=(cj4*sj6);
IkReal x14473=(sj4*x14460);
IkReal x14474=(r12*x14459);
IkReal x14475=((1.0)*x14459);
IkReal x14476=(cj4*x14460);
IkReal x14477=(x14461+x14462);
IkReal x14478=((1.0)*x14476);
evalcond[0]=((-1.0)*r12*x14460);
evalcond[1]=((((-1.0)*x14469*x14475))+((x14459*x14463)));
evalcond[2]=((((-1.0)*x14468))+((cj4*x14474))+x14466);
evalcond[3]=((((-1.0)*sj4*x14474))+x14477);
evalcond[4]=((1.0)+((x14459*x14471))+(((-1.0)*x14464*x14475)));
evalcond[5]=(((x14471*x14476))+((r00*x14467))+(((-1.0)*x14464*x14478))+((sj4*x14470)));
evalcond[6]=((((-1.0)*r01*x14460*x14467))+((r00*x14472))+((cj4*x14470))+((x14464*x14473)));
evalcond[7]=((((-1.0)*x14469*x14478))+x14477+((sj4*x14465))+((r20*x14467))+((x14463*x14476)));
evalcond[8]=(((x14469*x14473))+((cj4*x14465))+(((-1.0)*x14466))+x14468+(((-1.0)*x14463*x14473))+((r20*x14472)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14479=(r01*sj6);
IkReal x14480=((1.0)*sj4);
IkReal x14481=((1.0)*cj6*r00);
CheckValue<IkReal> x14482=IKPowWithIntegerCheck((x14479+(((-1.0)*x14481))),-1);
if(!x14482.valid){
continue;
}
CheckValue<IkReal> x14483=IKPowWithIntegerCheck(((((-1.0)*cj4*x14481))+((cj4*x14479))),-1);
if(!x14483.valid){
continue;
}
if( IKabs(((-1.0)*(x14482.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14483.value)*(((((-1.0)*cj6*r01*x14480))+(((-1.0)*r00*sj6*x14480)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*(x14482.value)))+IKsqr(((x14483.value)*(((((-1.0)*cj6*r01*x14480))+(((-1.0)*r00*sj6*x14480))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*(x14482.value)), ((x14483.value)*(((((-1.0)*cj6*r01*x14480))+(((-1.0)*r00*sj6*x14480))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14484=IKsin(j5);
IkReal x14485=IKcos(j5);
IkReal x14486=(cj1*sj0);
IkReal x14487=(cj0*sj1);
IkReal x14488=(r21*sj6);
IkReal x14489=(cj6*r00);
IkReal x14490=(cj6*r21);
IkReal x14491=(cj0*cj1);
IkReal x14492=(sj4*sj6);
IkReal x14493=(sj0*sj1);
IkReal x14494=(cj6*r20);
IkReal x14495=(cj6*r01);
IkReal x14496=(r01*sj6);
IkReal x14497=(cj4*sj6);
IkReal x14498=(sj4*x14485);
IkReal x14499=(r12*x14484);
IkReal x14500=((1.0)*x14484);
IkReal x14501=(cj4*x14485);
IkReal x14502=(x14486+x14487);
IkReal x14503=((1.0)*x14501);
evalcond[0]=((-1.0)*r12*x14485);
evalcond[1]=(((x14484*x14488))+(((-1.0)*x14494*x14500)));
evalcond[2]=((((-1.0)*x14493))+((cj4*x14499))+x14491);
evalcond[3]=((((-1.0)*sj4*x14499))+x14502);
evalcond[4]=((1.0)+((x14484*x14496))+(((-1.0)*x14489*x14500)));
evalcond[5]=(((x14496*x14501))+(((-1.0)*x14489*x14503))+((r00*x14492))+((sj4*x14495)));
evalcond[6]=(((cj4*x14495))+(((-1.0)*r01*x14485*x14492))+((r00*x14497))+((x14489*x14498)));
evalcond[7]=(((x14488*x14501))+(((-1.0)*x14494*x14503))+x14502+((sj4*x14490))+((r20*x14492)));
evalcond[8]=((((-1.0)*x14491))+((cj4*x14490))+((x14494*x14498))+x14493+((r20*x14497))+(((-1.0)*x14488*x14498)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14504=cj6*cj6;
IkReal x14505=(r01*sj4);
IkReal x14506=(cj4*r00);
IkReal x14507=(cj4*r01);
IkReal x14508=(cj6*sj6);
IkReal x14509=(r00*sj4);
IkReal x14510=(r21*x14504);
IkReal x14511=((1.0)*r20*x14504);
CheckValue<IkReal> x14512=IKPowWithIntegerCheck(IKsign((((r20*x14507*x14508))+(((-1.0)*r21*x14507))+(((-1.0)*cj4*r02*r22))+(((-1.0)*x14506*x14511))+((x14507*x14510))+((r21*x14506*x14508)))),-1);
if(!x14512.valid){
continue;
}
CheckValue<IkReal> x14513 = IKatan2WithCheck(IkReal((((r22*sj6*x14509))+((cj6*r22*x14505)))),IkReal(((((-1.0)*r20*x14508*x14509))+((r21*x14509))+(((-1.0)*x14505*x14511))+(((-1.0)*x14509*x14510))+((r21*x14505*x14508)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14513.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14512.value)))+(x14513.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14514=IKsin(j5);
IkReal x14515=IKcos(j5);
IkReal x14516=(cj1*sj0);
IkReal x14517=(cj0*sj1);
IkReal x14518=(cj4*cj6);
IkReal x14519=(sj4*sj6);
IkReal x14520=(cj6*r10);
IkReal x14521=(cj0*cj1);
IkReal x14522=(sj0*sj1);
IkReal x14523=(cj6*r00);
IkReal x14524=(cj4*sj6);
IkReal x14525=(cj6*r20);
IkReal x14526=(cj6*sj4);
IkReal x14527=((1.0)*x14515);
IkReal x14528=(sj6*x14514);
IkReal x14529=((1.0)*x14514);
IkReal x14530=(sj4*x14515);
IkReal x14531=(cj4*x14514);
IkReal x14532=(x14516+x14517);
evalcond[0]=((((-1.0)*r22*x14527))+(((-1.0)*x14525*x14529))+((r21*x14528)));
evalcond[1]=((((-1.0)*x14520*x14529))+((r11*x14528))+(((-1.0)*r12*x14527)));
evalcond[2]=((1.0)+(((-1.0)*x14523*x14529))+((r01*x14528))+(((-1.0)*r02*x14527)));
evalcond[3]=(((r00*x14519))+((r01*x14515*x14524))+((r02*x14531))+((r01*x14526))+(((-1.0)*r00*x14518*x14527)));
evalcond[4]=(((r00*x14524))+((r01*x14518))+((x14523*x14530))+(((-1.0)*r01*x14519*x14527))+(((-1.0)*r02*sj4*x14529)));
evalcond[5]=(((r21*x14515*x14524))+((r20*x14519))+((r22*x14531))+x14532+(((-1.0)*r20*x14518*x14527))+((r21*x14526)));
evalcond[6]=((((-1.0)*x14522))+(((-1.0)*r10*x14518*x14527))+((r12*x14531))+((r11*x14526))+x14521+((r11*x14515*x14524))+((r10*x14519)));
evalcond[7]=(((r11*x14518))+(((-1.0)*r11*x14519*x14527))+x14532+(((-1.0)*r12*sj4*x14529))+((r10*x14524))+((x14520*x14530)));
evalcond[8]=((((-1.0)*x14521))+((r20*x14524))+x14522+(((-1.0)*r21*x14519*x14527))+((x14525*x14530))+((r21*x14518))+(((-1.0)*r22*sj4*x14529)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14533=((1.0)*cj6);
CheckValue<IkReal> x14534 = IKatan2WithCheck(IkReal(r12),IkReal(((((-1.0)*r10*x14533))+((r11*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14534.valid){
continue;
}
CheckValue<IkReal> x14535=IKPowWithIntegerCheck(IKsign(((((-1.0)*r21*x14533))+(((-1.0)*r20*sj6)))),-1);
if(!x14535.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14534.value)+(((1.5707963267949)*(x14535.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14536=IKsin(j5);
IkReal x14537=IKcos(j5);
IkReal x14538=(cj1*sj0);
IkReal x14539=(cj0*sj1);
IkReal x14540=(cj4*cj6);
IkReal x14541=(sj4*sj6);
IkReal x14542=(cj6*r10);
IkReal x14543=(cj0*cj1);
IkReal x14544=(sj0*sj1);
IkReal x14545=(cj6*r00);
IkReal x14546=(cj4*sj6);
IkReal x14547=(cj6*r20);
IkReal x14548=(cj6*sj4);
IkReal x14549=((1.0)*x14537);
IkReal x14550=(sj6*x14536);
IkReal x14551=((1.0)*x14536);
IkReal x14552=(sj4*x14537);
IkReal x14553=(cj4*x14536);
IkReal x14554=(x14538+x14539);
evalcond[0]=((((-1.0)*x14547*x14551))+(((-1.0)*r22*x14549))+((r21*x14550)));
evalcond[1]=((((-1.0)*r12*x14549))+(((-1.0)*x14542*x14551))+((r11*x14550)));
evalcond[2]=((1.0)+(((-1.0)*x14545*x14551))+(((-1.0)*r02*x14549))+((r01*x14550)));
evalcond[3]=(((r01*x14537*x14546))+((r01*x14548))+((r00*x14541))+((r02*x14553))+(((-1.0)*r00*x14540*x14549)));
evalcond[4]=(((x14545*x14552))+((r01*x14540))+((r00*x14546))+(((-1.0)*r02*sj4*x14551))+(((-1.0)*r01*x14541*x14549)));
evalcond[5]=(((r21*x14537*x14546))+((r21*x14548))+(((-1.0)*r20*x14540*x14549))+x14554+((r20*x14541))+((r22*x14553)));
evalcond[6]=(((r10*x14541))+(((-1.0)*r10*x14540*x14549))+((r11*x14548))+(((-1.0)*x14544))+x14543+((r12*x14553))+((r11*x14537*x14546)));
evalcond[7]=(((r10*x14546))+((r11*x14540))+(((-1.0)*r12*sj4*x14551))+x14554+((x14542*x14552))+(((-1.0)*r11*x14541*x14549)));
evalcond[8]=((((-1.0)*x14543))+((r21*x14540))+x14544+(((-1.0)*r22*sj4*x14551))+(((-1.0)*r21*x14541*x14549))+((r20*x14546))+((x14547*x14552)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14555 = IKatan2WithCheck(IkReal(r22),IkReal(((((-1.0)*cj6*r20))+((r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14555.valid){
continue;
}
CheckValue<IkReal> x14556=IKPowWithIntegerCheck(IKsign((((r10*sj6))+((cj6*r11)))),-1);
if(!x14556.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14555.value)+(((1.5707963267949)*(x14556.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14557=IKsin(j5);
IkReal x14558=IKcos(j5);
IkReal x14559=(cj1*sj0);
IkReal x14560=(cj0*sj1);
IkReal x14561=(cj4*cj6);
IkReal x14562=(sj4*sj6);
IkReal x14563=(cj6*r10);
IkReal x14564=(cj0*cj1);
IkReal x14565=(sj0*sj1);
IkReal x14566=(cj6*r00);
IkReal x14567=(cj4*sj6);
IkReal x14568=(cj6*r20);
IkReal x14569=(cj6*sj4);
IkReal x14570=((1.0)*x14558);
IkReal x14571=(sj6*x14557);
IkReal x14572=((1.0)*x14557);
IkReal x14573=(sj4*x14558);
IkReal x14574=(cj4*x14557);
IkReal x14575=(x14559+x14560);
evalcond[0]=(((r21*x14571))+(((-1.0)*r22*x14570))+(((-1.0)*x14568*x14572)));
evalcond[1]=((((-1.0)*x14563*x14572))+(((-1.0)*r12*x14570))+((r11*x14571)));
evalcond[2]=((1.0)+(((-1.0)*r02*x14570))+(((-1.0)*x14566*x14572))+((r01*x14571)));
evalcond[3]=(((r01*x14569))+((r02*x14574))+(((-1.0)*r00*x14561*x14570))+((r01*x14558*x14567))+((r00*x14562)));
evalcond[4]=(((r01*x14561))+(((-1.0)*r01*x14562*x14570))+((x14566*x14573))+(((-1.0)*r02*sj4*x14572))+((r00*x14567)));
evalcond[5]=(((r21*x14558*x14567))+((r21*x14569))+(((-1.0)*r20*x14561*x14570))+((r20*x14562))+x14575+((r22*x14574)));
evalcond[6]=((((-1.0)*r10*x14561*x14570))+x14564+((r11*x14569))+((r10*x14562))+((r11*x14558*x14567))+(((-1.0)*x14565))+((r12*x14574)));
evalcond[7]=(((x14563*x14573))+(((-1.0)*r12*sj4*x14572))+x14575+((r11*x14561))+((r10*x14567))+(((-1.0)*r11*x14562*x14570)));
evalcond[8]=(((r21*x14561))+((r20*x14567))+((x14568*x14573))+x14565+(((-1.0)*x14564))+(((-1.0)*r22*sj4*x14572))+(((-1.0)*r21*x14562*x14570)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r01))+(IKabs(r00)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x14576=((-1.0)*px);
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x14576);
rxp1_1=(px*r21);
rxp1_2=(r11*x14576);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=((((-1.0)*cj6*r10))+((r11*sj6)));
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x14577=((-1.0)*px);
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x14577);
rxp1_1=(px*r21);
rxp1_2=(r11*x14577);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
IkReal x14578=((1.0)*cj6);
j5eval[0]=(((r11*sj6))+(((-1.0)*r10*x14578)));
j5eval[1]=(((cj4*r21*sj6))+(((-1.0)*cj4*r20*x14578)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x14579=((-1.0)*px);
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x14579);
rxp1_1=(px*r21);
rxp1_2=(r11*x14579);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
j5eval[0]=cj4;
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x14580=((-1.0)*px);
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x14580);
rxp1_1=(px*r21);
rxp1_2=(r11*x14580);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j5eval[0]=(((cj6*r20))+(((-1.0)*r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x14582=IKPowWithIntegerCheck((((cj6*r20))+(((-1.0)*r21*sj6))),-1);
if(!x14582.valid){
continue;
}
IkReal x14581=x14582.value;
cj5array[0]=(((cj0*cj1*x14581))+(((-1.0)*sj0*sj1*x14581)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x14583=IKsin(j5);
IkReal x14584=(sj6*x14583);
IkReal x14585=((1.0)*cj6*x14583);
evalcond[0]=((-1.0)*r02*x14583);
evalcond[1]=(((r21*x14584))+(((-1.0)*r20*x14585)));
evalcond[2]=((((-1.0)*r10*x14585))+((r11*x14584)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x14586=((-1.0)*px);
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(r10*x14586);
rxp1_1=(px*r21);
rxp1_2=(r11*x14586);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j5eval[0]=((((-1.0)*cj6*r20))+((r21*sj6)));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x14588=IKPowWithIntegerCheck(((((-1.0)*cj6*r20))+((r21*sj6))),-1);
if(!x14588.valid){
continue;
}
IkReal x14587=x14588.value;
cj5array[0]=(((cj0*cj1*x14587))+(((-1.0)*sj0*sj1*x14587)));
if( cj5array[0] >= -1-IKFAST_SINCOS_THRESH && cj5array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j5valid[0] = j5valid[1] = true;
    j5array[0] = IKacos(cj5array[0]);
    sj5array[0] = IKsin(j5array[0]);
    cj5array[1] = cj5array[0];
    j5array[1] = -j5array[0];
    sj5array[1] = -sj5array[0];
}
else if( isnan(cj5array[0]) )
{
    // probably any value will work
    j5valid[0] = true;
    cj5array[0] = 1; sj5array[0] = 0; j5array[0] = 0;
}
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x14589=IKsin(j5);
IkReal x14590=(sj6*x14589);
IkReal x14591=((1.0)*cj6*x14589);
evalcond[0]=(r02*x14589);
evalcond[1]=(((r21*x14590))+(((-1.0)*r20*x14591)));
evalcond[2]=((((-1.0)*r10*x14591))+((r11*x14590)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
CheckValue<IkReal> x14592 = IKatan2WithCheck(IkReal(((-1.0)*r10)),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14592.valid){
continue;
}
IkReal gconst66=((-1.0)*(x14592.value));
IkReal gconst67=r10;
IkReal gconst68=r11;
CheckValue<IkReal> x14593 = IKatan2WithCheck(IkReal(((-1.0)*r10)),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14593.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((x14593.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x14594=((-1.0)*r10);
CheckValue<IkReal> x14596 = IKatan2WithCheck(IkReal(x14594),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14596.valid){
continue;
}
IkReal x14595=((-1.0)*(x14596.value));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x14594);
rxp1_1=(px*r21);
rxp1_2=((-1.0)*px*r11);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj6=gconst67;
cj6=gconst68;
j6=x14595;
IkReal gconst66=x14595;
IkReal gconst67=r10;
IkReal gconst68=r11;
j5eval[0]=cj4;
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x14597=((-1.0)*r10);
CheckValue<IkReal> x14599 = IKatan2WithCheck(IkReal(x14597),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14599.valid){
continue;
}
IkReal x14598=((-1.0)*(x14599.value));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x14597);
rxp1_1=(px*r21);
rxp1_2=((-1.0)*px*r11);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj6=gconst67;
cj6=gconst68;
j6=x14598;
IkReal gconst66=x14598;
IkReal gconst67=r10;
IkReal gconst68=r11;
j5eval[0]=r02;
j5eval[1]=sj4;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x14600=((-1.0)*r10);
CheckValue<IkReal> x14602 = IKatan2WithCheck(IkReal(x14600),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14602.valid){
continue;
}
IkReal x14601=((-1.0)*(x14602.value));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x14600);
rxp1_1=(px*r21);
rxp1_2=((-1.0)*px*r11);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj6=gconst67;
cj6=gconst68;
j6=x14601;
IkReal gconst66=x14601;
IkReal gconst67=r10;
IkReal gconst68=r11;
j5eval[0]=cj4;
j5eval[1]=r02;
j5eval[2]=((((-1.0)*r10*r21*sj4))+((r11*r20*sj4)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14603=(cj0*cj1);
IkReal x14604=((1.0)*gconst67);
IkReal x14605=((1.0)*sj0*sj1);
CheckValue<IkReal> x14606=IKPowWithIntegerCheck(cj4,-1);
if(!x14606.valid){
continue;
}
CheckValue<IkReal> x14607=IKPowWithIntegerCheck(r02,-1);
if(!x14607.valid){
continue;
}
CheckValue<IkReal> x14608=IKPowWithIntegerCheck(((((-1.0)*r21*sj4*x14604))+((gconst68*r20*sj4))),-1);
if(!x14608.valid){
continue;
}
if( IKabs(((x14606.value)*(x14607.value)*(((((-1.0)*cj2*x14605))+((cj2*x14603)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14608.value)*(((((-1.0)*cj4*gconst68*r21))+(((-1.0)*cj4*r20*x14604))+x14603+(((-1.0)*x14605)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x14606.value)*(x14607.value)*(((((-1.0)*cj2*x14605))+((cj2*x14603))))))+IKsqr(((x14608.value)*(((((-1.0)*cj4*gconst68*r21))+(((-1.0)*cj4*r20*x14604))+x14603+(((-1.0)*x14605))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x14606.value)*(x14607.value)*(((((-1.0)*cj2*x14605))+((cj2*x14603))))), ((x14608.value)*(((((-1.0)*cj4*gconst68*r21))+(((-1.0)*cj4*r20*x14604))+x14603+(((-1.0)*x14605))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14609=IKsin(j5);
IkReal x14610=IKcos(j5);
IkReal x14611=(cj2*sj1);
IkReal x14612=(cj4*r11);
IkReal x14613=((1.0)*sj4);
IkReal x14614=((1.0)*sj2);
IkReal x14615=(cj4*gconst67);
IkReal x14616=(cj1*sj0);
IkReal x14617=(sj0*sj1);
IkReal x14618=(cj4*r21);
IkReal x14619=(gconst67*sj4);
IkReal x14620=(cj0*sj1);
IkReal x14621=(gconst68*sj4);
IkReal x14622=((1.0)*cj0*cj1);
IkReal x14623=(gconst67*x14609);
IkReal x14624=(gconst67*x14610);
IkReal x14625=(r02*x14609);
IkReal x14626=((1.0)*gconst68*r10);
IkReal x14627=(cj4*x14610);
IkReal x14628=((1.0)*gconst68*r20);
IkReal x14629=(x14610*x14621);
evalcond[0]=((((-1.0)*r02*x14610))+(((-1.0)*x14614)));
evalcond[1]=(((r21*x14623))+(((-1.0)*x14609*x14628)));
evalcond[2]=(cj2+((r11*x14623))+(((-1.0)*x14609*x14626)));
evalcond[3]=((((-1.0)*cj2*x14622))+((sj0*x14611))+((cj4*x14625)));
evalcond[4]=((((-1.0)*cj0*x14611))+(((-1.0)*x14613*x14625))+(((-1.0)*cj2*x14616)));
evalcond[5]=(((r21*x14621))+((r21*x14610*x14615))+x14616+x14620+(((-1.0)*x14627*x14628))+((r20*x14619)));
evalcond[6]=(((gconst68*x14618))+((r20*x14629))+(((-1.0)*x14622))+(((-1.0)*r21*x14613*x14624))+x14617+((r20*x14615)));
evalcond[7]=(((r10*x14619))+((r11*x14621))+(((-1.0)*cj0*cj1*x14614))+((x14612*x14624))+((sj2*x14617))+(((-1.0)*x14626*x14627)));
evalcond[8]=(((gconst68*x14612))+((r10*x14615))+((r10*x14629))+(((-1.0)*x14614*x14616))+(((-1.0)*x14614*x14620))+(((-1.0)*r11*x14613*x14624)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14632=IKPowWithIntegerCheck(r02,-1);
if(!x14632.valid){
continue;
}
IkReal x14630=x14632.value;
IkReal x14631=((1.0)*cj2);
CheckValue<IkReal> x14633=IKPowWithIntegerCheck(sj4,-1);
if(!x14633.valid){
continue;
}
if( IKabs((x14630*(x14633.value)*(((((-1.0)*cj1*sj0*x14631))+(((-1.0)*cj0*sj1*x14631)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*x14630)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x14630*(x14633.value)*(((((-1.0)*cj1*sj0*x14631))+(((-1.0)*cj0*sj1*x14631))))))+IKsqr(((-1.0)*sj2*x14630))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((x14630*(x14633.value)*(((((-1.0)*cj1*sj0*x14631))+(((-1.0)*cj0*sj1*x14631))))), ((-1.0)*sj2*x14630));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14634=IKsin(j5);
IkReal x14635=IKcos(j5);
IkReal x14636=(cj2*sj1);
IkReal x14637=(cj4*r11);
IkReal x14638=((1.0)*sj4);
IkReal x14639=((1.0)*sj2);
IkReal x14640=(cj4*gconst67);
IkReal x14641=(cj1*sj0);
IkReal x14642=(sj0*sj1);
IkReal x14643=(cj4*r21);
IkReal x14644=(gconst67*sj4);
IkReal x14645=(cj0*sj1);
IkReal x14646=(gconst68*sj4);
IkReal x14647=((1.0)*cj0*cj1);
IkReal x14648=(gconst67*x14634);
IkReal x14649=(gconst67*x14635);
IkReal x14650=(r02*x14634);
IkReal x14651=((1.0)*gconst68*r10);
IkReal x14652=(cj4*x14635);
IkReal x14653=((1.0)*gconst68*r20);
IkReal x14654=(x14635*x14646);
evalcond[0]=((((-1.0)*x14639))+(((-1.0)*r02*x14635)));
evalcond[1]=((((-1.0)*x14634*x14653))+((r21*x14648)));
evalcond[2]=(((r11*x14648))+(((-1.0)*x14634*x14651))+cj2);
evalcond[3]=((((-1.0)*cj2*x14647))+((cj4*x14650))+((sj0*x14636)));
evalcond[4]=((((-1.0)*cj0*x14636))+(((-1.0)*cj2*x14641))+(((-1.0)*x14638*x14650)));
evalcond[5]=(((r21*x14646))+x14641+x14645+((r20*x14644))+(((-1.0)*x14652*x14653))+((r21*x14635*x14640)));
evalcond[6]=(((gconst68*x14643))+x14642+((r20*x14640))+((r20*x14654))+(((-1.0)*x14647))+(((-1.0)*r21*x14638*x14649)));
evalcond[7]=(((r11*x14646))+((r10*x14644))+((sj2*x14642))+(((-1.0)*cj0*cj1*x14639))+((x14637*x14649))+(((-1.0)*x14651*x14652)));
evalcond[8]=(((r10*x14654))+((r10*x14640))+((gconst68*x14637))+(((-1.0)*x14639*x14641))+(((-1.0)*x14639*x14645))+(((-1.0)*r11*x14638*x14649)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14656=IKPowWithIntegerCheck(r02,-1);
if(!x14656.valid){
continue;
}
IkReal x14655=x14656.value;
CheckValue<IkReal> x14657=IKPowWithIntegerCheck(cj4,-1);
if(!x14657.valid){
continue;
}
if( IKabs((x14655*(x14657.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*x14655)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x14655*(x14657.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))))+IKsqr(((-1.0)*sj2*x14655))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((x14655*(x14657.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))), ((-1.0)*sj2*x14655));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14658=IKsin(j5);
IkReal x14659=IKcos(j5);
IkReal x14660=(cj2*sj1);
IkReal x14661=(cj4*r11);
IkReal x14662=((1.0)*sj4);
IkReal x14663=((1.0)*sj2);
IkReal x14664=(cj4*gconst67);
IkReal x14665=(cj1*sj0);
IkReal x14666=(sj0*sj1);
IkReal x14667=(cj4*r21);
IkReal x14668=(gconst67*sj4);
IkReal x14669=(cj0*sj1);
IkReal x14670=(gconst68*sj4);
IkReal x14671=((1.0)*cj0*cj1);
IkReal x14672=(gconst67*x14658);
IkReal x14673=(gconst67*x14659);
IkReal x14674=(r02*x14658);
IkReal x14675=((1.0)*gconst68*r10);
IkReal x14676=(cj4*x14659);
IkReal x14677=((1.0)*gconst68*r20);
IkReal x14678=(x14659*x14670);
evalcond[0]=((((-1.0)*r02*x14659))+(((-1.0)*x14663)));
evalcond[1]=(((r21*x14672))+(((-1.0)*x14658*x14677)));
evalcond[2]=(cj2+(((-1.0)*x14658*x14675))+((r11*x14672)));
evalcond[3]=(((sj0*x14660))+((cj4*x14674))+(((-1.0)*cj2*x14671)));
evalcond[4]=((((-1.0)*cj0*x14660))+(((-1.0)*cj2*x14665))+(((-1.0)*x14662*x14674)));
evalcond[5]=((((-1.0)*x14676*x14677))+((r21*x14670))+x14669+x14665+((r21*x14659*x14664))+((r20*x14668)));
evalcond[6]=(((r20*x14678))+((gconst68*x14667))+(((-1.0)*x14671))+x14666+(((-1.0)*r21*x14662*x14673))+((r20*x14664)));
evalcond[7]=(((x14661*x14673))+((r10*x14668))+(((-1.0)*x14675*x14676))+(((-1.0)*cj0*cj1*x14663))+((sj2*x14666))+((r11*x14670)));
evalcond[8]=(((gconst68*x14661))+((r10*x14678))+((r10*x14664))+(((-1.0)*x14663*x14669))+(((-1.0)*x14663*x14665))+(((-1.0)*r11*x14662*x14673)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
IkReal x14679=((-1.0)*r10);
CheckValue<IkReal> x14680 = IKatan2WithCheck(IkReal(x14679),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14680.valid){
continue;
}
IkReal gconst69=((3.14159265358979)+(((-1.0)*(x14680.value))));
IkReal gconst70=x14679;
IkReal gconst71=((-1.0)*r11);
CheckValue<IkReal> x14681 = IKatan2WithCheck(IkReal(((-1.0)*r10)),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14681.valid){
continue;
}
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+(x14681.value)+j6)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x14682=((-1.0)*r10);
IkReal x14683=((-1.0)*r11);
CheckValue<IkReal> x14685 = IKatan2WithCheck(IkReal(x14682),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14685.valid){
continue;
}
IkReal x14684=((1.0)*(x14685.value));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x14682);
rxp1_1=(px*r21);
rxp1_2=(px*x14683);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj6=gconst70;
cj6=gconst71;
j6=((3.14159265)+(((-1.0)*x14684)));
IkReal gconst69=((3.14159265358979)+(((-1.0)*x14684)));
IkReal gconst70=x14682;
IkReal gconst71=x14683;
j5eval[0]=cj4;
j5eval[1]=r02;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x14686=((-1.0)*r10);
IkReal x14687=((-1.0)*r11);
CheckValue<IkReal> x14689 = IKatan2WithCheck(IkReal(x14686),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14689.valid){
continue;
}
IkReal x14688=((1.0)*(x14689.value));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x14686);
rxp1_1=(px*r21);
rxp1_2=(px*x14687);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj6=gconst70;
cj6=gconst71;
j6=((3.14159265)+(((-1.0)*x14688)));
IkReal gconst69=((3.14159265358979)+(((-1.0)*x14688)));
IkReal gconst70=x14686;
IkReal gconst71=x14687;
j5eval[0]=r02;
j5eval[1]=sj4;
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x14690=((-1.0)*r10);
IkReal x14691=((-1.0)*r11);
CheckValue<IkReal> x14693 = IKatan2WithCheck(IkReal(x14690),IkReal(r11),IKFAST_ATAN2_MAGTHRESH);
if(!x14693.valid){
continue;
}
IkReal x14692=((1.0)*(x14693.value));
r00=0;
r01=0;
r12=0;
r22=0;
npx=(((py*r10))+((pz*r20)));
npy=(((py*r11))+((pz*r21)));
npz=(px*r02);
rxp0_1=(px*r20);
rxp0_2=(px*x14690);
rxp1_1=(px*r21);
rxp1_2=(px*x14691);
rxp2_0=0;
rxp2_1=((-1.0)*pz*r02);
rxp2_2=(py*r02);
sj6=gconst70;
cj6=gconst71;
j6=((3.14159265)+(((-1.0)*x14692)));
IkReal gconst69=((3.14159265358979)+(((-1.0)*x14692)));
IkReal gconst70=x14690;
IkReal gconst71=x14691;
IkReal x14694=((1.0)*sj4);
j5eval[0]=cj4;
j5eval[1]=r02;
j5eval[2]=(((r10*r21*x14694))+(((-1.0)*r11*r20*x14694)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14695=(cj0*cj1);
IkReal x14696=((1.0)*gconst70);
IkReal x14697=((1.0)*sj0*sj1);
CheckValue<IkReal> x14698=IKPowWithIntegerCheck(cj4,-1);
if(!x14698.valid){
continue;
}
CheckValue<IkReal> x14699=IKPowWithIntegerCheck(r02,-1);
if(!x14699.valid){
continue;
}
CheckValue<IkReal> x14700=IKPowWithIntegerCheck((((gconst71*r20*sj4))+(((-1.0)*r21*sj4*x14696))),-1);
if(!x14700.valid){
continue;
}
if( IKabs(((x14698.value)*(x14699.value)*((((cj2*x14695))+(((-1.0)*cj2*x14697)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14700.value)*(((((-1.0)*cj4*r20*x14696))+(((-1.0)*cj4*gconst71*r21))+(((-1.0)*x14697))+x14695)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x14698.value)*(x14699.value)*((((cj2*x14695))+(((-1.0)*cj2*x14697))))))+IKsqr(((x14700.value)*(((((-1.0)*cj4*r20*x14696))+(((-1.0)*cj4*gconst71*r21))+(((-1.0)*x14697))+x14695))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x14698.value)*(x14699.value)*((((cj2*x14695))+(((-1.0)*cj2*x14697))))), ((x14700.value)*(((((-1.0)*cj4*r20*x14696))+(((-1.0)*cj4*gconst71*r21))+(((-1.0)*x14697))+x14695))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14701=IKsin(j5);
IkReal x14702=IKcos(j5);
IkReal x14703=(cj4*r20);
IkReal x14704=(r10*sj4);
IkReal x14705=(gconst70*sj4);
IkReal x14706=(cj2*sj1);
IkReal x14707=(gconst71*r21);
IkReal x14708=(gconst70*r11);
IkReal x14709=((1.0)*sj2);
IkReal x14710=((1.0)*r10);
IkReal x14711=(cj1*sj0);
IkReal x14712=(sj0*sj1);
IkReal x14713=(gconst71*r11);
IkReal x14714=(gconst70*r21);
IkReal x14715=(cj0*sj1);
IkReal x14716=(gconst71*x14702);
IkReal x14717=((1.0)*cj0*cj1);
IkReal x14718=((1.0)*x14702);
IkReal x14719=(r02*x14701);
IkReal x14720=(cj4*x14702);
IkReal x14721=(gconst71*x14701);
evalcond[0]=((((-1.0)*x14709))+(((-1.0)*r02*x14718)));
evalcond[1]=((((-1.0)*r20*x14721))+((x14701*x14714)));
evalcond[2]=(((x14701*x14708))+cj2+(((-1.0)*x14710*x14721)));
evalcond[3]=(((sj0*x14706))+((cj4*x14719))+(((-1.0)*cj2*x14717)));
evalcond[4]=((((-1.0)*cj0*x14706))+(((-1.0)*cj2*x14711))+(((-1.0)*sj4*x14719)));
evalcond[5]=((((-1.0)*x14703*x14716))+((sj4*x14707))+((x14714*x14720))+((r20*x14705))+x14711+x14715);
evalcond[6]=(((cj4*x14707))+((r20*sj4*x14716))+(((-1.0)*r21*x14705*x14718))+((gconst70*x14703))+(((-1.0)*x14717))+x14712);
evalcond[7]=(((sj2*x14712))+(((-1.0)*cj0*cj1*x14709))+((gconst70*x14704))+(((-1.0)*cj4*x14710*x14716))+((x14708*x14720))+((sj4*x14713)));
evalcond[8]=(((cj4*x14713))+(((-1.0)*x14709*x14715))+(((-1.0)*x14709*x14711))+((cj4*gconst70*r10))+(((-1.0)*r11*x14705*x14718))+((x14704*x14716)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14724=IKPowWithIntegerCheck(r02,-1);
if(!x14724.valid){
continue;
}
IkReal x14722=x14724.value;
IkReal x14723=((1.0)*cj2);
CheckValue<IkReal> x14725=IKPowWithIntegerCheck(sj4,-1);
if(!x14725.valid){
continue;
}
if( IKabs((x14722*(x14725.value)*(((((-1.0)*cj1*sj0*x14723))+(((-1.0)*cj0*sj1*x14723)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*x14722)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x14722*(x14725.value)*(((((-1.0)*cj1*sj0*x14723))+(((-1.0)*cj0*sj1*x14723))))))+IKsqr(((-1.0)*sj2*x14722))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((x14722*(x14725.value)*(((((-1.0)*cj1*sj0*x14723))+(((-1.0)*cj0*sj1*x14723))))), ((-1.0)*sj2*x14722));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14726=IKsin(j5);
IkReal x14727=IKcos(j5);
IkReal x14728=(cj4*r20);
IkReal x14729=(r10*sj4);
IkReal x14730=(gconst70*sj4);
IkReal x14731=(cj2*sj1);
IkReal x14732=(gconst71*r21);
IkReal x14733=(gconst70*r11);
IkReal x14734=((1.0)*sj2);
IkReal x14735=((1.0)*r10);
IkReal x14736=(cj1*sj0);
IkReal x14737=(sj0*sj1);
IkReal x14738=(gconst71*r11);
IkReal x14739=(gconst70*r21);
IkReal x14740=(cj0*sj1);
IkReal x14741=(gconst71*x14727);
IkReal x14742=((1.0)*cj0*cj1);
IkReal x14743=((1.0)*x14727);
IkReal x14744=(r02*x14726);
IkReal x14745=(cj4*x14727);
IkReal x14746=(gconst71*x14726);
evalcond[0]=((((-1.0)*r02*x14743))+(((-1.0)*x14734)));
evalcond[1]=((((-1.0)*r20*x14746))+((x14726*x14739)));
evalcond[2]=(cj2+((x14726*x14733))+(((-1.0)*x14735*x14746)));
evalcond[3]=((((-1.0)*cj2*x14742))+((sj0*x14731))+((cj4*x14744)));
evalcond[4]=((((-1.0)*sj4*x14744))+(((-1.0)*cj2*x14736))+(((-1.0)*cj0*x14731)));
evalcond[5]=(((sj4*x14732))+((r20*x14730))+x14736+x14740+(((-1.0)*x14728*x14741))+((x14739*x14745)));
evalcond[6]=(((gconst70*x14728))+(((-1.0)*x14742))+((r20*sj4*x14741))+(((-1.0)*r21*x14730*x14743))+x14737+((cj4*x14732)));
evalcond[7]=(((sj4*x14738))+((x14733*x14745))+((gconst70*x14729))+((sj2*x14737))+(((-1.0)*cj4*x14735*x14741))+(((-1.0)*cj0*cj1*x14734)));
evalcond[8]=((((-1.0)*r11*x14730*x14743))+((x14729*x14741))+(((-1.0)*x14734*x14740))+((cj4*gconst70*r10))+(((-1.0)*x14734*x14736))+((cj4*x14738)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14748=IKPowWithIntegerCheck(r02,-1);
if(!x14748.valid){
continue;
}
IkReal x14747=x14748.value;
CheckValue<IkReal> x14749=IKPowWithIntegerCheck(cj4,-1);
if(!x14749.valid){
continue;
}
if( IKabs((x14747*(x14749.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*x14747)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x14747*(x14749.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))))+IKsqr(((-1.0)*sj2*x14747))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((x14747*(x14749.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))), ((-1.0)*sj2*x14747));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14750=IKsin(j5);
IkReal x14751=IKcos(j5);
IkReal x14752=(cj4*r20);
IkReal x14753=(r10*sj4);
IkReal x14754=(gconst70*sj4);
IkReal x14755=(cj2*sj1);
IkReal x14756=(gconst71*r21);
IkReal x14757=(gconst70*r11);
IkReal x14758=((1.0)*sj2);
IkReal x14759=((1.0)*r10);
IkReal x14760=(cj1*sj0);
IkReal x14761=(sj0*sj1);
IkReal x14762=(gconst71*r11);
IkReal x14763=(gconst70*r21);
IkReal x14764=(cj0*sj1);
IkReal x14765=(gconst71*x14751);
IkReal x14766=((1.0)*cj0*cj1);
IkReal x14767=((1.0)*x14751);
IkReal x14768=(r02*x14750);
IkReal x14769=(cj4*x14751);
IkReal x14770=(gconst71*x14750);
evalcond[0]=((((-1.0)*r02*x14767))+(((-1.0)*x14758)));
evalcond[1]=((((-1.0)*r20*x14770))+((x14750*x14763)));
evalcond[2]=(cj2+(((-1.0)*x14759*x14770))+((x14750*x14757)));
evalcond[3]=(((sj0*x14755))+(((-1.0)*cj2*x14766))+((cj4*x14768)));
evalcond[4]=((((-1.0)*sj4*x14768))+(((-1.0)*cj2*x14760))+(((-1.0)*cj0*x14755)));
evalcond[5]=(((sj4*x14756))+(((-1.0)*x14752*x14765))+((r20*x14754))+x14764+x14760+((x14763*x14769)));
evalcond[6]=(((cj4*x14756))+(((-1.0)*r21*x14754*x14767))+((gconst70*x14752))+x14761+((r20*sj4*x14765))+(((-1.0)*x14766)));
evalcond[7]=(((sj4*x14762))+((gconst70*x14753))+(((-1.0)*cj0*cj1*x14758))+(((-1.0)*cj4*x14759*x14765))+((sj2*x14761))+((x14757*x14769)));
evalcond[8]=((((-1.0)*x14758*x14760))+(((-1.0)*x14758*x14764))+((x14753*x14765))+(((-1.0)*r11*x14754*x14767))+((cj4*gconst70*r10))+((cj4*x14762)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14772=IKPowWithIntegerCheck(r02,-1);
if(!x14772.valid){
continue;
}
IkReal x14771=x14772.value;
CheckValue<IkReal> x14773=IKPowWithIntegerCheck(cj4,-1);
if(!x14773.valid){
continue;
}
if( IKabs((x14771*(x14773.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*x14771)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((x14771*(x14773.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))))+IKsqr(((-1.0)*sj2*x14771))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((x14771*(x14773.value)*(((((-1.0)*cj2*sj0*sj1))+((cj0*cj1*cj2))))), ((-1.0)*sj2*x14771));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14774=IKsin(j5);
IkReal x14775=IKcos(j5);
IkReal x14776=(cj4*cj6);
IkReal x14777=((1.0)*sj6);
IkReal x14778=(cj6*r10);
IkReal x14779=(cj2*sj1);
IkReal x14780=((1.0)*sj2);
IkReal x14781=(sj4*sj6);
IkReal x14782=(r11*sj6);
IkReal x14783=(r21*sj6);
IkReal x14784=(cj1*sj0);
IkReal x14785=(cj4*sj6);
IkReal x14786=(cj6*r20);
IkReal x14787=(sj0*sj1);
IkReal x14788=(cj6*sj4);
IkReal x14789=(cj0*sj1);
IkReal x14790=(sj4*x14775);
IkReal x14791=((1.0)*cj0*cj1);
IkReal x14792=((1.0)*x14774);
IkReal x14793=(cj4*x14775);
IkReal x14794=((1.0)*x14775);
evalcond[0]=((((-1.0)*r02*x14794))+(((-1.0)*x14780)));
evalcond[1]=(((x14774*x14783))+(((-1.0)*x14786*x14792)));
evalcond[2]=((((-1.0)*x14778*x14792))+cj2+((x14774*x14782)));
evalcond[3]=((((-1.0)*cj2*x14791))+((cj4*r02*x14774))+((sj0*x14779)));
evalcond[4]=((((-1.0)*cj0*x14779))+(((-1.0)*r02*sj4*x14792))+(((-1.0)*cj2*x14784)));
evalcond[5]=((((-1.0)*r20*x14776*x14794))+((x14783*x14793))+((r20*x14781))+((r21*x14788))+x14789+x14784);
evalcond[6]=((((-1.0)*r21*x14777*x14790))+((r21*x14776))+((r20*x14785))+((x14786*x14790))+x14787+(((-1.0)*x14791)));
evalcond[7]=((((-1.0)*r10*x14776*x14794))+((r10*x14781))+((x14782*x14793))+(((-1.0)*cj0*cj1*x14780))+((r11*x14788))+((sj2*x14787)));
evalcond[8]=((((-1.0)*r11*x14777*x14790))+((x14778*x14790))+((r10*x14785))+(((-1.0)*x14780*x14784))+(((-1.0)*x14780*x14789))+((r11*x14776)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14795=((1.0)*r20);
IkReal x14796=((1.0)*cj6);
CheckValue<IkReal> x14797=IKPowWithIntegerCheck(((((-1.0)*r10*x14796))+((r11*sj6))),-1);
if(!x14797.valid){
continue;
}
CheckValue<IkReal> x14798=IKPowWithIntegerCheck((((cj4*r21*sj6))+(((-1.0)*cj4*cj6*x14795))),-1);
if(!x14798.valid){
continue;
}
if( IKabs(((-1.0)*cj2*(x14797.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x14798.value)*(((((-1.0)*sj4*sj6*x14795))+(((-1.0)*cj1*sj0))+(((-1.0)*r21*sj4*x14796))+(((-1.0)*cj0*sj1)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*cj2*(x14797.value)))+IKsqr(((x14798.value)*(((((-1.0)*sj4*sj6*x14795))+(((-1.0)*cj1*sj0))+(((-1.0)*r21*sj4*x14796))+(((-1.0)*cj0*sj1))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*cj2*(x14797.value)), ((x14798.value)*(((((-1.0)*sj4*sj6*x14795))+(((-1.0)*cj1*sj0))+(((-1.0)*r21*sj4*x14796))+(((-1.0)*cj0*sj1))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14799=IKsin(j5);
IkReal x14800=IKcos(j5);
IkReal x14801=(cj4*cj6);
IkReal x14802=((1.0)*sj6);
IkReal x14803=(cj6*r10);
IkReal x14804=(cj2*sj1);
IkReal x14805=((1.0)*sj2);
IkReal x14806=(sj4*sj6);
IkReal x14807=(r11*sj6);
IkReal x14808=(r21*sj6);
IkReal x14809=(cj1*sj0);
IkReal x14810=(cj4*sj6);
IkReal x14811=(cj6*r20);
IkReal x14812=(sj0*sj1);
IkReal x14813=(cj6*sj4);
IkReal x14814=(cj0*sj1);
IkReal x14815=(sj4*x14800);
IkReal x14816=((1.0)*cj0*cj1);
IkReal x14817=((1.0)*x14799);
IkReal x14818=(cj4*x14800);
IkReal x14819=((1.0)*x14800);
evalcond[0]=((((-1.0)*r02*x14819))+(((-1.0)*x14805)));
evalcond[1]=(((x14799*x14808))+(((-1.0)*x14811*x14817)));
evalcond[2]=(cj2+(((-1.0)*x14803*x14817))+((x14799*x14807)));
evalcond[3]=(((cj4*r02*x14799))+(((-1.0)*cj2*x14816))+((sj0*x14804)));
evalcond[4]=((((-1.0)*cj0*x14804))+(((-1.0)*r02*sj4*x14817))+(((-1.0)*cj2*x14809)));
evalcond[5]=(((x14808*x14818))+x14814+x14809+((r21*x14813))+(((-1.0)*r20*x14801*x14819))+((r20*x14806)));
evalcond[6]=(((r21*x14801))+(((-1.0)*r21*x14802*x14815))+x14812+(((-1.0)*x14816))+((x14811*x14815))+((r20*x14810)));
evalcond[7]=(((sj2*x14812))+(((-1.0)*r10*x14801*x14819))+((r10*x14806))+((x14807*x14818))+(((-1.0)*cj0*cj1*x14805))+((r11*x14813)));
evalcond[8]=(((r10*x14810))+(((-1.0)*r11*x14802*x14815))+((r11*x14801))+(((-1.0)*x14805*x14814))+((x14803*x14815))+(((-1.0)*x14805*x14809)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
CheckValue<IkReal> x14820=IKPowWithIntegerCheck(((((-1.0)*cj6*r10))+((r11*sj6))),-1);
if(!x14820.valid){
continue;
}
CheckValue<IkReal> x14821=IKPowWithIntegerCheck(r02,-1);
if(!x14821.valid){
continue;
}
if( IKabs(((-1.0)*cj2*(x14820.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*sj2*(x14821.value))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*cj2*(x14820.value)))+IKsqr(((-1.0)*sj2*(x14821.value)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((-1.0)*cj2*(x14820.value)), ((-1.0)*sj2*(x14821.value)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14822=IKsin(j5);
IkReal x14823=IKcos(j5);
IkReal x14824=(cj4*cj6);
IkReal x14825=((1.0)*sj6);
IkReal x14826=(cj6*r10);
IkReal x14827=(cj2*sj1);
IkReal x14828=((1.0)*sj2);
IkReal x14829=(sj4*sj6);
IkReal x14830=(r11*sj6);
IkReal x14831=(r21*sj6);
IkReal x14832=(cj1*sj0);
IkReal x14833=(cj4*sj6);
IkReal x14834=(cj6*r20);
IkReal x14835=(sj0*sj1);
IkReal x14836=(cj6*sj4);
IkReal x14837=(cj0*sj1);
IkReal x14838=(sj4*x14823);
IkReal x14839=((1.0)*cj0*cj1);
IkReal x14840=((1.0)*x14822);
IkReal x14841=(cj4*x14823);
IkReal x14842=((1.0)*x14823);
evalcond[0]=((((-1.0)*r02*x14842))+(((-1.0)*x14828)));
evalcond[1]=((((-1.0)*x14834*x14840))+((x14822*x14831)));
evalcond[2]=(cj2+(((-1.0)*x14826*x14840))+((x14822*x14830)));
evalcond[3]=(((cj4*r02*x14822))+(((-1.0)*cj2*x14839))+((sj0*x14827)));
evalcond[4]=((((-1.0)*cj2*x14832))+(((-1.0)*r02*sj4*x14840))+(((-1.0)*cj0*x14827)));
evalcond[5]=(x14832+x14837+((x14831*x14841))+((r21*x14836))+(((-1.0)*r20*x14824*x14842))+((r20*x14829)));
evalcond[6]=(((r21*x14824))+(((-1.0)*r21*x14825*x14838))+x14835+((r20*x14833))+((x14834*x14838))+(((-1.0)*x14839)));
evalcond[7]=((((-1.0)*r10*x14824*x14842))+((x14830*x14841))+((r10*x14829))+(((-1.0)*cj0*cj1*x14828))+((r11*x14836))+((sj2*x14835)));
evalcond[8]=((((-1.0)*x14828*x14832))+(((-1.0)*x14828*x14837))+(((-1.0)*r11*x14825*x14838))+((r10*x14833))+((r11*x14824))+((x14826*x14838)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14843=((1.0)*sj6);
CheckValue<IkReal> x14844 = IKatan2WithCheck(IkReal(((((-1.0)*cj2*r02))+(((-1.0)*r12*sj2)))),IkReal((((cj6*r10*sj2))+((cj2*cj6*r00))+(((-1.0)*r11*sj2*x14843))+(((-1.0)*cj2*r01*x14843)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14844.valid){
continue;
}
CheckValue<IkReal> x14845=IKPowWithIntegerCheck(IKsign(((((-1.0)*cj6*r21))+(((-1.0)*r20*x14843)))),-1);
if(!x14845.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14844.value)+(((1.5707963267949)*(x14845.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14846=IKsin(j5);
IkReal x14847=IKcos(j5);
IkReal x14848=(cj4*cj6);
IkReal x14849=((1.0)*sj6);
IkReal x14850=(cj6*r10);
IkReal x14851=(cj2*sj1);
IkReal x14852=((1.0)*cj0);
IkReal x14853=((1.0)*sj2);
IkReal x14854=(cj6*r00);
IkReal x14855=(sj4*sj6);
IkReal x14856=(cj1*cj2);
IkReal x14857=(cj6*r20);
IkReal x14858=(sj0*sj1);
IkReal x14859=(cj6*sj4);
IkReal x14860=(cj4*sj6);
IkReal x14861=(cj1*sj0);
IkReal x14862=(sj4*x14847);
IkReal x14863=(sj6*x14846);
IkReal x14864=((1.0)*x14846);
IkReal x14865=(cj4*x14846);
IkReal x14866=((1.0)*x14847);
IkReal x14867=(x14847*x14860);
evalcond[0]=((((-1.0)*x14857*x14864))+((r21*x14863))+(((-1.0)*r22*x14866)));
evalcond[1]=(cj2+((r11*x14863))+(((-1.0)*x14850*x14864))+(((-1.0)*r12*x14866)));
evalcond[2]=((((-1.0)*r02*x14866))+((r01*x14863))+(((-1.0)*x14853))+(((-1.0)*x14854*x14864)));
evalcond[3]=(((r21*x14859))+(((-1.0)*r20*x14848*x14866))+((r20*x14855))+x14861+((r22*x14865))+((r21*x14867))+((cj0*sj1)));
evalcond[4]=((((-1.0)*cj1*x14852))+((r20*x14860))+((x14857*x14862))+(((-1.0)*r22*sj4*x14864))+x14858+(((-1.0)*r21*x14849*x14862))+((r21*x14848)));
evalcond[5]=((((-1.0)*x14852*x14856))+((sj0*x14851))+((r02*x14865))+((r01*x14867))+(((-1.0)*r00*x14848*x14866))+((r00*x14855))+((r01*x14859)));
evalcond[6]=((((-1.0)*cj1*sj2*x14852))+(((-1.0)*r10*x14848*x14866))+((sj2*x14858))+((r11*x14859))+((r12*x14865))+((r10*x14855))+((r11*x14867)));
evalcond[7]=((((-1.0)*r01*x14849*x14862))+(((-1.0)*sj0*x14856))+((x14854*x14862))+(((-1.0)*x14851*x14852))+((r00*x14860))+((r01*x14848))+(((-1.0)*r02*sj4*x14864)));
evalcond[8]=((((-1.0)*r12*sj4*x14864))+(((-1.0)*sj1*sj2*x14852))+(((-1.0)*r11*x14849*x14862))+((r10*x14860))+((r11*x14848))+((x14850*x14862))+(((-1.0)*x14853*x14861)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14868=((1.0)*cj6);
CheckValue<IkReal> x14869=IKPowWithIntegerCheck(IKsign(((((-1.0)*r10*sj6))+(((-1.0)*r11*x14868)))),-1);
if(!x14869.valid){
continue;
}
CheckValue<IkReal> x14870 = IKatan2WithCheck(IkReal((r22*sj2)),IkReal(((((-1.0)*r20*sj2*x14868))+((r21*sj2*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14870.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14869.value)))+(x14870.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14871=IKsin(j5);
IkReal x14872=IKcos(j5);
IkReal x14873=(cj4*cj6);
IkReal x14874=((1.0)*sj6);
IkReal x14875=(cj6*r10);
IkReal x14876=(cj2*sj1);
IkReal x14877=((1.0)*cj0);
IkReal x14878=((1.0)*sj2);
IkReal x14879=(cj6*r00);
IkReal x14880=(sj4*sj6);
IkReal x14881=(cj1*cj2);
IkReal x14882=(cj6*r20);
IkReal x14883=(sj0*sj1);
IkReal x14884=(cj6*sj4);
IkReal x14885=(cj4*sj6);
IkReal x14886=(cj1*sj0);
IkReal x14887=(sj4*x14872);
IkReal x14888=(sj6*x14871);
IkReal x14889=((1.0)*x14871);
IkReal x14890=(cj4*x14871);
IkReal x14891=((1.0)*x14872);
IkReal x14892=(x14872*x14885);
evalcond[0]=((((-1.0)*r22*x14891))+((r21*x14888))+(((-1.0)*x14882*x14889)));
evalcond[1]=((((-1.0)*x14875*x14889))+((r11*x14888))+cj2+(((-1.0)*r12*x14891)));
evalcond[2]=((((-1.0)*x14879*x14889))+((r01*x14888))+(((-1.0)*x14878))+(((-1.0)*r02*x14891)));
evalcond[3]=(x14886+((r21*x14892))+((r22*x14890))+((r21*x14884))+((r20*x14880))+((cj0*sj1))+(((-1.0)*r20*x14873*x14891)));
evalcond[4]=(x14883+(((-1.0)*r22*sj4*x14889))+((r21*x14873))+(((-1.0)*cj1*x14877))+(((-1.0)*r21*x14874*x14887))+((x14882*x14887))+((r20*x14885)));
evalcond[5]=(((r02*x14890))+((r01*x14892))+((r00*x14880))+((r01*x14884))+((sj0*x14876))+(((-1.0)*r00*x14873*x14891))+(((-1.0)*x14877*x14881)));
evalcond[6]=(((r11*x14884))+((r12*x14890))+((r10*x14880))+((r11*x14892))+((sj2*x14883))+(((-1.0)*r10*x14873*x14891))+(((-1.0)*cj1*sj2*x14877)));
evalcond[7]=(((x14879*x14887))+(((-1.0)*r02*sj4*x14889))+((r00*x14885))+((r01*x14873))+(((-1.0)*sj0*x14881))+(((-1.0)*x14876*x14877))+(((-1.0)*r01*x14874*x14887)));
evalcond[8]=(((r11*x14873))+((r10*x14885))+(((-1.0)*x14878*x14886))+((x14875*x14887))+(((-1.0)*sj1*sj2*x14877))+(((-1.0)*r11*x14874*x14887))+(((-1.0)*r12*sj4*x14889)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14893=((1.0)*cj6);
CheckValue<IkReal> x14894=IKPowWithIntegerCheck(IKsign(((((-1.0)*r01*x14893))+(((-1.0)*r00*sj6)))),-1);
if(!x14894.valid){
continue;
}
CheckValue<IkReal> x14895 = IKatan2WithCheck(IkReal((cj2*r22)),IkReal(((((-1.0)*cj2*r20*x14893))+((cj2*r21*sj6)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14895.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x14894.value)))+(x14895.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[9];
IkReal x14896=IKsin(j5);
IkReal x14897=IKcos(j5);
IkReal x14898=(cj4*cj6);
IkReal x14899=((1.0)*sj6);
IkReal x14900=(cj6*r10);
IkReal x14901=(cj2*sj1);
IkReal x14902=((1.0)*cj0);
IkReal x14903=((1.0)*sj2);
IkReal x14904=(cj6*r00);
IkReal x14905=(sj4*sj6);
IkReal x14906=(cj1*cj2);
IkReal x14907=(cj6*r20);
IkReal x14908=(sj0*sj1);
IkReal x14909=(cj6*sj4);
IkReal x14910=(cj4*sj6);
IkReal x14911=(cj1*sj0);
IkReal x14912=(sj4*x14897);
IkReal x14913=(sj6*x14896);
IkReal x14914=((1.0)*x14896);
IkReal x14915=(cj4*x14896);
IkReal x14916=((1.0)*x14897);
IkReal x14917=(x14897*x14910);
evalcond[0]=((((-1.0)*x14907*x14914))+((r21*x14913))+(((-1.0)*r22*x14916)));
evalcond[1]=(cj2+(((-1.0)*r12*x14916))+((r11*x14913))+(((-1.0)*x14900*x14914)));
evalcond[2]=(((r01*x14913))+(((-1.0)*r02*x14916))+(((-1.0)*x14903))+(((-1.0)*x14904*x14914)));
evalcond[3]=(((r22*x14915))+((r21*x14917))+((r21*x14909))+x14911+((r20*x14905))+(((-1.0)*r20*x14898*x14916))+((cj0*sj1)));
evalcond[4]=(x14908+(((-1.0)*cj1*x14902))+((r21*x14898))+(((-1.0)*r22*sj4*x14914))+(((-1.0)*r21*x14899*x14912))+((r20*x14910))+((x14907*x14912)));
evalcond[5]=(((r00*x14905))+((r01*x14917))+((r01*x14909))+((r02*x14915))+(((-1.0)*x14902*x14906))+(((-1.0)*r00*x14898*x14916))+((sj0*x14901)));
evalcond[6]=((((-1.0)*cj1*sj2*x14902))+(((-1.0)*r10*x14898*x14916))+((r11*x14909))+((sj2*x14908))+((r11*x14917))+((r12*x14915))+((r10*x14905)));
evalcond[7]=(((r00*x14910))+(((-1.0)*sj0*x14906))+((r01*x14898))+(((-1.0)*x14901*x14902))+(((-1.0)*r02*sj4*x14914))+((x14904*x14912))+(((-1.0)*r01*x14899*x14912)));
evalcond[8]=(((r10*x14910))+(((-1.0)*r12*sj4*x14914))+(((-1.0)*x14903*x14911))+(((-1.0)*sj1*sj2*x14902))+((r11*x14898))+(((-1.0)*r11*x14899*x14912))+((x14900*x14912)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14918=r21*r21;
IkReal x14919=cj6*cj6;
IkReal x14920=r20*r20;
IkReal x14921=(cj0*sj1);
IkReal x14922=(r21*sj6);
IkReal x14923=(cj6*r20);
IkReal x14924=(r21*sj4);
IkReal x14925=(cj1*sj0);
IkReal x14926=((1.0)*cj4);
IkReal x14927=(cj6*sj4*sj6);
IkReal x14928=((1.0)*x14920);
IkReal x14929=(cj4*x14919);
CheckValue<IkReal> x14930 = IKatan2WithCheck(IkReal((((r20*r22*sj4*sj6))+((cj6*r22*x14924))+((r22*x14925))+((r22*x14921)))),IkReal((((x14918*x14927))+((x14921*x14922))+(((-2.0)*r20*x14919*x14924))+(((-1.0)*x14923*x14925))+(((-1.0)*x14927*x14928))+(((-1.0)*x14921*x14923))+((x14922*x14925))+((r20*x14924)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14930.valid){
continue;
}
CheckValue<IkReal> x14931=IKPowWithIntegerCheck(IKsign(((((-1.0)*x14926*(r22*r22)))+((x14918*x14929))+(((2.0)*cj4*x14922*x14923))+(((-1.0)*x14918*x14926))+(((-1.0)*x14919*x14920*x14926)))),-1);
if(!x14931.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14930.value)+(((1.5707963267949)*(x14931.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x14932=IKsin(j5);
IkReal x14933=IKcos(j5);
IkReal x14934=(r21*sj6);
IkReal x14935=(cj4*cj6);
IkReal x14936=(r20*sj4);
IkReal x14937=((1.0)*x14933);
IkReal x14938=(r22*x14932);
evalcond[0]=(((x14932*x14934))+(((-1.0)*r22*x14937))+(((-1.0)*cj6*r20*x14932)));
evalcond[1]=(((cj4*x14938))+((cj1*sj0))+((cj6*r21*sj4))+((cj4*x14933*x14934))+((sj6*x14936))+(((-1.0)*r20*x14935*x14937))+((cj0*sj1)));
evalcond[2]=(((cj4*r20*sj6))+(((-1.0)*sj4*x14938))+((cj6*x14933*x14936))+((r21*x14935))+((sj0*sj1))+(((-1.0)*cj0*cj1))+(((-1.0)*sj4*x14934*x14937)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x14939=((1.0)*sj5);
if( IKabs((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x14939))+(((-1.0)*cj5*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x14939)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x14939))+(((-1.0)*cj5*r02))))+IKsqr((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x14939))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r01*sj5*sj6))+(((-1.0)*cj6*r00*x14939))+(((-1.0)*cj5*r02))), (((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x14939))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x14940=IKcos(j2);
IkReal x14941=IKsin(j2);
IkReal x14942=(cj0*cj1);
IkReal x14943=((1.0)*sj4);
IkReal x14944=(cj4*cj6);
IkReal x14945=((0.09465)*sj6);
IkReal x14946=(sj0*sj1);
IkReal x14947=((1.0)*sj0);
IkReal x14948=(sj5*sj6);
IkReal x14949=(cj5*r10);
IkReal x14950=(cj6*sj4);
IkReal x14951=(r02*sj5);
IkReal x14952=(cj0*sj1);
IkReal x14953=(sj4*sj6);
IkReal x14954=((1.0)*r00);
IkReal x14955=(cj6*sj5);
IkReal x14956=(r12*sj5);
IkReal x14957=((1.0)*cj5);
IkReal x14958=(cj4*sj6);
IkReal x14959=((0.09465)*cj6);
IkReal x14960=((0.39225)*x14940);
IkReal x14961=(cj5*r11*sj6);
IkReal x14962=(cj1*x14941);
IkReal x14963=((1.0)*x14941);
IkReal x14964=((1.0)*x14940);
IkReal x14965=(cj1*x14940);
IkReal x14966=((0.39225)*x14941);
IkReal x14967=(cj5*r01*sj6);
evalcond[0]=(x14940+(((-1.0)*r12*x14957))+(((-1.0)*r10*x14955))+((r11*x14948)));
evalcond[1]=((((-1.0)*x14954*x14955))+(((-1.0)*x14963))+((r01*x14948))+(((-1.0)*r02*x14957)));
evalcond[2]=((((-1.0)*r01*x14959))+(((-1.0)*r00*x14945))+((x14942*x14960))+(((-1.0)*px))+(((-1.0)*x14946*x14960))+(((0.425)*x14965))+(((-0.10915)*x14941)));
evalcond[3]=((((0.10915)*x14940))+((x14942*x14966))+(((-1.0)*r11*x14959))+(((-1.0)*py))+(((-1.0)*x14946*x14966))+(((0.425)*x14962))+(((-1.0)*r10*x14945)));
evalcond[4]=(((cj5*r01*x14958))+((cj4*x14951))+(((-1.0)*cj5*x14944*x14954))+(((-1.0)*x14942*x14964))+((r01*x14950))+((r00*x14953))+((x14940*x14946)));
evalcond[5]=(((cj4*x14956))+(((-1.0)*x14942*x14963))+((r10*x14953))+(((-1.0)*x14944*x14949))+((x14941*x14946))+((cj5*r11*x14958))+((r11*x14950)));
evalcond[6]=(((cj5*r00*x14950))+(((-1.0)*x14943*x14967))+(((-1.0)*x14952*x14964))+(((-1.0)*x14943*x14951))+((r00*x14958))+((r01*x14944))+(((-1.0)*x14947*x14965)));
evalcond[7]=(((x14949*x14950))+(((-1.0)*x14943*x14961))+(((-1.0)*x14952*x14963))+((r10*x14958))+(((-1.0)*x14943*x14956))+(((-1.0)*x14947*x14962))+((r11*x14944)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x14968=r21*r21;
IkReal x14969=cj6*cj6;
IkReal x14970=r20*r20;
IkReal x14971=(cj6*r20);
IkReal x14972=(cj0*cj1);
IkReal x14973=(sj0*sj1);
IkReal x14974=(r21*sj6);
IkReal x14975=(cj4*sj6);
IkReal x14976=(cj4*r21);
IkReal x14977=(sj4*x14968);
CheckValue<IkReal> x14978 = IKatan2WithCheck(IkReal((((cj6*r22*x14976))+((r22*x14973))+(((-1.0)*r22*x14972))+((r20*r22*x14975)))),IkReal((((cj6*x14968*x14975))+(((-2.0)*r20*x14969*x14976))+(((-1.0)*x14971*x14973))+((x14971*x14972))+((x14973*x14974))+(((-1.0)*x14972*x14974))+(((-1.0)*cj6*x14970*x14975))+((r20*x14976)))),IKFAST_ATAN2_MAGTHRESH);
if(!x14978.valid){
continue;
}
CheckValue<IkReal> x14979=IKPowWithIntegerCheck(IKsign((x14977+((sj4*x14969*x14970))+((sj4*(r22*r22)))+(((-2.0)*sj4*x14971*x14974))+(((-1.0)*x14969*x14977)))),-1);
if(!x14979.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x14978.value)+(((1.5707963267949)*(x14979.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x14980=IKsin(j5);
IkReal x14981=IKcos(j5);
IkReal x14982=(r21*sj6);
IkReal x14983=(cj4*cj6);
IkReal x14984=(r20*sj4);
IkReal x14985=((1.0)*x14981);
IkReal x14986=(r22*x14980);
evalcond[0]=(((x14980*x14982))+(((-1.0)*cj6*r20*x14980))+(((-1.0)*r22*x14985)));
evalcond[1]=(((cj4*x14986))+((cj1*sj0))+((cj6*r21*sj4))+((sj6*x14984))+((cj4*x14981*x14982))+(((-1.0)*r20*x14983*x14985))+((cj0*sj1)));
evalcond[2]=(((cj4*r20*sj6))+((sj0*sj1))+(((-1.0)*sj4*x14982*x14985))+((r21*x14983))+((cj6*x14981*x14984))+(((-1.0)*cj0*cj1))+(((-1.0)*sj4*x14986)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x14987=((1.0)*sj5);
if( IKabs(((((-1.0)*cj6*r00*x14987))+((r01*sj5*sj6))+(((-1.0)*cj5*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x14987)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj6*r00*x14987))+((r01*sj5*sj6))+(((-1.0)*cj5*r02))))+IKsqr((((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x14987))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj6*r00*x14987))+((r01*sj5*sj6))+(((-1.0)*cj5*r02))), (((cj5*r12))+((cj6*r10*sj5))+(((-1.0)*r11*sj6*x14987))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[8];
IkReal x14988=IKcos(j2);
IkReal x14989=IKsin(j2);
IkReal x14990=(cj0*cj1);
IkReal x14991=((1.0)*sj4);
IkReal x14992=(cj4*cj6);
IkReal x14993=((0.09465)*sj6);
IkReal x14994=(sj0*sj1);
IkReal x14995=((1.0)*sj0);
IkReal x14996=(sj5*sj6);
IkReal x14997=(cj5*r10);
IkReal x14998=(cj6*sj4);
IkReal x14999=(r02*sj5);
IkReal x15000=(cj0*sj1);
IkReal x15001=(sj4*sj6);
IkReal x15002=((1.0)*r00);
IkReal x15003=(cj6*sj5);
IkReal x15004=(r12*sj5);
IkReal x15005=((1.0)*cj5);
IkReal x15006=(cj4*sj6);
IkReal x15007=((0.09465)*cj6);
IkReal x15008=((0.39225)*x14988);
IkReal x15009=(cj5*r11*sj6);
IkReal x15010=(cj1*x14989);
IkReal x15011=((1.0)*x14989);
IkReal x15012=((1.0)*x14988);
IkReal x15013=(cj1*x14988);
IkReal x15014=((0.39225)*x14989);
IkReal x15015=(cj5*r01*sj6);
evalcond[0]=((((-1.0)*r10*x15003))+x14988+((r11*x14996))+(((-1.0)*r12*x15005)));
evalcond[1]=((((-1.0)*x15011))+(((-1.0)*r02*x15005))+((r01*x14996))+(((-1.0)*x15002*x15003)));
evalcond[2]=((((-1.0)*x14994*x15008))+(((-0.10915)*x14989))+(((-1.0)*px))+(((0.425)*x15013))+(((-1.0)*r00*x14993))+((x14990*x15008))+(((-1.0)*r01*x15007)));
evalcond[3]=((((-1.0)*x14994*x15014))+(((-1.0)*r10*x14993))+(((0.10915)*x14988))+(((-1.0)*py))+(((0.425)*x15010))+(((-1.0)*r11*x15007))+((x14990*x15014)));
evalcond[4]=(((r00*x15001))+(((-1.0)*cj5*x14992*x15002))+(((-1.0)*x14990*x15012))+((r01*x14998))+((cj5*r01*x15006))+((x14988*x14994))+((cj4*x14999)));
evalcond[5]=(((cj4*x15004))+((r10*x15001))+((r11*x14998))+(((-1.0)*x14990*x15011))+((cj5*r11*x15006))+(((-1.0)*x14992*x14997))+((x14989*x14994)));
evalcond[6]=(((r00*x15006))+(((-1.0)*x14991*x14999))+(((-1.0)*x14991*x15015))+(((-1.0)*x15000*x15012))+((cj5*r00*x14998))+((r01*x14992))+(((-1.0)*x14995*x15013)));
evalcond[7]=((((-1.0)*x14991*x15009))+(((-1.0)*x14991*x15004))+((r10*x15006))+((r11*x14992))+(((-1.0)*x15000*x15011))+(((-1.0)*x14995*x15010))+((x14997*x14998)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j0;
vinfos[2].indices[0] = _ij0[0];
vinfos[2].indices[1] = _ij0[1];
vinfos[2].maxsolutions = _nj0;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

}

}
}
}
// [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1)] (original are [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1)])
static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    // HACK should be 1e-5*norm
    IkReal tol = 1e-2*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
template<int D>
static inline bool matrixinverse(IkReal* A)
{
    int n = D;
    int info;
    IkReal IKFAST_ALIGNED16(work[D*D*(D-1)]);
    int ipiv[D];
    dgetrf_(&n, &n, A, &n, &ipiv[0], &info);
    if( info != 0 ) {
        return false;
    }
    int worksize=D*D*(D-1);
    dgetri_(&n, A, &n, &ipiv[0], &work[0], &worksize, &info);
    return info==0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        // HACK should be tol*100
        if( IKabs(wi[i]) < 5e-5 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "c530c3c7473733f5958f5ec65866c4ac"; }

IKFAST_API const char* GetIkFastVersion() { return "0x10000049"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
